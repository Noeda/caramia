name:                caramia
version:             0.1.0.0
synopsis:            Caramia real-time hardware-accelerated rendering library
homepage:            https://github.com/Noeda/caramia/
license:             MIT
license-file:        LICENSE
author:              Mikko Juola
copyright:           Copyright (c) 2014 Mikko Juola
maintainer:          mikjuo@gmail.com
category:            Graphics
build-type:          Simple
stability:           not even implemented
cabal-version:       >=1.10

description:
    Note: at the moment these are all lies because this library was just
          started. It's a PLAN.
    .
    This is a layer on top of OpenGL to provide user-friendly interface to
    hardware-accelerated graphics. This is not an everything-binding API; it
    strives to export a small but relevant, modern, most useful API.
    .
    It features:
    .
        * No implicit state. (in OpenGL you often have to \'bind\' something
          before you can use it).
    .
        * Creation and manipulation of graphics resources, with safe
          finalizing.
    .
        * Buffer objects, textures, shaders and shader programs, vertex array
          objects, framebuffers, rendering are all supported.
    .
        * Graphics operations are run in the IO monad (as opposed to some
          custom GraphicsIO). Safety is provided by run-time checks.
    .
    This package focuses on providing the primitives of rendering only. This
    means that things such as higher-level operations (meshes, scene
    management, entities, etc.), creating OpenGL contexts or event handling is
    outside the scope of this package.
    .
    Requirements from system:
    .
         * OpenGL 3.3
    .
         * GL_ARB_texture_storage

source-repository head
    type:            git
    location:        https://github.com/Noeda/caramia.git

library
  exposed-modules:     Caramia
                       Caramia.Resource
                       Caramia.Context
                       Caramia.Buffer
                       Caramia.VAO
                       Caramia.Shader
                       Caramia.Math
                       Caramia.ImageFormats
                       Caramia.Render
                       Caramia.Texture
                       Caramia.Memory
                       Caramia.Framebuffer
  other-modules:       Caramia.Internal.Safe
                       Caramia.Internal.OpenGLCApi
                       Caramia.Internal.OpenGLExtensions
                       Caramia.Texture.Internal
                       Caramia.ImageFormats.Internal
                       Caramia.Shader.Internal
                       Caramia.Buffer.Internal
                       Caramia.VAO.Internal
  c-sources:           src/c/gl_api.c

  ghc-options:         -Wall -fno-warn-name-shadowing

  build-depends:       base >=4.7 && <5.0.0.0
                      ,bytestring   ==0.10.*
                      ,containers   ==0.5.*
                      ,vector       ==0.10.*
                      ,OpenGLRaw    ==1.4.*
                      ,text         ==1.1.*
                      ,lens         ==4.0.*
                      ,transformers ==0.3.*
  hs-source-dirs:      src
  default-language:    Haskell2010
  default-extensions:  AutoDeriveTypeable, OverloadedStrings, FlexibleInstances
                      ,FlexibleContexts, LambdaCase, MultiWayIf, ViewPatterns

-- This is just a dumping ground test that does stupid things. It's used to
-- check if things work at all.
test-suite smoke-test
  type:                exitcode-stdio-1.0
  main-is:             Main.hs
  ghc-options:         -Wall -fno-warn-name-shadowing -threaded
  hs-source-dirs:      demos/smoke-test
  build-depends:       base, caramia
                      ,sdl2 ==1.0.*
                      ,text ==1.1.*
  default-language:    Haskell2010
  default-extensions:  AutoDeriveTypeable, OverloadedStrings
                      ,FlexibleInstances ,FlexibleContexts, LambdaCase
                      ,MultiWayIf

