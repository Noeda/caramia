-- | Automatically generated raw OpenGL bindings using flextGL
--
-- <https://github.com/Noeda/flextGL>
--

{-# LANGUAGE CPP, ForeignFunctionInterface, EmptyDataDecls #-}
{-# LANGUAGE DeriveDataTypeable, StandaloneDeriving #-}
-- WARNING: This file was automatically generated
-- Do not edit.



module Graphics.Caramia.Internal.FlextGLReentrant
    ( flextInit
    , FlextInitResult(..)
    , NonExistentOpenGLFunction(..)
    , FlextGL()
    , gl_R1UI_C4F_N3F_V3F_SUN
    , gl_COLOR_TABLE_SGI
    , gl_EYE_DISTANCE_TO_POINT_SGIS
    , gl_FAILURE_NV
    , gl_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
    , gl_CLIENT_MAPPED_BUFFER_BARRIER_BIT
    , gl_VERTEX_ATTRIB_ARRAY_STRIDE
    , gl_POINT_SIZE_MIN_ARB
    , gl_TEXTURE_BINDING_3D_OES
    , gl_TRACE_PIXELS_BIT_MESA
    , gl_PROVOKING_VERTEX
    , gl_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
    , gl_ARRAY_STRIDE
    , gl_UNIFORM_BUFFER_BINDING
    , gl_SHADE_MODEL
    , gl_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
    , gl_PIXEL_TEX_GEN_Q_ROUND_SGIX
    , gl_TEXTURE24_ARB
    , gl_COMBINE_EXT
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
    , gl_MAX_TEXTURE_UNITS_ARB
    , gl_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
    , gl_PREVIOUS_EXT
    , gl_FLOAT_MAT3x2
    , gl_TEXTURE_SWIZZLE_G_EXT
    , gl_COLOR_ARRAY_SIZE
    , gl_MIN_PROGRAM_TEXEL_OFFSET_EXT
    , gl_PROXY_TEXTURE_1D_ARRAY
    , gl_BUMP_TEX_UNITS_ATI
    , gl_INTENSITY
    , gl_MAX_COMPUTE_IMAGE_UNIFORMS
    , gl_DEPTH_BIAS
    , gl_VERSION_ES_CL_1_1
    , gl_SMOOTH_QUADRATIC_CURVE_TO_NV
    , gl_SAMPLE_COVERAGE_INVERT_ARB
    , gl_DRAW_BUFFER13_NV
    , gl_VERTEX_ARRAY_TYPE_EXT
    , gl_RGBA16UI
    , gl_CLEAR_BUFFER
    , gl_RGB16UI
    , gl_DUAL_INTENSITY4_SGIS
    , gl_PROGRAM_INPUT
    , gl_ELEMENT_ARRAY_BARRIER_BIT_EXT
    , gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY
    , gl_VIEW_CLASS_64_BITS
    , gl_MAP1_TEXTURE_COORD_4
    , gl_VERTEX_ARRAY_STRIDE
    , gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
    , gl_TEXTURE_GREEN_TYPE_ARB
    , gl_FRAMEBUFFER_SRGB_EXT
    , gl_COLOR_ATTACHMENT9
    , gl_ACCUM_BUFFER_BIT
    , gl_DOT3_RGBA_IMG
    , gl_INT_IMAGE_2D_RECT_EXT
    , gl_COLOR_ARRAY_LIST_STRIDE_IBM
    , gl_SAMPLES_3DFX
    , gl_PACK_SKIP_ROWS
    , gl_STRICT_SCISSOR_HINT_PGI
    , gl_PATH_STROKE_COVER_MODE_NV
    , gl_DEBUG_SEVERITY_MEDIUM
    , gl_CONVOLUTION_BORDER_MODE_EXT
    , gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
    , gl_VIDEO_CAPTURE_FRAME_HEIGHT_NV
    , gl_TEXTURE_USAGE_ANGLE
    , gl_GEOMETRY_SUBROUTINE_UNIFORM
    , gl_FRAMEBUFFER
    , gl_TEXTURE_APPLICATION_MODE_EXT
    , gl_PACK_LSB_FIRST
    , gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES
    , gl_DECAL
    , gl_VERTEX_PROGRAM_CALLBACK_DATA_MESA
    , gl_VERTEX_ATTRIB_MAP1_SIZE_APPLE
    , gl_PACK_SWAP_BYTES
    , gl_MAP_UNSYNCHRONIZED_BIT
    , gl_SAMPLE_BUFFERS_3DFX
    , gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
    , gl_T2F_IUI_N3F_V3F_EXT
    , gl_POSITION
    , gl_RENDERBUFFER_COVERAGE_SAMPLES_NV
    , gl_LINEAR_CLIPMAP_NEAREST_SGIX
    , gl_DEPTH_BUFFER_BIT5_QCOM
    , gl_T2F_IUI_N3F_V2F_EXT
    , gl_VIDEO_BUFFER_PITCH_NV
    , gl_UNSIGNED_INT64_AMD
    , gl_PERFORMANCE_MONITOR_AMD
    , gl_LERP_ATI
    , gl_GEOMETRY_SHADER
    , gl_TEXTURE_COLOR_SAMPLES_NV
    , gl_RESAMPLE_DECIMATE_SGIX
    , gl_PROGRAM_PIPELINE_OBJECT_EXT
    , gl_VECTOR_EXT
    , gl_OP_CLAMP_EXT
    , gl_SAMPLES_SGIS
    , gl_VERTEX_BINDING_BUFFER
    , gl_MAP2_TEXTURE_COORD_1
    , gl_READ_PIXEL_DATA_RANGE_POINTER_NV
    , gl_SECONDARY_COLOR_ARRAY_TYPE
    , gl_TEXTURE_DEPTH_TYPE
    , gl_WRITE_DISCARD_NV
    , gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
    , gl_TRACE_ERRORS_BIT_MESA
    , gl_TANGENT_ARRAY_EXT
    , gl_MAX_DEEP_3D_TEXTURE_DEPTH_NV
    , gl_TEXTURE_INDEX_SIZE_EXT
    , gl_FRAGMENT_COLOR_MATERIAL_SGIX
    , gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
    , gl_CONTEXT_RELEASE_BEHAVIOR
    , gl_MAX_VARYING_COMPONENTS_EXT
    , gl_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
    , gl_IMAGE_3D_EXT
    , gl_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
    , gl_CONTEXT_ROBUST_ACCESS
    , gl_SHADER_STORAGE_BARRIER_BIT
    , gl_UNPACK_ALIGNMENT
    , gl_SHADER_STORAGE_BUFFER_START
    , gl_VERTEX_ARRAY_ADDRESS_NV
    , gl_TRANSFORM_FEEDBACK_OVERFLOW_ARB
    , gl_SWIZZLE_STQ_DQ_ATI
    , gl_TEXTURE_COMPRESSED
    , gl_TEXTURE_COLOR_TABLE_SGI
    , gl_OBJECT_INFO_LOG_LENGTH_ARB
    , gl_POST_COLOR_MATRIX_BLUE_SCALE_SGI
    , gl_DRAW_BUFFER4
    , gl_DUAL_LUMINANCE8_SGIS
    , gl_SAMPLER_CUBE_ARB
    , gl_COLOR_ATTACHMENT11_NV
    , gl_ALPHA_MIN_SGIX
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
    , gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
    , gl_BGR_INTEGER
    , gl_WEIGHT_ARRAY_BUFFER_BINDING_ARB
    , gl_CON_14_ATI
    , gl_MAX_DUAL_SOURCE_DRAW_BUFFERS
    , gl_IS_ROW_MAJOR
    , gl_DEBUG_SOURCE_OTHER
    , gl_EVAL_2D_NV
    , gl_BLUE
    , gl_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    , gl_SRC_COLOR
    , gl_MAX_GEOMETRY_ATOMIC_COUNTERS
    , gl_OPERAND0_ALPHA
    , gl_SAMPLE_ALPHA_TO_ONE
    , gl_TEXTURE_RANGE_POINTER_APPLE
    , gl_RGB8_OES
    , gl_MAP1_VERTEX_ATTRIB12_4_NV
    , gl_OUTPUT_COLOR1_EXT
    , gl_UNSIGNED_SHORT
    , gl_RGBA16_SNORM
    , gl_DS_BIAS_NV
    , gl_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    , gl_BACK_RIGHT
    , gl_MAX_DRAW_BUFFERS_NV
    , gl_STENCIL_BACK_VALUE_MASK
    , gl_INVALID_ENUM
    , gl_PRIMARY_COLOR
    , gl_SRGB_ALPHA
    , gl_TEXTURE_COMPARE_FAIL_VALUE_ARB
    , gl_INFO_LOG_LENGTH
    , gl_ALPHA16_SNORM
    , gl_CLIP_DISTANCE7_APPLE
    , gl_FOG_FUNC_POINTS_SGIS
    , gl_INVALID_FRAMEBUFFER_OPERATION_OES
    , gl_RGBA16F_ARB
    , gl_MAP2_VERTEX_ATTRIB15_4_NV
    , gl_DEPTH_BUFFER_BIT
    , gl_VARIABLE_F_NV
    , gl_INT16_VEC3_NV
    , gl_NORMALIZE
    , gl_INDEX_SHIFT
    , gl_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
    , gl_CURRENT_RASTER_TEXTURE_COORDS
    , gl_OUTPUT_FOG_EXT
    , gl_SAMPLER_CUBE
    , gl_STATIC_READ
    , gl_INT_VEC3_ARB
    , gl_TEXTURE17_ARB
    , gl_BLEND_ADVANCED_COHERENT_NV
    , gl_FRAGMENT_SHADER
    , gl_TEXTURE_2D
    , gl_STORAGE_CLIENT_APPLE
    , gl_REPLACEMENT_CODE_ARRAY_POINTER_SUN
    , gl_POINT_DISTANCE_ATTENUATION
    , gl_OBJECT_TYPE
    , gl_T2F_IUI_V2F_EXT
    , gl_PIXEL_UNPACK_BUFFER_BINDING_ARB
    , gl_CURRENT_ATTRIB_NV
    , gl_SAMPLES_ARB
    , gl_MIRROR_CLAMP_EXT
    , gl_PIXEL_UNPACK_BUFFER_BINDING_EXT
    , gl_INTENSITY12
    , gl_DUAL_LUMINANCE16_SGIS
    , gl_SAMPLER_CUBE_SHADOW_NV
    , gl_CON_21_ATI
    , gl_FONT_HEIGHT_BIT_NV
    , gl_BLEND_EQUATION_ALPHA
    , gl_IMAGE_CLASS_10_10_10_2
    , gl_NEGATIVE_ONE_EXT
    , gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
    , gl_TEXTURE_COORD_ARRAY_LIST_IBM
    , gl_MODELVIEW28_ARB
    , gl_TEXTURE_INTERNAL_FORMAT_QCOM
    , gl_COMBINER_AB_DOT_PRODUCT_NV
    , gl_COLOR_ATTACHMENT13_NV
    , gl_TEXTURE_BINDING_2D
    , gl_NONE
    , gl_HALF_FLOAT_NV
    , gl_MAX_TESS_PATCH_COMPONENTS_EXT
    , gl_DOUBLEBUFFER
    , gl_MAX_RECTANGLE_TEXTURE_SIZE
    , gl_R11F_G11F_B10F_APPLE
    , gl_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
    , gl_OUTPUT_TEXTURE_COORD24_EXT
    , gl_RGB565
    , gl_COLOR_TABLE_BIAS
    , gl_INTERNALFORMAT_DEPTH_SIZE
    , gl_POINT_SIZE_ARRAY_STRIDE_OES
    , gl_FRONT_LEFT
    , gl_DOT3_RGBA
    , gl_COMBINER_MUX_SUM_NV
    , gl_LIGHT4
    , gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    , gl_CON_5_ATI
    , gl_VIRTUAL_PAGE_SIZE_INDEX_ARB
    , gl_SCALED_RESOLVE_NICEST_EXT
    , gl_DRAW_BUFFER10
    , gl_EYE_PLANE_ABSOLUTE_NV
    , gl_TEXTURE_FREE_MEMORY_ATI
    , gl_UNSIGNED_INT_24_8_EXT
    , gl_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
    , gl_RED_BITS
    , gl_SCREEN_COORDINATES_REND
    , gl_VERTEX_ARRAY_POINTER_EXT
    , gl_MAX_PROGRAM_PARAMETERS_ARB
    , gl_DSDT_NV
    , gl_INT_IMAGE_3D
    , gl_RELATIVE_ROUNDED_RECT8_NV
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
    , gl_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    , gl_OBJECT_POINT_SGIS
    , gl_MAX_VERTEX_SHADER_LOCALS_EXT
    , gl_UNIFORM
    , gl_SLUMINANCE8
    , gl_VERTEX_BINDING_DIVISOR
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Z
    , gl_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
    , gl_TEXTURE18
    , gl_PERTURB_EXT
    , gl_POST_COLOR_MATRIX_GREEN_SCALE_SGI
    , gl_DEBUG_SOURCE_SHADER_COMPILER
    , gl_FRAMEBUFFER_DEFAULT_SAMPLES
    , gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
    , gl_3D_COLOR_TEXTURE
    , gl_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
    , gl_FUNC_ADD_OES
    , gl_FRONT
    , gl_SAMPLE_MASK_VALUE_EXT
    , gl_IMAGE_2D
    , gl_VALIDATE_STATUS
    , gl_MAX_DEBUG_GROUP_STACK_DEPTH
    , gl_MAT_SHININESS_BIT_PGI
    , gl_FRONT_RIGHT
    , gl_TEXTURE_BLUE_SIZE_EXT
    , gl_VERTEX_ARRAY_OBJECT_EXT
    , gl_PIXEL_TILE_WIDTH_SGIX
    , gl_ACCUM_RED_BITS
    , gl_CONSTANT_COLOR_EXT
    , gl_CIRCULAR_TANGENT_ARC_TO_NV
    , gl_COMBINE_ALPHA
    , gl_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
    , gl_INT_IMAGE_2D_MULTISAMPLE_EXT
    , gl_COLOR_ATTACHMENT11
    , gl_CONVEX_HULL_NV
    , gl_FONT_NUM_GLYPH_INDICES_BIT_NV
    , gl_TRIANGLE_STRIP_ADJACENCY_EXT
    , gl_COMPRESSED_SRGB_ALPHA
    , gl_UNSIGNED_INT_2_10_10_10_REV_EXT
    , gl_LUMINANCE_ALPHA32UI_EXT
    , gl_BITMAP_TOKEN
    , gl_NEAREST_CLIPMAP_NEAREST_SGIX
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
    , gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
    , gl_OBJECT_BUFFER_USAGE_ATI
    , gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
    , gl_POINT_SPRITE_ARB
    , gl_MAP2_TEXTURE_COORD_4
    , gl_FOG_COORDINATE_ARRAY
    , gl_ALPHA16_EXT
    , gl_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
    , gl_GLOBAL_ALPHA_SUN
    , gl_BUFFER_BINDING
    , gl_ACTIVE_UNIFORMS
    , gl_DEBUG_SEVERITY_HIGH_KHR
    , gl_LUMINANCE16_SNORM
    , gl_LUMINANCE_ALPHA
    , gl_DEPTH24_STENCIL8_EXT
    , gl_PACK_ALIGNMENT
    , gl_T2F_C4UB_V3F
    , gl_UNSIGNED_INT_VEC4
    , gl_DELETE_STATUS
    , gl_SAMPLE_MASK_VALUE
    , gl_MAX_VERTEX_UNIFORM_COMPONENTS
    , gl_MAX_SAMPLES_ANGLE
    , gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
    , gl_EDGE_FLAG_ARRAY_STRIDE
    , gl_COLOR_ATTACHMENT5_NV
    , gl_DOUBLE_VEC4
    , gl_LINES
    , gl_COLOR_ATTACHMENT0
    , gl_DRAW_BUFFER8_ARB
    , gl_PROJECTION_STACK_DEPTH
    , gl_OP_RECIP_EXT
    , gl_ALL_SHADER_BITS_EXT
    , gl_OBJECT_LINE_SGIS
    , gl_LIGHTING
    , gl_COMPRESSED_LUMINANCE_LATC1_EXT
    , gl_TEXTURE_SWIZZLE_A_EXT
    , gl_UNKNOWN_CONTEXT_RESET
    , gl_CON_3_ATI
    , gl_LUMINANCE8_ALPHA8
    , gl_MAX_GEOMETRY_UNIFORM_COMPONENTS
    , gl_SOURCE2_RGB
    , gl_IGNORE_BORDER_HP
    , gl_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX
    , gl_CLIP_DISTANCE4_APPLE
    , gl_UNIFORM_BUFFER_UNIFIED_NV
    , gl_DRAW_BUFFER9
    , gl_UNPACK_COLORSPACE_CONVERSION_WEBGL
    , gl_BLEND_OVERLAP_NV
    , gl_OPERAND2_RGB_ARB
    , gl_TEXTURE_CUBE_MAP_POSITIVE_X_OES
    , gl_TEXTURE_SRGB_DECODE_EXT
    , gl_SOURCE2_ALPHA_ARB
    , gl_DOUBLE_VEC3
    , gl_MATRIX6_ARB
    , gl_SAMPLER_BUFFER_EXT
    , gl_COLOR_ATTACHMENT2_NV
    , gl_ARRAY_ELEMENT_LOCK_COUNT_EXT
    , gl_FULL_STIPPLE_HINT_PGI
    , gl_LUMINANCE_ALPHA_FLOAT16_ATI
    , gl_REG_0_ATI
    , gl_IMAGE_PIXEL_TYPE
    , gl_MANUAL_GENERATE_MIPMAP
    , gl_IMAGE_BINDING_NAME_EXT
    , gl_HISTOGRAM_BLUE_SIZE
    , gl_COPY_READ_BUFFER
    , gl_INVERT_OVG_NV
    , gl_BLEND_DST_ALPHA_EXT
    , gl_UNPACK_SUBSAMPLE_RATE_SGIX
    , gl_TRANSFORM_BIT
    , gl_DSDT8_MAG8_NV
    , gl_MAP_READ_BIT_EXT
    , gl_COMBINER6_NV
    , gl_RESET_NOTIFICATION_STRATEGY
    , gl_MODELVIEW10_ARB
    , gl_ACTIVE_TEXTURE
    , gl_FLOAT_VEC3_ARB
    , gl_SUBPIXEL_BITS
    , gl_RELATIVE_ARC_TO_NV
    , gl_COLOR_ATTACHMENT15_NV
    , gl_SAMPLE_ALPHA_TO_COVERAGE
    , gl_INT_SAMPLER_2D
    , gl_BUFFER_DATA_SIZE
    , gl_VERTEX_ATTRIB_ARRAY_DIVISOR
    , gl_DEBUG_ASSERT_MESA
    , gl_TRANSFORM_FEEDBACK_BUFFER_NV
    , gl_MAP2_VERTEX_ATTRIB14_4_NV
    , gl_IS_PER_PATCH
    , gl_STENCIL_CLEAR_TAG_VALUE_EXT
    , gl_TEXTURE_COMPARE_FUNC
    , gl_FLOAT_R_NV
    , gl_QUAD_ALPHA8_SGIS
    , gl_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
    , gl_TEXTURE1
    , gl_NORMAL_ARRAY_STRIDE_EXT
    , gl_PRIMITIVES_GENERATED
    , gl_UNSIGNED_INT16_NV
    , gl_TEXTURE_FILTER_CONTROL_EXT
    , gl_AND_REVERSE
    , gl_INTERNALFORMAT_RED_TYPE
    , gl_VERTEX_BINDING_STRIDE
    , gl_RENDERBUFFER_EXT
    , gl_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
    , gl_DEBUG_SOURCE_API_KHR
    , gl_INTENSITY_FLOAT16_APPLE
    , gl_INDEX
    , gl_REG_9_ATI
    , gl_PINLIGHT_NV
    , gl_FRACTIONAL_EVEN
    , gl_PROJECTION_MATRIX
    , gl_TEXTURE_STACK_DEPTH
    , gl_REG_19_ATI
    , gl_UNPACK_CLIENT_STORAGE_APPLE
    , gl_COMPRESSED_RGBA_ASTC_6x6_KHR
    , gl_COMPRESSED_RGB8_ETC2_OES
    , gl_FLOAT16_VEC4_NV
    , gl_OPERAND0_ALPHA_ARB
    , gl_TIMESTAMP_EXT
    , gl_VERTEX_SHADER
    , gl_RGB16_EXT
    , gl_STENCIL
    , gl_CONTEXT_FLAG_DEBUG_BIT_KHR
    , gl_TRIANGULAR_NV
    , gl_DYNAMIC_READ_ARB
    , gl_TESS_EVALUATION_PROGRAM_NV
    , gl_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
    , gl_FRAGMENTS_INSTRUMENT_MAX_SGIX
    , gl_DEBUG_SEVERITY_MEDIUM_KHR
    , gl_MAX_PROGRAM_TEXEL_OFFSET
    , gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
    , gl_COLOR_ATTACHMENT3
    , gl_INT_IMAGE_1D
    , gl_OP_INDEX_EXT
    , gl_RGB8I_EXT
    , gl_FLOAT_RG32_NV
    , gl_VIDEO_COLOR_CONVERSION_MAX_NV
    , gl_COLOR_TABLE_GREEN_SIZE_SGI
    , gl_PIXEL_TILE_GRID_WIDTH_SGIX
    , gl_TEXTURE_COMPARE_MODE
    , gl_VERTEX_ARRAY_BINDING_OES
    , gl_TEXTURE_2D_STACK_MESAX
    , gl_RGB5_EXT
    , gl_EVAL_VERTEX_ATTRIB11_NV
    , gl_DEBUG_SOURCE_API
    , gl_PATH_GEN_COLOR_FORMAT_NV
    , gl_ACTIVE_UNIFORM_MAX_LENGTH
    , gl_LUMINANCE_FLOAT16_ATI
    , gl_ROUNDED_RECT4_NV
    , gl_INTERNALFORMAT_BLUE_SIZE
    , gl_GEOMETRY_SHADER_ARB
    , gl_LIGHT_MODEL_LOCAL_VIEWER
    , gl_ATC_RGBA_INTERPOLATED_ALPHA_AMD
    , gl_DOUBLE_MAT2x3_EXT
    , gl_MAX_SAMPLES_APPLE
    , gl_TEXTURE17
    , gl_TEXTURE_2D_MULTISAMPLE_ARRAY
    , gl_RENDERBUFFER_RED_SIZE_EXT
    , gl_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
    , gl_PATCH_DEFAULT_OUTER_LEVEL
    , gl_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
    , gl_RGB16I_EXT
    , gl_MATRIX_INDEX_ARRAY_STRIDE_ARB
    , gl_MATRIX2_ARB
    , gl_EYE_LINEAR
    , gl_COLOR_ATTACHMENT3_EXT
    , gl_IMAGE_2D_ARRAY
    , gl_TEXTURE_MAX_LOD_SGIS
    , gl_INDEX_TEST_FUNC_EXT
    , gl_INDEX_CLEAR_VALUE
    , gl_SOURCE1_ALPHA
    , gl_DEBUG_GROUP_STACK_DEPTH
    , gl_MULTISAMPLE_EXT
    , gl_COMPRESSED_RGBA_BPTC_UNORM_ARB
    , gl_MAX_TESS_GEN_LEVEL
    , gl_BINORMAL_ARRAY_STRIDE_EXT
    , gl_LUMINANCE12_ALPHA12_EXT
    , gl_CONVOLUTION_1D_EXT
    , gl_CLIP_DISTANCE4
    , gl_S
    , gl_PROXY_TEXTURE_2D_MULTISAMPLE
    , gl_MIN_EXT
    , gl_SOURCE1_RGB
    , gl_PROGRAM_LENGTH_NV
    , gl_RGB16I
    , gl_SAMPLER_2D_SHADOW_EXT
    , gl_MAX
    , gl_COLOR_TABLE_ALPHA_SIZE_SGI
    , gl_UNSIGNED_INT_10F_11F_11F_REV_APPLE
    , gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW
    , gl_CONVOLUTION_FILTER_SCALE
    , gl_PROGRAM_PARAMETERS_ARB
    , gl_RGB9_E5
    , gl_SAMPLER_1D_ARRAY_EXT
    , gl_REPLACE_MIDDLE_SUN
    , gl_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
    , gl_UNSIGNED_INT_SAMPLER_3D
    , gl_ALPHA12_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_ANGLE
    , gl_SEPARATE_ATTRIBS_EXT
    , gl_CURRENT_TEXTURE_COORDS
    , gl_MAX_NAME_LENGTH
    , gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
    , gl_TEXTURE_LUMINANCE_TYPE
    , gl_CON_30_ATI
    , gl_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
    , gl_IMAGE_BINDING_LAYERED_EXT
    , gl_STACK_OVERFLOW_KHR
    , gl_DRAW_BUFFER14_NV
    , gl_VERTEX_STREAM2_ATI
    , gl_QUAD_MESH_SUN
    , gl_COMPRESSED_RG_RGTC2
    , gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS
    , gl_INVARIANT_DATATYPE_EXT
    , gl_VERTEX_STREAM0_ATI
    , gl_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
    , gl_RGBA32UI
    , gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
    , gl_INT8_VEC2_NV
    , gl_COMPRESSED_SIGNED_RED_RGTC1_EXT
    , gl_EDGE_FLAG
    , gl_MAX_PROGRAM_LOOP_DEPTH_NV
    , gl_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
    , gl_LUMINANCE16_ALPHA16_EXT
    , gl_MAX_SHADER_BUFFER_ADDRESS_NV
    , gl_POINT_SIZE_RANGE
    , gl_COMBINER_CD_OUTPUT_NV
    , gl_COMPATIBLE_SUBROUTINES
    , gl_CLIPPING_INPUT_PRIMITIVES_ARB
    , gl_SIGNED_HILO8_NV
    , gl_NOOP
    , gl_GEOMETRY_OUTPUT_TYPE
    , gl_LUMINANCE8_ALPHA8_EXT
    , gl_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
    , gl_VERTEX_WEIGHT_ARRAY_SIZE_EXT
    , gl_SYNC_FLAGS_APPLE
    , gl_UNPACK_SKIP_ROWS_EXT
    , gl_ALPHA_INTEGER_EXT
    , gl_QUERY_KHR
    , gl_PIXEL_TILE_GRID_HEIGHT_SGIX
    , gl_BLEND_EQUATION_ALPHA_EXT
    , gl_PERCENTAGE_AMD
    , gl_SMOOTH_POINT_SIZE_RANGE
    , gl_QUERY_RESULT_AVAILABLE_ARB
    , gl_MAP1_NORMAL
    , gl_MULT
    , gl_HISTOGRAM_GREEN_SIZE_EXT
    , gl_CLIP_DISTANCE6
    , gl_TEXTURE_4DSIZE_SGIS
    , gl_TEXTURE_BINDING_CUBE_MAP_ARRAY
    , gl_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
    , gl_COMPUTE_SUBROUTINE_UNIFORM
    , gl_PIXEL_TILE_CACHE_INCREMENT_SGIX
    , gl_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
    , gl_COORD_REPLACE_OES
    , gl_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX
    , gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
    , gl_INDEX_ARRAY_POINTER_EXT
    , gl_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
    , gl_TEXTURE_BINDING_3D
    , gl_DRAW_BUFFER12_ARB
    , gl_INTENSITY32UI_EXT
    , gl_TRANSFORM_FEEDBACK_VARYINGS_NV
    , gl_SIGNED_LUMINANCE8_NV
    , gl_ALL_BARRIER_BITS
    , gl_MAX_TEXTURE_BUFFER_SIZE_EXT
    , gl_YCBAYCR8A_4224_NV
    , gl_UNIFORM_BLOCK_INDEX
    , gl_TESS_GEN_SPACING
    , gl_PIXEL_MAP_I_TO_G
    , gl_TEXTURE_CONSTANT_DATA_SUNX
    , gl_TEXTURE_RED_SIZE_EXT
    , gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
    , gl_MODELVIEW30_ARB
    , gl_WEIGHT_ARRAY_STRIDE_OES
    , gl_EVAL_BIT
    , gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
    , gl_COMPRESSED_SRGB8_ETC2
    , gl_VERTEX_SHADER_VARIANTS_EXT
    , gl_IMAGE_PIXEL_FORMAT
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    , gl_TRANSFORM_FEEDBACK_VARYING
    , gl_BLUE_MAX_CLAMP_INGR
    , gl_LUMINANCE_ALPHA_FLOAT32_APPLE
    , gl_VERTEX_ATTRIB_ARRAY11_NV
    , gl_ALPHA8UI_EXT
    , gl_MAX_VERTEX_ATOMIC_COUNTERS
    , gl_TEXTURE_BUFFER_BINDING
    , gl_DEBUG_SOURCE_SHADER_COMPILER_ARB
    , gl_COLOR_ATTACHMENT7_EXT
    , gl_DECR
    , gl_ACTIVE_VARIABLES
    , gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT
    , gl_ALPHA16F_EXT
    , gl_SAMPLES_EXT
    , gl_GPU_OPTIMIZED_QCOM
    , gl_RGB2_EXT
    , gl_TEXTURE_BINDING_2D_MULTISAMPLE
    , gl_NO_RESET_NOTIFICATION_ARB
    , gl_UNSIGNALED
    , gl_RGB9_E5_APPLE
    , gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
    , gl_NEGATIVE_ONE_TO_ONE
    , gl_DRAW_BUFFER5_ARB
    , gl_RGBA16F
    , gl_EYE_RADIAL_NV
    , gl_LINE_WIDTH_GRANULARITY
    , gl_GLYPH_HAS_KERNING_BIT_NV
    , gl_COMPARE_REF_TO_TEXTURE
    , gl_COMPRESSED_RGBA_ASTC_5x5x4_OES
    , gl_BLOCK_INDEX
    , gl_PRIMITIVE_RESTART_INDEX_NV
    , gl_BLEND
    , gl_TEXTURE_DEPTH
    , gl_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
    , gl_RENDERBUFFER_HEIGHT
    , gl_SLUMINANCE8_NV
    , gl_ALPHA8_OES
    , gl_R16F
    , gl_OBJECT_DISTANCE_TO_POINT_SGIS
    , gl_TEXTURE_STENCIL_SIZE_EXT
    , gl_INDEX_ARRAY_STRIDE
    , gl_RENDERBUFFER_BINDING_ANGLE
    , gl_SMOOTH
    , gl_VERTEX_BINDING_OFFSET
    , gl_ONE_MINUS_SRC_ALPHA
    , gl_DEBUG_TYPE_OTHER_KHR
    , gl_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
    , gl_PACK_SKIP_VOLUMES_SGIS
    , gl_SKIP_COMPONENTS3_NV
    , gl_COLOR_ARRAY_TYPE
    , gl_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
    , gl_PRIMITIVE_BOUNDING_BOX_EXT
    , gl_CON_15_ATI
    , gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
    , gl_ADD_SIGNED
    , gl_OUTPUT_TEXTURE_COORD8_EXT
    , gl_COLOR_ATTACHMENT4
    , gl_SAMPLE_ALPHA_TO_MASK_SGIS
    , gl_ONE_MINUS_CONSTANT_ALPHA_EXT
    , gl_ACTIVE_SUBROUTINE_UNIFORMS
    , gl_MAP1_VERTEX_4
    , gl_DEPTH_BOUNDS_EXT
    , gl_OUTPUT_TEXTURE_COORD29_EXT
    , gl_FONT_UNAVAILABLE_NV
    , gl_MATRIX0_NV
    , gl_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
    , gl_COMBINER3_NV
    , gl_SAMPLER_2D_ARRAY_EXT
    , gl_MAP2_TEXTURE_COORD_3
    , gl_DST_ATOP_NV
    , gl_TEXTURE_GEQUAL_R_SGIX
    , gl_TEXTURE20_ARB
    , gl_COMBINER_SCALE_NV
    , gl_ACTIVE_PROGRAM
    , gl_PATH_MAX_MODELVIEW_STACK_DEPTH_NV
    , gl_MIN_FRAGMENT_INTERPOLATION_OFFSET
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES
    , gl_WRITE_ONLY_OES
    , gl_ALLOW_DRAW_OBJ_HINT_PGI
    , gl_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
    , gl_MAX_VERTEX_VARYING_COMPONENTS_EXT
    , gl_VERTEX_ARRAY
    , gl_CON_0_ATI
    , gl_UNPACK_ROW_BYTES_APPLE
    , gl_COLOR_ARRAY_POINTER
    , gl_OPERAND1_RGB
    , gl_CURRENT_QUERY
    , gl_RELATIVE_LARGE_CW_ARC_TO_NV
    , gl_MAP2_TANGENT_EXT
    , gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
    , gl_STREAM_DRAW
    , gl_QUAD_LUMINANCE8_SGIS
    , gl_MULTISAMPLE_BUFFER_BIT5_QCOM
    , gl_GREEN
    , gl_COLOR_INDEX4_EXT
    , gl_CND0_ATI
    , gl_EQUIV
    , gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS
    , gl_GEOMETRY_SHADER_BIT_EXT
    , gl_REPLACEMENT_CODE_ARRAY_TYPE_SUN
    , gl_PACK_SKIP_IMAGES_EXT
    , gl_IMAGE_CLASS_11_11_10
    , gl_2PASS_1_EXT
    , gl_AND_INVERTED
    , gl_NOR
    , gl_SAMPLE_COVERAGE_INVERT
    , gl_FONT_X_MAX_BOUNDS_BIT_NV
    , gl_MAX_PROGRAM_PATCH_ATTRIBS_NV
    , gl_DOUBLE_MAT3x2_EXT
    , gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
    , gl_DOT2_ADD_ATI
    , gl_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
    , gl_WEIGHT_SUM_UNITY_ARB
    , gl_TESS_CONTROL_OUTPUT_VERTICES_EXT
    , gl_EVAL_VERTEX_ATTRIB9_NV
    , gl_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
    , gl_DEPTH_TEXTURE_MODE_ARB
    , gl_TEXTURE_BINDING_1D
    , gl_MAP_WRITE_BIT_EXT
    , gl_LINE_STIPPLE
    , gl_RGB32UI_EXT
    , gl_OP_DOT3_EXT
    , gl_DEPTH_SCALE
    , gl_FRAGMENT_INTERPOLATION_OFFSET_BITS
    , gl_LINE_LOOP
    , gl_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
    , gl_QUERY_BY_REGION_NO_WAIT_NV
    , gl_INDEX_MATERIAL_EXT
    , gl_TEXTURE_BORDER_COLOR
    , gl_UNPACK_RESAMPLE_OML
    , gl_ARRAY_BUFFER
    , gl_VIRTUAL_PAGE_SIZE_X_ARB
    , gl_MAX_DEPTH_TEXTURE_SAMPLES
    , gl_MAP1_TEXTURE_COORD_3
    , gl_TEXTURE_COLOR_WRITEMASK_SGIS
    , gl_COMPRESSED_RGBA_ASTC_4x4x3_OES
    , gl_FIXED
    , gl_COLOR_TABLE_INTENSITY_SIZE
    , gl_UNIFORM_BLOCK_BINDING
    , gl_SHADER_STORAGE_BUFFER
    , gl_DEBUG_CATEGORY_API_ERROR_AMD
    , gl_COMPRESSED_SRGB_S3TC_DXT1_NV
    , gl_TEXTURE_CROP_RECT_OES
    , gl_UNSIGNED_INT64_VEC2_NV
    , gl_SOURCE2_RGB_EXT
    , gl_COVERAGE_MODULATION_TABLE_NV
    , gl_TEXTURE_WRAP_T
    , gl_GENERATE_MIPMAP
    , gl_RENDERBUFFER_COLOR_SAMPLES_NV
    , gl_PIXEL_PACK_BUFFER_EXT
    , gl_R8
    , gl_UNIFORM_BLOCK
    , gl_VERTEX_ATTRIB_ARRAY9_NV
    , gl_REFLECTION_MAP_NV
    , gl_CONSTANT_EXT
    , gl_DUP_FIRST_CUBIC_CURVE_TO_NV
    , gl_RGBA_INTEGER
    , gl_GEOMETRY_OUTPUT_TYPE_EXT
    , gl_RGBA_INTEGER_MODE_EXT
    , gl_PLUS_CLAMPED_NV
    , gl_IMAGE_TRANSLATE_Y_HP
    , gl_COPY_INVERTED
    , gl_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
    , gl_TRANSFORM_FEEDBACK_BARRIER_BIT
    , gl_POST_COLOR_MATRIX_GREEN_SCALE
    , gl_UNSIGNED_INT_SAMPLER_1D_EXT
    , gl_TEXTURE_1D_BINDING_EXT
    , gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    , gl_READ_BUFFER_NV
    , gl_DEPTH_STENCIL_ATTACHMENT
    , gl_PROGRAM_MATRIX_STACK_DEPTH_EXT
    , gl_COMBINER1_NV
    , gl_BEVEL_NV
    , gl_DUP_LAST_CUBIC_CURVE_TO_NV
    , gl_FACTOR_ALPHA_MODULATE_IMG
    , gl_NATIVE_GRAPHICS_HANDLE_PGI
    , gl_NEXT_BUFFER_NV
    , gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
    , gl_STENCIL_BUFFER_BIT6_QCOM
    , gl_TEXTURE
    , gl_DRAW_FRAMEBUFFER
    , gl_BLEND_SRC_RGB_EXT
    , gl_RED_INTEGER
    , gl_SLUMINANCE8_ALPHA8_EXT
    , gl_COMPILE_AND_EXECUTE
    , gl_MIN_SAMPLE_SHADING_VALUE_ARB
    , gl_PACK_COMPRESSED_BLOCK_WIDTH
    , gl_DEPTH_STENCIL_TO_BGRA_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
    , gl_PARAMETER_BUFFER_BINDING_ARB
    , gl_TEXTURE_RECTANGLE_ARB
    , gl_TESS_EVALUATION_SUBROUTINE_UNIFORM
    , gl_ROUNDED_RECT2_NV
    , gl_CULL_FACE_MODE
    , gl_REFERENCED_BY_GEOMETRY_SHADER
    , gl_VIEW_CLASS_128_BITS
    , gl_LINEAR_CLIPMAP_LINEAR_SGIX
    , gl_PROJECTION
    , gl_LUMINANCE_ALPHA32I_EXT
    , gl_NORMAL_ARRAY_LENGTH_NV
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
    , gl_PATH_TRANSPOSE_PROJECTION_MATRIX_NV
    , gl_MAP2_BINORMAL_EXT
    , gl_STENCIL_INDEX1_EXT
    , gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT
    , gl_RGB32UI
    , gl_GEOMETRY_DEFORMATION_BIT_SGIX
    , gl_FRAMEBUFFER_OES
    , gl_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
    , gl_MAX_ATTRIB_STACK_DEPTH
    , gl_LUMINANCE_INTEGER_EXT
    , gl_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
    , gl_DISTANCE_ATTENUATION_SGIS
    , gl_SELECTION_BUFFER_SIZE
    , gl_SRC1_RGB
    , gl_FETCH_PER_SAMPLE_ARM
    , gl_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
    , gl_LUMINANCE8_OES
    , gl_SRGB_READ
    , gl_SKIP_COMPONENTS1_NV
    , gl_PIXEL_COUNT_AVAILABLE_NV
    , gl_TEXTURE_CLIPMAP_FRAME_SGIX
    , gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
    , gl_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
    , gl_QUAD_LUMINANCE4_SGIS
    , gl_VERTEX_ATTRIB_MAP2_APPLE
    , gl_VIEW_CLASS_32_BITS
    , gl_SLIM12S_SGIX
    , gl_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV
    , gl_FRAMEBUFFER_DEFAULT
    , gl_FLOAT_MAT2x3_NV
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    , gl_ZERO
    , gl_INVERSE_NV
    , gl_ONE_MINUS_DST_ALPHA
    , gl_MOVE_TO_NV
    , gl_CLIP_DISTANCE_NV
    , gl_DEPTH_COMPONENT32_OES
    , gl_OPERAND3_RGB_NV
    , gl_PIXEL_MAP_I_TO_R
    , gl_RGBA16_EXT
    , gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
    , gl_TEXTURE_FILTER_CONTROL
    , gl_LIGHTING_BIT
    , gl_TEXTURE_RANGE_LENGTH_APPLE
    , gl_UNSIGNED_INT_24_8
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
    , gl_ELEMENT_ARRAY_POINTER_ATI
    , gl_LARGE_CW_ARC_TO_NV
    , gl_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
    , gl_MAX_ASYNC_DRAW_PIXELS_SGIX
    , gl_BUFFER_MAPPED
    , gl_PRIMITIVE_RESTART_FIXED_INDEX
    , gl_VIEW_CLASS_BPTC_FLOAT
    , gl_FOG_COORDINATE_ARRAY_EXT
    , gl_VERTEX_ARRAY_LIST_IBM
    , gl_SPARE0_NV
    , gl_TEXTURE_LOD_BIAS
    , gl_DRAW_BUFFER0_ATI
    , gl_TEXTURE_ALPHA_SIZE
    , gl_PATH_MODELVIEW_MATRIX_NV
    , gl_SAMPLES_PASSED
    , gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
    , gl_SMALL_CCW_ARC_TO_NV
    , gl_SURFACE_REGISTERED_NV
    , gl_IMAGE_2D_MULTISAMPLE_ARRAY
    , gl_BOLD_BIT_NV
    , gl_SAMPLER_1D_ARRAY_SHADOW
    , gl_COMPRESSED_RGBA_ASTC_5x5x5_OES
    , gl_SAMPLE_SHADING_ARB
    , gl_INTERNALFORMAT_BLUE_TYPE
    , gl_FRAMEBUFFER_BINDING_OES
    , gl_ALLOW_DRAW_WIN_HINT_PGI
    , gl_QUERY_BY_REGION_WAIT_INVERTED
    , gl_X_EXT
    , gl_COVERAGE_BUFFER_BIT_NV
    , gl_SMOOTH_CUBIC_CURVE_TO_NV
    , gl_IMAGE_CLASS_2_X_8
    , gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
    , gl_SAMPLER_1D_SHADOW
    , gl_W_EXT
    , gl_DRAW_BUFFER4_EXT
    , gl_OP_NEGATE_EXT
    , gl_MAX_IMAGE_UNITS
    , gl_RENDERER
    , gl_COMPUTE_PROGRAM_NV
    , gl_OBJECT_DELETE_STATUS_ARB
    , gl_PACK_RESAMPLE_SGIX
    , gl_DRAW_BUFFER4_NV
    , gl_VERTEX_SHADER_BIT_EXT
    , gl_FIELD_LOWER_NV
    , gl_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
    , gl_UNSIGNED_INT_SAMPLER_BUFFER_AMD
    , gl_CURRENT_VERTEX_ATTRIB
    , gl_INTERLEAVED_ATTRIBS_NV
    , gl_ROUNDED_RECT8_NV
    , gl_PERFMON_RESULT_AVAILABLE_AMD
    , gl_INDEX_ARRAY_COUNT_EXT
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES
    , gl_NAME_LENGTH
    , gl_STATIC_COPY
    , gl_CLIP_DISTANCE2
    , gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
    , gl_CURRENT_FOG_COORDINATE_EXT
    , gl_DRAW_FRAMEBUFFER_BINDING_APPLE
    , gl_DETAIL_TEXTURE_LEVEL_SGIS
    , gl_POST_CONVOLUTION_ALPHA_BIAS
    , gl_MAP2_VERTEX_ATTRIB8_4_NV
    , gl_TEXTURE_RED_TYPE_ARB
    , gl_INTERNALFORMAT_ALPHA_TYPE
    , gl_DISTANCE_ATTENUATION_EXT
    , gl_HALF_BIAS_NEGATE_NV
    , gl_COLOR_INDEXES
    , gl_DRAW_BUFFER8_NV
    , gl_OUTPUT_TEXTURE_COORD5_EXT
    , gl_MAP2_GRID_SEGMENTS
    , gl_LIGHT1
    , gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT
    , gl_POINT_SPRITE
    , gl_RENDERBUFFER_ALPHA_SIZE_OES
    , gl_CURRENT_QUERY_ARB
    , gl_SCALED_RESOLVE_FASTEST_EXT
    , gl_INT_SAMPLER_1D_ARRAY
    , gl_DEPTH_RENDERABLE
    , gl_MINUS_CLAMPED_NV
    , gl_DARKEN_KHR
    , gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
    , gl_PATCH_VERTICES
    , gl_TEXTURE_FILTER4_SIZE_SGIS
    , gl_VERTEX_ATTRIB_ARRAY6_NV
    , gl_UNSIGNED_INT64_VEC4_NV
    , gl_READ_WRITE_ARB
    , gl_CONVOLUTION_FORMAT
    , gl_POST_COLOR_MATRIX_COLOR_TABLE_SGI
    , gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
    , gl_R1UI_T2F_V3F_SUN
    , gl_UNSIGNED_INT_VEC2_EXT
    , gl_MAX_DEPTH
    , gl_UNSIGNED_INT_10F_11F_11F_REV
    , gl_MULTISAMPLE_BUFFER_BIT6_QCOM
    , gl_INT_IMAGE_CUBE_MAP_ARRAY_EXT
    , gl_CONSTANT_ALPHA
    , gl_PIXEL_MAG_FILTER_EXT
    , gl_BUFFER_ACCESS
    , gl_OBJECT_SHADER_SOURCE_LENGTH_ARB
    , gl_SIGNED_ALPHA_NV
    , gl_BUFFER_SIZE_ARB
    , gl_LAST_VIDEO_CAPTURE_STATUS_NV
    , gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS
    , gl_TEXTURE_FETCH_BARRIER_BIT_EXT
    , gl_UNSIGNED_BYTE_2_3_3_REV
    , gl_MAX_COMBINED_IMAGE_UNIFORMS
    , gl_WEIGHT_ARRAY_BUFFER_BINDING_OES
    , gl_DEBUG_OBJECT_MESA
    , gl_PROXY_TEXTURE_2D
    , gl_COLOR_TABLE_BLUE_SIZE_SGI
    , gl_ALPHA_FLOAT32_ATI
    , gl_TEXTURE_LUMINANCE_SIZE_EXT
    , gl_EXCLUSION_KHR
    , gl_ATOMIC_COUNTER_BUFFER_SIZE
    , gl_PROXY_TEXTURE_1D_STACK_MESAX
    , gl_MATRIX30_ARB
    , gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    , gl_TESS_CONTROL_TEXTURE
    , gl_VERTEX_ATTRIB_ARRAY_ENABLED
    , gl_RGB32I_EXT
    , gl_CON_23_ATI
    , gl_MAX_GEOMETRY_OUTPUT_COMPONENTS
    , gl_DEPTH_BUFFER_BIT0_QCOM
    , gl_COLOR_TABLE_WIDTH_SGI
    , gl_UNSIGNED_INT_10_10_10_2_EXT
    , gl_PN_TRIANGLES_POINT_MODE_ATI
    , gl_COMPRESSED_RGBA_ASTC_12x12_KHR
    , gl_STENCIL_VALUE_MASK
    , gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
    , gl_CONVOLUTION_1D
    , gl_DEPTH_COMPONENT24_OES
    , gl_FLOAT_RGBA_NV
    , gl_UNPACK_COMPRESSED_BLOCK_SIZE
    , gl_COMPRESSED_RGBA_FXT1_3DFX
    , gl_FOG_COORDINATE_ARRAY_TYPE
    , gl_CLIENT_PIXEL_STORE_BIT
    , gl_TEXCOORD2_BIT_PGI
    , gl_COMPRESSED_RED_RGTC1
    , gl_SEPARABLE_2D_EXT
    , gl_COLOR3_BIT_PGI
    , gl_MULTISAMPLE_BIT_3DFX
    , gl_DEPTH_SAMPLES_NV
    , gl_MAX_RASTER_SAMPLES_EXT
    , gl_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
    , gl_BUFFER_VARIABLE
    , gl_SAMPLER_2D_ARB
    , gl_TEXTURE_COMPARE_FUNC_ARB
    , gl_MIRRORED_REPEAT
    , gl_DEBUG_CALLBACK_USER_PARAM_KHR
    , gl_TRIANGLES_ADJACENCY_ARB
    , gl_DEPTH_COMPONENT24_ARB
    , gl_FASTEST
    , gl_BLUE_SCALE
    , gl_TEXTURE_BLUE_TYPE_ARB
    , gl_RGB10
    , gl_STENCIL_WRITEMASK
    , gl_STENCIL_EXT
    , gl_PACK_IMAGE_DEPTH_SGIS
    , gl_CONTEXT_LOST_KHR
    , gl_FONT_MAX_ADVANCE_WIDTH_BIT_NV
    , gl_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
    , gl_OUTPUT_TEXTURE_COORD27_EXT
    , gl_UNSIGNED_INT_SAMPLER_CUBE
    , gl_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
    , gl_DISJOINT_NV
    , gl_DEBUG_CALLBACK_FUNCTION
    , gl_VERTEX_ARRAY_EXT
    , gl_DRAW_BUFFER0
    , gl_ALPHA_SNORM
    , gl_MULTISAMPLE_BUFFER_BIT1_QCOM
    , gl_TRANSPOSE_PROJECTION_MATRIX
    , gl_POST_COLOR_MATRIX_BLUE_BIAS
    , gl_TEXTURE_MULTI_BUFFER_HINT_SGIX
    , gl_PACK_COMPRESSED_SIZE_SGIX
    , gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
    , gl_TANGENT_ARRAY_STRIDE_EXT
    , gl_TEXTURE_LOD_BIAS_EXT
    , gl_UNSIGNED_INT8_VEC3_NV
    , gl_IMAGE_CLASS_4_X_32
    , gl_IMAGE_CLASS_1_X_8
    , gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
    , gl_STENCIL_COMPONENTS
    , gl_TEXTURE_RED_SIZE
    , gl_ACTIVE_VERTEX_UNITS_ARB
    , gl_RGBA32UI_EXT
    , gl_MAP1_VERTEX_ATTRIB15_4_NV
    , gl_DRAW_FRAMEBUFFER_APPLE
    , gl_MAX_TEXTURE_BUFFER_SIZE_ARB
    , gl_MATRIX_INDEX_ARRAY_ARB
    , gl_LUMINANCE6_ALPHA2
    , gl_PROGRAM_NATIVE_INSTRUCTIONS_ARB
    , gl_LINEAR_DETAIL_SGIS
    , gl_INT_SAMPLER_BUFFER_EXT
    , gl_ALLOW_DRAW_FRG_HINT_PGI
    , gl_BOUNDING_BOX_NV
    , gl_CURRENT_TANGENT_EXT
    , gl_HISTOGRAM_FORMAT_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
    , gl_FLOAT_MAT2x4_NV
    , gl_WEIGHT_ARRAY_SIZE_ARB
    , gl_SAMPLER_BUFFER
    , gl_OPERAND1_ALPHA_EXT
    , gl_DYNAMIC_COPY_ARB
    , gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR
    , gl_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
    , gl_NUM_SPARSE_LEVELS_ARB
    , gl_NEAREST_MIPMAP_LINEAR
    , gl_RENDERBUFFER_SAMPLES_NV
    , gl_HALF_APPLE
    , gl_CURRENT_MATRIX_NV
    , gl_INCR
    , gl_TEXTURE_CUBE_MAP
    , gl_RGB32F_ARB
    , gl_SUPERSAMPLE_SCALE_X_NV
    , gl_MAP1_VERTEX_ATTRIB0_4_NV
    , gl_TRANSPOSE_MODELVIEW_MATRIX_ARB
    , gl_FRAMEBUFFER_UNSUPPORTED_EXT
    , gl_DOT4_ATI
    , gl_MAP1_TANGENT_EXT
    , gl_INTERNALFORMAT_STENCIL_SIZE
    , gl_SHADER_IMAGE_STORE
    , gl_TEXTURE15_ARB
    , gl_MAX_SAMPLES_EXT
    , gl_STENCIL_INDEX16
    , gl_SAMPLER_BUFFER_AMD
    , gl_TESS_CONTROL_SUBROUTINE
    , gl_TIMESTAMP
    , gl_RG32I
    , gl_PROXY_TEXTURE_CUBE_MAP_EXT
    , gl_SHADOW_ATTENUATION_EXT
    , gl_ARRAY_OBJECT_OFFSET_ATI
    , gl_PIXEL_MAP_I_TO_R_SIZE
    , gl_NORMAL_ARRAY_LIST_IBM
    , gl_ETC1_SRGB8_NV
    , gl_IMAGE_2D_RECT
    , gl_DRAW_BUFFER5_ATI
    , gl_LO_SCALE_NV
    , gl_OBJECT_SUBTYPE_ARB
    , gl_RENDERBUFFER_DEPTH_SIZE_OES
    , gl_POST_COLOR_MATRIX_BLUE_BIAS_SGI
    , gl_LINE_SMOOTH_HINT
    , gl_PROGRAM_OBJECT_ARB
    , gl_RGBA16
    , gl_PERFMON_RESULT_SIZE_AMD
    , gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
    , gl_NICEST
    , gl_ORDER
    , gl_COLOR_BUFFER_BIT2_QCOM
    , gl_DRAW_BUFFER15
    , gl_MAX_ELEMENT_INDEX
    , gl_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
    , gl_COLOR_ATTACHMENT5
    , gl_CLAMP_VERTEX_COLOR_ARB
    , gl_QUAD_INTENSITY8_SGIS
    , gl_4PASS_0_SGIS
    , gl_PIXEL_SUBSAMPLE_2424_SGIX
    , gl_DIFFERENCE_NV
    , gl_PROGRAM_UNDER_NATIVE_LIMITS_ARB
    , gl_FULL_RANGE_EXT
    , gl_CURRENT_RASTER_DISTANCE
    , gl_MULTISAMPLE_BIT_EXT
    , gl_TEXTURE_MATERIAL_PARAMETER_EXT
    , gl_CLAMP_FRAGMENT_COLOR
    , gl_GREEN_SCALE
    , gl_MAX_FRAGMENT_UNIFORM_VECTORS
    , gl_QUADRATIC_ATTENUATION
    , gl_FEEDBACK
    , gl_MUL_ATI
    , gl_OP_ADD_EXT
    , gl_NO_RESET_NOTIFICATION_EXT
    , gl_FLOAT_32_UNSIGNED_INT_24_8_REV
    , gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
    , gl_REDUCE_EXT
    , gl_UNIFORM_BUFFER_SIZE
    , gl_UNSIGNED_INT_IMAGE_2D_RECT
    , gl_DYNAMIC_DRAW
    , gl_REG_24_ATI
    , gl_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
    , gl_MAX_COLOR_ATTACHMENTS
    , gl_NORMALIZED_RANGE_EXT
    , gl_OPERAND0_RGB
    , gl_NUM_LOOPBACK_COMPONENTS_ATI
    , gl_COLOR_ATTACHMENT4_NV
    , gl_COMPRESSED_RGBA_ASTC_6x6x6_OES
    , gl_BLUE_BIT_ATI
    , gl_CONDITION_SATISFIED
    , gl_PATH_CLIENT_LENGTH_NV
    , gl_TRANSPOSE_PROJECTION_MATRIX_ARB
    , gl_TRANSFORM_FEEDBACK_ACTIVE
    , gl_DOT_PRODUCT_TEXTURE_2D_NV
    , gl_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
    , gl_COLOR_ATTACHMENT15
    , gl_MAX_COMBINED_ATOMIC_COUNTERS
    , gl_DRAW_INDIRECT_ADDRESS_NV
    , gl_PROXY_HISTOGRAM
    , gl_DECR_WRAP
    , gl_OP_FRAC_EXT
    , gl_FLAT
    , gl_SHADER_IMAGE_ACCESS_BARRIER_BIT
    , gl_RGBA4
    , gl_COLOR_ATTACHMENT1_NV
    , gl_SLUMINANCE_NV
    , gl_IUI_N3F_V3F_EXT
    , gl_SCALE_BY_TWO_NV
    , gl_SAMPLE_MASK_INVERT_EXT
    , gl_MAX_DRAW_BUFFERS
    , gl_ATTRIB_ARRAY_TYPE_NV
    , gl_OPERAND0_RGB_EXT
    , gl_CURRENT_INDEX
    , gl_MODELVIEW27_ARB
    , gl_PALETTE4_RGBA4_OES
    , gl_DEBUG_TYPE_ERROR_ARB
    , gl_INT_IMAGE_2D_ARRAY_EXT
    , gl_DRAW_BUFFER7
    , gl_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES
    , gl_TIMEOUT_IGNORED
    , gl_EVAL_VERTEX_ATTRIB5_NV
    , gl_RGBA32I_EXT
    , gl_BLEND_DST_ALPHA_OES
    , gl_GREEN_INTEGER
    , gl_STENCIL_INDEX16_EXT
    , gl_3D_COLOR
    , gl_VERTEX_ATTRIB_ARRAY_TYPE_ARB
    , gl_TEXTURE_GEN_S
    , gl_LAYER_PROVOKING_VERTEX
    , gl_INT_SAMPLER_3D
    , gl_OPERAND1_RGB_EXT
    , gl_COLOR_TABLE_SCALE
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
    , gl_MAX_DRAW_BUFFERS_EXT
    , gl_LUMINANCE_ALPHA_SNORM
    , gl_SAMPLER_1D_ARRAY_SHADOW_EXT
    , gl_PIXEL_BUFFER_BARRIER_BIT
    , gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
    , gl_RENDERBUFFER
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
    , gl_SPARE1_NV
    , gl_RGBA8_EXT
    , gl_RESAMPLE_AVERAGE_OML
    , gl_PIXEL_TEX_GEN_Q_CEILING_SGIX
    , gl_CUBIC_EXT
    , gl_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
    , gl_STANDARD_FONT_NAME_NV
    , gl_CLIP_DISTANCE5
    , gl_SLUMINANCE8_ALPHA8_NV
    , gl_MAP_FLUSH_EXPLICIT_BIT_EXT
    , gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
    , gl_OBJECT_LINEAR_NV
    , gl_RGBA16UI_EXT
    , gl_STATIC_VERTEX_ARRAY_IBM
    , gl_COVERAGE_MODULATION_NV
    , gl_MAP1_VERTEX_ATTRIB6_4_NV
    , gl_SIGNED_RGB_NV
    , gl_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
    , gl_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
    , gl_OUTPUT_TEXTURE_COORD21_EXT
    , gl_HISTOGRAM_LUMINANCE_SIZE_EXT
    , gl_RGB16
    , gl_LINEAR_ATTENUATION
    , gl_PACK_ROW_LENGTH
    , gl_TESS_CONTROL_SHADER
    , gl_TRANSPOSE_COLOR_MATRIX
    , gl_ETC1_RGB8_OES
    , gl_CONVOLUTION_BORDER_MODE
    , gl_FRAGMENT_LIGHT4_SGIX
    , gl_LOGIC_OP_MODE
    , gl_DEBUG_SEVERITY_LOW_ARB
    , gl_EVAL_VERTEX_ATTRIB14_NV
    , gl_TEXTURE19_ARB
    , gl_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
    , gl_CURRENT_VERTEX_ATTRIB_ARB
    , gl_SHADER_CONSISTENT_NV
    , gl_COMBINE
    , gl_OFFSET_PROJECTIVE_TEXTURE_2D_NV
    , gl_DEPTH_CLAMP_NV
    , gl_TRANSFORM_FEEDBACK_BUFFER_EXT
    , gl_BOOL
    , gl_SAMPLER_RENDERBUFFER_NV
    , gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
    , gl_BUFFER_GPU_ADDRESS_NV
    , gl_SPRITE_AXIAL_SGIX
    , gl_SRGB8_NV
    , gl_COLOR_MATRIX_STACK_DEPTH_SGI
    , gl_MAX_FRAMEBUFFER_LAYERS_EXT
    , gl_GEOMETRY_VERTICES_OUT_EXT
    , gl_PATH_DASH_OFFSET_NV
    , gl_MAP1_TEXTURE_COORD_2
    , gl_MAP2_VERTEX_ATTRIB9_4_NV
    , gl_INTERNALFORMAT_PREFERRED
    , gl_ALREADY_SIGNALED
    , gl_TIMEOUT_IGNORED_APPLE
    , gl_HISTOGRAM
    , gl_UNSIGNED_INT_SAMPLER_2D_EXT
    , gl_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
    , gl_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI
    , gl_SRC_OVER_NV
    , gl_DS_SCALE_NV
    , gl_MATRIX19_ARB
    , gl_TEXTURE_VIEW
    , gl_ALPHA8_EXT
    , gl_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES
    , gl_WRITE_ONLY_ARB
    , gl_POINT_SPRITE_OES
    , gl_T
    , gl_STORAGE_SHARED_APPLE
    , gl_NONE_OES
    , gl_DEBUG_SEVERITY_HIGH_ARB
    , gl_OFFSET
    , gl_POINT_SPRITE_COORD_ORIGIN
    , gl_TEXTURE7_ARB
    , gl_PROXY_TEXTURE_RECTANGLE
    , gl_MAP_INVALIDATE_RANGE_BIT
    , gl_DST_IN_NV
    , gl_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    , gl_LOSE_CONTEXT_ON_RESET_EXT
    , gl_RIGHT
    , gl_TRANSLATE_3D_NV
    , gl_DEPTH32F_STENCIL8
    , gl_INTERLACE_SGIX
    , gl_GREEN_INTEGER_EXT
    , gl_MAX_PIXEL_MAP_TABLE
    , gl_OUTPUT_TEXTURE_COORD3_EXT
    , gl_FLOAT_MAT2x4
    , gl_ONE_MINUS_CONSTANT_ALPHA
    , gl_HSL_HUE_NV
    , gl_COLOR_ATTACHMENT14
    , gl_COLOR_LOGIC_OP
    , gl_TEXTURE_TYPE_QCOM
    , gl_COLOR_MATRIX_STACK_DEPTH
    , gl_OFFSET_TEXTURE_RECTANGLE_NV
    , gl_NEAREST_MIPMAP_NEAREST
    , gl_FENCE_STATUS_NV
    , gl_TEXTURE_BINDING_1D_ARRAY
    , gl_MAX_FRAGMENT_LIGHTS_SGIX
    , gl_SRC2_RGB
    , gl_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
    , gl_AUX0
    , gl_FRAGMENT_PROGRAM_ARB
    , gl_INNOCENT_CONTEXT_RESET
    , gl_DEBUG_PRINT_MESA
    , gl_FLOAT_MAT4
    , gl_PIXEL_MAP_A_TO_A
    , gl_SCISSOR_BIT
    , gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
    , gl_SKIP_COMPONENTS4_NV
    , gl_OPERAND2_ALPHA
    , gl_FENCE_APPLE
    , gl_CLIP_DISTANCE2_APPLE
    , gl_INVERT_RGB_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    , gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
    , gl_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT
    , gl_INVERTED_SCREEN_W_REND
    , gl_SIGNALED
    , gl_COLOR_ATTACHMENT6_EXT
    , gl_MAX_FRAGMENT_UNIFORM_BLOCKS
    , gl_DRAW_BUFFER12_NV
    , gl_READ_PIXELS
    , gl_TEXTURE_COMPARE_FUNC_EXT
    , gl_DEBUG_TYPE_PORTABILITY
    , gl_MODELVIEW1_STACK_DEPTH_EXT
    , gl_AVERAGE_EXT
    , gl_CURRENT_TIME_NV
    , gl_ALPHA16
    , gl_MULTISAMPLE_ARB
    , gl_INT_VEC2
    , gl_FRAGMENT_LIGHT5_SGIX
    , gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
    , gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT
    , gl_MAX_MODELVIEW_STACK_DEPTH
    , gl_OBJECT_VALIDATE_STATUS_ARB
    , gl_TEXTURE_BINDING_CUBE_MAP_EXT
    , gl_MAX_CONVOLUTION_WIDTH_EXT
    , gl_LUMINANCE16F_EXT
    , gl_FUNC_SUBTRACT
    , gl_CONSTANT_COLOR
    , gl_MODELVIEW25_ARB
    , gl_ENABLE_BIT
    , gl_FLOAT_VEC4
    , gl_FONT_ASCENDER_BIT_NV
    , gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
    , gl_TEXTURE_WRAP_S
    , gl_STENCIL_BACK_FAIL_ATI
    , gl_FILE_NAME_NV
    , gl_POLYGON_OFFSET_BIAS_EXT
    , gl_DRAW_BUFFER2_EXT
    , gl_DISPATCH_INDIRECT_BUFFER_BINDING
    , gl_IMAGE_CUBE_EXT
    , gl_COMMAND_BARRIER_BIT
    , gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT
    , gl_COLOR_ATTACHMENT6
    , gl_ATTRIB_ARRAY_STRIDE_NV
    , gl_COLOR_INDEX16_EXT
    , gl_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
    , gl_VERTEX_ARRAY_STRIDE_EXT
    , gl_STENCIL_ATTACHMENT
    , gl_EYE_LINEAR_NV
    , gl_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB
    , gl_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB
    , gl_TESS_CONTROL_SHADER_PATCHES_ARB
    , gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    , gl_2PASS_0_EXT
    , gl_TEXTURE2_ARB
    , gl_DISPATCH_INDIRECT_BUFFER
    , gl_REPEAT
    , gl_TEXTURE_3D_BINDING_EXT
    , gl_SIGNED_LUMINANCE_NV
    , gl_REFLECTION_MAP_ARB
    , gl_MAX_COMPUTE_UNIFORM_COMPONENTS
    , gl_DRAW_BUFFER5
    , gl_UNSIGNED_NORMALIZED_EXT
    , gl_INTENSITY8_SNORM
    , gl_LO_BIAS_NV
    , gl_QUERY_RESULT
    , gl_DEBUG_SOURCE_WINDOW_SYSTEM_KHR
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Z
    , gl_INTERPOLATE_EXT
    , gl_IMAGE_BUFFER_EXT
    , gl_COPY_READ_BUFFER_NV
    , gl_BOOL_ARB
    , gl_SAMPLER_BINDING
    , gl_PERFQUERY_DONOT_FLUSH_INTEL
    , gl_UNSIGNED_BYTE_3_3_2
    , gl_STENCIL_BUFFER_BIT7_QCOM
    , gl_EVAL_VERTEX_ATTRIB7_NV
    , gl_INVERT
    , gl_FONT_DESCENDER_BIT_NV
    , gl_ARRAY_BUFFER_BINDING
    , gl_INDEX_ARRAY_LIST_STRIDE_IBM
    , gl_MATRIX6_NV
    , gl_COLOR_EXT
    , gl_BLEND_EQUATION_RGB_OES
    , gl_MIXED_DEPTH_SAMPLES_SUPPORTED_NV
    , gl_STENCIL_BACK_OP_VALUE_AMD
    , gl_TEXTURE_PRIORITY
    , gl_DRAW_BUFFER10_EXT
    , gl_MAX_VERTEX_ATTRIB_BINDINGS
    , gl_TESS_CONTROL_SHADER_BIT_EXT
    , gl_LUMINANCE4
    , gl_SAMPLE_MASK_SGIS
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES
    , gl_CON_22_ATI
    , gl_VERTEX_ARRAY_LENGTH_NV
    , gl_BOOL_VEC2
    , gl_FONT_MAX_ADVANCE_HEIGHT_BIT_NV
    , gl_RGBA_MODE
    , gl_ALPHA16I_EXT
    , gl_COMPRESSED_RG11_EAC
    , gl_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
    , gl_2PASS_1_SGIS
    , gl_UNSIGNED_SHORT_4_4_4_4
    , gl_MAX_ASYNC_READ_PIXELS_SGIX
    , gl_COMPRESSED_SRGB_EXT
    , gl_STORAGE_PRIVATE_APPLE
    , gl_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
    , gl_TEXTURE12
    , gl_RELATIVE_SMALL_CCW_ARC_TO_NV
    , gl_TEXTURE_DEPTH_EXT
    , gl_MAX_ELEMENTS_VERTICES
    , gl_COLOR_BUFFER_BIT
    , gl_VERTEX_SHADER_INVARIANTS_EXT
    , gl_BLEND_COLOR
    , gl_REPLICATE_BORDER
    , gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT
    , gl_MAX_COLOR_ATTACHMENTS_NV
    , gl_INT_SAMPLER_2D_MULTISAMPLE
    , gl_FILL
    , gl_TEXTURE_IMMUTABLE_FORMAT
    , gl_ALPHA8
    , gl_INSTRUMENT_BUFFER_POINTER_SGIX
    , gl_LINE_BIT
    , gl_INT_SAMPLER_2D_ARRAY_EXT
    , gl_COMBINER2_NV
    , gl_SLUMINANCE8_ALPHA8
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
    , gl_VERTEX_PROGRAM_POSITION_MESA
    , gl_PATH_END_CAPS_NV
    , gl_UNPACK_IMAGE_HEIGHT_EXT
    , gl_ALIASED_POINT_SIZE_RANGE
    , gl_DEPTH_CLEAR_VALUE
    , gl_DEPTH_TEST
    , gl_SPRITE_TRANSLATION_SGIX
    , gl_SYNC_CL_EVENT_ARB
    , gl_GUILTY_CONTEXT_RESET_ARB
    , gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
    , gl_T2F_V3F
    , gl_POST_COLOR_MATRIX_BLUE_SCALE
    , gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
    , gl_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
    , gl_POLYGON_OFFSET_FILL
    , gl_BOOL_VEC2_ARB
    , gl_R8I
    , gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
    , gl_FILTER
    , gl_ACTIVE_TEXTURE_ARB
    , gl_INVALID_INDEX
    , gl_RENDERBUFFER_WIDTH_OES
    , gl_VIEW_CLASS_RGTC1_RED
    , gl_SAMPLER_2D_ARRAY_SHADOW
    , gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
    , gl_UNSIGNED_INT_VEC3_EXT
    , gl_PROXY_TEXTURE_2D_ARRAY
    , gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT
    , gl_TEXTURE_VIEW_NUM_LAYERS
    , gl_ARRAY_ELEMENT_LOCK_FIRST_EXT
    , gl_LINEAR_DETAIL_ALPHA_SGIS
    , gl_CURRENT_MATRIX_INDEX_ARB
    , gl_4PASS_0_EXT
    , gl_DEBUG_TYPE_PUSH_GROUP_KHR
    , gl_MAX_SPARSE_TEXTURE_SIZE_ARB
    , gl_POINT_SIZE_MAX
    , gl_MAP1_VERTEX_ATTRIB5_4_NV
    , gl_TEXTURE_MAX_CLAMP_R_SGIX
    , gl_TEXTURE_HEIGHT_QCOM
    , gl_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
    , gl_VERTEX_PROGRAM_CALLBACK_FUNC_MESA
    , gl_NAMED_STRING_TYPE_ARB
    , gl_FLOAT16_VEC3_NV
    , gl_SPOT_DIRECTION
    , gl_INT_VEC2_ARB
    , gl_SRGB_EXT
    , gl_DEBUG_SEVERITY_HIGH
    , gl_PALETTE4_R5_G6_B5_OES
    , gl_TRANSFORM_FEEDBACK_VARYINGS
    , gl_MIN_LOD_WARNING_AMD
    , gl_EQUAL
    , gl_SRC_OUT_NV
    , gl_DRAW_BUFFER0_EXT
    , gl_COMBINER_CD_DOT_PRODUCT_NV
    , gl_MAX_RECTANGLE_TEXTURE_SIZE_NV
    , gl_RGBA_FLOAT_MODE_ATI
    , gl_LAYOUT_LINEAR_INTEL
    , gl_TEXTURE1_ARB
    , gl_3DC_XY_AMD
    , gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
    , gl_FLOAT_MAT4x2_NV
    , gl_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
    , gl_TEXTURE26_ARB
    , gl_SCREEN_NV
    , gl_SAMPLER_3D
    , gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
    , gl_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
    , gl_3_BYTES
    , gl_TEXTURE_RESIDENT
    , gl_TEXTURE_BUFFER_BINDING_EXT
    , gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
    , gl_DRAW_BUFFER13
    , gl_VARIANT_EXT
    , gl_OBJECT_LINK_STATUS_ARB
    , gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
    , gl_COLOR_MATERIAL_PARAMETER
    , gl_INTENSITY16UI_EXT
    , gl_WRITE_PIXEL_DATA_RANGE_NV
    , gl_ALPHA16F_ARB
    , gl_OFFSET_TEXTURE_MATRIX_NV
    , gl_STREAM_READ_ARB
    , gl_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
    , gl_INCR_WRAP_EXT
    , gl_TEXTURE_INTENSITY_SIZE_EXT
    , gl_MAX_CONVOLUTION_WIDTH
    , gl_SINGLE_COLOR_EXT
    , gl_PASS_THROUGH_NV
    , gl_VERTEX_ATTRIB_ARRAY12_NV
    , gl_MAX_TEXTURE_STACK_DEPTH
    , gl_SOURCE0_ALPHA
    , gl_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    , gl_READ_FRAMEBUFFER_BINDING_NV
    , gl_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
    , gl_TEXTURE_CUBE_MAP_OES
    , gl_POINT_SPRITE_R_MODE_NV
    , gl_IS_PER_PATCH_EXT
    , gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
    , gl_TEXTURE23_ARB
    , gl_NUM_ACTIVE_VARIABLES
    , gl_COLOR_ATTACHMENT4_EXT
    , gl_SRGB
    , gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    , gl_STENCIL_INDEX_OES
    , gl_QUERY_STENCIL_FAIL_EVENT_BIT_AMD
    , gl_FLOAT_MAT2_ARB
    , gl_FRAMEBUFFER_DEFAULT_HEIGHT
    , gl_MAX_DRAW_BUFFERS_ATI
    , gl_QUERY_WAIT_INVERTED
    , gl_PROXY_TEXTURE_3D_EXT
    , gl_MAX_GEOMETRY_IMAGE_UNIFORMS
    , gl_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
    , gl_Z_EXT
    , gl_TEXTURE_INTENSITY_TYPE
    , gl_MODELVIEW29_ARB
    , gl_MAX_GEOMETRY_OUTPUT_VERTICES
    , gl_PROGRAM_ATTRIBS_ARB
    , gl_MULTISAMPLE_BUFFER_BIT2_QCOM
    , gl_PROGRAM_SEPARABLE_EXT
    , gl_CLEAR_TEXTURE
    , gl_PURGEABLE_APPLE
    , gl_ACTIVE_RESOURCES
    , gl_AMBIENT
    , gl_COLOR_ATTACHMENT7
    , gl_MAX_RENDERBUFFER_SIZE_EXT
    , gl_OCCLUSION_QUERY_EVENT_MASK_AMD
    , gl_R32I
    , gl_UNSIGNED_INT64_NV
    , gl_ACCUM_BLUE_BITS
    , gl_SYNC_OBJECT_APPLE
    , gl_RGBA_SIGNED_COMPONENTS_EXT
    , gl_LINE_STRIP
    , gl_DEBUG_LOGGED_MESSAGES_KHR
    , gl_ROUND_NV
    , gl_CLIP_DISTANCE5_APPLE
    , gl_TEXTURE_FORMAT_QCOM
    , gl_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
    , gl_TESSELLATION_MODE_AMD
    , gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
    , gl_ATTRIB_ARRAY_SIZE_NV
    , gl_PIXEL_UNPACK_BUFFER_EXT
    , gl_UNSIGNED_INT_IMAGE_1D_EXT
    , gl_FUNC_ADD_EXT
    , gl_TEXTURE_GATHER_SHADOW
    , gl_UNSIGNED_INT_5_9_9_9_REV_EXT
    , gl_TEXTURE_WRAP_R_EXT
    , gl_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
    , gl_TEXTURE_BINDING_1D_ARRAY_EXT
    , gl_COLOR_ATTACHMENT12
    , gl_TEXTURE_CLIPMAP_DEPTH_SGIX
    , gl_TIMEOUT_EXPIRED_APPLE
    , gl_DRAW_BUFFER9_ATI
    , gl_PIXEL_TEXTURE_SGIS
    , gl_TESS_EVALUATION_SUBROUTINE
    , gl_TEXTURE_STORAGE_SPARSE_BIT_AMD
    , gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT
    , gl_COMPRESSED_LUMINANCE_ALPHA_ARB
    , gl_EDGEFLAG_BIT_PGI
    , gl_OR
    , gl_TEXTURE_4D_BINDING_SGIS
    , gl_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
    , gl_STENCIL_BACK_PASS_DEPTH_FAIL
    , gl_MAX_PROGRAM_SUBROUTINE_NUM_NV
    , gl_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
    , gl_BUMP_ENVMAP_ATI
    , gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
    , gl_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
    , gl_SOURCE0_RGB_ARB
    , gl_FOG_INDEX
    , gl_OPERAND1_RGB_ARB
    , gl_MATRIX_INDEX_ARRAY_SIZE_OES
    , gl_DRAW_BUFFER15_ARB
    , gl_INT_10_10_10_2_OES
    , gl_NORMAL_MAP_ARB
    , gl_FLOAT_MAT3x4_NV
    , gl_YCRCB_444_SGIX
    , gl_STENCIL_PASS_DEPTH_FAIL
    , gl_RENDERBUFFER_SAMPLES_EXT
    , gl_REG_29_ATI
    , gl_COLOR_SUM_ARB
    , gl_COVERAGE_SAMPLES_NV
    , gl_QUAD_ALPHA4_SGIS
    , gl_TEXTURE9
    , gl_FRAME_NV
    , gl_SYNC_FENCE
    , gl_TEXTURE_COMPRESSED_BLOCK_SIZE
    , gl_PROGRAM_STRING_ARB
    , gl_T2F_N3F_V3F
    , gl_MODELVIEW0_STACK_DEPTH_EXT
    , gl_INDEX_WRITEMASK
    , gl_INDEX_ARRAY
    , gl_LOCAL_CONSTANT_VALUE_EXT
    , gl_CURRENT_PALETTE_MATRIX_ARB
    , gl_1PASS_EXT
    , gl_MAX_PROGRAM_TEMPORARIES_ARB
    , gl_TEXTURE_PRIORITY_EXT
    , gl_SCALE_BY_FOUR_NV
    , gl_TEXTURE_BINDING_EXTERNAL_OES
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
    , gl_LUMINANCE_ALPHA_FLOAT16_APPLE
    , gl_RENDERBUFFER_HEIGHT_EXT
    , gl_SIGNED_RGBA8_NV
    , gl_MATRIX_INDEX_ARRAY_POINTER_OES
    , gl_VIEW_CLASS_24_BITS
    , gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
    , gl_GEOMETRY_INPUT_TYPE
    , gl_POINT_SIZE_MAX_ARB
    , gl_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV
    , gl_CLIP_PLANE4
    , gl_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
    , gl_PIXEL_GROUP_COLOR_SGIS
    , gl_DRAW_BUFFER5_NV
    , gl_MAP2_VERTEX_ATTRIB0_4_NV
    , gl_SRGB8_EXT
    , gl_MAX_SAMPLES_IMG
    , gl_PIXEL_MAP_I_TO_I
    , gl_TEXTURE_SWIZZLE_A
    , gl_ACTIVE_PROGRAM_EXT
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
    , gl_INT64_VEC3_NV
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
    , gl_POINTS
    , gl_PRIMITIVES_GENERATED_EXT
    , gl_RGBA16I_EXT
    , gl_PROGRAM_OUTPUT
    , gl_BLEND_EQUATION
    , gl_SAMPLE_ALPHA_TO_ONE_EXT
    , gl_UNSIGNED_SHORT_1_15_REV_MESA
    , gl_QUERY_DEPTH_PASS_EVENT_BIT_AMD
    , gl_E_TIMES_F_NV
    , gl_SOURCE2_ALPHA_EXT
    , gl_RGB_SNORM
    , gl_MAX_PROGRAM_INSTRUCTIONS_ARB
    , gl_PACK_CMYK_HINT_EXT
    , gl_RENDERBUFFER_SAMPLES_IMG
    , gl_IMAGE_SCALE_X_HP
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
    , gl_SHADER_STORAGE_BUFFER_SIZE
    , gl_UNIFORM_NAME_LENGTH
    , gl_DYNAMIC_ATI
    , gl_FORMAT_SUBSAMPLE_24_24_OML
    , gl_UNSIGNED_INT
    , gl_LAYOUT_DEFAULT_INTEL
    , gl_REG_12_ATI
    , gl_QUAD_STRIP
    , gl_COLOR_SUM
    , gl_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
    , gl_TEXTURE_GEN_Q
    , gl_UNPACK_COMPRESSED_BLOCK_DEPTH
    , gl_TEXTURE_VIEW_MIN_LEVEL
    , gl_STATIC_DRAW_ARB
    , gl_DEPTH_ATTACHMENT
    , gl_INVALID_FRAMEBUFFER_OPERATION
    , gl_MODELVIEW7_ARB
    , gl_TEXTURE_SWIZZLE_G
    , gl_REG_22_ATI
    , gl_VERTEX_PRECLIP_SGIX
    , gl_POINT_TOKEN
    , gl_SECONDARY_COLOR_ARRAY_LIST_IBM
    , gl_CON_9_ATI
    , gl_MODELVIEW31_ARB
    , gl_PACK_SKIP_PIXELS
    , gl_FOG_COORDINATE_EXT
    , gl_R16I
    , gl_MULTIPLY_NV
    , gl_VERTEX_ARRAY_RANGE_NV
    , gl_TEXTURE_STORAGE_HINT_APPLE
    , gl_PATH_DASH_CAPS_NV
    , gl_PROGRAM_LENGTH_ARB
    , gl_STENCIL_BUFFER_BIT1_QCOM
    , gl_RGB_FLOAT16_APPLE
    , gl_ELEMENT_ARRAY_TYPE_ATI
    , gl_PATH_OBJECT_BOUNDING_BOX_NV
    , gl_MAX_COMPUTE_UNIFORM_BLOCKS
    , gl_MAP1_VERTEX_3
    , gl_GEOMETRY_VERTICES_OUT
    , gl_PIXEL_MAP_G_TO_G
    , gl_MAX_IMAGE_UNITS_EXT
    , gl_CLAMP_READ_COLOR_ARB
    , gl_UNSIGNED_INT_IMAGE_CUBE
    , gl_TRANSFORM_HINT_APPLE
    , gl_TRACE_ARRAYS_BIT_MESA
    , gl_MAP_FLUSH_EXPLICIT_BIT
    , gl_IMAGE_CUBE
    , gl_MINMAX_SINK
    , gl_VERTEX_ATTRIB_MAP1_APPLE
    , gl_TABLE_TOO_LARGE_EXT
    , gl_POST_CONVOLUTION_GREEN_BIAS
    , gl_POST_COLOR_MATRIX_RED_SCALE_SGI
    , gl_SOFTLIGHT_NV
    , gl_MAP2_VERTEX_ATTRIB5_4_NV
    , gl_RENDERBUFFER_STENCIL_SIZE_OES
    , gl_QUERY_NO_WAIT
    , gl_VERTEX_SHADER_INSTRUCTIONS_EXT
    , gl_UNSIGNED_BYTE_3_3_2_EXT
    , gl_MAX_TEXTURE_LOD_BIAS
    , gl_RGB_S3TC
    , gl_COLOR_ARRAY_LIST_IBM
    , gl_TEXTURE31
    , gl_BITMAP
    , gl_VERTEX_ARRAY_SIZE
    , gl_PATH_GEN_COEFF_NV
    , gl_UNPACK_ROW_LENGTH
    , gl_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
    , gl_BUFFER_MAP_POINTER
    , gl_2PASS_0_SGIS
    , gl_TEXTURE9_ARB
    , gl_ELEMENT_ARRAY_BUFFER_BINDING
    , gl_VERTEX_ATTRIB_ARRAY_INTEGER_NV
    , gl_CURRENT_RASTER_INDEX
    , gl_TEXTURE12_ARB
    , gl_BGRA_INTEGER_EXT
    , gl_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
    , gl_DOUBLE_MAT4x3_EXT
    , gl_FOG_START
    , gl_TEXTURE_1D_ARRAY
    , gl_SIGNED_ALPHA8_NV
    , gl_DIFFERENCE_KHR
    , gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
    , gl_VIDEO_BUFFER_NV
    , gl_BUFFER_MAPPED_OES
    , gl_TEXTURE_COMPARE_OPERATOR_SGIX
    , gl_VERTEX_WEIGHT_ARRAY_TYPE_EXT
    , gl_OUTPUT_TEXTURE_COORD9_EXT
    , gl_FRAGMENT_COVERAGE_TO_COLOR_NV
    , gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
    , gl_MAX_DRAW_BUFFERS_ARB
    , gl_DOT3_ATI
    , gl_TEXTURE_LOD_BIAS_T_SGIX
    , gl_BINORMAL_ARRAY_EXT
    , gl_UNSIGNED_INT_10F_11F_11F_REV_EXT
    , gl_SAMPLE_PATTERN_SGIS
    , gl_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
    , gl_PHONG_HINT_WIN
    , gl_MAX_LABEL_LENGTH
    , gl_TEXTURE_CLIPMAP_OFFSET_SGIX
    , gl_ALPHA_MIN_CLAMP_INGR
    , gl_LAYER_PROVOKING_VERTEX_EXT
    , gl_DEBUG_GROUP_STACK_DEPTH_KHR
    , gl_DEBUG_SOURCE_API_ARB
    , gl_HI_BIAS_NV
    , gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    , gl_TEXTURE_TARGET_QCOM
    , gl_MODELVIEW20_ARB
    , gl_TEXTURE22
    , gl_DRAW_BUFFER10_ARB
    , gl_DARKEN_NV
    , gl_BUFFER_USAGE_ARB
    , gl_RGB16F_EXT
    , gl_SYNC_STATUS_APPLE
    , gl_ALPHA32F_ARB
    , gl_CONST_EYE_NV
    , gl_OBJECT_LINEAR
    , gl_TRUE
    , gl_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
    , gl_TEXTURE_MIN_FILTER
    , gl_TEXTURE_COMPRESSED_BLOCK_WIDTH
    , gl_SWIZZLE_STR_ATI
    , gl_TEXTURE7
    , gl_MATRIX29_ARB
    , gl_FRAMEBUFFER_DEFAULT_LAYERS_EXT
    , gl_REPLACE
    , gl_COMBINE_RGB_ARB
    , gl_GREEN_BITS
    , gl_LUMINANCE16UI_EXT
    , gl_TEXTURE14_ARB
    , gl_INT_SAMPLER_1D
    , gl_MAX_ACTIVE_LIGHTS_SGIX
    , gl_COMBINE_ALPHA_ARB
    , gl_VERTEX_SHADER_LOCALS_EXT
    , gl_POLYGON_SMOOTH
    , gl_PERFQUERY_COUNTER_EVENT_INTEL
    , gl_EVAL_VERTEX_ATTRIB6_NV
    , gl_VIEWPORT
    , gl_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
    , gl_BUFFER_STORAGE_FLAGS
    , gl_COMPRESSED_RED
    , gl_INDEX_ARRAY_EXT
    , gl_COLOR_TABLE_SCALE_SGI
    , gl_MAX_VARYING_FLOATS_ARB
    , gl_COMPRESSED_RED_GREEN_RGTC2_EXT
    , gl_DRAW_BUFFER4_ATI
    , gl_QUERY_BY_REGION_NO_WAIT
    , gl_SAMPLE_BUFFERS_EXT
    , gl_MODELVIEW
    , gl_IMAGE_FORMAT_COMPATIBILITY_TYPE
    , gl_SAMPLER_2D_MULTISAMPLE
    , gl_LOGIC_OP
    , gl_MAX_ARRAY_TEXTURE_LAYERS_EXT
    , gl_COMBINE4_NV
    , gl_DEBUG_CALLBACK_FUNCTION_ARB
    , gl_SYNC_STATUS
    , gl_CLIP_DISTANCE1_APPLE
    , gl_MAX_SAMPLE_MASK_WORDS_NV
    , gl_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    , gl_SOURCE1_ALPHA_ARB
    , gl_CUBIC_CURVE_TO_NV
    , gl_GEOMETRY_PROGRAM_NV
    , gl_UNSIGNED_INT_8_8_S8_S8_REV_NV
    , gl_COMPRESSED_R11_EAC_OES
    , gl_TESS_EVALUATION_SHADER_BIT
    , gl_ALL_ATTRIB_BITS
    , gl_DOUBLE_MAT3x2
    , gl_PIXEL_MAP_I_TO_A
    , gl_INDEX_ARRAY_BUFFER_BINDING
    , gl_PROGRAM_MATRIX_EXT
    , gl_INT_IMAGE_2D_EXT
    , gl_RENDERBUFFER_DEPTH_SIZE
    , gl_QUERY_COUNTER_BITS_ARB
    , gl_HISTOGRAM_RED_SIZE_EXT
    , gl_FOG_BIT
    , gl_TRANSPOSE_PROGRAM_MATRIX_EXT
    , gl_ADD_SIGNED_ARB
    , gl_STENCIL_FUNC
    , gl_TEXTURE21_ARB
    , gl_MAX_3D_TEXTURE_SIZE
    , gl_NORMAL_ARRAY_TYPE_EXT
    , gl_MINMAX_FORMAT_EXT
    , gl_FRAMEBUFFER_BINDING_ANGLE
    , gl_ASYNC_TEX_IMAGE_SGIX
    , gl_TRANSFORM_FEEDBACK_VARYINGS_EXT
    , gl_OBJECT_BUFFER_SIZE_ATI
    , gl_RENDERBUFFER_RED_SIZE_OES
    , gl_PERFQUERY_COUNTER_DURATION_NORM_INTEL
    , gl_VERTEX_ID_SWIZZLE_AMD
    , gl_MATRIX22_ARB
    , gl_DYNAMIC_COPY
    , gl_BLUE_BIAS
    , gl_CON_20_ATI
    , gl_RGBA_S3TC
    , gl_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    , gl_DEBUG_CATEGORY_APPLICATION_AMD
    , gl_FRAGMENT_SHADER_INVOCATIONS_ARB
    , gl_2D
    , gl_SIGNALED_APPLE
    , gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT
    , gl_DEPTH_STENCIL_OES
    , gl_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    , gl_VARIABLE_B_NV
    , gl_SOURCE2_RGB_ARB
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
    , gl_VERTEX_PROGRAM_POINT_SIZE
    , gl_RESTART_SUN
    , gl_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
    , gl_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
    , gl_FRAMEBUFFER_BARRIER_BIT_EXT
    , gl_R32F_EXT
    , gl_COLOR_ATTACHMENT5_EXT
    , gl_STENCIL_TEST_TWO_SIDE_EXT
    , gl_OPERAND2_ALPHA_EXT
    , gl_EDGE_FLAG_ARRAY_STRIDE_EXT
    , gl_CONJOINT_NV
    , gl_VERTEX_ATTRIB_MAP2_COEFF_APPLE
    , gl_POINT_FADE_THRESHOLD_SIZE_ARB
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
    , gl_NEGATIVE_Z_EXT
    , gl_DST_OUT_NV
    , gl_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
    , gl_MAX_FRAGMENT_INTERPOLATION_OFFSET
    , gl_HILO16_NV
    , gl_READ_FRAMEBUFFER_BINDING_EXT
    , gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES
    , gl_UNSIGNED_INT_IMAGE_2D_EXT
    , gl_REFERENCED_BY_TESS_CONTROL_SHADER
    , gl_RGB10_A2_EXT
    , gl_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
    , gl_REQUIRED_TEXTURE_IMAGE_UNITS_OES
    , gl_CLAMP_TO_BORDER
    , gl_SPRITE_MODE_SGIX
    , gl_CLOSE_PATH_NV
    , gl_RGB_FLOAT32_APPLE
    , gl_FUNC_SUBTRACT_OES
    , gl_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
    , gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR
    , gl_OUTPUT_COLOR0_EXT
    , gl_FALSE
    , gl_STENCIL_SAMPLES_NV
    , gl_TRACK_MATRIX_NV
    , gl_RELEASED_APPLE
    , gl_DOUBLE_MAT2x4
    , gl_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
    , gl_EDGE_FLAG_ARRAY_LENGTH_NV
    , gl_DRAW_BUFFER14
    , gl_VERTEX_ARRAY_BUFFER_BINDING
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
    , gl_CONSERVE_MEMORY_HINT_PGI
    , gl_INCR_WRAP
    , gl_PROGRAM_PIPELINE
    , gl_DISCARD_ATI
    , gl_RG8_SNORM
    , gl_MAP2_TEXTURE_COORD_2
    , gl_QUERY_BUFFER_BINDING_AMD
    , gl_SHARED_TEXTURE_PALETTE_EXT
    , gl_MAP2_VERTEX_ATTRIB13_4_NV
    , gl_DRAW_BUFFER13_ARB
    , gl_SPECULAR
    , gl_LINE
    , gl_INT64_VEC4_NV
    , gl_TESS_GEN_VERTEX_ORDER
    , gl_TEXTURE_CUBE_MAP_EXT
    , gl_DEPTH_BUFFER_BIT2_QCOM
    , gl_ANY_SAMPLES_PASSED_CONSERVATIVE
    , gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
    , gl_DYNAMIC_STORAGE_BIT
    , gl_PN_TRIANGLES_NORMAL_MODE_ATI
    , gl_VARIABLE_E_NV
    , gl_PIXEL_MAP_I_TO_G_SIZE
    , gl_TEXTURE_GEN_STR_OES
    , gl_UNSIGNED_SHORT_5_6_5_REV
    , gl_TEXTURE_CUBE_MAP_ARRAY
    , gl_YCBCR_422_APPLE
    , gl_TEXTURE_BASE_LEVEL_SGIS
    , gl_INDEX_ARRAY_POINTER
    , gl_UNSIGNALED_APPLE
    , gl_DEBUG_TYPE_OTHER_ARB
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
    , gl_EXP
    , gl_TESSELLATION_FACTOR_AMD
    , gl_TEXTURE_DEFORMATION_SGIX
    , gl_BGR_INTEGER_EXT
    , gl_POLYGON_STIPPLE
    , gl_BLEND_DST_RGB_OES
    , gl_VERTEX_STREAM4_ATI
    , gl_TEXTURE_BLUE_TYPE
    , gl_VERTEX_PROGRAM_NV
    , gl_COLOR_ATTACHMENT9_EXT
    , gl_IMAGE_2D_RECT_EXT
    , gl_INTERLACE_OML
    , gl_CON_29_ATI
    , gl_NUM_PASSES_ATI
    , gl_UNSIGNED_IDENTITY_NV
    , gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT
    , gl_BLUE_INTEGER_EXT
    , gl_MATRIX11_ARB
    , gl_NUM_COMPATIBLE_SUBROUTINES
    , gl_LIGHT_MODEL_COLOR_CONTROL_EXT
    , gl_VERTEX_ATTRIB_ARRAY_NORMALIZED
    , gl_HIGH_INT
    , gl_FRAGMENT_SHADER_ATI
    , gl_BUFFER_MAP_LENGTH
    , gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT
    , gl_ACTIVE_VARYINGS_NV
    , gl_UNIFORM_BARRIER_BIT_EXT
    , gl_FRAGMENT_PROGRAM_POSITION_MESA
    , gl_TEXTURE18_ARB
    , gl_SYNC_FLAGS
    , gl_COMPRESSED_RGBA
    , gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS
    , gl_FENCE_CONDITION_NV
    , gl_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA
    , gl_UNPACK_FLIP_Y_WEBGL
    , gl_422_REV_EXT
    , gl_PIXEL_UNPACK_BUFFER_ARB
    , gl_FONT_UNITS_PER_EM_BIT_NV
    , gl_PLUS_DARKER_NV
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
    , gl_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
    , gl_MULTISAMPLE_SGIS
    , gl_MIXED_STENCIL_SAMPLES_SUPPORTED_NV
    , gl_DRAW_BUFFER14_ATI
    , gl_COLOR_TABLE_LUMINANCE_SIZE_SGI
    , gl_CURRENT_MATRIX_ARB
    , gl_TEXTURE_SWIZZLE_R
    , gl_FRAGMENT_SHADER_ARB
    , gl_PIXEL_TEX_GEN_ALPHA_LS_SGIX
    , gl_PROGRAM_BINARY_RETRIEVABLE_HINT
    , gl_MAX_UNIFORM_BUFFER_BINDINGS
    , gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
    , gl_MAX_PROGRAM_GENERIC_RESULTS_NV
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
    , gl_RGB10_A2UI
    , gl_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES
    , gl_STATIC_ATI
    , gl_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
    , gl_SLIM8U_SGIX
    , gl_CONVOLUTION_HINT_SGIX
    , gl_REG_8_ATI
    , gl_INT_IMAGE_3D_EXT
    , gl_MAX_EVAL_ORDER
    , gl_3_BYTES_NV
    , gl_R11F_G11F_B10F
    , gl_YCRCB_SGIX
    , gl_R8UI
    , gl_CURRENT_VERTEX_WEIGHT_EXT
    , gl_HISTOGRAM_ALPHA_SIZE
    , gl_CLIP_PLANE0_IMG
    , gl_MODELVIEW16_ARB
    , gl_REFERENCED_BY_TESS_EVALUATION_SHADER
    , gl_RENDERBUFFER_DEPTH_SIZE_EXT
    , gl_COMPRESSED_RGBA_ASTC_8x5_KHR
    , gl_MAX_RENDERBUFFER_SIZE_OES
    , gl_OFFSET_HILO_TEXTURE_RECTANGLE_NV
    , gl_INSTRUMENT_MEASUREMENTS_SGIX
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    , gl_IMAGE_BINDING_NAME
    , gl_EXPAND_NORMAL_NV
    , gl_SIGNED_IDENTITY_NV
    , gl_GEOMETRY_SHADER_INVOCATIONS
    , gl_COVERAGE_ALL_FRAGMENTS_NV
    , gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
    , gl_LOW_FLOAT
    , gl_MAX_VERTEX_OUTPUT_COMPONENTS
    , gl_CURRENT_RASTER_POSITION
    , gl_MODELVIEW0_MATRIX_EXT
    , gl_RG32UI
    , gl_VERTEX_ATTRIB_ARRAY_LENGTH_NV
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Y_OES
    , gl_INTENSITY_EXT
    , gl_VARIANT_ARRAY_EXT
    , gl_COMPRESSED_RGBA_ASTC_8x6_KHR
    , gl_GREEN_NV
    , gl_DYNAMIC_DRAW_ARB
    , gl_WEIGHT_ARRAY_SIZE_OES
    , gl_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
    , gl_IMAGE_ROTATE_ANGLE_HP
    , gl_COLOR_ARRAY_STRIDE
    , gl_VERTEX_ARRAY_RANGE_VALID_NV
    , gl_TEXTURE27
    , gl_COMPRESSED_RGBA_ASTC_4x4_KHR
    , gl_MAP1_VERTEX_ATTRIB7_4_NV
    , gl_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
    , gl_COLOR_TABLE
    , gl_LUMINANCE32I_EXT
    , gl_INTERNALFORMAT_RED_SIZE
    , gl_RASTERIZER_DISCARD_NV
    , gl_MAX_TEXTURE_UNITS
    , gl_DUAL_INTENSITY8_SGIS
    , gl_RELATIVE_RECT_NV
    , gl_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
    , gl_SAMPLES
    , gl_CURRENT_RASTER_SECONDARY_COLOR
    , gl_RGB8
    , gl_FACTOR_MIN_AMD
    , gl_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
    , gl_NORMAL_MAP_OES
    , gl_PATH_STROKE_BOUNDING_BOX_NV
    , gl_COMPRESSED_SIGNED_RG11_EAC
    , gl_LUMINANCE_ALPHA16UI_EXT
    , gl_MAX_GENERAL_COMBINERS_NV
    , gl_LEQUAL
    , gl_MAP2_VERTEX_ATTRIB10_4_NV
    , gl_MAX_VARYING_VECTORS
    , gl_GEOMETRY_SHADER_EXT
    , gl_IMAGE_BINDING_LAYER_EXT
    , gl_DEPTH_STENCIL_EXT
    , gl_PALETTE8_RGBA4_OES
    , gl_MAX_COLOR_TEXTURE_SAMPLES
    , gl_MAP_PERSISTENT_BIT
    , gl_ATC_RGB_AMD
    , gl_FOG_COORD_ARRAY_LENGTH_NV
    , gl_MAX_TRACK_MATRICES_NV
    , gl_INVALID_FRAMEBUFFER_OPERATION_EXT
    , gl_COMPRESSED_SRGB_S3TC_DXT1_EXT
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
    , gl_COLOR_INDEX8_EXT
    , gl_RED_MAX_CLAMP_INGR
    , gl_TEXTURE_DEPTH_SIZE
    , gl_DEPENDENT_AR_TEXTURE_2D_NV
    , gl_OPERAND2_RGB_EXT
    , gl_BOOL_VEC4
    , gl_LAYER_NV
    , gl_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
    , gl_MAX_FRAGMENT_IMAGE_UNIFORMS
    , gl_DETAIL_TEXTURE_FUNC_POINTS_SGIS
    , gl_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB
    , gl_UNCORRELATED_NV
    , gl_MAX_MAP_TESSELLATION_NV
    , gl_POINT_SMOOTH_HINT
    , gl_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
    , gl_FRAMEBUFFER_DEFAULT_WIDTH
    , gl_UNSIGNED_INT16_VEC2_NV
    , gl_MIN
    , gl_PROXY_COLOR_TABLE_SGI
    , gl_DEPTH_COMPONENT16
    , gl_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
    , gl_VERTEX_ATTRIB_ARRAY_POINTER
    , gl_DEBUG_TYPE_ERROR
    , gl_EVAL_VERTEX_ATTRIB0_NV
    , gl_DEPTH_STENCIL_TO_RGBA_NV
    , gl_MAP1_GRID_SEGMENTS
    , gl_TIME_ELAPSED_EXT
    , gl_ADD_ATI
    , gl_DEPTH_STENCIL
    , gl_SYSTEM_FONT_NAME_NV
    , gl_CURRENT_RASTER_NORMAL_SGIX
    , gl_SWIZZLE_STRQ_DQ_ATI
    , gl_EXCLUSION_NV
    , gl_COLOR_ARRAY_BUFFER_BINDING_ARB
    , gl_STENCIL_BITS
    , gl_COMPRESSED_ALPHA
    , gl_DEBUG_OUTPUT_SYNCHRONOUS
    , gl_PROGRAM_BINDING_ARB
    , gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
    , gl_CLIENT_ACTIVE_TEXTURE
    , gl_OP_SET_GE_EXT
    , gl_INTENSITY_FLOAT32_APPLE
    , gl_RGB_FLOAT16_ATI
    , gl_COLOR_ATTACHMENT1
    , gl_MAX_TESS_PATCH_COMPONENTS
    , gl_GREEN_MIN_CLAMP_INGR
    , gl_ELEMENT_ARRAY_ADDRESS_NV
    , gl_SHORT
    , gl_FRAMEBUFFER_COMPLETE_OES
    , gl_READ_FRAMEBUFFER_ANGLE
    , gl_INT_IMAGE_CUBE
    , gl_PIXEL_MAP_G_TO_G_SIZE
    , gl_SIGNED_HILO16_NV
    , gl_REPLACE_VALUE_AMD
    , gl_FRAGMENT_LIGHTING_SGIX
    , gl_CONTEXT_RELEASE_BEHAVIOR_KHR
    , gl_VERTICES_SUBMITTED_ARB
    , gl_VERTEX_STREAM1_ATI
    , gl_DEPTH_PASS_INSTRUMENT_MAX_SGIX
    , gl_OP_FLOOR_EXT
    , gl_TESS_CONTROL_SHADER_BIT
    , gl_TEXTURE_4D_SGIS
    , gl_VERTEX_ARRAY_POINTER
    , gl_ACTIVE_SUBROUTINE_MAX_LENGTH
    , gl_COLOR_TABLE_FORMAT
    , gl_FOG_SPECULAR_TEXTURE_WIN
    , gl_FILL_RECTANGLE_NV
    , gl_RED_SCALE
    , gl_SHADER_OPERATION_NV
    , gl_XOR
    , gl_LUMINANCE_ALPHA32F_ARB
    , gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
    , gl_BINNING_CONTROL_HINT_QCOM
    , gl_UNKNOWN_CONTEXT_RESET_KHR
    , gl_TEXTURE3_ARB
    , gl_POST_COLOR_MATRIX_RED_SCALE
    , gl_MAX_HEIGHT
    , gl_BGRA
    , gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
    , gl_R1UI_V3F_SUN
    , gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
    , gl_PROGRAM_TEX_INSTRUCTIONS_ARB
    , gl_OP_LOG_BASE_2_EXT
    , gl_IMAGE_2D_MULTISAMPLE
    , gl_SAMPLE_POSITION_NV
    , gl_EIGHTH_BIT_ATI
    , gl_POINT_BIT
    , gl_INT_IMAGE_2D_ARRAY
    , gl_ALPHA_BIAS
    , gl_PROGRAM_FORMAT_ASCII_ARB
    , gl_TESS_CONTROL_OUTPUT_VERTICES
    , gl_RELATIVE_LARGE_CCW_ARC_TO_NV
    , gl_DETAIL_TEXTURE_MODE_SGIS
    , gl_TEXTURE_GEN_T
    , gl_FRAMEBUFFER_ATTACHMENT_LAYERED
    , gl_RETURN
    , gl_COLOR_MATRIX
    , gl_PROGRAM_RESULT_COMPONENTS_NV
    , gl_TEXTURE_VIEW_MIN_LAYER_EXT
    , gl_PROGRAM
    , gl_COLOR_ARRAY_POINTER_EXT
    , gl_SHARED_EDGE_NV
    , gl_INDEX_ARRAY_ADDRESS_NV
    , gl_MAD_ATI
    , gl_TEXTURE_MAX_ANISOTROPY_EXT
    , gl_POINT_SIZE_MIN_EXT
    , gl_FRAGMENT_LIGHT0_SGIX
    , gl_COLOR_ATTACHMENT8_EXT
    , gl_TEXTURE_DEPTH_SIZE_ARB
    , gl_INTERLACE_READ_INGR
    , gl_AVERAGE_HP
    , gl_CPU_OPTIMIZED_QCOM
    , gl_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
    , gl_TESS_EVALUATION_TEXTURE
    , gl_POST_CONVOLUTION_RED_SCALE
    , gl_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
    , gl_VERTEX_ATTRIB_ARRAY13_NV
    , gl_COMBINER4_NV
    , gl_MAX_IMAGE_SAMPLES_EXT
    , gl_PIXEL_TILE_GRID_DEPTH_SGIX
    , gl_QUERY_RESULT_ARB
    , gl_PERFQUERY_SINGLE_CONTEXT_INTEL
    , gl_LUMINANCE
    , gl_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
    , gl_COMBINER5_NV
    , gl_DOUBLE_MAT4
    , gl_TEXTURE_RENDERBUFFER_NV
    , gl_OBJECT_COMPILE_STATUS_ARB
    , gl_BLEND_SRC_ALPHA_OES
    , gl_MAX_CLIP_DISTANCES_APPLE
    , gl_TRACE_NAME_MESA
    , gl_MODELVIEW9_ARB
    , gl_PATH_STENCIL_VALUE_MASK_NV
    , gl_PERFQUERY_WAIT_INTEL
    , gl_HISTOGRAM_LUMINANCE_SIZE
    , gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
    , gl_CON_28_ATI
    , gl_MIRROR_CLAMP_TO_EDGE
    , gl_INT16_NV
    , gl_NEGATIVE_Y_EXT
    , gl_SELECT
    , gl_CULL_FACE
    , gl_BOOL_VEC3_ARB
    , gl_COMPRESSED_LUMINANCE_ARB
    , gl_HSL_SATURATION_NV
    , gl_RGB32F_EXT
    , gl_SUB_ATI
    , gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    , gl_CON_27_ATI
    , gl_DECR_WRAP_EXT
    , gl_DEBUG_TYPE_POP_GROUP
    , gl_OUTPUT_TEXTURE_COORD22_EXT
    , gl_DRAW_BUFFER2_ATI
    , gl_RGB8UI
    , gl_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV
    , gl_TEXTURE_VIEW_NUM_LAYERS_EXT
    , gl_TEXTURE_BUFFER_DATA_STORE_BINDING
    , gl_R1UI_C4UB_V3F_SUN
    , gl_PACK_INVERT_MESA
    , gl_ATOMIC_COUNTER_BUFFER_DATA_SIZE
    , gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
    , gl_COLOR_RENDERABLE
    , gl_CLIP_PLANE1_IMG
    , gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
    , gl_LINE_WIDTH
    , gl_RGB_INTEGER
    , gl_MAP_ATTRIB_U_ORDER_NV
    , gl_TEXTURE_ALPHA_MODULATE_IMG
    , gl_COMPRESSED_R11_EAC
    , gl_SIGNED_RGBA_NV
    , gl_TEXTURE_CUBE_MAP_ARB
    , gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
    , gl_PROXY_TEXTURE_4D_SGIS
    , gl_PIXEL_MAP_I_TO_I_SIZE
    , gl_INT_SAMPLER_2D_ARRAY
    , gl_HALF_FLOAT
    , gl_PIXEL_COUNTER_BITS_NV
    , gl_MAX_PROGRAM_IF_DEPTH_NV
    , gl_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
    , gl_STENCIL_BUFFER_BIT3_QCOM
    , gl_UNSIGNED_INT_IMAGE_2D_ARRAY
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Y
    , gl_CURRENT_RASTER_POSITION_VALID
    , gl_VERTEX_PROGRAM_POINT_SIZE_ARB
    , gl_INT_SAMPLER_BUFFER_AMD
    , gl_VERTEX_ATTRIB_ARRAY7_NV
    , gl_DEBUG_TYPE_MARKER
    , gl_DEPTH32F_STENCIL8_NV
    , gl_KEEP
    , gl_INT_SAMPLER_CUBE_MAP_ARRAY
    , gl_VERTEX_ARRAY_OBJECT_AMD
    , gl_NUM_INSTRUCTIONS_TOTAL_ATI
    , gl_ALPHA_TEST_REF
    , gl_QUAD_TEXTURE_SELECT_SGIS
    , gl_INTENSITY_SNORM
    , gl_TEXTURE_ENV_BIAS_SGIX
    , gl_MVP_MATRIX_EXT
    , gl_DEPTH_STENCIL_TEXTURE_MODE
    , gl_TEXTURE_COORD_ARRAY_TYPE_EXT
    , gl_FOG_FUNC_SGIS
    , gl_VARIABLE_D_NV
    , gl_PACK_RESAMPLE_OML
    , gl_BLEND_EQUATION_OES
    , gl_CLIP_PLANE5_IMG
    , gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT
    , gl_TEXTURE_INTENSITY_TYPE_ARB
    , gl_RESAMPLE_DECIMATE_OML
    , gl_READ_FRAMEBUFFER_BINDING_APPLE
    , gl_POST_CONVOLUTION_COLOR_TABLE
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
    , gl_MULTIVIEW_EXT
    , gl_TRACE_OPERATIONS_BIT_MESA
    , gl_INTERLEAVED_ATTRIBS_EXT
    , gl_RGBA8UI_EXT
    , gl_BLEND_EQUATION_RGB
    , gl_QUERY
    , gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
    , gl_GENERIC_ATTRIB_NV
    , gl_CLIP_PLANE2_IMG
    , gl_RG16
    , gl_PATH_TERMINAL_END_CAP_NV
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
    , gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES
    , gl_CURRENT_OCCLUSION_QUERY_ID_NV
    , gl_CLIP_PLANE5
    , gl_VERTEX_STREAM5_ATI
    , gl_WRAP_BORDER_SUN
    , gl_LUMINANCE_ALPHA16F_EXT
    , gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES
    , gl_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
    , gl_ACTIVE_UNIFORM_BLOCKS
    , gl_AUX3
    , gl_COLOR_ATTACHMENT2_EXT
    , gl_MAX_FRAMEZOOM_FACTOR_SGIX
    , gl_CLAMP_TO_BORDER_NV
    , gl_HALF_BIAS_NORMAL_NV
    , gl_OBJECT_ACTIVE_ATTRIBUTES_ARB
    , gl_UNSIGNED_INT_8_24_REV_MESA
    , gl_SAMPLE_LOCATION_SUBPIXEL_BITS_NV
    , gl_FIELD_UPPER_NV
    , gl_RGB4_S3TC
    , gl_COMPUTE_WORK_GROUP_SIZE
    , gl_RGBA8_OES
    , gl_RGB565_OES
    , gl_SATURATE_BIT_ATI
    , gl_TEXTURE_FIXED_SAMPLE_LOCATIONS
    , gl_ALLOW_DRAW_MEM_HINT_PGI
    , gl_SAMPLE_LOCATION_NV
    , gl_DEPTH_COMPONENT16_NONLINEAR_NV
    , gl_TRANSFORM_FEEDBACK_ATTRIBS_NV
    , gl_TEXTURE_RECTANGLE_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
    , gl_ZERO_EXT
    , gl_VERTEX_ARRAY_BINDING_APPLE
    , gl_CONVOLUTION_2D
    , gl_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
    , gl_MAX_VERTEX_SHADER_VARIANTS_EXT
    , gl_VERTEX_SHADER_ARB
    , gl_UNSIGNED_INT16_VEC3_NV
    , gl_TEXTURE_COORD_ARRAY_ADDRESS_NV
    , gl_FRAMEBUFFER_COMPLETE
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES
    , gl_FRAMEBUFFER_RENDERABLE
    , gl_VERTEX_WEIGHTING_EXT
    , gl_IMAGE_3D
    , gl_SPHERE_MAP
    , gl_PROGRAM_TEMPORARIES_ARB
    , gl_FLOAT_RGB16_NV
    , gl_CON_11_ATI
    , gl_DEBUG_LOGGED_MESSAGES_ARB
    , gl_TRANSPOSE_MODELVIEW_MATRIX
    , gl_PROXY_TEXTURE_CUBE_MAP_ARRAY
    , gl_DOUBLE_MAT4x3
    , gl_DETAIL_TEXTURE_2D_BINDING_SGIS
    , gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
    , gl_QUERY_WAIT
    , gl_PERFQUERY_COUNTER_DATA_UINT64_INTEL
    , gl_REFERENCED_BY_GEOMETRY_SHADER_EXT
    , gl_LUMINANCE4_ALPHA4_EXT
    , gl_MAT_SPECULAR_BIT_PGI
    , gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
    , gl_TESS_GEN_MODE
    , gl_VERTEX_WEIGHT_ARRAY_EXT
    , gl_DOUBLE_VEC2
    , gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
    , gl_VERTEX_ATTRIB_ARRAY2_NV
    , gl_FIRST_TO_REST_NV
    , gl_CONTEXT_ROBUST_ACCESS_KHR
    , gl_VERSION_ES_CL_1_0
    , gl_MAP1_VERTEX_ATTRIB9_4_NV
    , gl_VIBRANCE_SCALE_NV
    , gl_MAX_LIGHTS
    , gl_LUMINANCE8_EXT
    , gl_GEOMETRY_TEXTURE
    , gl_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
    , gl_STENCIL_ATTACHMENT_OES
    , gl_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
    , gl_VERTEX_STREAM7_ATI
    , gl_CONVOLUTION_FILTER_BIAS_EXT
    , gl_TRANSLATE_2D_NV
    , gl_VIEWPORT_BOUNDS_RANGE
    , gl_ELEMENT_ARRAY_BARRIER_BIT
    , gl_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES
    , gl_BLEND_PREMULTIPLIED_SRC_NV
    , gl_CLAMP_TO_EDGE
    , gl_LOCAL_CONSTANT_EXT
    , gl_OFFSET_TEXTURE_2D_NV
    , gl_MODELVIEW26_ARB
    , gl_GET_TEXTURE_IMAGE_TYPE
    , gl_LOSE_CONTEXT_ON_RESET
    , gl_COMPRESSED_RGB_FXT1_3DFX
    , gl_DRAW_BUFFER9_NV
    , gl_OP_MOV_EXT
    , gl_DU8DV8_ATI
    , gl_CULL_FRAGMENT_NV
    , gl_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
    , gl_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
    , gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES
    , gl_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV
    , gl_MAP1_VERTEX_ATTRIB14_4_NV
    , gl_TEXTURE_GREEN_SIZE
    , gl_MAX_VERTEX_STREAMS_ATI
    , gl_TRANSFORM_FEEDBACK_RECORD_NV
    , gl_VERTEX_ARRAY_RANGE_APPLE
    , gl_TEXTURE4_ARB
    , gl_DECR_WRAP_OES
    , gl_UNSIGNED_SHORT_5_6_5_REV_EXT
    , gl_SECONDARY_COLOR_ARRAY_ADDRESS_NV
    , gl_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
    , gl_NUM_SHADER_BINARY_FORMATS
    , gl_PROGRAM_PIPELINE_BINDING_EXT
    , gl_BLEND_SRC_ALPHA
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
    , gl_COMPRESSED_SLUMINANCE_EXT
    , gl_OUTPUT_TEXTURE_COORD19_EXT
    , gl_CURRENT_MATRIX_STACK_DEPTH_ARB
    , gl_DRAW_FRAMEBUFFER_ANGLE
    , gl_NATIVE_GRAPHICS_END_HINT_PGI
    , gl_ONE_MINUS_SRC_COLOR
    , gl_TESS_EVALUATION_SHADER
    , gl_LINEAR_MIPMAP_NEAREST
    , gl_UNSIGNED_INT16_VEC4_NV
    , gl_PACK_COMPRESSED_BLOCK_HEIGHT
    , gl_TEXTURE_TOO_LARGE_EXT
    , gl_SYNC_FLUSH_COMMANDS_BIT_APPLE
    , gl_PARTIAL_SUCCESS_NV
    , gl_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
    , gl_NORMAL_ARRAY_BUFFER_BINDING_ARB
    , gl_T4F_V4F
    , gl_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
    , gl_UNSIGNED_INT_24_8_NV
    , gl_LAYOUT_LINEAR_CPU_CACHED_INTEL
    , gl_TEXTURE_BASE_LEVEL
    , gl_MODELVIEW5_ARB
    , gl_AUTO_NORMAL
    , gl_MODELVIEW14_ARB
    , gl_PLUS_CLAMPED_ALPHA_NV
    , gl_POST_CONVOLUTION_COLOR_TABLE_SGI
    , gl_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
    , gl_UNSIGNED_INT_SAMPLER_2D_ARRAY
    , gl_BYTE
    , gl_ALPHA_SCALE
    , gl_TEXTURE_BORDER_VALUES_NV
    , gl_VIRTUAL_PAGE_SIZE_Y_ARB
    , gl_PREFER_DOUBLEBUFFER_HINT_PGI
    , gl_MAX_TEXTURE_IMAGE_UNITS
    , gl_UNSIGNED_SHORT_5_6_5
    , gl_GREEN_BIAS
    , gl_COMPRESSED_RGBA_BPTC_UNORM
    , gl_3D
    , gl_LINE_STRIP_ADJACENCY_EXT
    , gl_MAX_DEFORMATION_ORDER_SGIX
    , gl_TRANSFORM_FEEDBACK_BUFFER_BINDING
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
    , gl_BLEND_SRC_RGB_OES
    , gl_TEXTURE_BINDING_RECTANGLE_NV
    , gl_MAP1_VERTEX_ATTRIB2_4_NV
    , gl_DOUBLE_MAT4x2_EXT
    , gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
    , gl_PACK_SKIP_IMAGES
    , gl_CONSERVATIVE_RASTERIZATION_NV
    , gl_CURRENT_BIT
    , gl_EVAL_VERTEX_ATTRIB3_NV
    , gl_CONTEXT_LOST
    , gl_IUI_V3F_EXT
    , gl_COLOR_ATTACHMENT12_EXT
    , gl_DST_OVER_NV
    , gl_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
    , gl_BUFFER_UPDATE_BARRIER_BIT_EXT
    , gl_PROGRAM_NATIVE_TEMPORARIES_ARB
    , gl_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    , gl_REFLECTION_MAP
    , gl_IMPLEMENTATION_COLOR_READ_FORMAT
    , gl_DEBUG_OUTPUT_SYNCHRONOUS_ARB
    , gl_QUADRATIC_CURVE_TO_NV
    , gl_RGBA8
    , gl_LOSE_CONTEXT_ON_RESET_ARB
    , gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM
    , gl_1PASS_SGIS
    , gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH
    , gl_CON_7_ATI
    , gl_STENCIL_RENDERABLE
    , gl_MATRIX5_NV
    , gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
    , gl_SHADER_STORAGE_BUFFER_BINDING
    , gl_UNPACK_CONSTANT_DATA_SUNX
    , gl_DEBUG_TYPE_POP_GROUP_KHR
    , gl_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
    , gl_UNSIGNED_INT_10_10_10_2_OES
    , gl_ASYNC_DRAW_PIXELS_SGIX
    , gl_FRAMEBUFFER_SRGB_CAPABLE_EXT
    , gl_BACK_NORMALS_HINT_PGI
    , gl_COMBINER_COMPONENT_USAGE_NV
    , gl_RG16I
    , gl_ALPHA32I_EXT
    , gl_MAX_TEXTURE_BUFFER_SIZE
    , gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
    , gl_SHADER_TYPE
    , gl_BUFFER_OBJECT_APPLE
    , gl_QUERY_RESULT_AVAILABLE_EXT
    , gl_RGB4_EXT
    , gl_NUM_FILL_STREAMS_NV
    , gl_ALL_SHADER_BITS
    , gl_MAX_NAME_STACK_DEPTH
    , gl_ATTRIB_STACK_DEPTH
    , gl_COMBINE_RGB_EXT
    , gl_POINT_SIZE
    , gl_LUMINANCE_ALPHA16I_EXT
    , gl_MAX_COLOR_MATRIX_STACK_DEPTH
    , gl_INTENSITY16_SNORM
    , gl_COLOR_ATTACHMENT_EXT
    , gl_MAX_VIEWPORTS
    , gl_BOOL_VEC3
    , gl_WRITE_ONLY
    , gl_TEXTURE25
    , gl_UNKNOWN_CONTEXT_RESET_ARB
    , gl_SIGNED_RGB8_NV
    , gl_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
    , gl_SLUMINANCE8_EXT
    , gl_SCALE_BY_ONE_HALF_NV
    , gl_MAP2_VERTEX_ATTRIB2_4_NV
    , gl_FIXED_ONLY_ARB
    , gl_NEAREST_CLIPMAP_LINEAR_SGIX
    , gl_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
    , gl_DUAL_INTENSITY12_SGIS
    , gl_IMAGE_CLASS_4_X_8
    , gl_MAP2_VERTEX_4
    , gl_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
    , gl_MATRIX4_NV
    , gl_POLYGON_BIT
    , gl_UNPACK_COMPRESSED_SIZE_SGIX
    , gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT
    , gl_OPERAND1_ALPHA
    , gl_WEIGHT_ARRAY_TYPE_ARB
    , gl_SEPARABLE_2D
    , gl_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
    , gl_VERTEX_STREAM6_ATI
    , gl_PROXY_TEXTURE_2D_STACK_MESAX
    , gl_TEXTURE_2D_STACK_BINDING_MESAX
    , gl_DISCRETE_AMD
    , gl_SAMPLE_MASK
    , gl_UNSIGNED_INT8_NV
    , gl_UNDEFINED_VERTEX
    , gl_DEBUG_SEVERITY_NOTIFICATION_KHR
    , gl_PROGRAM_TEX_INDIRECTIONS_ARB
    , gl_TEXTURE_2D_ARRAY
    , gl_ALPHA_BITS
    , gl_SRC0_ALPHA
    , gl_TEXTURE_BUFFER_ARB
    , gl_PN_TRIANGLES_TESSELATION_LEVEL_ATI
    , gl_POINT_SIZE_MIN_SGIS
    , gl_LARGE_CCW_ARC_TO_NV
    , gl_QUERY_COUNTER_BITS
    , gl_HSL_COLOR_NV
    , gl_RGBA_FLOAT32_ATI
    , gl_VIEW_CLASS_48_BITS
    , gl_MODELVIEW1_EXT
    , gl_SAMPLER_2D
    , gl_CLIP_PLANE0
    , gl_FOG_COORDINATE
    , gl_DRAW_BUFFER4_ARB
    , gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
    , gl_UNSIGNED_INT_IMAGE_1D
    , gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
    , gl_TEXTURE26
    , gl_ALPHA32F_EXT
    , gl_HISTOGRAM_GREEN_SIZE
    , gl_PIXEL_SUBSAMPLE_4242_SGIX
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
    , gl_TRACE_ALL_BITS_MESA
    , gl_POST_COLOR_MATRIX_ALPHA_SCALE
    , gl_TEXTURE_COORD_ARRAY_SIZE
    , gl_INT_IMAGE_BUFFER_EXT
    , gl_POST_CONVOLUTION_RED_BIAS
    , gl_COMPRESSED_RGBA_ASTC_4x3x3_OES
    , gl_UNSIGNED_SHORT_8_8_APPLE
    , gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
    , gl_UNSIGNED_INVERT_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
    , gl_MAX_VERTEX_SHADER_INVARIANTS_EXT
    , gl_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
    , gl_TEXTURE_BINDING_CUBE_MAP
    , gl_DRAW_BUFFER1_EXT
    , gl_LUMINANCE16I_EXT
    , gl_DOUBLE_MAT3x4
    , gl_422_REV_AVERAGE_EXT
    , gl_TEXTURE_MAX_LOD
    , gl_SOURCE1_ALPHA_EXT
    , gl_FRAGMENT_NORMAL_EXT
    , gl_N3F_V3F
    , gl_CONDITION_SATISFIED_APPLE
    , gl_COMBINE_RGB
    , gl_UNIFORM_SIZE
    , gl_REG_30_ATI
    , gl_V3F
    , gl_QUERY_RESULT_EXT
    , gl_SIGNED_RGB_UNSIGNED_ALPHA_NV
    , gl_ATOMIC_COUNTER_BUFFER
    , gl_EMISSION
    , gl_FLOAT_RG16_NV
    , gl_SKIP_COMPONENTS2_NV
    , gl_DEPTH_CLAMP_NEAR_AMD
    , gl_SET_AMD
    , gl_SMOOTH_LINE_WIDTH_GRANULARITY
    , gl_STRICT_LIGHTING_HINT_PGI
    , gl_TEXCOORD1_BIT_PGI
    , gl_MATRIX2_NV
    , gl_VERTEX_ARRAY_RANGE_POINTER_NV
    , gl_MIN_SPARSE_LEVEL_AMD
    , gl_TEXTURE_HEIGHT
    , gl_DRAW_BUFFER6_ATI
    , gl_SUBTRACT
    , gl_COLOR_MATRIX_SGI
    , gl_TEXTURE_1D_STACK_BINDING_MESAX
    , gl_COMPRESSED_RGBA_ASTC_10x6_KHR
    , gl_COVERAGE_EDGE_FRAGMENTS_NV
    , gl_BUFFER_ACCESS_ARB
    , gl_MAX_MULTIVIEW_BUFFERS_EXT
    , gl_DEBUG_SOURCE_THIRD_PARTY
    , gl_INT_SAMPLER_CUBE
    , gl_FONT_HAS_KERNING_BIT_NV
    , gl_MAX_DEBUG_LOGGED_MESSAGES
    , gl_SEPARATE_SPECULAR_COLOR_EXT
    , gl_SYNC_CL_EVENT_COMPLETE_ARB
    , gl_COMPRESSED_RGBA_ASTC_6x5_KHR
    , gl_DRAW_BUFFER1
    , gl_QUERY_RESULT_AVAILABLE
    , gl_COMPRESSED_INTENSITY
    , gl_TEXTURE11
    , gl_MAX_PALETTE_MATRICES_ARB
    , gl_BACK_SECONDARY_COLOR_NV
    , gl_MAX_COMBINED_DIMENSIONS
    , gl_COMPRESSED_RGBA_ASTC_5x5_KHR
    , gl_CONTEXT_FLAGS
    , gl_COLOR_ARRAY_LENGTH_NV
    , gl_OP_EXP_BASE_2_EXT
    , gl_R16
    , gl_STENCIL_BUFFER_BIT2_QCOM
    , gl_UNSIGNED_INT_SAMPLER_1D
    , gl_CLIP_DEPTH_MODE
    , gl_MATRIX26_ARB
    , gl_MAX_TRACK_MATRIX_STACK_DEPTH_NV
    , gl_STENCIL_REF
    , gl_MAX_RECTANGLE_TEXTURE_SIZE_ARB
    , gl_MAX_PROGRAM_ENV_PARAMETERS_ARB
    , gl_BLUE_MIN_CLAMP_INGR
    , gl_MODELVIEW2_ARB
    , gl_OBJECT_ATTACHED_OBJECTS_ARB
    , gl_WIDE_LINE_HINT_PGI
    , gl_ADD_SIGNED_EXT
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
    , gl_BINORMAL_ARRAY_POINTER_EXT
    , gl_COMBINER_INPUT_NV
    , gl_UNSIGNED_INT_SAMPLER_2D_RECT
    , gl_REPLICATE_BORDER_HP
    , gl_INT_IMAGE_2D_MULTISAMPLE
    , gl_TESS_CONTROL_SHADER_EXT
    , gl_COMPRESSED_RGBA_ASTC_3x3x3_OES
    , gl_PROGRAM_SEPARABLE
    , gl_COMPRESSED_LUMINANCE
    , gl_MAX_TEXTURE_IMAGE_UNITS_ARB
    , gl_RENDERBUFFER_SAMPLES_APPLE
    , gl_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
    , gl_UNSIGNED_INT_S8_S8_8_8_NV
    , gl_LOCATION
    , gl_EFFECTIVE_RASTER_SAMPLES_EXT
    , gl_POINT_DISTANCE_ATTENUATION_ARB
    , gl_COVERAGE_COMPONENT4_NV
    , gl_DRAW_BUFFER0_NV
    , gl_DOUBLE_VEC2_EXT
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
    , gl_NORMAL_ARRAY_POINTER_EXT
    , gl_SMAPHS_PROGRAM_BINARY_DMP
    , gl_POINT_SIZE_MAX_EXT
    , gl_SHADER_BINARY_VIV
    , gl_FLOAT_RGB_NV
    , gl_PROXY_TEXTURE_1D_ARRAY_EXT
    , gl_DEBUG_TYPE_PORTABILITY_ARB
    , gl_ITALIC_BIT_NV
    , gl_PATH_MODELVIEW_STACK_DEPTH_NV
    , gl_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
    , gl_STENCIL_BACK_PASS_DEPTH_PASS_ATI
    , gl_OP_MAX_EXT
    , gl_MAX_4D_TEXTURE_SIZE_SGIS
    , gl_PIXEL_TEX_GEN_ALPHA_MS_SGIX
    , gl_4PASS_3_SGIS
    , gl_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
    , gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT
    , gl_HSL_LUMINOSITY_KHR
    , gl_COMPARE_R_TO_TEXTURE_ARB
    , gl_REG_13_ATI
    , gl_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
    , gl_DEPTH24_STENCIL8
    , gl_STENCIL_TAG_BITS_EXT
    , gl_SIGNED_LUMINANCE8_ALPHA8_NV
    , gl_TEXTURE_PRE_SPECULAR_HP
    , gl_VERTEX_STATE_PROGRAM_NV
    , gl_TEXTURE_MAX_LEVEL
    , gl_RENDERBUFFER_BINDING_EXT
    , gl_UNIFORM_BLOCK_NAME_LENGTH
    , gl_MODELVIEW0_EXT
    , gl_VENDOR
    , gl_TRIANGLE_MESH_SUN
    , gl_PIXEL_MAP_S_TO_S_SIZE
    , gl_REPLACEMENT_CODE_SUN
    , gl_COLOR_ATTACHMENT1_EXT
    , gl_DEPTH_BUFFER_BIT7_QCOM
    , gl_SCALAR_EXT
    , gl_TEXTURE_RED_TYPE
    , gl_FLOAT_RGBA_MODE_NV
    , gl_COMPRESSED_RGB
    , gl_COMPRESSED_RGBA_ASTC_12x10_KHR
    , gl_RGBA16I
    , gl_NATIVE_GRAPHICS_BEGIN_HINT_PGI
    , gl_UNSIGNED_INT_8_8_8_8
    , gl_SECONDARY_COLOR_ARRAY_STRIDE
    , gl_NUM_GENERAL_COMBINERS_NV
    , gl_DOUBLE_MAT3x4_EXT
    , gl_IMAGE_CUBE_MAP_ARRAY_EXT
    , gl_IMAGE_BINDING_FORMAT_EXT
    , gl_ELEMENT_ARRAY_TYPE_APPLE
    , gl_VERTEX_PROGRAM_BINDING_NV
    , gl_RELATIVE_QUADRATIC_CURVE_TO_NV
    , gl_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
    , gl_VERTEX_ATTRIB_MAP1_ORDER_APPLE
    , gl_UNSIGNED_INT_5_9_9_9_REV
    , gl_DEPTH_STENCIL_MESA
    , gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
    , gl_TEXTURE_2D_MULTISAMPLE_ARRAY_OES
    , gl_COLOR_ALPHA_PAIRING_ATI
    , gl_BUFFER_ACCESS_OES
    , gl_DRAW_BUFFER13_ATI
    , gl_MAP1_BINORMAL_EXT
    , gl_DSDT_MAG_INTENSITY_NV
    , gl_HILO8_NV
    , gl_LUMINANCE4_ALPHA4_OES
    , gl_FLOAT_VEC3
    , gl_NUM_EXTENSIONS
    , gl_TEXTURE_COORD_ARRAY_COUNT_EXT
    , gl_ALWAYS
    , gl_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    , gl_LIGHT_MODEL_TWO_SIDE
    , gl_SET
    , gl_SUPERSAMPLE_SCALE_Y_NV
    , gl_PATCH_DEFAULT_INNER_LEVEL_EXT
    , gl_MAX_BINDABLE_UNIFORM_SIZE_EXT
    , gl_MIRRORED_REPEAT_IBM
    , gl_POINT_FADE_THRESHOLD_SIZE_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    , gl_SHADER_IMAGE_ATOMIC
    , gl_DOUBLE_MAT3_EXT
    , gl_MAX_PALETTE_MATRICES_OES
    , gl_MINMAX_SINK_EXT
    , gl_VARIABLE_A_NV
    , gl_INCR_WRAP_OES
    , gl_STREAM_READ
    , gl_NEGATE_BIT_ATI
    , gl_MAP_READ_BIT
    , gl_FRACTIONAL_ODD
    , gl_CON_2_ATI
    , gl_CLIENT_STORAGE_BIT
    , gl_COMPRESSED_RGBA_ASTC_8x8_KHR
    , gl_MAX_TESS_CONTROL_INPUT_COMPONENTS
    , gl_PROXY_TEXTURE_1D_EXT
    , gl_UNPACK_SKIP_IMAGES_EXT
    , gl_IMAGE_CLASS_4_X_16
    , gl_PROXY_TEXTURE_CUBE_MAP
    , gl_SAMPLE_SHADING
    , gl_BUFFER_USAGE
    , gl_MODELVIEW_STACK_DEPTH
    , gl_DRAW_BUFFER9_ARB
    , gl_SYNC_CONDITION_APPLE
    , gl_DEBUG_TYPE_PORTABILITY_KHR
    , gl_DEPTH_STENCIL_NV
    , gl_FONT_GLYPHS_AVAILABLE_NV
    , gl_RG
    , gl_INT
    , gl_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
    , gl_ALPHA_INTEGER
    , gl_POST_CONVOLUTION_BLUE_BIAS
    , gl_STEREO
    , gl_OUTPUT_TEXTURE_COORD17_EXT
    , gl_HARDMIX_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES
    , gl_SHADER_KHR
    , gl_CLIP_PLANE3_IMG
    , gl_ONE_MINUS_CONSTANT_COLOR_EXT
    , gl_CONTEXT_COMPATIBILITY_PROFILE_BIT
    , gl_INTERNALFORMAT_GREEN_SIZE
    , gl_COLOR
    , gl_ELEMENT_ARRAY_ATI
    , gl_TEXTURE_COORD_ARRAY_TYPE
    , gl_INT_IMAGE_2D_RECT
    , gl_DEBUG_CALLBACK_USER_PARAM
    , gl_TRIANGLES
    , gl_POINT_SIZE_GRANULARITY
    , gl_SQUARE_NV
    , gl_BLEND_DST_ALPHA
    , gl_CLEAR
    , gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT
    , gl_C4F_N3F_V3F
    , gl_RELATIVE_CONIC_CURVE_TO_NV
    , gl_AND
    , gl_SCALEBIAS_HINT_SGIX
    , gl_ZERO_TO_ONE
    , gl_DEPTH_BOUNDS_TEST_EXT
    , gl_NUM_COMPRESSED_TEXTURE_FORMATS
    , gl_COPY_WRITE_BUFFER_NV
    , gl_DUAL_LUMINANCE12_SGIS
    , gl_SHADER_OBJECT_ARB
    , gl_INT_SAMPLER_1D_EXT
    , gl_LINE_RESET_TOKEN
    , gl_LINK_STATUS
    , gl_IMAGE_CUBIC_WEIGHT_HP
    , gl_MAX_COMPUTE_WORK_GROUP_SIZE
    , gl_IMAGE_TRANSLATE_X_HP
    , gl_MINMAX_FORMAT
    , gl_MIRROR_CLAMP_ATI
    , gl_FOG_COORD_ARRAY
    , gl_TEXTURE_SWIZZLE_R_EXT
    , gl_MAX_NUM_COMPATIBLE_SUBROUTINES
    , gl_MAX_LAYERS
    , gl_RGB5_A1
    , gl_COMPILE
    , gl_SECONDARY_COLOR_ARRAY_LENGTH_NV
    , gl_SHADING_LANGUAGE_VERSION_ARB
    , gl_PATH_FILL_BOUNDING_BOX_NV
    , gl_DOUBLE_VEC4_EXT
    , gl_COUNT_UP_NV
    , gl_COMPRESSED_SLUMINANCE
    , gl_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
    , gl_EMBOSS_CONSTANT_NV
    , gl_4PASS_1_EXT
    , gl_RETAINED_APPLE
    , gl_PROXY_TEXTURE_2D_ARRAY_EXT
    , gl_READ_ONLY
    , gl_UNSIGNED_INT_8_8_8_8_EXT
    , gl_POST_CONVOLUTION_ALPHA_SCALE_EXT
    , gl_RG8_EXT
    , gl_MULTISAMPLE_BUFFER_BIT4_QCOM
    , gl_TRANSPOSE_NV
    , gl_IDENTITY_NV
    , gl_ONE_MINUS_DST_COLOR
    , gl_MAX_FRAMEBUFFER_LAYERS
    , gl_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
    , gl_COEFF
    , gl_CONVOLUTION_BORDER_COLOR
    , gl_CURRENT_WEIGHT_ARB
    , gl_RESET_NOTIFICATION_STRATEGY_KHR
    , gl_IMAGE_BINDING_FORMAT
    , gl_POINT_SIZE_ARRAY_TYPE_OES
    , gl_NORMAL_ARRAY_EXT
    , gl_QUADS
    , gl_INDEX_ARRAY_STRIDE_EXT
    , gl_PATH_GEN_MODE_NV
    , gl_ISOLINES_EXT
    , gl_POST_COLOR_MATRIX_COLOR_TABLE
    , gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
    , gl_TEXTURE_COMPRESSION_HINT
    , gl_STENCIL_TEST
    , gl_ACCUM_GREEN_BITS
    , gl_TEXTURE_LIGHT_EXT
    , gl_TEXTURE_WRAP_R
    , gl_COMPRESSED_SIGNED_RG11_EAC_OES
    , gl_PROGRAM_OBJECT_EXT
    , gl_DEPTH_COMPONENT32_ARB
    , gl_CONSTANT_NV
    , gl_COLOR_ATTACHMENT9_NV
    , gl_INT_SAMPLER_CUBE_EXT
    , gl_VERTEX_ATTRIB_ARRAY3_NV
    , gl_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
    , gl_DRAW_FRAMEBUFFER_EXT
    , gl_VERTEX_ATTRIB_ARRAY5_NV
    , gl_SIGNED_NEGATE_NV
    , gl_VIEW_CLASS_S3TC_DXT1_RGB
    , gl_TEXTURE_MATRIX
    , gl_FRAMEBUFFER_DEFAULT_LAYERS
    , gl_LUMINANCE_FLOAT32_APPLE
    , gl_PROGRAM_ALU_INSTRUCTIONS_ARB
    , gl_POINT_SIZE_MAX_SGIS
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
    , gl_LIGHT_MODEL_AMBIENT
    , gl_TRANSFORM_FEEDBACK_BUFFER_START
    , gl_DRAW_BUFFER2
    , gl_INT_VEC4
    , gl_TEXTURE29
    , gl_DRAW_FRAMEBUFFER_NV
    , gl_BACK
    , gl_PROGRAM_RESIDENT_NV
    , gl_DRAW_BUFFER7_ARB
    , gl_TEXTURE_LUMINANCE_TYPE_ARB
    , gl_ALWAYS_SOFT_HINT_PGI
    , gl_CON_8_ATI
    , gl_DRAW_BUFFER6_NV
    , gl_STENCIL_INDEX4_EXT
    , gl_FRAMEBUFFER_RENDERABLE_LAYERED
    , gl_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    , gl_TEXTURE_CUBE_MAP_SEAMLESS
    , gl_FOG_COORDINATE_ARRAY_TYPE_EXT
    , gl_CLIP_PLANE1
    , gl_MAT_AMBIENT_BIT_PGI
    , gl_MAP_WRITE_BIT
    , gl_FLOAT_MAT4x3_NV
    , gl_SEPARATE_ATTRIBS
    , gl_SAMPLE_MASK_VALUE_SGIS
    , gl_T4F_C4F_N3F_V4F
    , gl_DRAW_BUFFER_EXT
    , gl_R1UI_C3F_V3F_SUN
    , gl_RGBA_FLOAT16_APPLE
    , gl_BUMP_ROT_MATRIX_ATI
    , gl_MAP_STENCIL
    , gl_LEFT
    , gl_SIGNED_HILO_NV
    , gl_FONT_Y_MIN_BOUNDS_BIT_NV
    , gl_TEXTURE28
    , gl_POLYGON_TOKEN
    , gl_VIVIDLIGHT_NV
    , gl_ALIASED_LINE_WIDTH_RANGE
    , gl_VIDEO_COLOR_CONVERSION_MATRIX_NV
    , gl_OUTPUT_TEXTURE_COORD18_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
    , gl_UNIFORM_BUFFER_EXT
    , gl_MAP2_VERTEX_ATTRIB3_4_NV
    , gl_PACK_IMAGE_HEIGHT
    , gl_RGB16UI_EXT
    , gl_OUTPUT_TEXTURE_COORD13_EXT
    , gl_BLEND_EQUATION_EXT
    , gl_HISTOGRAM_SINK
    , gl_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
    , gl_STENCIL_BUFFER_BIT0_QCOM
    , gl_REG_7_ATI
    , gl_ALL_STATIC_DATA_IBM
    , gl_CON_19_ATI
    , gl_LUMINANCE8_ALPHA8_SNORM
    , gl_RENDERBUFFER_WIDTH_EXT
    , gl_COMPRESSED_RGBA_S3TC_DXT1_EXT
    , gl_RGB10_EXT
    , gl_DOUBLE_MAT4_EXT
    , gl_TEXTURE14
    , gl_PROGRAM_ERROR_POSITION_ARB
    , gl_BLEND_SRC_RGB
    , gl_R1UI_T2F_N3F_V3F_SUN
    , gl_VERTEX_SHADER_BINDING_EXT
    , gl_TEXTURE_MIN_LOD_SGIS
    , gl_RG16F
    , gl_TEXTURE_BORDER_COLOR_NV
    , gl_OP_POWER_EXT
    , gl_TRIANGLE_STRIP
    , gl_REG_15_ATI
    , gl_UNPACK_SKIP_PIXELS_EXT
    , gl_OUTPUT_TEXTURE_COORD11_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
    , gl_QUERY_TARGET
    , gl_HORIZONTAL_LINE_TO_NV
    , gl_ATOMIC_COUNTER_BARRIER_BIT
    , gl_TEXTURE_COMPRESSED_IMAGE_SIZE
    , gl_MAX_PROGRAM_OUTPUT_VERTICES_NV
    , gl_SHADER_STORAGE_BLOCK
    , gl_T2F_IUI_V3F_EXT
    , gl_QUERY_ALL_EVENT_BITS_AMD
    , gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
    , gl_BINORMAL_ARRAY_TYPE_EXT
    , gl_DRAW_INDIRECT_LENGTH_NV
    , gl_PIXEL_MAP_I_TO_A_SIZE
    , gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
    , gl_DRAW_BUFFER10_ATI
    , gl_COMPRESSED_RGB_S3TC_DXT1_EXT
    , gl_INT8_NV
    , gl_ELEMENT_ARRAY_APPLE
    , gl_READ_WRITE
    , gl_COMPRESSED_RGB_ARB
    , gl_TEXTURE_BUFFER_FORMAT_EXT
    , gl_RGB8I
    , gl_FRAMEBUFFER_UNSUPPORTED
    , gl_UNSIGNED_INT_IMAGE_3D_EXT
    , gl_RGBA32F_ARB
    , gl_DUAL_INTENSITY16_SGIS
    , gl_DOT_PRODUCT_TEXTURE_1D_NV
    , gl_UNSIGNED_SHORT_1_5_5_5_REV
    , gl_QUERY_BY_REGION_WAIT
    , gl_PRIMITIVE_RESTART_NV
    , gl_POST_COLOR_MATRIX_RED_BIAS_SGI
    , gl_SECONDARY_COLOR_ARRAY_POINTER_EXT
    , gl_OFFSET_TEXTURE_2D_MATRIX_NV
    , gl_HSL_COLOR_KHR
    , gl_REFLECTION_MAP_EXT
    , gl_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
    , gl_IMAGE_TEXEL_SIZE
    , gl_RG16F_EXT
    , gl_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
    , gl_LUMINANCE_ALPHA8I_EXT
    , gl_COMPUTE_SUBROUTINE
    , gl_LUMINANCE32UI_EXT
    , gl_VERTEX_CONSISTENT_HINT_PGI
    , gl_SRGB8
    , gl_STREAM_COPY
    , gl_MAX_CLIP_DISTANCES
    , gl_CONSTANT_COLOR1_NV
    , gl_MAX_FRAMEBUFFER_SAMPLES
    , gl_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
    , gl_PIXEL_UNPACK_BUFFER
    , gl_MATRIX15_ARB
    , gl_SIGNED_LUMINANCE_ALPHA_NV
    , gl_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    , gl_TEXTURE_COORD_ARRAY_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    , gl_COLOR_ATTACHMENT0_OES
    , gl_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
    , gl_READ_BUFFER_EXT
    , gl_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
    , gl_TEXTURE_VIEW_MIN_LEVEL_EXT
    , gl_MODELVIEW3_ARB
    , gl_GLOBAL_ALPHA_FACTOR_SUN
    , gl_UNSIGNED_INT_VEC4_EXT
    , gl_MOV_ATI
    , gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
    , gl_VERTEX_ARRAY_RANGE_LENGTH_APPLE
    , gl_PATH_INITIAL_END_CAP_NV
    , gl_COMPRESSED_RGBA_ASTC_5x4x4_OES
    , gl_RGBA_SNORM
    , gl_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
    , gl_INTENSITY16
    , gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
    , gl_LAST_VERTEX_CONVENTION
    , gl_MAX_DEBUG_LOGGED_MESSAGES_ARB
    , gl_REG_2_ATI
    , gl_ARC_TO_NV
    , gl_PALETTE8_R5_G6_B5_OES
    , gl_PATH_DASH_OFFSET_RESET_NV
    , gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES
    , gl_MAP1_VERTEX_ATTRIB1_4_NV
    , gl_MAX_TEXTURE_COORDS
    , gl_TEXTURE30_ARB
    , gl_REDUCE
    , gl_LUMINANCE16_ALPHA16_SNORM
    , gl_SCREEN_KHR
    , gl_FIXED_ONLY
    , gl_DEPTH_BUFFER_BIT4_QCOM
    , gl_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD
    , gl_VERTEX_PROGRAM_ARB
    , gl_STENCIL_BUFFER_BIT
    , gl_UNSIGNED_SHORT_8_8_MESA
    , gl_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
    , gl_MAX_PROGRAM_LOOP_COUNT_NV
    , gl_SPARSE_BUFFER_PAGE_SIZE_ARB
    , gl_CW
    , gl_SOURCE0_RGB
    , gl_INDEX_ARRAY_TYPE_EXT
    , gl_REPLACEMENT_CODE_ARRAY_SUN
    , gl_MAX_SPARSE_TEXTURE_SIZE_AMD
    , gl_COLOR_TABLE_ALPHA_SIZE
    , gl_COLOR_TABLE_GREEN_SIZE
    , gl_INDEX_BIT_PGI
    , gl_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
    , gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT
    , gl_TEXTURE_LOD_BIAS_S_SGIX
    , gl_COLORBURN_NV
    , gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
    , gl_FRAMEZOOM_FACTOR_SGIX
    , gl_DEPTH_BUFFER_BIT6_QCOM
    , gl_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV
    , gl_TEXTURE_ENV
    , gl_TEXTURE_MAX_LEVEL_SGIS
    , gl_TEXTURE13
    , gl_ONE_EXT
    , gl_MAP1_TEXTURE_COORD_1
    , gl_RENDERBUFFER_WIDTH
    , gl_MAP1_VERTEX_ATTRIB13_4_NV
    , gl_NUM_PROGRAM_BINARY_FORMATS_OES
    , gl_MODELVIEW12_ARB
    , gl_MATRIX5_ARB
    , gl_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
    , gl_CURRENT_QUERY_EXT
    , gl_MAX_GEOMETRY_INPUT_COMPONENTS
    , gl_TRANSPOSE_CURRENT_MATRIX_ARB
    , gl_OFFSET_TEXTURE_2D_BIAS_NV
    , gl_PROGRAM_NATIVE_PARAMETERS_ARB
    , gl_ALPHA_TEST_FUNC
    , gl_EVAL_VERTEX_ATTRIB4_NV
    , gl_CONVOLUTION_2D_EXT
    , gl_SECONDARY_COLOR_ARRAY_SIZE_EXT
    , gl_BUFFER_SIZE
    , gl_DRAW_BUFFER14_EXT
    , gl_OUTPUT_TEXTURE_COORD28_EXT
    , gl_TEXTURE5_ARB
    , gl_TEXTURE6
    , gl_FRAMEBUFFER_BLEND
    , gl_MAP2_VERTEX_ATTRIB4_4_NV
    , gl_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
    , gl_COMPRESSED_RGB8_ETC2
    , gl_POLYGON_OFFSET_FACTOR
    , gl_PACK_IMAGE_HEIGHT_EXT
    , gl_TEXTURE_BLUE_SIZE
    , gl_CCW
    , gl_ONE_MINUS_SRC1_COLOR
    , gl_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
    , gl_SUCCESS_NV
    , gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR
    , gl_RGBA8I_EXT
    , gl_TEXTURE_CUBE_MAP_POSITIVE_X
    , gl_UPPER_LEFT
    , gl_STENCIL_INDEX8_EXT
    , gl_4_BYTES_NV
    , gl_SWIZZLE_STR_DR_ATI
    , gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
    , gl_VIEWPORT_SUBPIXEL_BITS
    , gl_BLEND_DST_RGB
    , gl_SRC0_RGB
    , gl_FILTER4_SGIS
    , gl_ARRAY_BUFFER_ARB
    , gl_ADD_BLEND_IMG
    , gl_EVAL_VERTEX_ATTRIB15_NV
    , gl_CUBIC_HP
    , gl_SOURCE1_RGB_ARB
    , gl_TEXTURE_CLIPMAP_CENTER_SGIX
    , gl_FOG_DENSITY
    , gl_DECODE_EXT
    , gl_PROXY_TEXTURE_RECTANGLE_NV
    , gl_DRAW_FRAMEBUFFER_BINDING_EXT
    , gl_COLOR_BUFFER_BIT4_QCOM
    , gl_MAT_EMISSION_BIT_PGI
    , gl_DRAW_BUFFER2_ARB
    , gl_CULL_VERTEX_EXT
    , gl_READ_PIXELS_TYPE
    , gl_MAX_ARRAY_TEXTURE_LAYERS
    , gl_INTERPOLATE
    , gl_IMPLEMENTATION_COLOR_READ_TYPE
    , gl_CONVOLUTION_WIDTH_EXT
    , gl_PATH_ERROR_POSITION_NV
    , gl_SRGB_DECODE_ARB
    , gl_DMP_PROGRAM_BINARY_DMP
    , gl_TEXTURE11_ARB
    , gl_PIXEL_TEX_GEN_SGIX
    , gl_VERTEX_SOURCE_ATI
    , gl_MAX_COMPUTE_SHARED_MEMORY_SIZE
    , gl_RG32F
    , gl_STANDARD_FONT_FORMAT_NV
    , gl_VIEWPORT_INDEX_PROVOKING_VERTEX
    , gl_YCRCB_422_SGIX
    , gl_MAX_EXT
    , gl_DEBUG_TYPE_ERROR_KHR
    , gl_SAMPLER_OBJECT_AMD
    , gl_INTENSITY12_EXT
    , gl_PATCH_VERTICES_EXT
    , gl_VERTEX_ARRAY_BINDING
    , gl_VARIABLE_C_NV
    , gl_FRAGMENT_COLOR_EXT
    , gl_FUNC_REVERSE_SUBTRACT_EXT
    , gl_MODULATE_SUBTRACT_ATI
    , gl_LOSE_CONTEXT_ON_RESET_KHR
    , gl_RENDERBUFFER_INTERNAL_FORMAT_OES
    , gl_AFFINE_3D_NV
    , gl_RENDERBUFFER_HEIGHT_OES
    , gl_MATRIX10_ARB
    , gl_TEXTURE_VIEW_MIN_LAYER
    , gl_FLOAT_CLEAR_COLOR_VALUE_NV
    , gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
    , gl_MATRIX1_ARB
    , gl_DEPTH_COMPONENT16_OES
    , gl_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
    , gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
    , gl_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT
    , gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
    , gl_PATH_FILL_MASK_NV
    , gl_CLIP_PLANE4_IMG
    , gl_R8_SNORM
    , gl_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
    , gl_SAMPLER_1D_ARRAY
    , gl_PERFQUERY_COUNTER_DURATION_RAW_INTEL
    , gl_STACK_UNDERFLOW
    , gl_CLIP_PLANE2
    , gl_PATH_INITIAL_DASH_CAP_NV
    , gl_LINE_TO_NV
    , gl_BLEND_EQUATION_RGB_EXT
    , gl_INT_IMAGE_1D_ARRAY_EXT
    , gl_MATRIX31_ARB
    , gl_SHADER_SOURCE_LENGTH
    , gl_INDEX_OFFSET
    , gl_UNSIGNED_NORMALIZED_ARB
    , gl_VERTEX_ATTRIB_MAP2_SIZE_APPLE
    , gl_REG_16_ATI
    , gl_UNIFORM_ARRAY_STRIDE
    , gl_DEBUG_SEVERITY_MEDIUM_ARB
    , gl_STENCIL_BUFFER_BIT5_QCOM
    , gl_MINMAX_EXT
    , gl_FACTOR_MAX_AMD
    , gl_TEXTURE_COMPONENTS
    , gl_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
    , gl_REG_14_ATI
    , gl_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
    , gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
    , gl_COLOR_ATTACHMENT0_EXT
    , gl_TEXCOORD4_BIT_PGI
    , gl_POST_CONVOLUTION_RED_SCALE_EXT
    , gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
    , gl_TEXTURE_BORDER
    , gl_SHADOW_AMBIENT_SGIX
    , gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
    , gl_IUI_V2F_EXT
    , gl_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
    , gl_CLAMP
    , gl_DRAW_BUFFER3_ARB
    , gl_VERTEX_PROGRAM_TWO_SIDE_NV
    , gl_VERTEX_ARRAY_STORAGE_HINT_APPLE
    , gl_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
    , gl_ACTIVE_SUBROUTINES
    , gl_RGBA8_SNORM
    , gl_LIGHTEN_KHR
    , gl_LUMINANCE4_ALPHA4
    , gl_DOT_PRODUCT_PASS_THROUGH_NV
    , gl_LUMINANCE12_ALPHA4_EXT
    , gl_REG_1_ATI
    , gl_YCBCR_MESA
    , gl_TEXTURE_VIEW_NUM_LEVELS
    , gl_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
    , gl_SPRITE_SGIX
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
    , gl_LUMINANCE8_SNORM
    , gl_VIEW_CLASS_96_BITS
    , gl_AUX_DEPTH_STENCIL_APPLE
    , gl_TEXTURE_IMAGE_FORMAT
    , gl_R16_SNORM
    , gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    , gl_UNSIGNED_BYTE_2_3_3_REV_EXT
    , gl_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
    , gl_QUERY_BY_REGION_WAIT_NV
    , gl_LIGHT6
    , gl_RGBA_INTEGER_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_INDEX
    , gl_EYE_POINT_SGIS
    , gl_FLOAT_MAT4x3
    , gl_INDEX_MATERIAL_PARAMETER_EXT
    , gl_OUTPUT_TEXTURE_COORD30_EXT
    , gl_LUMINANCE8_ALPHA8_OES
    , gl_COLOR_ATTACHMENT2
    , gl_MAX_DEBUG_MESSAGE_LENGTH_KHR
    , gl_NORMAL_ARRAY_STRIDE
    , gl_ALPHA_TEST_QCOM
    , gl_TRIANGLE_STRIP_ADJACENCY_ARB
    , gl_PIXEL_MAP_R_TO_R
    , gl_TEXTURE_WIDTH
    , gl_ALPHA_TEST_FUNC_QCOM
    , gl_FORMAT_SUBSAMPLE_244_244_OML
    , gl_Q
    , gl_SAMPLE_MASK_VALUE_NV
    , gl_MATRIX18_ARB
    , gl_CONSTANT_BORDER_HP
    , gl_DRAW_BUFFER1_NV
    , gl_PERFQUERY_COUNTER_TIMESTAMP_INTEL
    , gl_FRAGMENT_LIGHT7_SGIX
    , gl_CLAMP_TO_BORDER_ARB
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    , gl_MAX_ELEMENTS_INDICES_EXT
    , gl_FEEDBACK_BUFFER_TYPE
    , gl_PIXEL_MIN_FILTER_EXT
    , gl_TEXTURE3
    , gl_MAP1_VERTEX_ATTRIB3_4_NV
    , gl_PIXEL_MAP_I_TO_B_SIZE
    , gl_SRGB8_ALPHA8
    , gl_INTENSITY32I_EXT
    , gl_UNPACK_SKIP_PIXELS
    , gl_GLYPH_VERTICAL_BEARING_Y_BIT_NV
    , gl_UNSIGNED_INT_ATOMIC_COUNTER
    , gl_LUMINANCE_ALPHA16F_ARB
    , gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
    , gl_PROGRAM_BINARY_ANGLE
    , gl_RGB8UI_EXT
    , gl_VARIANT_ARRAY_TYPE_EXT
    , gl_Z400_BINARY_AMD
    , gl_OFFSET_TEXTURE_BIAS_NV
    , gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
    , gl_DOT3_RGB_EXT
    , gl_OUTPUT_TEXTURE_COORD23_EXT
    , gl_PERFQUERY_COUNTER_RAW_INTEL
    , gl_COMPUTE_SHADER
    , gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
    , gl_DUAL_LUMINANCE_ALPHA8_SGIS
    , gl_CLIENT_ATTRIB_STACK_DEPTH
    , gl_TEXTURE_BINDING_BUFFER
    , gl_QUERY_BY_REGION_NO_WAIT_INVERTED
    , gl_DRAW_BUFFER7_NV
    , gl_MAX_MULTISAMPLE_COVERAGE_MODES_NV
    , gl_RENDERBUFFER_BLUE_SIZE_OES
    , gl_UNSIGNED_INT_2_10_10_10_REV
    , gl_UNSIGNED_INT_IMAGE_2D_RECT_EXT
    , gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR
    , gl_MAX_VERTEX_ATTRIB_STRIDE
    , gl_MODELVIEW1_MATRIX_EXT
    , gl_PRIMARY_COLOR_EXT
    , gl_LINEAR_MIPMAP_LINEAR
    , gl_ABGR_EXT
    , gl_MAP1_VERTEX_ATTRIB8_4_NV
    , gl_VERTEX_ATTRIB_BINDING
    , gl_MAX_PROGRAM_RESULT_COMPONENTS_NV
    , gl_MIN_SAMPLE_SHADING_VALUE_OES
    , gl_DRAW_INDIRECT_UNIFIED_NV
    , gl_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
    , gl_SAMPLE_POSITION
    , gl_MODULATE_SIGNED_ADD_ATI
    , gl_RENDERBUFFER_GREEN_SIZE_EXT
    , gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
    , gl_MATRIX7_ARB
    , gl_PROGRAM_BINARY_FORMATS
    , gl_DUAL_LUMINANCE4_SGIS
    , gl_TRANSFORM_FEEDBACK_BUFFER
    , gl_COLOR_ATTACHMENT13
    , gl_VERTEX_ATTRIB_ARRAY0_NV
    , gl_IMAGE_BINDING_LEVEL
    , gl_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
    , gl_SPRITE_AXIS_SGIX
    , gl_MAP_ATTRIB_V_ORDER_NV
    , gl_UNSIGNED_INT_24_8_MESA
    , gl_DST_ALPHA
    , gl_SAMPLER_CUBE_MAP_ARRAY_EXT
    , gl_DUAL_ALPHA12_SGIS
    , gl_INTENSITY4_EXT
    , gl_DRAW_PIXEL_TOKEN
    , gl_TESS_EVALUATION_SHADER_BIT_EXT
    , gl_DRAW_BUFFER6
    , gl_COLOR_TABLE_INTENSITY_SIZE_SGI
    , gl_FOG_COLOR
    , gl_IMAGE_CLASS_2_X_32
    , gl_BUFFER_SERIALIZED_MODIFY_APPLE
    , gl_POLYGON_OFFSET_LINE
    , gl_UNSIGNED_INT_SAMPLER_3D_EXT
    , gl_CONSTANT_BORDER
    , gl_PATH_STENCIL_REF_NV
    , gl_TEXTURE29_ARB
    , gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    , gl_FLOAT_MAT2x3
    , gl_OPERAND2_ALPHA_ARB
    , gl_VIEW_CLASS_8_BITS
    , gl_TEXTURE_COORD_ARRAY_STRIDE_EXT
    , gl_TEXTURE_LO_SIZE_NV
    , gl_MULTISAMPLE_COVERAGE_MODES_NV
    , gl_NAMED_STRING_LENGTH_ARB
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES
    , gl_UNSIGNED_INT_SAMPLER_BUFFER
    , gl_FOG_COORD_ARRAY_POINTER
    , gl_RESCALE_NORMAL
    , gl_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
    , gl_ALPHA_TEST_REF_QCOM
    , gl_OP_SET_LT_EXT
    , gl_COLOR_BUFFER_BIT6_QCOM
    , gl_CONVOLUTION_FILTER_SCALE_EXT
    , gl_PIXEL_PACK_BUFFER_BINDING_EXT
    , gl_RGBA2
    , gl_RESAMPLE_ZERO_FILL_SGIX
    , gl_INVALID_VALUE
    , gl_VIEW_CLASS_S3TC_DXT5_RGBA
    , gl_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
    , gl_INDEX_ARRAY_TYPE
    , gl_PROGRAM_INSTRUCTIONS_ARB
    , gl_ACCUM_ADJACENT_PAIRS_NV
    , gl_RGBA2_EXT
    , gl_SKIP_DECODE_EXT
    , gl_COLOR_BUFFER_BIT7_QCOM
    , gl_RG8I
    , gl_RENDERBUFFER_OES
    , gl_LINES_ADJACENCY
    , gl_PROXY_TEXTURE_CUBE_MAP_ARB
    , gl_FRAMEBUFFER_BINDING
    , gl_MIRRORED_REPEAT_OES
    , gl_DEPTH_FUNC
    , gl_COORD_REPLACE_NV
    , gl_LINEAR_SHARPEN_SGIS
    , gl_POLYGON
    , gl_VERSION
    , gl_ELEMENT_ARRAY_POINTER_APPLE
    , gl_UNPACK_LSB_FIRST
    , gl_DOUBLE_MAT2
    , gl_HARDLIGHT_KHR
    , gl_BUFFER_MAPPED_ARB
    , gl_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
    , gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
    , gl_PRIMITIVE_ID_NV
    , gl_DITHER
    , gl_STENCIL_INDEX4_OES
    , gl_RESTART_PATH_NV
    , gl_QUERY_BUFFER_AMD
    , gl_RG8
    , gl_EVAL_VERTEX_ATTRIB2_NV
    , gl_UNSIGNED_INT_SAMPLER_1D_ARRAY
    , gl_TRANSFORM_FEEDBACK_BUFFER_START_NV
    , gl_DOUBLE_VEC3_EXT
    , gl_CURRENT_PALETTE_MATRIX_OES
    , gl_FRAMEBUFFER_BARRIER_BIT
    , gl_FRAMEBUFFER_SRGB
    , gl_GEQUAL
    , gl_RGBA32I
    , gl_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
    , gl_MATRIX_INDEX_ARRAY_TYPE_OES
    , gl_PATH_COVER_DEPTH_FUNC_NV
    , gl_COLOR_ATTACHMENT8
    , gl_SAMPLE_COVERAGE_ARB
    , gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB
    , gl_CLIP_ORIGIN
    , gl_TEXTURE_COORD_ARRAY_STRIDE
    , gl_READ_PIXEL_DATA_RANGE_LENGTH_NV
    , gl_SHADER_PIXEL_LOCAL_STORAGE_EXT
    , gl_VIRTUAL_PAGE_SIZE_Z_ARB
    , gl_R11F_G11F_B10F_EXT
    , gl_TEXTURE_3D_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_START_EXT
    , gl_PIXEL_COUNT_NV
    , gl_RG_EXT
    , gl_IMAGE_CUBE_MAP_ARRAY
    , gl_SPRITE_EYE_ALIGNED_SGIX
    , gl_POST_CONVOLUTION_GREEN_SCALE
    , gl_COMPRESSED_INTENSITY_ARB
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Z_OES
    , gl_EYE_PLANE
    , gl_WAIT_FAILED_APPLE
    , gl_INT_SAMPLER_3D_EXT
    , gl_COLOR_ARRAY_TYPE_EXT
    , gl_MAP2_VERTEX_ATTRIB12_4_NV
    , gl_RGBA8I
    , gl_VERTEX_ARRAY_SIZE_EXT
    , gl_RGB32F
    , gl_2X_BIT_ATI
    , gl_TRANSPOSE_TEXTURE_MATRIX
    , gl_422_AVERAGE_EXT
    , gl_COMBINER0_NV
    , gl_LUMINANCE_ALPHA32F_EXT
    , gl_RGBA_FLOAT_MODE_ARB
    , gl_ARRAY_OBJECT_BUFFER_ATI
    , gl_T2F_C3F_V3F
    , gl_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV
    , gl_COMPRESSED_RGBA_ASTC_5x4_KHR
    , gl_CONTRAST_NV
    , gl_422_EXT
    , gl_PERFMON_RESULT_AMD
    , gl_IMAGE_1D_ARRAY_EXT
    , gl_POLYGON_OFFSET_UNITS
    , gl_PALETTE8_RGBA8_OES
    , gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT
    , gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT
    , gl_DRAW_BUFFER3
    , gl_OUTPUT_TEXTURE_COORD1_EXT
    , gl_STATIC_DRAW
    , gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
    , gl_CON_31_ATI
    , gl_R
    , gl_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
    , gl_FLOAT_R16_NV
    , gl_ACCUM_CLEAR_VALUE
    , gl_COLOR_ATTACHMENT6_NV
    , gl_CLIP_DISTANCE6_APPLE
    , gl_INT8_VEC4_NV
    , gl_COUNT_DOWN_NV
    , gl_PRIMITIVES_SUBMITTED_ARB
    , gl_TEXTURE20
    , gl_ZOOM_Y
    , gl_COLOR_INDEX
    , gl_UNSIGNED_INT_SAMPLER_BUFFER_EXT
    , gl_DEBUG_SOURCE_WINDOW_SYSTEM
    , gl_MINMAX
    , gl_LUMINANCE16_ALPHA16
    , gl_POST_COLOR_MATRIX_ALPHA_BIAS
    , gl_DEPTH_ATTACHMENT_OES
    , gl_TYPE
    , gl_TOP_LEVEL_ARRAY_SIZE
    , gl_TEXTURE_GREEN_TYPE
    , gl_MODELVIEW23_ARB
    , gl_PRESENT_DURATION_NV
    , gl_TEXCOORD3_BIT_PGI
    , gl_RGBA8UI
    , gl_MATRIX_PALETTE_OES
    , gl_WEIGHT_ARRAY_BUFFER_BINDING
    , gl_COMPUTE_TEXTURE
    , gl_MODULATE
    , gl_NORMAL_MAP_NV
    , gl_STENCIL_BACK_REF
    , gl_SCISSOR_TEST
    , gl_TEXTURE10
    , gl_OUTPUT_TEXTURE_COORD14_EXT
    , gl_PRESENT_TIME_NV
    , gl_COMPRESSED_RG11_EAC_OES
    , gl_RENDERBUFFER_STENCIL_SIZE
    , gl_POST_CONVOLUTION_ALPHA_BIAS_EXT
    , gl_QUERY_BUFFER_BINDING
    , gl_EVAL_FRACTIONAL_TESSELLATION_NV
    , gl_PIXEL_TILE_HEIGHT_SGIX
    , gl_NUM_SAMPLE_COUNTS
    , gl_LUMINANCE4_EXT
    , gl_ASYNC_HISTOGRAM_SGIX
    , gl_MODELVIEW8_ARB
    , gl_COMPUTE_SHADER_BIT
    , gl_CLAMP_FRAGMENT_COLOR_ARB
    , gl_CURRENT_BINORMAL_EXT
    , gl_SLICE_ACCUM_SUN
    , gl_OUTPUT_TEXTURE_COORD6_EXT
    , gl_VARIANT_ARRAY_STRIDE_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    , gl_SAMPLER_CUBE_MAP_ARRAY_ARB
    , gl_VERTEX_ATTRIB_RELATIVE_OFFSET
    , gl_STENCIL_BACK_PASS_DEPTH_PASS
    , gl_TEXTURE0_ARB
    , gl_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
    , gl_INT_IMAGE_BUFFER
    , gl_PROXY_POST_CONVOLUTION_COLOR_TABLE
    , gl_SAMPLER_2D_RECT_ARB
    , gl_PALETTE8_RGB5_A1_OES
    , gl_LUMINANCE_ALPHA_FLOAT32_ATI
    , gl_RGB4
    , gl_SHADER
    , gl_TEXTURE22_ARB
    , gl_LINES_ADJACENCY_ARB
    , gl_PATH_FILL_MODE_NV
    , gl_STENCIL_INDEX1_OES
    , gl_VERTEX_PROGRAM_TWO_SIDE_ARB
    , gl_IMAGE_ROTATE_ORIGIN_X_HP
    , gl_VERSION_ES_CM_1_1
    , gl_TEXTURE_IMMUTABLE_LEVELS
    , gl_TEXTURE_FETCH_BARRIER_BIT
    , gl_FRAGMENT_SUBROUTINE_UNIFORM
    , gl_VERTEX4_BIT_PGI
    , gl_DEBUG_CALLBACK_FUNCTION_KHR
    , gl_TEXTURE_TARGET
    , gl_MAP2_VERTEX_3
    , gl_MODELVIEW4_ARB
    , gl_BUFFER_ACCESS_FLAGS
    , gl_MATRIX_INDEX_ARRAY_TYPE_ARB
    , gl_LINE_SMOOTH
    , gl_INTENSITY32F_ARB
    , gl_OUTPUT_TEXTURE_COORD31_EXT
    , gl_PROGRAM_BINARY_LENGTH
    , gl_DRAW_BUFFER2_NV
    , gl_DOUBLE_EXT
    , gl_CLIP_NEAR_HINT_PGI
    , gl_TEXTURE_DS_SIZE_NV
    , gl_MAX_VERTEX_UNIFORM_BLOCKS
    , gl_COLOR_TABLE_BLUE_SIZE
    , gl_CURRENT_VERTEX_EXT
    , gl_SWIZZLE_STRQ_ATI
    , gl_MAX_CUBE_MAP_TEXTURE_SIZE
    , gl_QUADS_EXT
    , gl_DRAW_BUFFER11_NV
    , gl_PIXEL_PACK_BUFFER_BINDING
    , gl_LOCATION_COMPONENT
    , gl_CIRCULAR_CCW_ARC_TO_NV
    , gl_COMBINER_AB_OUTPUT_NV
    , gl_AUX1
    , gl_TEXTURE_NORMAL_EXT
    , gl_TEXTURE_ENV_MODE
    , gl_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
    , gl_OBJECT_TYPE_ARB
    , gl_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX
    , gl_LINE_QUALITY_HINT_SGIX
    , gl_TESS_GEN_MODE_EXT
    , gl_WEIGHT_ARRAY_TYPE_OES
    , gl_VERTEX_ARRAY_LIST_STRIDE_IBM
    , gl_COLOR_ATTACHMENT3_NV
    , gl_IMAGE_COMPATIBILITY_CLASS
    , gl_COMPRESSED_RGBA8_ETC2_EAC
    , gl_MEDIUM_INT
    , gl_INTERNALFORMAT_SUPPORTED
    , gl_GEOMETRY_SHADER_BIT
    , gl_SPARSE_STORAGE_BIT_ARB
    , gl_PROXY_HISTOGRAM_EXT
    , gl_YCRCBA_SGIX
    , gl_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
    , gl_MAT_DIFFUSE_BIT_PGI
    , gl_IMAGE_1D_EXT
    , gl_MAX_SPOT_EXPONENT_NV
    , gl_TIMEOUT_EXPIRED
    , gl_LINEAR
    , gl_MAX_SAMPLES_NV
    , gl_DEBUG_SOURCE_APPLICATION
    , gl_INT_IMAGE_CUBE_EXT
    , gl_DEBUG_TYPE_OTHER
    , gl_SPOT_CUTOFF
    , gl_DRAW_FRAMEBUFFER_BINDING_ANGLE
    , gl_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    , gl_PATCHES_EXT
    , gl_REG_21_ATI
    , gl_MATRIX12_ARB
    , gl_FRONT_FACE
    , gl_FRAGMENT_DEPTH_EXT
    , gl_TEXTURE_2D_BINDING_EXT
    , gl_COVERAGE_AUTOMATIC_NV
    , gl_DEBUG_CATEGORY_DEPRECATION_AMD
    , gl_CONTEXT_LOST_WEBGL
    , gl_FLOAT_MAT3x4
    , gl_TEXTURE_BUFFER_OFFSET
    , gl_TRANSFORM_FEEDBACK_BINDING_NV
    , gl_NORMAL_ARRAY
    , gl_REG_31_ATI
    , gl_PIXEL_MAP_R_TO_R_SIZE
    , gl_RENDERBUFFER_BLUE_SIZE_EXT
    , gl_LIST_BIT
    , gl_MAX_COMBINED_UNIFORM_BLOCKS
    , gl_UNPACK_SKIP_VOLUMES_SGIS
    , gl_COPY
    , gl_MIRROR_CLAMP_TO_BORDER_EXT
    , gl_INT_SAMPLER_2D_RECT_EXT
    , gl_POINT_SMOOTH
    , gl_TEXTURE19
    , gl_POST_CONVOLUTION_ALPHA_SCALE
    , gl_MAX_TEXTURE_LOD_BIAS_EXT
    , gl_RGBA32F_EXT
    , gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG
    , gl_MAX_FRAGMENT_INPUT_COMPONENTS
    , gl_COLOR_TABLE_RED_SIZE
    , gl_NORMAL_ARRAY_COUNT_EXT
    , gl_OUTPUT_TEXTURE_COORD7_EXT
    , gl_MAX_SHININESS_NV
    , gl_BLUE_NV
    , gl_DEBUG_OUTPUT
    , gl_COLOR_ATTACHMENT14_NV
    , gl_UNIFORM_IS_ROW_MAJOR
    , gl_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
    , gl_DRAW_BUFFER9_EXT
    , gl_RGB_INTEGER_EXT
    , gl_VARIANT_VALUE_EXT
    , gl_MAX_ATOMIC_COUNTER_BUFFER_SIZE
    , gl_DUAL_LUMINANCE_ALPHA4_SGIS
    , gl_SYNC_CONDITION
    , gl_REG_18_ATI
    , gl_FRAGMENT_LIGHT1_SGIX
    , gl_SAMPLER_2D_ARRAY_SHADOW_EXT
    , gl_DOT_PRODUCT_DEPTH_REPLACE_NV
    , gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
    , gl_MAP2_VERTEX_ATTRIB6_4_NV
    , gl_COLOR_WRITEMASK
    , gl_DISPLAY_LIST
    , gl_4X_BIT_ATI
    , gl_DUDV_ATI
    , gl_SMALL_CW_ARC_TO_NV
    , gl_GUILTY_CONTEXT_RESET_EXT
    , gl_VIDEO_CAPTURE_FRAME_WIDTH_NV
    , gl_FRAGMENT_SUBROUTINE
    , gl_TEXTURE_IMAGE_VALID_QCOM
    , gl_TEXTURE_ALPHA_SIZE_EXT
    , gl_UNSIGNED_SHORT_4_4_4_4_EXT
    , gl_STENCIL_CLEAR_VALUE
    , gl_COMPRESSED_SLUMINANCE_ALPHA_EXT
    , gl_ATOMIC_COUNTER_BUFFER_START
    , gl_RGB16F_ARB
    , gl_UNSIGNED_INT_IMAGE_BUFFER_EXT
    , gl_FOG_COORD
    , gl_UNKNOWN_CONTEXT_RESET_EXT
    , gl_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB
    , gl_UNIFORM_BARRIER_BIT
    , gl_OVERLAY_KHR
    , gl_OUTPUT_TEXTURE_COORD16_EXT
    , gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
    , gl_VERTEX_STREAM3_ATI
    , gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    , gl_MAX_COMPUTE_ATOMIC_COUNTERS
    , gl_RENDERBUFFER_FREE_MEMORY_ATI
    , gl_TEXTURE_COORD_ARRAY_POINTER
    , gl_SLUMINANCE_ALPHA
    , gl_MAX_UNIFORM_BLOCK_SIZE
    , gl_COMPRESSED_SIGNED_RED_RGTC1
    , gl_READ_ONLY_ARB
    , gl_ALPHA8_SNORM
    , gl_DEPTH_CLAMP_FAR_AMD
    , gl_SPARE0_PLUS_SECONDARY_COLOR_NV
    , gl_MATRIX_INDEX_ARRAY_POINTER_ARB
    , gl_DEPTH_ATTACHMENT_EXT
    , gl_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
    , gl_BACK_LEFT
    , gl_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
    , gl_BROWSER_DEFAULT_WEBGL
    , gl_PIXEL_TEX_GEN_MODE_SGIX
    , gl_CON_13_ATI
    , gl_REFERENCED_BY_VERTEX_SHADER
    , gl_PIXEL_SUBSAMPLE_4444_SGIX
    , gl_MAX_CLIP_PLANES_IMG
    , gl_POLYGON_MODE
    , gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
    , gl_COMPARE_REF_TO_TEXTURE_EXT
    , gl_MODELVIEW21_ARB
    , gl_STATE_RESTORE
    , gl_SECONDARY_COLOR_ARRAY_STRIDE_EXT
    , gl_LIST_PRIORITY_SGIX
    , gl_ATTRIB_ARRAY_POINTER_NV
    , gl_PERFQUERY_GLOBAL_CONTEXT_INTEL
    , gl_TRACE_TEXTURES_BIT_MESA
    , gl_CONVOLUTION_BORDER_COLOR_HP
    , gl_BOOL_VEC4_ARB
    , gl_STENCIL_BACK_WRITEMASK
    , gl_SURFACE_MAPPED_NV
    , gl_DSDT_MAG_VIB_NV
    , gl_PIXEL_MODE_BIT
    , gl_POINT_FADE_THRESHOLD_SIZE_SGIS
    , gl_VERTEX_ATTRIB_ARRAY10_NV
    , gl_UNSIGNED_INT_IMAGE_1D_ARRAY
    , gl_MULTISAMPLE_BIT_ARB
    , gl_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
    , gl_MAX_3D_TEXTURE_SIZE_EXT
    , gl_2_BYTES
    , gl_RGBA_DXT5_S3TC
    , gl_SAMPLE_COVERAGE_VALUE_ARB
    , gl_EDGE_FLAG_ARRAY_LIST_IBM
    , gl_MATRIX27_ARB
    , gl_FRAGMENT_PROGRAM_NV
    , gl_SAMPLE_PATTERN_EXT
    , gl_MULTISAMPLE_BIT
    , gl_DRAW_BUFFER3_ATI
    , gl_STACK_OVERFLOW
    , gl_INT64_NV
    , gl_SECONDARY_COLOR_ARRAY_TYPE_EXT
    , gl_REFERENCED_BY_TESS_CONTROL_SHADER_EXT
    , gl_MAX_FRAMEBUFFER_WIDTH
    , gl_CLAMP_VERTEX_COLOR
    , gl_READ_FRAMEBUFFER_BINDING
    , gl_PIXEL_MAP_B_TO_B_SIZE
    , gl_STREAM_RASTERIZATION_AMD
    , gl_CON_16_ATI
    , gl_FULL_SUPPORT
    , gl_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
    , gl_MAX_DEBUG_GROUP_STACK_DEPTH_KHR
    , gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
    , gl_COLOR_BUFFER_BIT0_QCOM
    , gl_PN_TRIANGLES_ATI
    , gl_VERTEX_ATTRIB_ARRAY15_NV
    , gl_MITER_REVERT_NV
    , gl_PROVOKING_VERTEX_EXT
    , gl_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
    , gl_DEPTH
    , gl_RGB12_EXT
    , gl_TRACE_PRIMITIVES_BIT_MESA
    , gl_RGB_RAW_422_APPLE
    , gl_FUNC_REVERSE_SUBTRACT
    , gl_SECONDARY_COLOR_ARRAY_EXT
    , gl_PACK_SUBSAMPLE_RATE_SGIX
    , gl_MULTISAMPLE_BUFFER_BIT7_QCOM
    , gl_UNPACK_RESAMPLE_SGIX
    , gl_FLOAT_MAT2
    , gl_UNIFORM_BUFFER
    , gl_CON_25_ATI
    , gl_MAX_VARYING_COMPONENTS
    , gl_C4UB_V3F
    , gl_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
    , gl_COMP_BIT_ATI
    , gl_MATRIX7_NV
    , gl_COMPRESSED_SRGB8_ETC2_OES
    , gl_DRAW_BUFFER8
    , gl_TEXTURE_BINDING_BUFFER_ARB
    , gl_VERTICAL_LINE_TO_NV
    , gl_GENERATE_MIPMAP_HINT_SGIS
    , gl_POST_COLOR_MATRIX_RED_BIAS
    , gl_LUMINANCE16_EXT
    , gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING
    , gl_PATCH_DEFAULT_INNER_LEVEL
    , gl_COLOR_INDEX12_EXT
    , gl_CONIC_CURVE_TO_NV
    , gl_NAME_STACK_DEPTH
    , gl_CLIP_DISTANCE3
    , gl_FOG_COORDINATE_ARRAY_LIST_IBM
    , gl_TEXTURE_GEN_MODE_OES
    , gl_R16F_EXT
    , gl_COMPRESSED_SRGB_ALPHA_EXT
    , gl_DEBUG_SEVERITY_NOTIFICATION
    , gl_TESS_GEN_VERTEX_ORDER_EXT
    , gl_MAX_TEXTURE_SIZE
    , gl_UNDEFINED_APPLE
    , gl_SGX_BINARY_IMG
    , gl_PIXEL_MAP_S_TO_S
    , gl_IMAGE_BINDING_ACCESS
    , gl_RED_BIT_ATI
    , gl_HSL_LUMINOSITY_NV
    , gl_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
    , gl_LOW_INT
    , gl_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV
    , gl_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
    , gl_RENDERBUFFER_INTERNAL_FORMAT_EXT
    , gl_OUTPUT_TEXTURE_COORD12_EXT
    , gl_RELATIVE_CUBIC_CURVE_TO_NV
    , gl_SRC_ALPHA_SATURATE
    , gl_DRAW_BUFFER15_EXT
    , gl_TRIANGLE_STRIP_ADJACENCY
    , gl_TEXTURE_COORD_ARRAY_LENGTH_NV
    , gl_UNSIGNED_SHORT_4_4_4_4_REV_IMG
    , gl_PROGRAM_BINARY_LENGTH_OES
    , gl_LINE_STIPPLE_PATTERN
    , gl_PERFQUERY_FLUSH_INTEL
    , gl_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
    , gl_RGBA4_OES
    , gl_DATA_BUFFER_AMD
    , gl_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
    , gl_NORMAL_BIT_PGI
    , gl_SOURCE1_RGB_EXT
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
    , gl_MAX_VERTEX_IMAGE_UNIFORMS
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
    , gl_PIXEL_MAP_I_TO_B
    , gl_IMAGE_MAG_FILTER_HP
    , gl_FLOAT_MAT3x2_NV
    , gl_DRAW_BUFFER0_ARB
    , gl_DEPTH_RANGE
    , gl_INDEX_MODE
    , gl_DEBUG_LOGGED_MESSAGES
    , gl_COMPRESSED_RGBA_ASTC_6x5x5_OES
    , gl_DEBUG_SEVERITY_MEDIUM_AMD
    , gl_UNPACK_PREMULTIPLY_ALPHA_WEBGL
    , gl_FRAMEBUFFER_UNDEFINED_OES
    , gl_LINE_STRIP_ADJACENCY
    , gl_BLEND_SRC_ALPHA_EXT
    , gl_DRAW_BUFFER11_ATI
    , gl_FOG_COORD_ARRAY_BUFFER_BINDING
    , gl_MINUS_NV
    , gl_TEXTURE_GEN_MODE
    , gl_UNIFORM_BUFFER_BINDING_EXT
    , gl_CLIP_DISTANCE0
    , gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
    , gl_OUT_OF_MEMORY
    , gl_CURRENT_SECONDARY_COLOR
    , gl_DONT_CARE
    , gl_VERTEX_ATTRIB_MAP2_ORDER_APPLE
    , gl_CND_ATI
    , gl_MAP_INVALIDATE_BUFFER_BIT_EXT
    , gl_NUM_PROGRAM_BINARY_FORMATS
    , gl_ANY_SAMPLES_PASSED
    , gl_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
    , gl_TEXTURE_1D_STACK_MESAX
    , gl_VERTEX_ARRAY_TYPE
    , gl_TRACK_MATRIX_TRANSFORM_NV
    , gl_TEXTURE0
    , gl_DEBUG_SEVERITY_HIGH_AMD
    , gl_PER_STAGE_CONSTANTS_NV
    , gl_UNSIGNED_SHORT_1_5_5_5_REV_EXT
    , gl_DEBUG_SOURCE_SHADER_COMPILER_KHR
    , gl_PATH_PROJECTION_STACK_DEPTH_NV
    , gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    , gl_WEIGHT_ARRAY_POINTER_ARB
    , gl_DEPTH_TEXTURE_MODE
    , gl_FLOAT_RGB32_NV
    , gl_COMPRESSED_RG
    , gl_RENDERBUFFER_RED_SIZE
    , gl_OUTPUT_TEXTURE_COORD0_EXT
    , gl_VERTEX_ELEMENT_SWIZZLE_AMD
    , gl_UTF8_NV
    , gl_SRC_ALPHA
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
    , gl_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
    , gl_CONSTANT_ATTENUATION
    , gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
    , gl_RENDERBUFFER_INTERNAL_FORMAT
    , gl_DOUBLE_MAT2x3
    , gl_CON_12_ATI
    , gl_R32UI
    , gl_VERTEX_PROGRAM_POINT_SIZE_NV
    , gl_RELATIVE_VERTICAL_LINE_TO_NV
    , gl_TEXTURE_COMPRESSION_HINT_ARB
    , gl_MATRIX14_ARB
    , gl_STATIC_READ_ARB
    , gl_HISTOGRAM_FORMAT
    , gl_DEBUG_CATEGORY_SHADER_COMPILER_AMD
    , gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
    , gl_PRIMITIVE_RESTART_INDEX
    , gl_MATRIX23_ARB
    , gl_DRAW_INDIRECT_BUFFER
    , gl_MIN_PROGRAM_TEXEL_OFFSET
    , gl_SIGNED_INTENSITY_NV
    , gl_PATH_MAX_PROJECTION_STACK_DEPTH_NV
    , gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR
    , gl_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
    , gl_PACK_ROW_BYTES_APPLE
    , gl_SHADER_BINARY_FORMATS
    , gl_VIEW_CLASS_RGTC2_RG
    , gl_UNSIGNED_SHORT_4_4_4_4_REV_EXT
    , gl_ALPHA_MAX_CLAMP_INGR
    , gl_SAMPLER_3D_OES
    , gl_MAX_CONVOLUTION_HEIGHT
    , gl_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
    , gl_FRAGMENT_ALPHA_MODULATE_IMG
    , gl_OUTPUT_VERTEX_EXT
    , gl_MULTISAMPLE
    , gl_COLOR_MATERIAL_FACE
    , gl_COVERAGE_MODULATION_TABLE_SIZE_NV
    , gl_REG_3_ATI
    , gl_VERTEX_ARRAY_RANGE_LENGTH_NV
    , gl_MODELVIEW15_ARB
    , gl_PARALLEL_ARRAYS_INTEL
    , gl_OFFSET_TEXTURE_SCALE_NV
    , gl_RENDERBUFFER_ALPHA_SIZE_EXT
    , gl_MAX_VERTEX_UNIFORM_VECTORS
    , gl_SRC_IN_NV
    , gl_LUMINANCE_SNORM
    , gl_TESS_GEN_SPACING_EXT
    , gl_SUBTRACT_ARB
    , gl_OUTPUT_TEXTURE_COORD25_EXT
    , gl_TEXTURE_UPDATE_BARRIER_BIT_EXT
    , gl_IMAGE_ROTATE_ORIGIN_Y_HP
    , gl_CLIPPING_OUTPUT_PRIMITIVES_ARB
    , gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
    , gl_TEXTURE_OBJECT_VALID_QCOM
    , gl_MATRIX0_ARB
    , gl_PATH_MODELVIEW_NV
    , gl_HISTOGRAM_WIDTH
    , gl_COORD_REPLACE
    , gl_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
    , gl_RESAMPLE_REPLICATE_OML
    , gl_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
    , gl_MATRIX_STRIDE
    , gl_DEBUG_CATEGORY_PERFORMANCE_AMD
    , gl_CLIP_DISTANCE3_APPLE
    , gl_RGB5
    , gl_OUTPUT_TEXTURE_COORD26_EXT
    , gl_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
    , gl_NORMAL_ARRAY_LIST_STRIDE_IBM
    , gl_COLOR_SUM_CLAMP_NV
    , gl_MAP_INVALIDATE_BUFFER_BIT
    , gl_RESCALE_NORMAL_EXT
    , gl_VIEW_COMPATIBILITY_CLASS
    , gl_OFFSET_HILO_TEXTURE_2D_NV
    , gl_TEXTURE_BORDER_COLOR_EXT
    , gl_UNSIGNED_INT_5_9_9_9_REV_APPLE
    , gl_NUM_VIRTUAL_PAGE_SIZES_ARB
    , gl_OP_CROSS_PRODUCT_EXT
    , gl_VERTEX_WEIGHT_ARRAY_POINTER_EXT
    , gl_SINGLE_COLOR
    , gl_VERTEX_ARRAY_KHR
    , gl_MATRIX13_ARB
    , gl_FOG_OFFSET_SGIX
    , gl_FOG_COORDINATE_SOURCE_EXT
    , gl_UNIFORM_BUFFER_ADDRESS_NV
    , gl_OBJECT_PLANE
    , gl_ACTIVE_ATTRIBUTES
    , gl_BGR_EXT
    , gl_BUMP_NUM_TEX_UNITS_ATI
    , gl_TEXTURE_1D_ARRAY_EXT
    , gl_FONT_UNINTELLIGIBLE_NV
    , gl_OCCLUSION_TEST_RESULT_HP
    , gl_ATTACHED_SHADERS
    , gl_STENCIL_INDEX1
    , gl_REFERENCED_BY_FRAGMENT_SHADER
    , gl_SAMPLER_1D_SHADOW_ARB
    , gl_FRAGMENTS_INSTRUMENT_SGIX
    , gl_TRIANGLES_ADJACENCY
    , gl_COLOR_FLOAT_APPLE
    , gl_INTENSITY16I_EXT
    , gl_DOUBLE_MAT4x2
    , gl_CURRENT_COLOR
    , gl_ROUNDED_RECT_NV
    , gl_NO_ERROR
    , gl_DRAW_BUFFER14_ARB
    , gl_OUTPUT_TEXTURE_COORD10_EXT
    , gl_MODELVIEW_PROJECTION_NV
    , gl_DYNAMIC_READ
    , gl_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
    , gl_POLYGON_STIPPLE_BIT
    , gl_COLOR_ARRAY
    , gl_COLOR_ATTACHMENT7_NV
    , gl_REG_17_ATI
    , gl_TEXTURE_1D
    , gl_LINEARLIGHT_NV
    , gl_QUERY_NO_WAIT_NV
    , gl_BUFFER_MAP_POINTER_OES
    , gl_STENCIL_ATTACHMENT_EXT
    , gl_BGRA8_EXT
    , gl_COLOR_ARRAY_ADDRESS_NV
    , gl_TANGENT_ARRAY_POINTER_EXT
    , gl_POLYGON_OFFSET_POINT
    , gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
    , gl_GEOMETRY_VERTICES_OUT_ARB
    , gl_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
    , gl_PROGRAM_POINT_SIZE_ARB
    , gl_GUILTY_CONTEXT_RESET_KHR
    , gl_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV
    , gl_LIGHT_ENV_MODE_SGIX
    , gl_DEBUG_OUTPUT_KHR
    , gl_SAMPLER_1D
    , gl_CLAMP_TO_BORDER_EXT
    , gl_IMAGE_2D_MULTISAMPLE_EXT
    , gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
    , gl_RECIP_ADD_SIGNED_ALPHA_IMG
    , gl_COLOR_ATTACHMENT8_NV
    , gl_LINE_STIPPLE_REPEAT
    , gl_FRAGMENT_MATERIAL_EXT
    , gl_HISTOGRAM_EXT
    , gl_TEXTURE_MAX_LEVEL_APPLE
    , gl_CAVEAT_SUPPORT
    , gl_MAX_TESS_GEN_LEVEL_EXT
    , gl_STACK_UNDERFLOW_KHR
    , gl_RASTER_SAMPLES_EXT
    , gl_COPY_WRITE_BUFFER_BINDING
    , gl_UNSIGNED_INT_8_8_8_8_REV
    , gl_PALETTE8_RGB8_OES
    , gl_RELATIVE_LINE_TO_NV
    , gl_ZOOM_X
    , gl_MAX_PROJECTION_STACK_DEPTH
    , gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
    , gl_OP_SUB_EXT
    , gl_RENDERBUFFER_SAMPLES_ANGLE
    , gl_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
    , gl_COLOR_ARRAY_COUNT_EXT
    , gl_PATCH_DEFAULT_OUTER_LEVEL_EXT
    , gl_COUNTER_RANGE_AMD
    , gl_TEXTURE_WIDTH_QCOM
    , gl_COMPRESSED_SIGNED_RG_RGTC2
    , gl_READ_FRAMEBUFFER
    , gl_POLYGON_SMOOTH_HINT
    , gl_ELEMENT_ARRAY_UNIFIED_NV
    , gl_REFLECTION_MAP_OES
    , gl_FIRST_VERTEX_CONVENTION_EXT
    , gl_MODELVIEW17_ARB
    , gl_FUNC_ADD
    , gl_ALPHA_TEST
    , gl_TEXTURE_SHARED_SIZE_EXT
    , gl_FRACTIONAL_ODD_EXT
    , gl_TEXTURE_3D
    , gl_MATRIX_INDEX_ARRAY_OES
    , gl_MAX_DEBUG_LOGGED_MESSAGES_KHR
    , gl_DSDT8_NV
    , gl_FRAMEBUFFER_UNSUPPORTED_OES
    , gl_HARDLIGHT_NV
    , gl_INDEX_TEST_REF_EXT
    , gl_DEBUG_CALLBACK_USER_PARAM_ARB
    , gl_RGBA16F_EXT
    , gl_POLYGON_OFFSET_FACTOR_EXT
    , gl_STENCIL_FAIL
    , gl_COLOR_TABLE_LUMINANCE_SIZE
    , gl_TEXTURE_BINDING
    , gl_INT_VEC3
    , gl_RENDERBUFFER_SAMPLES
    , gl_SHADER_INCLUDE_ARB
    , gl_TRANSFORM_FEEDBACK_NV
    , gl_STRICT_DEPTHFUNC_HINT_PGI
    , gl_DRAW_PIXELS_APPLE
    , gl_MAX_FOG_FUNC_POINTS_SGIS
    , gl_NEVER
    , gl_RGBA12_EXT
    , gl_PATH_DASH_ARRAY_COUNT_NV
    , gl_DEPENDENT_GB_TEXTURE_2D_NV
    , gl_TEXTURE_BUFFER_EXT
    , gl_PALETTE4_RGB8_OES
    , gl_VIRTUAL_PAGE_SIZE_Z_AMD
    , gl_COUNTER_TYPE_AMD
    , gl_SAMPLER_EXTERNAL_OES
    , gl_POINT_FADE_THRESHOLD_SIZE
    , gl_RGB10_A2
    , gl_MATRIX25_ARB
    , gl_8X_BIT_ATI
    , gl_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
    , gl_QUERY_NO_WAIT_INVERTED
    , gl_MODELVIEW19_ARB
    , gl_Z4Y12Z4CB12Z4CR12_444_NV
    , gl_NEGATIVE_W_EXT
    , gl_OUTPUT_TEXTURE_COORD20_EXT
    , gl_TEXTURE_HI_SIZE_NV
    , gl_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
    , gl_SAMPLES_PASSED_ARB
    , gl_UNSIGNED_SHORT_5_6_5_EXT
    , gl_RGBA
    , gl_BUFFER_MAP_POINTER_ARB
    , gl_HINT_BIT
    , gl_MAX_PATCH_VERTICES
    , gl_FOG_COORDINATE_ARRAY_STRIDE
    , gl_MAX_FRAGMENT_UNIFORM_COMPONENTS
    , gl_SOURCE0_RGB_EXT
    , gl_SRC_NV
    , gl_RASTERIZER_DISCARD
    , gl_BLEND_ADVANCED_COHERENT_KHR
    , gl_COMBINE_ARB
    , gl_MOVE_TO_RESETS_NV
    , gl_BUMP_ROT_MATRIX_SIZE_ATI
    , gl_TEXTURE_DEPTH_TYPE_ARB
    , gl_LINEARDODGE_NV
    , gl_IMAGE_CLASS_1_X_16
    , gl_TEXTURE_WRAP_R_OES
    , gl_SHADING_LANGUAGE_VERSION
    , gl_TEXTURE_DEFORMATION_BIT_SGIX
    , gl_VERTEX_ARRAY_COUNT_EXT
    , gl_LUMINANCE_ALPHA8UI_EXT
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES
    , gl_DRAW_BUFFER8_ATI
    , gl_SAMPLER_2D_SHADOW_ARB
    , gl_ALPHA12
    , gl_TEXTURE_BUFFER
    , gl_PROXY_TEXTURE_COLOR_TABLE_SGI
    , gl_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB
    , gl_TEXTURE_WRAP_Q_SGIS
    , gl_SAMPLE_SHADING_OES
    , gl_REGISTER_COMBINERS_NV
    , gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
    , gl_OUTPUT_TEXTURE_COORD2_EXT
    , gl_MAT_COLOR_INDEXES_BIT_PGI
    , gl_TRANSFORM_FEEDBACK_BUFFER_STRIDE
    , gl_COLOR_INDEX2_EXT
    , gl_TEXTURE_BUFFER_OFFSET_EXT
    , gl_WRITEONLY_RENDERING_QCOM
    , gl_INDEX_ARRAY_LIST_IBM
    , gl_TRIANGLES_ADJACENCY_EXT
    , gl_LIGHT0
    , gl_QUARTER_BIT_ATI
    , gl_POINT
    , gl_RGB_FLOAT32_ATI
    , gl_REFERENCE_PLANE_EQUATION_SGIX
    , gl_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
    , gl_SOFTLIGHT_KHR
    , gl_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
    , gl_TEXTURE_SHADOW
    , gl_MAX_INTEGER_SAMPLES
    , gl_RGB16_SNORM
    , gl_MAP2_INDEX
    , gl_ALPHA_MAX_SGIX
    , gl_MIN_SAMPLE_SHADING_VALUE
    , gl_PIXEL_TILE_BEST_ALIGNMENT_SGIX
    , gl_SAMPLE_BUFFERS
    , gl_TEXTURE4
    , gl_OPERAND0_RGB_ARB
    , gl_TEXTURE_MIN_LOD
    , gl_CONTEXT_CORE_PROFILE_BIT
    , gl_RGBA4_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
    , gl_DEBUG_SOURCE_APPLICATION_ARB
    , gl_COMPRESSED_SRGB
    , gl_DEBUG_TYPE_MARKER_KHR
    , gl_RGBA_FLOAT32_APPLE
    , gl_POST_CONVOLUTION_RED_BIAS_EXT
    , gl_CONSTANT_ARB
    , gl_MAX_WIDTH
    , gl_FRAMEZOOM_SGIX
    , gl_ACTIVE_ATOMIC_COUNTER_BUFFERS
    , gl_HI_SCALE_NV
    , gl_PATH_COMMAND_COUNT_NV
    , gl_GENERATE_MIPMAP_HINT
    , gl_PROGRAM_ADDRESS_REGISTERS_ARB
    , gl_COLOR_ATTACHMENT15_EXT
    , gl_CONVOLUTION_WIDTH
    , gl_LINEAR_SHARPEN_ALPHA_SGIS
    , gl_BUFFER_FLUSHING_UNMAP_APPLE
    , gl_GPU_ADDRESS_NV
    , gl_DEPTH_COMPONENTS
    , gl_UNPACK_SKIP_ROWS
    , gl_TEXTURE16
    , gl_MODELVIEW1_ARB
    , gl_IMAGE_2D_ARRAY_EXT
    , gl_RGB
    , gl_MAX_PROGRAM_TEXEL_OFFSET_NV
    , gl_SHADER_IMAGE_LOAD
    , gl_VOLATILE_APPLE
    , gl_POST_CONVOLUTION_GREEN_BIAS_EXT
    , gl_MAX_TRANSFORM_FEEDBACK_BUFFERS
    , gl_BUFFER_KHR
    , gl_INTENSITY8_EXT
    , gl_PROGRAM_NATIVE_ATTRIBS_ARB
    , gl_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
    , gl_TEXTURE_SWIZZLE_B
    , gl_BLEND_COLOR_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
    , gl_SAMPLER_2D_MULTISAMPLE_ARRAY
    , gl_MAX_ELEMENTS_INDICES
    , gl_SAMPLE_MASK_NV
    , gl_TEXTURE_BUFFER_FORMAT_ARB
    , gl_UNSIGNED_INT64_VEC3_NV
    , gl_MODELVIEW13_ARB
    , gl_MAX_CUBE_MAP_TEXTURE_SIZE_OES
    , gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    , gl_STENCIL_INDEX8_OES
    , gl_DEPTH_WRITEMASK
    , gl_FLOAT_MAT3_ARB
    , gl_SPOT_EXPONENT
    , gl_ASYNC_READ_PIXELS_SGIX
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
    , gl_COLOR_SUM_EXT
    , gl_LINE_WIDTH_RANGE
    , gl_QUERY_OBJECT_EXT
    , gl_HALF_FLOAT_OES
    , gl_TEXTURE_LEQUAL_R_SGIX
    , gl_DRAW_BUFFER6_ARB
    , gl_NUM_VIDEO_CAPTURE_STREAMS_NV
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
    , gl_RG_SNORM
    , gl_RECLAIM_MEMORY_HINT_PGI
    , gl_IMAGE_2D_EXT
    , gl_POINT_SIZE_ARRAY_OES
    , gl_GEOMETRY_DEFORMATION_SGIX
    , gl_UNSIGNED_SHORT_5_5_5_1_EXT
    , gl_MATRIX8_ARB
    , gl_RESET_NOTIFICATION_STRATEGY_ARB
    , gl_CONTEXT_FLAG_DEBUG_BIT
    , gl_DEBUG_TYPE_PUSH_GROUP
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES
    , gl_TEXTURE_COORD_NV
    , gl_UNDEFINED_VERTEX_EXT
    , gl_DRAW_BUFFER12_EXT
    , gl_STENCIL_OP_VALUE_AMD
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    , gl_MAX_CLIENT_ATTRIB_STACK_DEPTH
    , gl_FRAMEBUFFER_UNDEFINED
    , gl_UNSIGNED_INT_VEC3
    , gl_ATOMIC_COUNTER_BUFFER_BINDING
    , gl_TEXTURE_MATERIAL_FACE_EXT
    , gl_TEXTURE_SHADER_NV
    , gl_BUFFER_IMMUTABLE_STORAGE
    , gl_COLOR_TABLE_FORMAT_SGI
    , gl_4_BYTES
    , gl_PATH_FILL_COVER_MODE_NV
    , gl_INTENSITY8UI_EXT
    , gl_GLYPH_WIDTH_BIT_NV
    , gl_TRANSPOSE_AFFINE_2D_NV
    , gl_DSDT_MAG_NV
    , gl_ELEMENT_ARRAY_BUFFER
    , gl_RGBA12
    , gl_INT_2_10_10_10_REV
    , gl_EVAL_VERTEX_ATTRIB12_NV
    , gl_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
    , gl_OPERAND3_ALPHA_NV
    , gl_RASTERIZER_DISCARD_EXT
    , gl_INT_SAMPLER_1D_ARRAY_EXT
    , gl_ARRAY_BUFFER_BINDING_ARB
    , gl_FLOAT_MAT3
    , gl_CONVOLUTION_FORMAT_EXT
    , gl_STREAM_COPY_ARB
    , gl_CURRENT_PROGRAM
    , gl_OP_RECIP_SQRT_EXT
    , gl_VERTEX_SUBROUTINE
    , gl_CONSTANT_COLOR0_NV
    , gl_TEXTURE10_ARB
    , gl_DETAIL_TEXTURE_2D_SGIS
    , gl_FRAGMENT_TEXTURE
    , gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
    , gl_FRAGMENT_DEPTH
    , gl_CALLIGRAPHIC_FRAGMENT_SGIX
    , gl_COLOR_ARRAY_EXT
    , gl_INNOCENT_CONTEXT_RESET_KHR
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES
    , gl_COLOR_ATTACHMENT10_EXT
    , gl_FOG_COORD_ARRAY_ADDRESS_NV
    , gl_UNIFORM_OFFSET
    , gl_ONE
    , gl_TEXTURE_IMMUTABLE_FORMAT_EXT
    , gl_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
    , gl_SEPARATE_ATTRIBS_NV
    , gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
    , gl_PROGRAM_ERROR_POSITION_NV
    , gl_PACK_REVERSE_ROW_ORDER_ANGLE
    , gl_SRGB_WRITE
    , gl_ATC_RGBA_EXPLICIT_ALPHA_AMD
    , gl_UNSIGNED_INT_VEC2
    , gl_UNSIGNED_INT_IMAGE_BUFFER
    , gl_DEPTH_COMPONENT
    , gl_READ_FRAMEBUFFER_APPLE
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_X
    , gl_PACK_COMPRESSED_BLOCK_DEPTH
    , gl_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
    , gl_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX
    , gl_SLUMINANCE_EXT
    , gl_MAX_SHADER_STORAGE_BLOCK_SIZE
    , gl_ALREADY_SIGNALED_APPLE
    , gl_BGRA_INTEGER
    , gl_SAMPLE_BUFFERS_SGIS
    , gl_MAX_SUBROUTINE_UNIFORM_LOCATIONS
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
    , gl_OPERAND0_ALPHA_EXT
    , gl_CLAMP_TO_BORDER_SGIS
    , gl_BUFFER_OBJECT_EXT
    , gl_PHONG_WIN
    , gl_MAP2_COLOR_4
    , gl_COMPRESSED_RGBA_S3TC_DXT3_EXT
    , gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
    , gl_COLOR_TABLE_WIDTH
    , gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
    , gl_COMPRESSED_RGBA_ASTC_10x10_KHR
    , gl_FONT_Y_MAX_BOUNDS_BIT_NV
    , gl_IMAGE_BUFFER
    , gl_EVAL_VERTEX_ATTRIB13_NV
    , gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
    , gl_RASTER_MULTISAMPLE_EXT
    , gl_EYE_DISTANCE_TO_LINE_SGIS
    , gl_RENDERBUFFER_BLUE_SIZE
    , gl_SOURCE3_ALPHA_NV
    , gl_VERTEX_ATTRIB_ARRAY14_NV
    , gl_READ_FRAMEBUFFER_NV
    , gl_MULTIPLY_KHR
    , gl_INVARIANT_VALUE_EXT
    , gl_FONT_TARGET_UNAVAILABLE_NV
    , gl_4D_COLOR_TEXTURE
    , gl_RGB9_E5_EXT
    , gl_PATH_PROJECTION_NV
    , gl_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV
    , gl_COLOR_COMPONENTS
    , gl_CONTEXT_ROBUST_ACCESS_EXT
    , gl_LUMINANCE8
    , gl_UNPACK_CMYK_HINT_EXT
    , gl_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
    , gl_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
    , gl_TEXTURE_BIT
    , gl_LUMINANCE_FLOAT32_ATI
    , gl_BLEND_EQUATION_ALPHA_OES
    , gl_YCBYCR8_422_NV
    , gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
    , gl_PERFQUERY_COUNTER_DATA_UINT32_INTEL
    , gl_TRIANGLE_LIST_SUN
    , gl_FONT_UNDERLINE_POSITION_BIT_NV
    , gl_QUERY_RESULT_NO_WAIT_AMD
    , gl_WARP_SIZE_NV
    , gl_SCISSOR_BOX
    , gl_PROGRAMMABLE_SAMPLE_LOCATION_NV
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
    , gl_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV
    , gl_DRAW_INDIRECT_BUFFER_BINDING
    , gl_NORMAL_MAP
    , gl_CON_26_ATI
    , gl_NO_RESET_NOTIFICATION_KHR
    , gl_CLIENT_VERTEX_ARRAY_BIT
    , gl_FLOAT_RG_NV
    , gl_QUERY_COUNTER_BITS_EXT
    , gl_PRIMITIVE_RESTART
    , gl_TEXTURE_ALPHA_TYPE
    , gl_TRANSFORM_FEEDBACK_BUFFER_SIZE
    , gl_DRAW_BUFFER3_EXT
    , gl_FOG_HINT
    , gl_SAMPLER_CUBE_SHADOW_EXT
    , gl_Y_EXT
    , gl_RGB_SCALE_EXT
    , gl_REFERENCE_PLANE_SGIX
    , gl_POST_COLOR_MATRIX_GREEN_BIAS
    , gl_ALPHA8I_EXT
    , gl_TEXTURE_COMPARE_MODE_ARB
    , gl_COMMAND_BARRIER_BIT_EXT
    , gl_FIXED_OES
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
    , gl_MAP2_NORMAL
    , gl_MODELVIEW24_ARB
    , gl_SPRITE_OBJECT_ALIGNED_SGIX
    , gl_RG8UI
    , gl_LIGHTEN_NV
    , gl_POST_TEXTURE_FILTER_SCALE_SGIX
    , gl_LIST_BASE
    , gl_FRAGMENT_PROGRAM_CALLBACK_MESA
    , gl_TEXTURE_CUBE_MAP_ARRAY_ARB
    , gl_QUERY_BUFFER_BARRIER_BIT
    , gl_OP_ROUND_EXT
    , gl_WEIGHT_ARRAY_STRIDE_ARB
    , gl_DRAW_BUFFER15_ATI
    , gl_HISTOGRAM_ALPHA_SIZE_EXT
    , gl_MEDIUM_FLOAT
    , gl_TEXTURE_BUFFER_SIZE
    , gl_TEXTURE_RESIDENT_EXT
    , gl_PLUS_NV
    , gl_R8_EXT
    , gl_RED_BIAS
    , gl_BIAS_BY_NEGATIVE_ONE_HALF_NV
    , gl_SRC1_ALPHA
    , gl_RGB12
    , gl_RECT_NV
    , gl_VERTEX_ATTRIB_ARRAY_POINTER_ARB
    , gl_POLYGON_OFFSET_EXT
    , gl_DEBUG_SEVERITY_LOW
    , gl_TEXTURE2
    , gl_CONTINUOUS_AMD
    , gl_TEXTURE_SAMPLES
    , gl_NEGATIVE_X_EXT
    , gl_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
    , gl_CLIP_VOLUME_CLIPPING_HINT_EXT
    , gl_SM_COUNT_NV
    , gl_TEXTURE_COORD_ARRAY_SIZE_EXT
    , gl_MODELVIEW11_ARB
    , gl_SRC_ATOP_NV
    , gl_PATH_FORMAT_PS_NV
    , gl_COMPRESSED_RGBA_ARB
    , gl_VERTEX_ATTRIB_ARRAY8_NV
    , gl_DEPTH_COMPONENT16_SGIX
    , gl_TESS_CONTROL_SUBROUTINE_UNIFORM
    , gl_COLOR_ATTACHMENT10
    , gl_TEXTURE_DT_SIZE_NV
    , gl_LUMINANCE12_ALPHA12
    , gl_PIXEL_TRANSFORM_2D_MATRIX_EXT
    , gl_COORD_REPLACE_ARB
    , gl_MAP2_GRID_DOMAIN
    , gl_MULTISAMPLE_FILTER_HINT_NV
    , gl_TEXTURE_DEPTH_QCOM
    , gl_FLOAT_VEC2_ARB
    , gl_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
    , gl_MAX_DEBUG_MESSAGE_LENGTH
    , gl_DISCARD_NV
    , gl_DEBUG_TYPE_PERFORMANCE_KHR
    , gl_UNSIGNED_INT8_VEC4_NV
    , gl_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
    , gl_FOG_COORDINATE_ARRAY_POINTER_EXT
    , gl_DEPTH_COMPONENT32F_NV
    , gl_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
    , gl_SAMPLE_MASK_EXT
    , gl_ALL_COMPLETED_NV
    , gl_GPU_MEMORY_INFO_EVICTION_COUNT_NVX
    , gl_MAX_VERTEX_ATTRIBS_ARB
    , gl_TEXTURE_INTERNAL_FORMAT
    , gl_INVERSE_TRANSPOSE_NV
    , gl_REG_27_ATI
    , gl_POST_CONVOLUTION_BLUE_BIAS_EXT
    , gl_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
    , gl_MAX_UNIFORM_LOCATIONS
    , gl_DEPTH_BUFFER_BIT3_QCOM
    , gl_MAP_COLOR
    , gl_PROGRAM_STRING_NV
    , gl_POST_CONVOLUTION_BLUE_SCALE_EXT
    , gl_COMPRESSED_RGBA_ASTC_10x8_KHR
    , gl_PACK_COMPRESSED_BLOCK_SIZE
    , gl_FOG_DISTANCE_MODE_NV
    , gl_MAX_CLIP_PLANES
    , gl_PROGRAM_PIPELINE_BINDING
    , gl_SURFACE_STATE_NV
    , gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
    , gl_SAMPLE_MASK_INVERT_SGIS
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
    , gl_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
    , gl_DEBUG_CATEGORY_OTHER_AMD
    , gl_CONVOLUTION_HEIGHT_EXT
    , gl_WAIT_FAILED
    , gl_TEXT_FRAGMENT_SHADER_ATI
    , gl_DEBUG_SEVERITY_LOW_KHR
    , gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
    , gl_LIGHT2
    , gl_MODULATE_COLOR_IMG
    , gl_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA
    , gl_CLAMP_READ_COLOR
    , gl_UNIFORM_BLOCK_DATA_SIZE
    , gl_LINE_TOKEN
    , gl_DEPTH_COMPONENT24
    , gl_EXP2
    , gl_DRAW_BUFFER3_NV
    , gl_ELEMENT_ARRAY_BUFFER_BINDING_ARB
    , gl_MATRIX20_ARB
    , gl_COMPRESSED_RGBA_ASTC_4x4x4_OES
    , gl_SOURCE0_ALPHA_EXT
    , gl_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
    , gl_ALPHA16UI_EXT
    , gl_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
    , gl_INDEX_ARRAY_LENGTH_NV
    , gl_VIEW_CLASS_S3TC_DXT1_RGBA
    , gl_MAX_VERTEX_UNITS_ARB
    , gl_DEBUG_SOURCE_OTHER_KHR
    , gl_MAX_DEBUG_MESSAGE_LENGTH_ARB
    , gl_NORMAL_ARRAY_TYPE
    , gl_LINEAR_DETAIL_COLOR_SGIS
    , gl_SOURCE3_RGB_NV
    , gl_LUMINANCE32F_EXT
    , gl_PROGRAM_ERROR_STRING_ARB
    , gl_OP_DOT4_EXT
    , gl_DRAW_BUFFER7_EXT
    , gl_MAJOR_VERSION
    , gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES
    , gl_DOT3_RGBA_ARB
    , gl_INT_IMAGE_1D_ARRAY
    , gl_CLIP_PLANE3
    , gl_FLOAT16_VEC2_NV
    , gl_FOG_COORDINATE_ARRAY_POINTER
    , gl_MATRIX24_ARB
    , gl_SAMPLER_2D_ARRAY_SHADOW_NV
    , gl_EVAL_VERTEX_ATTRIB1_NV
    , gl_GEOMETRY_SHADER_INVOCATIONS_EXT
    , gl_COMPILE_STATUS
    , gl_UNSIGNED_INT_SAMPLER_CUBE_EXT
    , gl_HISTOGRAM_WIDTH_EXT
    , gl_HILO_NV
    , gl_LUMINANCE8UI_EXT
    , gl_UNSIGNED_SHORT_4_4_4_4_REV
    , gl_QUERY_RESULT_NO_WAIT
    , gl_DEBUG_TYPE_PERFORMANCE_ARB
    , gl_QUERY_OBJECT_AMD
    , gl_SLIM10U_SGIX
    , gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
    , gl_COMPRESSED_SIGNED_R11_EAC
    , gl_COMPRESSED_RGBA_ASTC_10x5_KHR
    , gl_READ_FRAMEBUFFER_EXT
    , gl_SECONDARY_COLOR_ARRAY
    , gl_INT64_VEC2_NV
    , gl_PREVIOUS_ARB
    , gl_UNSIGNED_INT_IMAGE_CUBE_EXT
    , gl_TEXTURE25_ARB
    , gl_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
    , gl_HISTOGRAM_SINK_EXT
    , gl_COLOR_ATTACHMENT10_NV
    , gl_COLOR4_BIT_PGI
    , gl_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
    , gl_RENDERBUFFER_GREEN_SIZE_OES
    , gl_INTERNALFORMAT_SHARED_SIZE
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Y
    , gl_PATH_JOIN_STYLE_NV
    , gl_IMAGE_BINDING_ACCESS_EXT
    , gl_ARRAY_SIZE
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
    , gl_OBJECT_DISTANCE_TO_LINE_SGIS
    , gl_SRC2_ALPHA
    , gl_SAMPLER_1D_ARB
    , gl_HSL_SATURATION_KHR
    , gl_COLOR_ATTACHMENT14_EXT
    , gl_SECONDARY_INTERPOLATOR_ATI
    , gl_TEXTURE_BINDING_BUFFER_EXT
    , gl_FONT_X_MIN_BOUNDS_BIT_NV
    , gl_CONSTANT
    , gl_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG
    , gl_DEBUG_SOURCE_THIRD_PARTY_ARB
    , gl_CLIP_DISTANCE0_APPLE
    , gl_RGBA32F
    , gl_EVAL_VERTEX_ATTRIB10_NV
    , gl_COMPRESSED_RGBA_ASTC_6x6x5_OES
    , gl_CULL_VERTEX_IBM
    , gl_INTENSITY16F_ARB
    , gl_COVERAGE_COMPONENT_NV
    , gl_DRAW_BUFFER5_EXT
    , gl_SYNC_GPU_COMMANDS_COMPLETE_APPLE
    , gl_SUBSAMPLE_DISTANCE_AMD
    , gl_DRAW_BUFFER13_EXT
    , gl_NORMAL_ARRAY_ADDRESS_NV
    , gl_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
    , gl_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
    , gl_STENCIL_BUFFER_BIT4_QCOM
    , gl_HALF_BIT_ATI
    , gl_AUX_BUFFERS
    , gl_VERTEX_ARRAY_BUFFER_BINDING_ARB
    , gl_CONVOLUTION_FILTER_BIAS
    , gl_OUTPUT_TEXTURE_COORD15_EXT
    , gl_MAP1_VERTEX_ATTRIB10_4_NV
    , gl_FLOAT_VEC4_ARB
    , gl_DRAW_BUFFER11_EXT
    , gl_MIN_MAP_BUFFER_ALIGNMENT
    , gl_BACK_PRIMARY_COLOR_NV
    , gl_VERTEX_SHADER_EXT
    , gl_BLUE_INTEGER
    , gl_MAX_PROGRAM_MATRICES_ARB
    , gl_INT16_VEC2_NV
    , gl_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
    , gl_UNIFORM_TYPE
    , gl_MALI_SHADER_BINARY_ARM
    , gl_DEBUG_SEVERITY_LOW_AMD
    , gl_BLEND_SRC
    , gl_TEXTURE_SHARED_SIZE
    , gl_PROGRAM_TARGET_NV
    , gl_MAX_VERTEX_HINT_PGI
    , gl_NEAREST
    , gl_INNOCENT_CONTEXT_RESET_EXT
    , gl_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
    , gl_OP_MIN_EXT
    , gl_NORMAL_ARRAY_BUFFER_BINDING
    , gl_SOURCE0_ALPHA_ARB
    , gl_GUILTY_CONTEXT_RESET
    , gl_MATRIX_MODE
    , gl_SYNC_GPU_COMMANDS_COMPLETE
    , gl_SHADER_BINARY_DMP
    , gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT
    , gl_CON_10_ATI
    , gl_TEXTURE_COMPRESSED_ARB
    , gl_PIXEL_BUFFER_BARRIER_BIT_EXT
    , gl_VERTEX_ATTRIB_ARRAY4_NV
    , gl_FRAGMENT_LIGHT3_SGIX
    , gl_TEXTURE_CUBE_MAP_NEGATIVE_X_OES
    , gl_TEXTURE_BUFFER_SIZE_EXT
    , gl_DEPTH_BUFFER_BIT1_QCOM
    , gl_INTENSITY_FLOAT32_ATI
    , gl_TEXTURE_BINDING_2D_ARRAY
    , gl_TEXTURE_SPARSE_ARB
    , gl_SAMPLER
    , gl_DRAW_BUFFER6_EXT
    , gl_READ_PIXELS_FORMAT
    , gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
    , gl_R3_G3_B2
    , gl_ALPHA4_EXT
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES
    , gl_CLIP_DISTANCE1
    , gl_PATH_FORMAT_SVG_NV
    , gl_SMAPHS30_PROGRAM_BINARY_DMP
    , gl_PROGRAM_PARAMETER_NV
    , gl_RELATIVE_ROUNDED_RECT4_NV
    , gl_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB
    , gl_BLUE_BITS
    , gl_C3F_V3F
    , gl_UNSIGNED_INT_8_8_8_8_REV_EXT
    , gl_INT_SAMPLER_2D_EXT
    , gl_SAMPLER_3D_ARB
    , gl_VERTEX_DATA_HINT_PGI
    , gl_BUFFER_UPDATE_BARRIER_BIT
    , gl_DST_COLOR
    , gl_RED_MIN_CLAMP_INGR
    , gl_INTENSITY8I_EXT
    , gl_TEXTURE_NUM_LEVELS_QCOM
    , gl_CULL_VERTEX_OBJECT_POSITION_EXT
    , gl_FLOAT_RGBA32_NV
    , gl_SAMPLE_COVERAGE
    , gl_POST_COLOR_MATRIX_GREEN_BIAS_SGI
    , gl_PRIMITIVES_GENERATED_NV
    , gl_MAP_UNSYNCHRONIZED_BIT_EXT
    , gl_WEIGHT_ARRAY_OES
    , gl_CURRENT_RASTER_COLOR
    , gl_FRAGMENT_LIGHT2_SGIX
    , gl_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
    , gl_INT_IMAGE_2D
    , gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
    , gl_POINT_SPRITE_NV
    , gl_CONVOLUTION_HEIGHT
    , gl_TESS_GEN_POINT_MODE
    , gl_RENDER_MODE
    , gl_DOT3_RGBA_EXT
    , gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
    , gl_TEXTURE_MAX_CLAMP_T_SGIX
    , gl_CURRENT_FOG_COORD
    , gl_ELEMENT_ARRAY_BUFFER_ARB
    , gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
    , gl_COLOR_MATERIAL
    , gl_MOVE_TO_CONTINUES_NV
    , gl_ACCUM
    , gl_PROGRAM_POINT_SIZE
    , gl_V2F
    , gl_TEXTURE_COMPARE_SGIX
    , gl_TEXTURE_ALPHA_TYPE_ARB
    , gl_SAMPLE_ALPHA_TO_MASK_EXT
    , gl_FLOAT_RGBA16_NV
    , gl_DOUBLE_MAT2_EXT
    , gl_MAP_COHERENT_BIT
    , gl_CON_17_ATI
    , gl_CLIENT_ACTIVE_TEXTURE_ARB
    , gl_SYNC_X11_FENCE_EXT
    , gl_VERTEX_SHADER_OPTIMIZED_EXT
    , gl_MODELVIEW22_ARB
    , gl_TEXTURE21
    , gl_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES
    , gl_R1UI_T2F_C4F_N3F_V3F_SUN
    , gl_SLUMINANCE_ALPHA_EXT
    , gl_EXPAND_NEGATE_NV
    , gl_OCCLUSION_TEST_HP
    , gl_PATH_FOG_GEN_MODE_NV
    , gl_VERTEX23_BIT_PGI
    , gl_RGB8_SNORM
    , gl_DUAL_ALPHA8_SGIS
    , gl_PERFMON_GLOBAL_MODE_QCOM
    , gl_MAP1_VERTEX_ATTRIB4_4_NV
    , gl_TEXTURE31_ARB
    , gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT
    , gl_XOR_NV
    , gl_EMBOSS_MAP_NV
    , gl_MAX_NUM_ACTIVE_VARIABLES
    , gl_INT_IMAGE_CUBE_MAP_ARRAY
    , gl_OR_REVERSE
    , gl_DEBUG_LOGGED_MESSAGES_AMD
    , gl_EVAL_VERTEX_ATTRIB8_NV
    , gl_IMAGE_CLASS_1_X_32
    , gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
    , gl_TEXTURE_3D_BINDING_OES
    , gl_LUMINANCE16F_ARB
    , gl_FIRST_VERTEX_CONVENTION
    , gl_4PASS_1_SGIS
    , gl_SAMPLER_KHR
    , gl_MAP_INVALIDATE_RANGE_BIT_EXT
    , gl_INTERPOLATE_ARB
    , gl_STENCIL_BACK_FUNC_ATI
    , gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
    , gl_CONFORMANT_NV
    , gl_COLOR_ATTACHMENT11_EXT
    , gl_VARIANT_DATATYPE_EXT
    , gl_ANY_SAMPLES_PASSED_EXT
    , gl_PATH_TERMINAL_DASH_CAP_NV
    , gl_MODELVIEW_MATRIX
    , gl_VERTEX_SUBROUTINE_UNIFORM
    , gl_IMPLEMENTATION_COLOR_READ_TYPE_OES
    , gl_FOG_END
    , gl_MAX_3D_TEXTURE_SIZE_OES
    , gl_PIXEL_UNPACK_BUFFER_BINDING
    , gl_MAX_RENDERBUFFER_SIZE
    , gl_RELATIVE_ROUNDED_RECT_NV
    , gl_MAX_SPARSE_3D_TEXTURE_SIZE_ARB
    , gl_TEXTURE_VIEW_NUM_LEVELS_EXT
    , gl_PIXEL_MAP_A_TO_A_SIZE
    , gl_VERTEX_ATTRIB_MAP1_COEFF_APPLE
    , gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
    , gl_TRANSLATE_Y_NV
    , gl_ALPHA4
    , gl_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
    , gl_OPERAND1_ALPHA_ARB
    , gl_OUTPUT_TEXTURE_COORD4_EXT
    , gl_C4UB_V2F
    , gl_LIST_MODE
    , gl_TESS_EVALUATION_SHADER_INVOCATIONS_ARB
    , gl_NOTEQUAL
    , gl_LINES_ADJACENCY_EXT
    , gl_TEXTURE24
    , gl_SAMPLE_BUFFERS_ARB
    , gl_COLOR_TABLE_RED_SIZE_SGI
    , gl_TEXTURE28_ARB
    , gl_MAX_PROGRAM_TEXEL_OFFSET_EXT
    , gl_STENCIL_PASS_DEPTH_PASS
    , gl_BUFFER_MAP_OFFSET
    , gl_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
    , gl_MAX_GEOMETRY_UNIFORM_BLOCKS
    , gl_MATRIX17_ARB
    , gl_INTERNALFORMAT_DEPTH_TYPE
    , gl_SAMPLER_CUBE_MAP_ARRAY
    , gl_RED_NV
    , gl_RGB5_A1_OES
    , gl_EDGE_FLAG_ARRAY_EXT
    , gl_DRAW_FRAMEBUFFER_BINDING_NV
    , gl_SLUMINANCE_ALPHA_NV
    , gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
    , gl_COLOR_BUFFER_BIT3_QCOM
    , gl_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
    , gl_VIDEO_COLOR_CONVERSION_OFFSET_NV
    , gl_SLUMINANCE
    , gl_TEXTURE_2D_ARRAY_EXT
    , gl_INT_SAMPLER_2D_RECT
    , gl_DEBUG_SOURCE_APPLICATION_KHR
    , gl_MAX_RATIONAL_EVAL_ORDER_NV
    , gl_GEOMETRY_SUBROUTINE
    , gl_LOAD
    , gl_DOT_PRODUCT_NV
    , gl_DEPTH24_STENCIL8_OES
    , gl_MAX_VERTEX_UNITS_OES
    , gl_ATOMIC_COUNTER_BUFFER_INDEX
    , gl_MAX_PATCH_VERTICES_EXT
    , gl_MINOR_VERSION
    , gl_FOG_OFFSET_VALUE_SGIX
    , gl_UNPACK_COMPRESSED_BLOCK_WIDTH
    , gl_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
    , gl_ALPHA32UI_EXT
    , gl_EVAL_TRIANGULAR_2D_NV
    , gl_FOG_COORD_ARRAY_STRIDE
    , gl_TRANSFORM_FEEDBACK
    , gl_RGBA4_S3TC
    , gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS
    , gl_TOP_LEVEL_ARRAY_STRIDE
    , gl_CON_1_ATI
    , gl_FLOAT_MAT4_ARB
    , gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
    , gl_ALPHA
    , gl_VERTEX_SHADER_INVOCATIONS_ARB
    , gl_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
    , gl_IMAGE_SCALE_Y_HP
    , gl_MAX_PROGRAM_CALL_DEPTH_NV
    , gl_LINEARBURN_NV
    , gl_STENCIL_BACK_FUNC
    , gl_COLOR_BUFFER_BIT5_QCOM
    , gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
    , gl_SAMPLE_ALPHA_TO_ONE_SGIS
    , gl_TRANSLATE_X_NV
    , gl_SYNC_FLUSH_COMMANDS_BIT
    , gl_DUAL_ALPHA16_SGIS
    , gl_TANGENT_ARRAY_TYPE_EXT
    , gl_CLIENT_ALL_ATTRIB_BITS
    , gl_DRAW_BUFFER15_NV
    , gl_MAX_GEOMETRY_SHADER_INVOCATIONS
    , gl_FONT_UNDERLINE_THICKNESS_BIT_NV
    , gl_UNSIGNED_INT_10_10_10_2
    , gl_UNPACK_SKIP_IMAGES
    , gl_TEXTURE_GREEN_SIZE_EXT
    , gl_UNSIGNED_INT_SAMPLER_2D
    , gl_SOURCE2_ALPHA
    , gl_LIGHT5
    , gl_DRAW_BUFFER10_NV
    , gl_SAMPLER_2D_RECT
    , gl_SECONDARY_COLOR_ARRAY_POINTER
    , gl_PROGRAM_POINT_SIZE_EXT
    , gl_TEXTURE_MAG_FILTER
    , gl_POST_CONVOLUTION_BLUE_SCALE
    , gl_VIRTUAL_PAGE_SIZE_X_AMD
    , gl_RG16_SNORM
    , gl_FRAGMENT_LIGHT6_SGIX
    , gl_RESAMPLE_REPLICATE_SGIX
    , gl_EDGE_FLAG_ARRAY_ADDRESS_NV
    , gl_TEXTURE13_ARB
    , gl_FOG_COORDINATE_SOURCE
    , gl_DRAW_BUFFER1_ATI
    , gl_SAMPLER_2D_SHADOW
    , gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG
    , gl_AMBIENT_AND_DIFFUSE
    , gl_VBO_FREE_MEMORY_ATI
    , gl_COLORDODGE_NV
    , gl_DRAW_BUFFER12_ATI
    , gl_UNPACK_IMAGE_DEPTH_SGIS
    , gl_SRC1_COLOR
    , gl_DEPTH_COMPONENT16_ARB
    , gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
    , gl_RASTER_POSITION_UNCLIPPED_IBM
    , gl_MIRRORED_REPEAT_ARB
    , gl_AUX2
    , gl_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
    , gl_EDGE_FLAG_ARRAY_POINTER_EXT
    , gl_TEXTURE_COMPARE_MODE_EXT
    , gl_TEXTURE27_ARB
    , gl_PROGRAM_KHR
    , gl_RENDERBUFFER_GREEN_SIZE
    , gl_MAX_VERTEX_STREAMS
    , gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
    , gl_UNSIGNED_INT64_ARB
    , gl_VIRTUAL_PAGE_SIZE_Y_AMD
    , gl_RELATIVE_SMALL_CW_ARC_TO_NV
    , gl_MAX_TEXTURE_COORDS_ARB
    , gl_COVERAGE_ATTACHMENT_NV
    , gl_LOWER_LEFT
    , gl_VIEW_CLASS_S3TC_DXT3_RGBA
    , gl_INTERNALFORMAT_GREEN_TYPE
    , gl_BLEND_DST_RGB_EXT
    , gl_FRAGMENT_PROGRAM_BINDING_NV
    , gl_TEXTURE_SWIZZLE_B_EXT
    , gl_INTENSITY16_EXT
    , gl_TEXTURE_BINDING_CUBE_MAP_OES
    , gl_COLOR_ARRAY_SIZE_EXT
    , gl_TEXTURE_COVERAGE_SAMPLES_NV
    , gl_QUERY_BUFFER
    , gl_MATRIX4_ARB
    , gl_MAP1_VERTEX_ATTRIB11_4_NV
    , gl_DOT3_RGB_ARB
    , gl_DOT_PRODUCT_TEXTURE_3D_NV
    , gl_ATTENUATION_EXT
    , gl_UNIFORM_BUFFER_LENGTH_NV
    , gl_PATH_STROKE_MASK_NV
    , gl_LUMINANCE12_EXT
    , gl_RELATIVE_HORIZONTAL_LINE_TO_NV
    , gl_POST_CONVOLUTION_GREEN_SCALE_EXT
    , gl_GLYPH_VERTICAL_BEARING_X_BIT_NV
    , gl_FOG_COORD_ARRAY_TYPE
    , gl_VIDEO_BUFFER_INTERNAL_FORMAT_NV
    , gl_QUERY_WAIT_NV
    , gl_CURRENT_FOG_COORDINATE
    , gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
    , gl_LAST_VERTEX_CONVENTION_EXT
    , gl_SELECTION_BUFFER_POINTER
    , gl_FLOAT
    , gl_TEXTURE_STENCIL_SIZE
    , gl_FRAGMENT_SHADER_DERIVATIVE_HINT
    , gl_FEEDBACK_BUFFER_SIZE
    , gl_DEPTH_COMPONENT32F
    , gl_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
    , gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS
    , gl_DEBUG_OUTPUT_SYNCHRONOUS_KHR
    , gl_MAX_ASYNC_TEX_IMAGE_SGIX
    , gl_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
    , gl_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
    , gl_POINT_SIZE_MIN
    , gl_UNSIGNED_INT8_VEC2_NV
    , gl_COLOR_ATTACHMENT0_NV
    , gl_PROGRAM_FORMAT_ARB
    , gl_QUAD_INTENSITY4_SGIS
    , gl_UNSIGNED_INT_24_8_OES
    , gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
    , gl_LUMINANCE8I_EXT
    , gl_EYE_LINE_SGIS
    , gl_MULTISAMPLE_3DFX
    , gl_RGBA_FLOAT16_ATI
    , gl_COMPRESSED_RGBA_S3TC_DXT5_EXT
    , gl_RGB5_A1_EXT
    , gl_MIPMAP
    , gl_COMBINER_BIAS_NV
    , gl_SAMPLE_COVERAGE_VALUE
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
    , gl_LUMINANCE16
    , gl_REG_11_ATI
    , gl_UNSIGNED_INT_IMAGE_2D
    , gl_LINEAR_SHARPEN_COLOR_SGIS
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
    , gl_INTENSITY4
    , gl_LINE_STRIP_ADJACENCY_ARB
    , gl_PIXEL_CUBIC_WEIGHT_EXT
    , gl_TEXTURE_COORD_ARRAY
    , gl_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
    , gl_TEXTURE30
    , gl_CLAMP_TO_EDGE_SGIS
    , gl_READ_FRAMEBUFFER_BINDING_ANGLE
    , gl_RENDERBUFFER_BINDING
    , gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
    , gl_NO_RESET_NOTIFICATION
    , gl_PATH_STROKE_WIDTH_NV
    , gl_DEPTH_COMPONENT32_SGIX
    , gl_OP_MULTIPLY_MATRIX_EXT
    , gl_R1UI_N3F_V3F_SUN
    , gl_MATRIX_INDEX_ARRAY_STRIDE_OES
    , gl_LUMINANCE_FLOAT16_APPLE
    , gl_HISTOGRAM_BLUE_SIZE_EXT
    , gl_VERTEX_ATTRIB_ARRAY_SIZE_ARB
    , gl_SGX_PROGRAM_BINARY_IMG
    , gl_DRAW_BUFFER11_ARB
    , gl_FOG_COORDINATE_ARRAY_STRIDE_EXT
    , gl_REFERENCED_BY_COMPUTE_SHADER
    , gl_COLOR_CLEAR_VALUE
    , gl_UNSIGNED_SHORT_5_5_5_1
    , gl_CLIP_DISTANCE7
    , gl_ATOMIC_COUNTER_BARRIER_BIT_EXT
    , gl_INTERLEAVED_ATTRIBS
    , gl_BUFFER
    , gl_EMBOSS_LIGHT_NV
    , gl_SAMPLER_2D_RECT_SHADOW_ARB
    , gl_DOUBLE
    , gl_IMAGE_BINDING_LEVEL_EXT
    , gl_SAMPLE_ALPHA_TO_ONE_ARB
    , gl_TEXTURE_SWIZZLE_RGBA_EXT
    , gl_MAGNITUDE_BIAS_NV
    , gl_RENDERBUFFER_ALPHA_SIZE
    , gl_COLOR_SAMPLES_NV
    , gl_TEXTURE_RECTANGLE
    , gl_RGB16F
    , gl_PROXY_COLOR_TABLE
    , gl_PROXY_TEXTURE_3D
    , gl_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
    , gl_VERTEX_SHADER_BIT
    , gl_MAX_COMPUTE_WORK_GROUP_COUNT
    , gl_RG_INTEGER
    , gl_TRANSFORM_FEEDBACK_PAUSED
    , gl_RENDER
    , gl_MATRIX16_ARB
    , gl_SWIZZLE_STQ_ATI
    , gl_VERTEX_ARRAY_RANGE_POINTER_APPLE
    , gl_MODELVIEW6_ARB
    , gl_PROXY_TEXTURE_2D_EXT
    , gl_MATRIX_EXT
    , gl_CURRENT_MATRIX_STACK_DEPTH_NV
    , gl_PATH_STENCIL_FUNC_NV
    , gl_AUTO_GENERATE_MIPMAP
    , gl_TESS_EVALUATION_SHADER_EXT
    , gl_FRAMEBUFFER_EXT
    , gl_FRONT_AND_BACK
    , gl_PIXEL_TILE_CACHE_SIZE_SGIX
    , gl_MITER_TRUNCATE_NV
    , gl_FLOAT_VEC2
    , gl_FRAGMENT_SHADER_BIT
    , gl_TEXTURE_UNSIGNED_REMAP_MODE_NV
    , gl_VARIANT_ARRAY_POINTER_EXT
    , gl_TRACE_MASK_MESA
    , gl_COMPUTE_SHADER_INVOCATIONS_ARB
    , gl_UNSIGNED_SHORT_15_1_MESA
    , gl_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
    , gl_INDEX_MATERIAL_FACE_EXT
    , gl_IUI_N3F_V2F_EXT
    , gl_TRANSPOSE_COLOR_MATRIX_ARB
    , gl_PROGRAM_ATTRIB_COMPONENTS_NV
    , gl_RGB_SCALE_ARB
    , gl_INTERNALFORMAT_ALPHA_SIZE
    , gl_INT16_VEC4_NV
    , gl_PIXEL_MAP_B_TO_B
    , gl_INT_SAMPLER_BUFFER
    , gl_LUMINANCE12
    , gl_CLIP_FAR_HINT_PGI
    , gl_BUMP_TARGET_ATI
    , gl_4PASS_3_EXT
    , gl_LOCAL_CONSTANT_DATATYPE_EXT
    , gl_COLORDODGE_KHR
    , gl_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
    , gl_SECONDARY_COLOR_NV
    , gl_SKIP_MISSING_GLYPH_NV
    , gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
    , gl_MAX_SERVER_WAIT_TIMEOUT
    , gl_RENDERBUFFER_STENCIL_SIZE_EXT
    , gl_LIST_INDEX
    , gl_COVERAGE_BUFFERS_NV
    , gl_ACTIVE_STENCIL_FACE_EXT
    , gl_T2F_C4F_N3F_V3F
    , gl_COPY_PIXEL_TOKEN
    , gl_ADD
    , gl_DEPTH_CLAMP
    , gl_ALL_BARRIER_BITS_EXT
    , gl_TRANSPOSE_TEXTURE_MATRIX_ARB
    , gl_PIXEL_PACK_BUFFER_BINDING_ARB
    , gl_CMYKA_EXT
    , gl_OR_INVERTED
    , gl_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    , gl_TEXTURE8
    , gl_SYNC_FENCE_APPLE
    , gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
    , gl_DIFFUSE
    , gl_REG_26_ATI
    , gl_UNPACK_SWAP_BYTES
    , gl_EDGE_FLAG_ARRAY
    , gl_HISTOGRAM_RED_SIZE
    , gl_SRGB8_ALPHA8_EXT
    , gl_RELATIVE_MOVE_TO_NV
    , gl_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
    , gl_GEOMETRY_LINKED_INPUT_TYPE_EXT
    , gl_PATH_COMPUTED_LENGTH_NV
    , gl_VERTEX_ID_NV
    , gl_COLOR_ATTACHMENT12_NV
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES
    , gl_INT8_VEC3_NV
    , gl_LUMINANCE32F_ARB
    , gl_PROXY_TEXTURE_RECTANGLE_ARB
    , gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
    , gl_INVARIANT_EXT
    , gl_EDGE_FLAG_ARRAY_BUFFER_BINDING
    , gl_CULL_MODES_NV
    , gl_GEOMETRY_INPUT_TYPE_ARB
    , gl_LIGHT7
    , gl_GENERATE_MIPMAP_SGIS
    , gl_FRAMEBUFFER_COMPLETE_EXT
    , gl_FORCE_BLUE_TO_ONE_NV
    , gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
    , gl_EDGE_FLAG_ARRAY_COUNT_EXT
    , gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT
    , gl_RGB_422_APPLE
    , gl_COLOR_INDEX1_EXT
    , gl_COMPRESSED_TEXTURE_FORMATS
    , gl_RGBA4_DXT5_S3TC
    , gl_COMPRESSED_SIGNED_R11_EAC_OES
    , gl_ALPHA_FLOAT16_ATI
    , gl_MULTISAMPLE_BUFFER_BIT3_QCOM
    , gl_TEXTURE_CUBE_MAP_ARRAY_EXT
    , gl_PREVIOUS
    , gl_SAMPLER_2D_RECT_SHADOW
    , gl_FEEDBACK_BUFFER_POINTER
    , gl_PALETTE4_RGBA8_OES
    , gl_RED_INTEGER_EXT
    , gl_WEIGHT_ARRAY_POINTER_OES
    , gl_INT_SAMPLER_RENDERBUFFER_NV
    , gl_SMOOTH_LINE_WIDTH_RANGE
    , gl_PROGRAM_ERROR_STRING_NV
    , gl_INDEX_BITS
    , gl_TIME_ELAPSED
    , gl_CONSTANT_ALPHA_EXT
    , gl_PATCHES
    , gl_PATH_GEN_COMPONENTS_NV
    , gl_MODELVIEW0_ARB
    , gl_DRAW_BUFFER8_EXT
    , gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
    , gl_PATH_PROJECTION_MATRIX_NV
    , gl_STORAGE_CACHED_APPLE
    , gl_GEOMETRY_LINKED_VERTICES_OUT_EXT
    , gl_MAP2_VERTEX_ATTRIB1_4_NV
    , gl_TRIANGLE_FAN
    , gl_DEPTH_BUFFER_FLOAT_MODE_NV
    , gl_REG_4_ATI
    , gl_PROGRAM_BINARY_FORMATS_OES
    , gl_NORMAL_MAP_EXT
    , gl_SHADER_OBJECT_EXT
    , gl_COPY_READ_BUFFER_BINDING
    , gl_MAX_FRAGMENT_ATOMIC_COUNTERS
    , gl_OP_MUL_EXT
    , gl_MAX_LABEL_LENGTH_KHR
    , gl_OBJECT_TYPE_APPLE
    , gl_TEXTURE6_ARB
    , gl_TEXTURE_FLOAT_COMPONENTS_NV
    , gl_COPY_WRITE_BUFFER
    , gl_COMPRESSED_TEXTURE_FORMATS_ARB
    , gl_HIGH_FLOAT
    , gl_INDEX_ARRAY_BUFFER_BINDING_ARB
    , gl_GLYPH_HEIGHT_BIT_NV
    , gl_CULL_VERTEX_EYE_POSITION_EXT
    , gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
    , gl_DRAW_BUFFER
    , gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
    , gl_GPU_DISJOINT_EXT
    , gl_ASYNC_MARKER_SGIX
    , gl_GREEN_BIT_ATI
    , gl_LIGHT_MODEL_COLOR_CONTROL
    , gl_TEXTURE_GEN_R
    , gl_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
    , gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    , gl_PIXEL_TRANSFORM_2D_EXT
    , gl_EXTENSIONS
    , gl_PATH_COORD_COUNT_NV
    , gl_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
    , gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
    , gl_UNSIGNED_SHORT_8_8_REV_MESA
    , gl_GREATER
    , gl_DEBUG_SOURCE_THIRD_PARTY_KHR
    , gl_UNPACK_COMPRESSED_BLOCK_HEIGHT
    , gl_MIRROR_CLAMP_TO_EDGE_ATI
    , gl_COLOR_ARRAY_STRIDE_EXT
    , gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
    , gl_CON_4_ATI
    , gl_MAX_DEBUG_LOGGED_MESSAGES_AMD
    , gl_DEBUG_TYPE_PERFORMANCE
    , gl_MAP2_VERTEX_ATTRIB11_4_NV
    , gl_INTENSITY_FLOAT16_ATI
    , gl_PATH_MITER_LIMIT_NV
    , gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
    , gl_UNPACK_IMAGE_HEIGHT
    , gl_MAGNITUDE_SCALE_NV
    , gl_TEXTURE_IMAGE_TYPE
    , gl_MAX_TEXTURE_IMAGE_UNITS_NV
    , gl_REPLACE_EXT
    , gl_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
    , gl_DEBUG_SOURCE_OTHER_ARB
    , gl_CON_18_ATI
    , gl_COMBINER_MAPPING_NV
    , gl_PRIMARY_COLOR_NV
    , gl_INT_IMAGE_1D_EXT
    , gl_REG_23_ATI
    , gl_MIRROR_CLAMP_TO_EDGE_EXT
    , gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
    , gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
    , gl_R32F
    , gl_TEXTURE_LOD_BIAS_R_SGIX
    , gl_MAP_TESSELLATION_NV
    , gl_VERTEX_ATTRIB_ARRAY_TYPE
    , gl_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
    , gl_IMAGE_TRANSFORM_2D_HP
    , gl_DRAW_BUFFER1_ARB
    , gl_PIXEL_PACK_BUFFER
    , gl_STATIC_COPY_ARB
    , gl_QUERY_DEPTH_FAIL_EVENT_BIT_AMD
    , gl_TRANSPOSE_AFFINE_3D_NV
    , gl_VERTEX_ATTRIB_ARRAY_SIZE
    , gl_UTF16_NV
    , gl_SIGNED_INTENSITY8_NV
    , gl_SRGB_ALPHA_EXT
    , gl_VIEWPORT_BIT
    , gl_LOCATION_INDEX
    , gl_SEPARATE_SPECULAR_COLOR
    , gl_UNSIGNED_NORMALIZED
    , gl_BLEND_DST
    , gl_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
    , gl_FUNC_REVERSE_SUBTRACT_OES
    , gl_DOUBLE_MAT3
    , gl_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES
    , gl_BGRA_EXT
    , gl_DOT3_RGB
    , gl_MALI_PROGRAM_BINARY_ARM
    , gl_TEXTURE_ENV_COLOR
    , gl_GEOMETRY_INPUT_TYPE_EXT
    , gl_TEXTURE_GATHER
    , gl_IMAGE_MIN_FILTER_HP
    , gl_STENCIL_INDEX4
    , gl_DRAW_FRAMEBUFFER_BINDING
    , gl_IMAGE_BINDING_LAYERED
    , gl_DEPTH_EXT
    , gl_PARAMETER_BUFFER_ARB
    , gl_CONTEXT_PROFILE_MASK
    , gl_BGR
    , gl_LESS
    , gl_FLOAT_MAT4x2
    , gl_UNPACK_ROW_LENGTH_EXT
    , gl_TEXTURE_LIGHTING_MODE_HP
    , gl_INT_VEC4_ARB
    , gl_RG32F_EXT
    , gl_MAX_VERTEX_VARYING_COMPONENTS_ARB
    , gl_MAX_LIST_NESTING
    , gl_MAX_IMAGE_SAMPLES
    , gl_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
    , gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
    , gl_NUM_INSTRUCTIONS_PER_PASS_ATI
    , gl_PASS_THROUGH_TOKEN
    , gl_TRANSFORM_FEEDBACK_BINDING
    , gl_REPLACE_OLDEST_SUN
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    , gl_MULTISAMPLE_BUFFER_BIT0_QCOM
    , gl_SECONDARY_COLOR_ARRAY_SIZE
    , gl_FLOAT16_NV
    , gl_VERTEX_TEXTURE
    , gl_MAX_ELEMENTS_VERTICES_EXT
    , gl_READ_PIXEL_DATA_RANGE_NV
    , gl_PERFQUERY_COUNTER_THROUGHPUT_INTEL
    , gl_MAX_PROGRAM_ATTRIBS_ARB
    , gl_MAX_VERTEX_ATTRIBS
    , gl_MATRIX_PALETTE_ARB
    , gl_ALWAYS_FAST_HINT_PGI
    , gl_COLORBURN_KHR
    , gl_SAMPLER_CUBE_SHADOW
    , gl_RED_EXT
    , gl_TEXTURE_BINDING_RECTANGLE_ARB
    , gl_TEXTURE_INTENSITY_SIZE
    , gl_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
    , gl_MAX_PROGRAM_GENERIC_ATTRIBS_NV
    , gl_TEXTURE_COORD_ARRAY_POINTER_EXT
    , gl_MATRIX9_ARB
    , gl_MAX_FRAMEBUFFER_HEIGHT
    , gl_REG_5_ATI
    , gl_TEXTURE_EXTERNAL_OES
    , gl_VIEW_CLASS_BPTC_UNORM
    , gl_FRAGMENT_SHADER_BIT_EXT
    , gl_WARPS_PER_SM_NV
    , gl_GREEN_MAX_CLAMP_INGR
    , gl_MAP1_COLOR_4
    , gl_OP_MADD_EXT
    , gl_FLOAT_R32_NV
    , gl_MATERIAL_SIDE_HINT_PGI
    , gl_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
    , gl_TEXTURE16_ARB
    , gl_FIELDS_NV
    , gl_FRAGMENT_INPUT_NV
    , gl_RELATIVE_ROUNDED_RECT2_NV
    , gl_MATRIX28_ARB
    , gl_IMAGE_BINDING_LAYER
    , gl_VERTEX_ATTRIB_ARRAY_LONG
    , gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
    , gl_LUMINANCE6_ALPHA2_EXT
    , gl_REG_25_ATI
    , gl_INVALID_OPERATION
    , gl_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
    , gl_4PASS_2_EXT
    , gl_ACTIVE_ATTRIBUTE_MAX_LENGTH
    , gl_RGB8_EXT
    , gl_COMPRESSED_SLUMINANCE_ALPHA
    , gl_FRACTIONAL_EVEN_EXT
    , gl_MATRIX_INDEX_ARRAY_SIZE_ARB
    , gl_MAP2_VERTEX_ATTRIB7_4_NV
    , gl_VERTEX_BLEND_ARB
    , gl_CON_24_ATI
    , gl_ALPHA_FLOAT16_APPLE
    , gl_ACTIVE_VARYING_MAX_LENGTH_NV
    , gl_STENCIL_INDEX8
    , gl_PIXEL_TEX_GEN_Q_FLOOR_SGIX
    , gl_FRAMEBUFFER_BINDING_EXT
    , gl_TEXTURE_MAG_SIZE_NV
    , gl_DEPTH_PASS_INSTRUMENT_SGIX
    , gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    , gl_DUAL_TEXTURE_SELECT_SGIS
    , gl_MAX_SAMPLES
    , gl_DEPTH_COMPONENT24_SGIX
    , gl_MAX_CONVOLUTION_HEIGHT_EXT
    , gl_2_BYTES_NV
    , gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    , gl_3DC_X_AMD
    , gl_PERSPECTIVE_CORRECTION_HINT
    , gl_RGB32I
    , gl_COMBINER7_NV
    , gl_MIN_PROGRAM_TEXEL_OFFSET_NV
    , gl_REG_10_ATI
    , gl_MAX_DEBUG_MESSAGE_LENGTH_AMD
    , gl_DEPENDENT_RGB_TEXTURE_3D_NV
    , gl_TEXTURE5
    , gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
    , gl_TEXTURE_MEMORY_LAYOUT_INTEL
    , gl_DT_SCALE_NV
    , gl_SMOOTH_POINT_SIZE_GRANULARITY
    , gl_RED_SNORM
    , gl_COLOR_ARRAY_BUFFER_BINDING
    , gl_MAX_SUBROUTINES
    , gl_MATRIX21_ARB
    , gl_DRAW_BUFFER12
    , gl_ONE_MINUS_SRC1_ALPHA
    , gl_MAX_ASYNC_HISTOGRAM_SGIX
    , gl_OPERAND2_RGB
    , gl_VERTEX_ATTRIB_ARRAY_INTEGER
    , gl_RED
    , gl_COLOR_ENCODING
    , gl_DST_NV
    , gl_TEXTURE_BINDING_RECTANGLE
    , gl_TEXTURE_UPDATE_BARRIER_BIT
    , gl_INDEX_LOGIC_OP
    , gl_COMPRESSED_RED_RGTC1_EXT
    , gl_LUMINANCE12_ALPHA4
    , gl_VERTEX_ATTRIB_ARRAY1_NV
    , gl_POLYGON_OFFSET_CLAMP_EXT
    , gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED
    , gl_CIRCULAR_CW_ARC_TO_NV
    , gl_OFFSET_TEXTURE_2D_SCALE_NV
    , gl_SHININESS
    , gl_RG16UI
    , gl_TEXTURE_MAX_CLAMP_S_SGIX
    , gl_PRESERVE_ATI
    , gl_MAX_SAMPLE_MASK_WORDS
    , gl_VIDEO_COLOR_CONVERSION_MIN_NV
    , gl_MODULATE_ADD_ATI
    , gl_SAMPLE_ALPHA_TO_COVERAGE_ARB
    , gl_DEPTH_COMPONENT32
    , gl_PREVIOUS_TEXTURE_INPUT_NV
    , gl_STENCIL_INDEX
    , gl_SIGNED_NORMALIZED
    , gl_MULTISAMPLES_NV
    , gl_NUM_FRAGMENT_REGISTERS_ATI
    , gl_MATRIX1_NV
    , gl_TEXTURE_SAMPLES_IMG
    , gl_COLOR_BUFFER_BIT1_QCOM
    , gl_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
    , gl_DRAW_BUFFER7_ATI
    , gl_TESS_GEN_POINT_MODE_EXT
    , gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS
    , gl_RENDERBUFFER_BINDING_OES
    , gl_NUM_FRAGMENT_CONSTANTS_ATI
    , gl_MAX_SERVER_WAIT_TIMEOUT_APPLE
    , gl_TEXTURE_POST_SPECULAR_HP
    , gl_OVERLAY_NV
    , gl_NORMAL_ARRAY_POINTER
    , gl_DOUBLE_MAT2x4_EXT
    , gl_NUM_SHADING_LANGUAGE_VERSIONS
    , gl_FOG_COORD_SRC
    , gl_GET_TEXTURE_IMAGE_FORMAT
    , gl_PROXY_TEXTURE_1D
    , gl_HSL_HUE_KHR
    , gl_STREAM_DRAW_ARB
    , gl_PACK_MAX_COMPRESSED_SIZE_SGIX
    , gl_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB
    , gl_DRAW_BUFFER11
    , gl_CURRENT_SECONDARY_COLOR_EXT
    , gl_MATRIX3_ARB
    , gl_PRIMARY_COLOR_ARB
    , gl_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
    , gl_RESAMPLE_ZERO_FILL_OML
    , gl_VERTEX_PRECLIP_HINT_SGIX
    , gl_COMBINE_ALPHA_EXT
    , gl_COLOR_ATTACHMENT13_EXT
    , gl_VIBRANCE_BIAS_NV
    , gl_AFFINE_2D_NV
    , gl_UNSIGNED_INT_IMAGE_3D
    , gl_MAX_CLIPMAP_DEPTH_SGIX
    , gl_DSDT8_MAG8_INTENSITY8_NV
    , gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR
    , gl_NAND
    , gl_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX
    , gl_TEXTURE_2D_MULTISAMPLE
    , gl_FOG_MODE
    , gl_REG_20_ATI
    , gl_BIAS_BIT_ATI
    , gl_VARIABLE_G_NV
    , gl_INNOCENT_CONTEXT_RESET_ARB
    , gl_MAX_VARYING_FLOATS
    , gl_PALETTE4_RGB5_A1_OES
    , gl_COLOR_TABLE_BIAS_SGI
    , gl_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
    , gl_UNSIGNED_SHORT_8_8_REV_APPLE
    , gl_COMPRESSED_ALPHA_ARB
    , gl_VERTEX_PROGRAM_CALLBACK_MESA
    , gl_TEXTURE_BINDING_RENDERBUFFER_NV
    , gl_FUNC_SUBTRACT_EXT
    , gl_FRAGMENT_COVERAGE_COLOR_NV
    , gl_UNIFORM_MATRIX_STRIDE
    , gl_FOG
    , gl_HALF_FLOAT_ARB
    , gl_COMPRESSED_RGBA8_ETC2_EAC_OES
    , gl_LOCAL_EXT
    , gl_MAP1_INDEX
    , gl_POST_TEXTURE_FILTER_BIAS_SGIX
    , gl_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
    , gl_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
    , gl_TESS_CONTROL_PROGRAM_NV
    , gl_TABLE_TOO_LARGE
    , gl_PIXEL_PACK_BUFFER_ARB
    , gl_DUAL_ALPHA4_SGIS
    , gl_READ_BUFFER
    , gl_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    , gl_TEXTURE_3D_OES
    , gl_ADJACENT_PAIRS_NV
    , gl_TEXTURE8_ARB
    , gl_EDGE_FLAG_ARRAY_POINTER
    , gl_WEIGHT_ARRAY_ARB
    , gl_TEXTURE23
    , gl_UNIFORM_BUFFER_START
    , gl_COMPRESSED_LUMINANCE_ALPHA
    , gl_GCCSO_SHADER_BINARY_FJ
    , gl_ALPHA_FLOAT32_APPLE
    , gl_MAX_TEXTURE_COORDS_NV
    , gl_MATRIX3_NV
    , gl_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
    , gl_STENCIL_BACK_FAIL
    , gl_REG_28_ATI
    , gl_R16UI
    , gl_IR_INSTRUMENT1_SGIX
    , gl_SUBPIXEL_PRECISION_BIAS_X_BITS_NV
    , gl_RGB_SCALE
    , gl_UNSIGNED_BYTE
    , gl_TRANSFORM_FEEDBACK_BUFFER_MODE
    , gl_INDEX_TEST_EXT
    , gl_COMPARE_R_TO_TEXTURE
    , gl_REG_6_ATI
    , gl_SAMPLER_2D_ARRAY
    , gl_ELEMENT_ARRAY_LENGTH_NV
    , gl_TEXTURE15
    , gl_TEXTURE_BINDING_2D_ARRAY_EXT
    , gl_TEXTURE_LUMINANCE_SIZE
    , gl_IMAGE_CLASS_2_X_16
    , gl_INTENSITY8
    , gl_INTERNALFORMAT_STENCIL_TYPE
    , gl_ONE_MINUS_CONSTANT_COLOR
    , gl_USE_MISSING_GLYPH_NV
    , gl_CMYK_EXT
    , gl_MAX_COLOR_ATTACHMENTS_EXT
    , gl_IMAGE_1D_ARRAY
    , gl_WRITE_PIXEL_DATA_RANGE_POINTER_NV
    , gl_VIDEO_BUFFER_BINDING_NV
    , gl_MODELVIEW18_ARB
    , gl_DT_BIAS_NV
    , gl_VERTEX_PROGRAM_TWO_SIDE
    , gl_ISOLINES
    , gl_OBJECT_ACTIVE_UNIFORMS_ARB
    , gl_DOMAIN
    , gl_BGRA_IMG
    , gl_GEOMETRY_OUTPUT_TYPE_ARB
    , gl_MAX_CULL_DISTANCES
    , gl_SHADER_COMPILER
    , gl_DEPTH_BITS
    , gl_TEXTURE_SWIZZLE_RGBA
    , gl_IMAGE_1D
    , gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
    , gl_LIGHT3
    , gl_DEFORMATIONS_MASK_SGIX
    , gl_DEPENDENT_HILO_TEXTURE_2D_NV
    , gl_CURRENT_NORMAL
    , gl_MAP1_GRID_DOMAIN
    , gl_VIEW_CLASS_16_BITS
    , gl_TEXTURE_BINDING_CUBE_MAP_ARB
    , gl_RESET_NOTIFICATION_STRATEGY_EXT
    , gl_ACCUM_ALPHA_BITS
    , gl_POINT_SIZE_ARRAY_POINTER_OES
    , gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
    , gl_LUMINANCE_ALPHA_INTEGER_EXT
    , gl_INTERLACE_READ_OML
    , gl_CON_6_ATI
    , gl_4PASS_2_SGIS
    , gl_MAX_VIEWPORT_DIMS
    , gl_COMBINER_SUM_OUTPUT_NV
    , FuntypeCullFace
    , rglCullFace
    , glCullFace
    , FuntypeFrontFace
    , rglFrontFace
    , glFrontFace
    , FuntypeHint
    , rglHint
    , glHint
    , FuntypeLineWidth
    , rglLineWidth
    , glLineWidth
    , FuntypePointSize
    , rglPointSize
    , glPointSize
    , FuntypePolygonMode
    , rglPolygonMode
    , glPolygonMode
    , FuntypeScissor
    , rglScissor
    , glScissor
    , FuntypeTexParameterf
    , rglTexParameterf
    , glTexParameterf
    , FuntypeTexParameterfv
    , rglTexParameterfv
    , glTexParameterfv
    , FuntypeTexParameteri
    , rglTexParameteri
    , glTexParameteri
    , FuntypeTexParameteriv
    , rglTexParameteriv
    , glTexParameteriv
    , FuntypeTexImage1D
    , rglTexImage1D
    , glTexImage1D
    , FuntypeTexImage2D
    , rglTexImage2D
    , glTexImage2D
    , FuntypeDrawBuffer
    , rglDrawBuffer
    , glDrawBuffer
    , FuntypeClear
    , rglClear
    , glClear
    , FuntypeClearColor
    , rglClearColor
    , glClearColor
    , FuntypeClearStencil
    , rglClearStencil
    , glClearStencil
    , FuntypeClearDepth
    , rglClearDepth
    , glClearDepth
    , FuntypeStencilMask
    , rglStencilMask
    , glStencilMask
    , FuntypeColorMask
    , rglColorMask
    , glColorMask
    , FuntypeDepthMask
    , rglDepthMask
    , glDepthMask
    , FuntypeDisable
    , rglDisable
    , glDisable
    , FuntypeEnable
    , rglEnable
    , glEnable
    , FuntypeFinish
    , rglFinish
    , glFinish
    , FuntypeFlush
    , rglFlush
    , glFlush
    , FuntypeBlendFunc
    , rglBlendFunc
    , glBlendFunc
    , FuntypeLogicOp
    , rglLogicOp
    , glLogicOp
    , FuntypeStencilFunc
    , rglStencilFunc
    , glStencilFunc
    , FuntypeStencilOp
    , rglStencilOp
    , glStencilOp
    , FuntypeDepthFunc
    , rglDepthFunc
    , glDepthFunc
    , FuntypePixelStoref
    , rglPixelStoref
    , glPixelStoref
    , FuntypePixelStorei
    , rglPixelStorei
    , glPixelStorei
    , FuntypeReadBuffer
    , rglReadBuffer
    , glReadBuffer
    , FuntypeReadPixels
    , rglReadPixels
    , glReadPixels
    , FuntypeGetBooleanv
    , rglGetBooleanv
    , glGetBooleanv
    , FuntypeGetDoublev
    , rglGetDoublev
    , glGetDoublev
    , FuntypeGetError
    , rglGetError
    , glGetError
    , FuntypeGetFloatv
    , rglGetFloatv
    , glGetFloatv
    , FuntypeGetIntegerv
    , rglGetIntegerv
    , glGetIntegerv
    , FuntypeGetString
    , rglGetString
    , glGetString
    , FuntypeGetTexImage
    , rglGetTexImage
    , glGetTexImage
    , FuntypeGetTexParameterfv
    , rglGetTexParameterfv
    , glGetTexParameterfv
    , FuntypeGetTexParameteriv
    , rglGetTexParameteriv
    , glGetTexParameteriv
    , FuntypeGetTexLevelParameterfv
    , rglGetTexLevelParameterfv
    , glGetTexLevelParameterfv
    , FuntypeGetTexLevelParameteriv
    , rglGetTexLevelParameteriv
    , glGetTexLevelParameteriv
    , FuntypeIsEnabled
    , rglIsEnabled
    , glIsEnabled
    , FuntypeDepthRange
    , rglDepthRange
    , glDepthRange
    , FuntypeViewport
    , rglViewport
    , glViewport
    , FuntypeDrawArrays
    , rglDrawArrays
    , glDrawArrays
    , FuntypeDrawElements
    , rglDrawElements
    , glDrawElements
    , FuntypePolygonOffset
    , rglPolygonOffset
    , glPolygonOffset
    , FuntypeCopyTexImage1D
    , rglCopyTexImage1D
    , glCopyTexImage1D
    , FuntypeCopyTexImage2D
    , rglCopyTexImage2D
    , glCopyTexImage2D
    , FuntypeCopyTexSubImage1D
    , rglCopyTexSubImage1D
    , glCopyTexSubImage1D
    , FuntypeCopyTexSubImage2D
    , rglCopyTexSubImage2D
    , glCopyTexSubImage2D
    , FuntypeTexSubImage1D
    , rglTexSubImage1D
    , glTexSubImage1D
    , FuntypeTexSubImage2D
    , rglTexSubImage2D
    , glTexSubImage2D
    , FuntypeBindTexture
    , rglBindTexture
    , glBindTexture
    , FuntypeDeleteTextures
    , rglDeleteTextures
    , glDeleteTextures
    , FuntypeGenTextures
    , rglGenTextures
    , glGenTextures
    , FuntypeIsTexture
    , rglIsTexture
    , glIsTexture
    , FuntypeDrawRangeElements
    , rglDrawRangeElements
    , glDrawRangeElements
    , FuntypeTexImage3D
    , rglTexImage3D
    , glTexImage3D
    , FuntypeTexSubImage3D
    , rglTexSubImage3D
    , glTexSubImage3D
    , FuntypeCopyTexSubImage3D
    , rglCopyTexSubImage3D
    , glCopyTexSubImage3D
    , FuntypeActiveTexture
    , rglActiveTexture
    , glActiveTexture
    , FuntypeSampleCoverage
    , rglSampleCoverage
    , glSampleCoverage
    , FuntypeCompressedTexImage3D
    , rglCompressedTexImage3D
    , glCompressedTexImage3D
    , FuntypeCompressedTexImage2D
    , rglCompressedTexImage2D
    , glCompressedTexImage2D
    , FuntypeCompressedTexImage1D
    , rglCompressedTexImage1D
    , glCompressedTexImage1D
    , FuntypeCompressedTexSubImage3D
    , rglCompressedTexSubImage3D
    , glCompressedTexSubImage3D
    , FuntypeCompressedTexSubImage2D
    , rglCompressedTexSubImage2D
    , glCompressedTexSubImage2D
    , FuntypeCompressedTexSubImage1D
    , rglCompressedTexSubImage1D
    , glCompressedTexSubImage1D
    , FuntypeGetCompressedTexImage
    , rglGetCompressedTexImage
    , glGetCompressedTexImage
    , FuntypeBlendFuncSeparate
    , rglBlendFuncSeparate
    , glBlendFuncSeparate
    , FuntypeMultiDrawArrays
    , rglMultiDrawArrays
    , glMultiDrawArrays
    , FuntypeMultiDrawElements
    , rglMultiDrawElements
    , glMultiDrawElements
    , FuntypePointParameterf
    , rglPointParameterf
    , glPointParameterf
    , FuntypePointParameterfv
    , rglPointParameterfv
    , glPointParameterfv
    , FuntypePointParameteri
    , rglPointParameteri
    , glPointParameteri
    , FuntypePointParameteriv
    , rglPointParameteriv
    , glPointParameteriv
    , FuntypeBlendColor
    , rglBlendColor
    , glBlendColor
    , FuntypeBlendEquation
    , rglBlendEquation
    , glBlendEquation
    , FuntypeGenQueries
    , rglGenQueries
    , glGenQueries
    , FuntypeDeleteQueries
    , rglDeleteQueries
    , glDeleteQueries
    , FuntypeIsQuery
    , rglIsQuery
    , glIsQuery
    , FuntypeBeginQuery
    , rglBeginQuery
    , glBeginQuery
    , FuntypeEndQuery
    , rglEndQuery
    , glEndQuery
    , FuntypeGetQueryiv
    , rglGetQueryiv
    , glGetQueryiv
    , FuntypeGetQueryObjectiv
    , rglGetQueryObjectiv
    , glGetQueryObjectiv
    , FuntypeGetQueryObjectuiv
    , rglGetQueryObjectuiv
    , glGetQueryObjectuiv
    , FuntypeBindBuffer
    , rglBindBuffer
    , glBindBuffer
    , FuntypeDeleteBuffers
    , rglDeleteBuffers
    , glDeleteBuffers
    , FuntypeGenBuffers
    , rglGenBuffers
    , glGenBuffers
    , FuntypeIsBuffer
    , rglIsBuffer
    , glIsBuffer
    , FuntypeBufferData
    , rglBufferData
    , glBufferData
    , FuntypeBufferSubData
    , rglBufferSubData
    , glBufferSubData
    , FuntypeGetBufferSubData
    , rglGetBufferSubData
    , glGetBufferSubData
    , FuntypeMapBuffer
    , rglMapBuffer
    , glMapBuffer
    , FuntypeUnmapBuffer
    , rglUnmapBuffer
    , glUnmapBuffer
    , FuntypeGetBufferParameteriv
    , rglGetBufferParameteriv
    , glGetBufferParameteriv
    , FuntypeGetBufferPointerv
    , rglGetBufferPointerv
    , glGetBufferPointerv
    , FuntypeBlendEquationSeparate
    , rglBlendEquationSeparate
    , glBlendEquationSeparate
    , FuntypeDrawBuffers
    , rglDrawBuffers
    , glDrawBuffers
    , FuntypeStencilOpSeparate
    , rglStencilOpSeparate
    , glStencilOpSeparate
    , FuntypeStencilFuncSeparate
    , rglStencilFuncSeparate
    , glStencilFuncSeparate
    , FuntypeStencilMaskSeparate
    , rglStencilMaskSeparate
    , glStencilMaskSeparate
    , FuntypeAttachShader
    , rglAttachShader
    , glAttachShader
    , FuntypeBindAttribLocation
    , rglBindAttribLocation
    , glBindAttribLocation
    , FuntypeCompileShader
    , rglCompileShader
    , glCompileShader
    , FuntypeCreateProgram
    , rglCreateProgram
    , glCreateProgram
    , FuntypeCreateShader
    , rglCreateShader
    , glCreateShader
    , FuntypeDeleteProgram
    , rglDeleteProgram
    , glDeleteProgram
    , FuntypeDeleteShader
    , rglDeleteShader
    , glDeleteShader
    , FuntypeDetachShader
    , rglDetachShader
    , glDetachShader
    , FuntypeDisableVertexAttribArray
    , rglDisableVertexAttribArray
    , glDisableVertexAttribArray
    , FuntypeEnableVertexAttribArray
    , rglEnableVertexAttribArray
    , glEnableVertexAttribArray
    , FuntypeGetActiveAttrib
    , rglGetActiveAttrib
    , glGetActiveAttrib
    , FuntypeGetActiveUniform
    , rglGetActiveUniform
    , glGetActiveUniform
    , FuntypeGetAttachedShaders
    , rglGetAttachedShaders
    , glGetAttachedShaders
    , FuntypeGetAttribLocation
    , rglGetAttribLocation
    , glGetAttribLocation
    , FuntypeGetProgramiv
    , rglGetProgramiv
    , glGetProgramiv
    , FuntypeGetProgramInfoLog
    , rglGetProgramInfoLog
    , glGetProgramInfoLog
    , FuntypeGetShaderiv
    , rglGetShaderiv
    , glGetShaderiv
    , FuntypeGetShaderInfoLog
    , rglGetShaderInfoLog
    , glGetShaderInfoLog
    , FuntypeGetShaderSource
    , rglGetShaderSource
    , glGetShaderSource
    , FuntypeGetUniformLocation
    , rglGetUniformLocation
    , glGetUniformLocation
    , FuntypeGetUniformfv
    , rglGetUniformfv
    , glGetUniformfv
    , FuntypeGetUniformiv
    , rglGetUniformiv
    , glGetUniformiv
    , FuntypeGetVertexAttribdv
    , rglGetVertexAttribdv
    , glGetVertexAttribdv
    , FuntypeGetVertexAttribfv
    , rglGetVertexAttribfv
    , glGetVertexAttribfv
    , FuntypeGetVertexAttribiv
    , rglGetVertexAttribiv
    , glGetVertexAttribiv
    , FuntypeGetVertexAttribPointerv
    , rglGetVertexAttribPointerv
    , glGetVertexAttribPointerv
    , FuntypeIsProgram
    , rglIsProgram
    , glIsProgram
    , FuntypeIsShader
    , rglIsShader
    , glIsShader
    , FuntypeLinkProgram
    , rglLinkProgram
    , glLinkProgram
    , FuntypeShaderSource
    , rglShaderSource
    , glShaderSource
    , FuntypeUseProgram
    , rglUseProgram
    , glUseProgram
    , FuntypeUniform1f
    , rglUniform1f
    , glUniform1f
    , FuntypeUniform2f
    , rglUniform2f
    , glUniform2f
    , FuntypeUniform3f
    , rglUniform3f
    , glUniform3f
    , FuntypeUniform4f
    , rglUniform4f
    , glUniform4f
    , FuntypeUniform1i
    , rglUniform1i
    , glUniform1i
    , FuntypeUniform2i
    , rglUniform2i
    , glUniform2i
    , FuntypeUniform3i
    , rglUniform3i
    , glUniform3i
    , FuntypeUniform4i
    , rglUniform4i
    , glUniform4i
    , FuntypeUniform1fv
    , rglUniform1fv
    , glUniform1fv
    , FuntypeUniform2fv
    , rglUniform2fv
    , glUniform2fv
    , FuntypeUniform3fv
    , rglUniform3fv
    , glUniform3fv
    , FuntypeUniform4fv
    , rglUniform4fv
    , glUniform4fv
    , FuntypeUniform1iv
    , rglUniform1iv
    , glUniform1iv
    , FuntypeUniform2iv
    , rglUniform2iv
    , glUniform2iv
    , FuntypeUniform3iv
    , rglUniform3iv
    , glUniform3iv
    , FuntypeUniform4iv
    , rglUniform4iv
    , glUniform4iv
    , FuntypeUniformMatrix2fv
    , rglUniformMatrix2fv
    , glUniformMatrix2fv
    , FuntypeUniformMatrix3fv
    , rglUniformMatrix3fv
    , glUniformMatrix3fv
    , FuntypeUniformMatrix4fv
    , rglUniformMatrix4fv
    , glUniformMatrix4fv
    , FuntypeValidateProgram
    , rglValidateProgram
    , glValidateProgram
    , FuntypeVertexAttrib1d
    , rglVertexAttrib1d
    , glVertexAttrib1d
    , FuntypeVertexAttrib1dv
    , rglVertexAttrib1dv
    , glVertexAttrib1dv
    , FuntypeVertexAttrib1f
    , rglVertexAttrib1f
    , glVertexAttrib1f
    , FuntypeVertexAttrib1fv
    , rglVertexAttrib1fv
    , glVertexAttrib1fv
    , FuntypeVertexAttrib1s
    , rglVertexAttrib1s
    , glVertexAttrib1s
    , FuntypeVertexAttrib1sv
    , rglVertexAttrib1sv
    , glVertexAttrib1sv
    , FuntypeVertexAttrib2d
    , rglVertexAttrib2d
    , glVertexAttrib2d
    , FuntypeVertexAttrib2dv
    , rglVertexAttrib2dv
    , glVertexAttrib2dv
    , FuntypeVertexAttrib2f
    , rglVertexAttrib2f
    , glVertexAttrib2f
    , FuntypeVertexAttrib2fv
    , rglVertexAttrib2fv
    , glVertexAttrib2fv
    , FuntypeVertexAttrib2s
    , rglVertexAttrib2s
    , glVertexAttrib2s
    , FuntypeVertexAttrib2sv
    , rglVertexAttrib2sv
    , glVertexAttrib2sv
    , FuntypeVertexAttrib3d
    , rglVertexAttrib3d
    , glVertexAttrib3d
    , FuntypeVertexAttrib3dv
    , rglVertexAttrib3dv
    , glVertexAttrib3dv
    , FuntypeVertexAttrib3f
    , rglVertexAttrib3f
    , glVertexAttrib3f
    , FuntypeVertexAttrib3fv
    , rglVertexAttrib3fv
    , glVertexAttrib3fv
    , FuntypeVertexAttrib3s
    , rglVertexAttrib3s
    , glVertexAttrib3s
    , FuntypeVertexAttrib3sv
    , rglVertexAttrib3sv
    , glVertexAttrib3sv
    , FuntypeVertexAttrib4Nbv
    , rglVertexAttrib4Nbv
    , glVertexAttrib4Nbv
    , FuntypeVertexAttrib4Niv
    , rglVertexAttrib4Niv
    , glVertexAttrib4Niv
    , FuntypeVertexAttrib4Nsv
    , rglVertexAttrib4Nsv
    , glVertexAttrib4Nsv
    , FuntypeVertexAttrib4Nub
    , rglVertexAttrib4Nub
    , glVertexAttrib4Nub
    , FuntypeVertexAttrib4Nubv
    , rglVertexAttrib4Nubv
    , glVertexAttrib4Nubv
    , FuntypeVertexAttrib4Nuiv
    , rglVertexAttrib4Nuiv
    , glVertexAttrib4Nuiv
    , FuntypeVertexAttrib4Nusv
    , rglVertexAttrib4Nusv
    , glVertexAttrib4Nusv
    , FuntypeVertexAttrib4bv
    , rglVertexAttrib4bv
    , glVertexAttrib4bv
    , FuntypeVertexAttrib4d
    , rglVertexAttrib4d
    , glVertexAttrib4d
    , FuntypeVertexAttrib4dv
    , rglVertexAttrib4dv
    , glVertexAttrib4dv
    , FuntypeVertexAttrib4f
    , rglVertexAttrib4f
    , glVertexAttrib4f
    , FuntypeVertexAttrib4fv
    , rglVertexAttrib4fv
    , glVertexAttrib4fv
    , FuntypeVertexAttrib4iv
    , rglVertexAttrib4iv
    , glVertexAttrib4iv
    , FuntypeVertexAttrib4s
    , rglVertexAttrib4s
    , glVertexAttrib4s
    , FuntypeVertexAttrib4sv
    , rglVertexAttrib4sv
    , glVertexAttrib4sv
    , FuntypeVertexAttrib4ubv
    , rglVertexAttrib4ubv
    , glVertexAttrib4ubv
    , FuntypeVertexAttrib4uiv
    , rglVertexAttrib4uiv
    , glVertexAttrib4uiv
    , FuntypeVertexAttrib4usv
    , rglVertexAttrib4usv
    , glVertexAttrib4usv
    , FuntypeVertexAttribPointer
    , rglVertexAttribPointer
    , glVertexAttribPointer
    , FuntypeUniformMatrix2x3fv
    , rglUniformMatrix2x3fv
    , glUniformMatrix2x3fv
    , FuntypeUniformMatrix3x2fv
    , rglUniformMatrix3x2fv
    , glUniformMatrix3x2fv
    , FuntypeUniformMatrix2x4fv
    , rglUniformMatrix2x4fv
    , glUniformMatrix2x4fv
    , FuntypeUniformMatrix4x2fv
    , rglUniformMatrix4x2fv
    , glUniformMatrix4x2fv
    , FuntypeUniformMatrix3x4fv
    , rglUniformMatrix3x4fv
    , glUniformMatrix3x4fv
    , FuntypeUniformMatrix4x3fv
    , rglUniformMatrix4x3fv
    , glUniformMatrix4x3fv
    , FuntypeColorMaski
    , rglColorMaski
    , glColorMaski
    , FuntypeGetBooleani_v
    , rglGetBooleani_v
    , glGetBooleani_v
    , FuntypeGetIntegeri_v
    , rglGetIntegeri_v
    , glGetIntegeri_v
    , FuntypeEnablei
    , rglEnablei
    , glEnablei
    , FuntypeDisablei
    , rglDisablei
    , glDisablei
    , FuntypeIsEnabledi
    , rglIsEnabledi
    , glIsEnabledi
    , FuntypeBeginTransformFeedback
    , rglBeginTransformFeedback
    , glBeginTransformFeedback
    , FuntypeEndTransformFeedback
    , rglEndTransformFeedback
    , glEndTransformFeedback
    , FuntypeBindBufferRange
    , rglBindBufferRange
    , glBindBufferRange
    , FuntypeBindBufferBase
    , rglBindBufferBase
    , glBindBufferBase
    , FuntypeTransformFeedbackVaryings
    , rglTransformFeedbackVaryings
    , glTransformFeedbackVaryings
    , FuntypeGetTransformFeedbackVarying
    , rglGetTransformFeedbackVarying
    , glGetTransformFeedbackVarying
    , FuntypeClampColor
    , rglClampColor
    , glClampColor
    , FuntypeBeginConditionalRender
    , rglBeginConditionalRender
    , glBeginConditionalRender
    , FuntypeEndConditionalRender
    , rglEndConditionalRender
    , glEndConditionalRender
    , FuntypeVertexAttribIPointer
    , rglVertexAttribIPointer
    , glVertexAttribIPointer
    , FuntypeGetVertexAttribIiv
    , rglGetVertexAttribIiv
    , glGetVertexAttribIiv
    , FuntypeGetVertexAttribIuiv
    , rglGetVertexAttribIuiv
    , glGetVertexAttribIuiv
    , FuntypeVertexAttribI1i
    , rglVertexAttribI1i
    , glVertexAttribI1i
    , FuntypeVertexAttribI2i
    , rglVertexAttribI2i
    , glVertexAttribI2i
    , FuntypeVertexAttribI3i
    , rglVertexAttribI3i
    , glVertexAttribI3i
    , FuntypeVertexAttribI4i
    , rglVertexAttribI4i
    , glVertexAttribI4i
    , FuntypeVertexAttribI1ui
    , rglVertexAttribI1ui
    , glVertexAttribI1ui
    , FuntypeVertexAttribI2ui
    , rglVertexAttribI2ui
    , glVertexAttribI2ui
    , FuntypeVertexAttribI3ui
    , rglVertexAttribI3ui
    , glVertexAttribI3ui
    , FuntypeVertexAttribI4ui
    , rglVertexAttribI4ui
    , glVertexAttribI4ui
    , FuntypeVertexAttribI1iv
    , rglVertexAttribI1iv
    , glVertexAttribI1iv
    , FuntypeVertexAttribI2iv
    , rglVertexAttribI2iv
    , glVertexAttribI2iv
    , FuntypeVertexAttribI3iv
    , rglVertexAttribI3iv
    , glVertexAttribI3iv
    , FuntypeVertexAttribI4iv
    , rglVertexAttribI4iv
    , glVertexAttribI4iv
    , FuntypeVertexAttribI1uiv
    , rglVertexAttribI1uiv
    , glVertexAttribI1uiv
    , FuntypeVertexAttribI2uiv
    , rglVertexAttribI2uiv
    , glVertexAttribI2uiv
    , FuntypeVertexAttribI3uiv
    , rglVertexAttribI3uiv
    , glVertexAttribI3uiv
    , FuntypeVertexAttribI4uiv
    , rglVertexAttribI4uiv
    , glVertexAttribI4uiv
    , FuntypeVertexAttribI4bv
    , rglVertexAttribI4bv
    , glVertexAttribI4bv
    , FuntypeVertexAttribI4sv
    , rglVertexAttribI4sv
    , glVertexAttribI4sv
    , FuntypeVertexAttribI4ubv
    , rglVertexAttribI4ubv
    , glVertexAttribI4ubv
    , FuntypeVertexAttribI4usv
    , rglVertexAttribI4usv
    , glVertexAttribI4usv
    , FuntypeGetUniformuiv
    , rglGetUniformuiv
    , glGetUniformuiv
    , FuntypeBindFragDataLocation
    , rglBindFragDataLocation
    , glBindFragDataLocation
    , FuntypeGetFragDataLocation
    , rglGetFragDataLocation
    , glGetFragDataLocation
    , FuntypeUniform1ui
    , rglUniform1ui
    , glUniform1ui
    , FuntypeUniform2ui
    , rglUniform2ui
    , glUniform2ui
    , FuntypeUniform3ui
    , rglUniform3ui
    , glUniform3ui
    , FuntypeUniform4ui
    , rglUniform4ui
    , glUniform4ui
    , FuntypeUniform1uiv
    , rglUniform1uiv
    , glUniform1uiv
    , FuntypeUniform2uiv
    , rglUniform2uiv
    , glUniform2uiv
    , FuntypeUniform3uiv
    , rglUniform3uiv
    , glUniform3uiv
    , FuntypeUniform4uiv
    , rglUniform4uiv
    , glUniform4uiv
    , FuntypeTexParameterIiv
    , rglTexParameterIiv
    , glTexParameterIiv
    , FuntypeTexParameterIuiv
    , rglTexParameterIuiv
    , glTexParameterIuiv
    , FuntypeGetTexParameterIiv
    , rglGetTexParameterIiv
    , glGetTexParameterIiv
    , FuntypeGetTexParameterIuiv
    , rglGetTexParameterIuiv
    , glGetTexParameterIuiv
    , FuntypeClearBufferiv
    , rglClearBufferiv
    , glClearBufferiv
    , FuntypeClearBufferuiv
    , rglClearBufferuiv
    , glClearBufferuiv
    , FuntypeClearBufferfv
    , rglClearBufferfv
    , glClearBufferfv
    , FuntypeClearBufferfi
    , rglClearBufferfi
    , glClearBufferfi
    , FuntypeGetStringi
    , rglGetStringi
    , glGetStringi
    , FuntypeIsRenderbuffer
    , rglIsRenderbuffer
    , glIsRenderbuffer
    , FuntypeBindRenderbuffer
    , rglBindRenderbuffer
    , glBindRenderbuffer
    , FuntypeDeleteRenderbuffers
    , rglDeleteRenderbuffers
    , glDeleteRenderbuffers
    , FuntypeGenRenderbuffers
    , rglGenRenderbuffers
    , glGenRenderbuffers
    , FuntypeRenderbufferStorage
    , rglRenderbufferStorage
    , glRenderbufferStorage
    , FuntypeGetRenderbufferParameteriv
    , rglGetRenderbufferParameteriv
    , glGetRenderbufferParameteriv
    , FuntypeIsFramebuffer
    , rglIsFramebuffer
    , glIsFramebuffer
    , FuntypeBindFramebuffer
    , rglBindFramebuffer
    , glBindFramebuffer
    , FuntypeDeleteFramebuffers
    , rglDeleteFramebuffers
    , glDeleteFramebuffers
    , FuntypeGenFramebuffers
    , rglGenFramebuffers
    , glGenFramebuffers
    , FuntypeCheckFramebufferStatus
    , rglCheckFramebufferStatus
    , glCheckFramebufferStatus
    , FuntypeFramebufferTexture1D
    , rglFramebufferTexture1D
    , glFramebufferTexture1D
    , FuntypeFramebufferTexture2D
    , rglFramebufferTexture2D
    , glFramebufferTexture2D
    , FuntypeFramebufferTexture3D
    , rglFramebufferTexture3D
    , glFramebufferTexture3D
    , FuntypeFramebufferRenderbuffer
    , rglFramebufferRenderbuffer
    , glFramebufferRenderbuffer
    , FuntypeGetFramebufferAttachmentParameteriv
    , rglGetFramebufferAttachmentParameteriv
    , glGetFramebufferAttachmentParameteriv
    , FuntypeGenerateMipmap
    , rglGenerateMipmap
    , glGenerateMipmap
    , FuntypeBlitFramebuffer
    , rglBlitFramebuffer
    , glBlitFramebuffer
    , FuntypeRenderbufferStorageMultisample
    , rglRenderbufferStorageMultisample
    , glRenderbufferStorageMultisample
    , FuntypeFramebufferTextureLayer
    , rglFramebufferTextureLayer
    , glFramebufferTextureLayer
    , FuntypeMapBufferRange
    , rglMapBufferRange
    , glMapBufferRange
    , FuntypeFlushMappedBufferRange
    , rglFlushMappedBufferRange
    , glFlushMappedBufferRange
    , FuntypeBindVertexArray
    , rglBindVertexArray
    , glBindVertexArray
    , FuntypeDeleteVertexArrays
    , rglDeleteVertexArrays
    , glDeleteVertexArrays
    , FuntypeGenVertexArrays
    , rglGenVertexArrays
    , glGenVertexArrays
    , FuntypeIsVertexArray
    , rglIsVertexArray
    , glIsVertexArray
    , FuntypeDrawArraysInstanced
    , rglDrawArraysInstanced
    , glDrawArraysInstanced
    , FuntypeDrawElementsInstanced
    , rglDrawElementsInstanced
    , glDrawElementsInstanced
    , FuntypeTexBuffer
    , rglTexBuffer
    , glTexBuffer
    , FuntypePrimitiveRestartIndex
    , rglPrimitiveRestartIndex
    , glPrimitiveRestartIndex
    , FuntypeCopyBufferSubData
    , rglCopyBufferSubData
    , glCopyBufferSubData
    , FuntypeGetUniformIndices
    , rglGetUniformIndices
    , glGetUniformIndices
    , FuntypeGetActiveUniformsiv
    , rglGetActiveUniformsiv
    , glGetActiveUniformsiv
    , FuntypeGetActiveUniformName
    , rglGetActiveUniformName
    , glGetActiveUniformName
    , FuntypeGetUniformBlockIndex
    , rglGetUniformBlockIndex
    , glGetUniformBlockIndex
    , FuntypeGetActiveUniformBlockiv
    , rglGetActiveUniformBlockiv
    , glGetActiveUniformBlockiv
    , FuntypeGetActiveUniformBlockName
    , rglGetActiveUniformBlockName
    , glGetActiveUniformBlockName
    , FuntypeUniformBlockBinding
    , rglUniformBlockBinding
    , glUniformBlockBinding
    , FuntypeDrawElementsBaseVertex
    , rglDrawElementsBaseVertex
    , glDrawElementsBaseVertex
    , FuntypeDrawRangeElementsBaseVertex
    , rglDrawRangeElementsBaseVertex
    , glDrawRangeElementsBaseVertex
    , FuntypeDrawElementsInstancedBaseVertex
    , rglDrawElementsInstancedBaseVertex
    , glDrawElementsInstancedBaseVertex
    , FuntypeMultiDrawElementsBaseVertex
    , rglMultiDrawElementsBaseVertex
    , glMultiDrawElementsBaseVertex
    , FuntypeProvokingVertex
    , rglProvokingVertex
    , glProvokingVertex
    , FuntypeFenceSync
    , rglFenceSync
    , glFenceSync
    , FuntypeIsSync
    , rglIsSync
    , glIsSync
    , FuntypeDeleteSync
    , rglDeleteSync
    , glDeleteSync
    , FuntypeClientWaitSync
    , rglClientWaitSync
    , glClientWaitSync
    , FuntypeWaitSync
    , rglWaitSync
    , glWaitSync
    , FuntypeGetInteger64v
    , rglGetInteger64v
    , glGetInteger64v
    , FuntypeGetSynciv
    , rglGetSynciv
    , glGetSynciv
    , FuntypeGetInteger64i_v
    , rglGetInteger64i_v
    , glGetInteger64i_v
    , FuntypeGetBufferParameteri64v
    , rglGetBufferParameteri64v
    , glGetBufferParameteri64v
    , FuntypeFramebufferTexture
    , rglFramebufferTexture
    , glFramebufferTexture
    , FuntypeTexImage2DMultisample
    , rglTexImage2DMultisample
    , glTexImage2DMultisample
    , FuntypeTexImage3DMultisample
    , rglTexImage3DMultisample
    , glTexImage3DMultisample
    , FuntypeGetMultisamplefv
    , rglGetMultisamplefv
    , glGetMultisamplefv
    , FuntypeSampleMaski
    , rglSampleMaski
    , glSampleMaski
    , FuntypeBindFragDataLocationIndexed
    , rglBindFragDataLocationIndexed
    , glBindFragDataLocationIndexed
    , FuntypeGetFragDataIndex
    , rglGetFragDataIndex
    , glGetFragDataIndex
    , FuntypeGenSamplers
    , rglGenSamplers
    , glGenSamplers
    , FuntypeDeleteSamplers
    , rglDeleteSamplers
    , glDeleteSamplers
    , FuntypeIsSampler
    , rglIsSampler
    , glIsSampler
    , FuntypeBindSampler
    , rglBindSampler
    , glBindSampler
    , FuntypeSamplerParameteri
    , rglSamplerParameteri
    , glSamplerParameteri
    , FuntypeSamplerParameteriv
    , rglSamplerParameteriv
    , glSamplerParameteriv
    , FuntypeSamplerParameterf
    , rglSamplerParameterf
    , glSamplerParameterf
    , FuntypeSamplerParameterfv
    , rglSamplerParameterfv
    , glSamplerParameterfv
    , FuntypeSamplerParameterIiv
    , rglSamplerParameterIiv
    , glSamplerParameterIiv
    , FuntypeSamplerParameterIuiv
    , rglSamplerParameterIuiv
    , glSamplerParameterIuiv
    , FuntypeGetSamplerParameteriv
    , rglGetSamplerParameteriv
    , glGetSamplerParameteriv
    , FuntypeGetSamplerParameterIiv
    , rglGetSamplerParameterIiv
    , glGetSamplerParameterIiv
    , FuntypeGetSamplerParameterfv
    , rglGetSamplerParameterfv
    , glGetSamplerParameterfv
    , FuntypeGetSamplerParameterIuiv
    , rglGetSamplerParameterIuiv
    , glGetSamplerParameterIuiv
    , FuntypeQueryCounter
    , rglQueryCounter
    , glQueryCounter
    , FuntypeGetQueryObjecti64v
    , rglGetQueryObjecti64v
    , glGetQueryObjecti64v
    , FuntypeGetQueryObjectui64v
    , rglGetQueryObjectui64v
    , glGetQueryObjectui64v
    , FuntypeVertexAttribDivisor
    , rglVertexAttribDivisor
    , glVertexAttribDivisor
    , FuntypeVertexAttribP1ui
    , rglVertexAttribP1ui
    , glVertexAttribP1ui
    , FuntypeVertexAttribP1uiv
    , rglVertexAttribP1uiv
    , glVertexAttribP1uiv
    , FuntypeVertexAttribP2ui
    , rglVertexAttribP2ui
    , glVertexAttribP2ui
    , FuntypeVertexAttribP2uiv
    , rglVertexAttribP2uiv
    , glVertexAttribP2uiv
    , FuntypeVertexAttribP3ui
    , rglVertexAttribP3ui
    , glVertexAttribP3ui
    , FuntypeVertexAttribP3uiv
    , rglVertexAttribP3uiv
    , glVertexAttribP3uiv
    , FuntypeVertexAttribP4ui
    , rglVertexAttribP4ui
    , glVertexAttribP4ui
    , FuntypeVertexAttribP4uiv
    , rglVertexAttribP4uiv
    , glVertexAttribP4uiv
    , FuntypeTexStorage1D
    , rglTexStorage1D
    , glTexStorage1D
    , FuntypeTexStorage2D
    , rglTexStorage2D
    , glTexStorage2D
    , FuntypeTexStorage3D
    , rglTexStorage3D
    , glTexStorage3D
    , FuntypeDebugMessageControl
    , rglDebugMessageControl
    , glDebugMessageControl
    , FuntypeDebugMessageInsert
    , rglDebugMessageInsert
    , glDebugMessageInsert
    , FuntypeDebugMessageCallback
    , rglDebugMessageCallback
    , glDebugMessageCallback
    , FuntypeGetDebugMessageLog
    , rglGetDebugMessageLog
    , glGetDebugMessageLog
    , FuntypePushDebugGroup
    , rglPushDebugGroup
    , glPushDebugGroup
    , FuntypePopDebugGroup
    , rglPopDebugGroup
    , glPopDebugGroup
    , FuntypeObjectLabel
    , rglObjectLabel
    , glObjectLabel
    , FuntypeGetObjectLabel
    , rglGetObjectLabel
    , glGetObjectLabel
    , FuntypeObjectPtrLabel
    , rglObjectPtrLabel
    , glObjectPtrLabel
    , FuntypeGetObjectPtrLabel
    , rglGetObjectPtrLabel
    , glGetObjectPtrLabel
    , FuntypeGetPointerv
    , rglGetPointerv
    , glGetPointerv
    , FuntypeDebugMessageControlKHR
    , rglDebugMessageControlKHR
    , glDebugMessageControlKHR
    , FuntypeDebugMessageInsertKHR
    , rglDebugMessageInsertKHR
    , glDebugMessageInsertKHR
    , FuntypeDebugMessageCallbackKHR
    , rglDebugMessageCallbackKHR
    , glDebugMessageCallbackKHR
    , FuntypeGetDebugMessageLogKHR
    , rglGetDebugMessageLogKHR
    , glGetDebugMessageLogKHR
    , FuntypePushDebugGroupKHR
    , rglPushDebugGroupKHR
    , glPushDebugGroupKHR
    , FuntypePopDebugGroupKHR
    , rglPopDebugGroupKHR
    , glPopDebugGroupKHR
    , FuntypeObjectLabelKHR
    , rglObjectLabelKHR
    , glObjectLabelKHR
    , FuntypeGetObjectLabelKHR
    , rglGetObjectLabelKHR
    , glGetObjectLabelKHR
    , FuntypeObjectPtrLabelKHR
    , rglObjectPtrLabelKHR
    , glObjectPtrLabelKHR
    , FuntypeGetObjectPtrLabelKHR
    , rglGetObjectPtrLabelKHR
    , glGetObjectPtrLabelKHR
    , FuntypeGetPointervKHR
    , rglGetPointervKHR
    , glGetPointervKHR
    , FuntypeMatrixLoadfEXT
    , rglMatrixLoadfEXT
    , glMatrixLoadfEXT
    , FuntypeMatrixLoaddEXT
    , rglMatrixLoaddEXT
    , glMatrixLoaddEXT
    , FuntypeMatrixMultfEXT
    , rglMatrixMultfEXT
    , glMatrixMultfEXT
    , FuntypeMatrixMultdEXT
    , rglMatrixMultdEXT
    , glMatrixMultdEXT
    , FuntypeMatrixLoadIdentityEXT
    , rglMatrixLoadIdentityEXT
    , glMatrixLoadIdentityEXT
    , FuntypeMatrixRotatefEXT
    , rglMatrixRotatefEXT
    , glMatrixRotatefEXT
    , FuntypeMatrixRotatedEXT
    , rglMatrixRotatedEXT
    , glMatrixRotatedEXT
    , FuntypeMatrixScalefEXT
    , rglMatrixScalefEXT
    , glMatrixScalefEXT
    , FuntypeMatrixScaledEXT
    , rglMatrixScaledEXT
    , glMatrixScaledEXT
    , FuntypeMatrixTranslatefEXT
    , rglMatrixTranslatefEXT
    , glMatrixTranslatefEXT
    , FuntypeMatrixTranslatedEXT
    , rglMatrixTranslatedEXT
    , glMatrixTranslatedEXT
    , FuntypeMatrixFrustumEXT
    , rglMatrixFrustumEXT
    , glMatrixFrustumEXT
    , FuntypeMatrixOrthoEXT
    , rglMatrixOrthoEXT
    , glMatrixOrthoEXT
    , FuntypeMatrixPopEXT
    , rglMatrixPopEXT
    , glMatrixPopEXT
    , FuntypeMatrixPushEXT
    , rglMatrixPushEXT
    , glMatrixPushEXT
    , FuntypeClientAttribDefaultEXT
    , rglClientAttribDefaultEXT
    , glClientAttribDefaultEXT
    , FuntypePushClientAttribDefaultEXT
    , rglPushClientAttribDefaultEXT
    , glPushClientAttribDefaultEXT
    , FuntypeTextureParameterfEXT
    , rglTextureParameterfEXT
    , glTextureParameterfEXT
    , FuntypeTextureParameterfvEXT
    , rglTextureParameterfvEXT
    , glTextureParameterfvEXT
    , FuntypeTextureParameteriEXT
    , rglTextureParameteriEXT
    , glTextureParameteriEXT
    , FuntypeTextureParameterivEXT
    , rglTextureParameterivEXT
    , glTextureParameterivEXT
    , FuntypeTextureImage1DEXT
    , rglTextureImage1DEXT
    , glTextureImage1DEXT
    , FuntypeTextureImage2DEXT
    , rglTextureImage2DEXT
    , glTextureImage2DEXT
    , FuntypeTextureSubImage1DEXT
    , rglTextureSubImage1DEXT
    , glTextureSubImage1DEXT
    , FuntypeTextureSubImage2DEXT
    , rglTextureSubImage2DEXT
    , glTextureSubImage2DEXT
    , FuntypeCopyTextureImage1DEXT
    , rglCopyTextureImage1DEXT
    , glCopyTextureImage1DEXT
    , FuntypeCopyTextureImage2DEXT
    , rglCopyTextureImage2DEXT
    , glCopyTextureImage2DEXT
    , FuntypeCopyTextureSubImage1DEXT
    , rglCopyTextureSubImage1DEXT
    , glCopyTextureSubImage1DEXT
    , FuntypeCopyTextureSubImage2DEXT
    , rglCopyTextureSubImage2DEXT
    , glCopyTextureSubImage2DEXT
    , FuntypeGetTextureImageEXT
    , rglGetTextureImageEXT
    , glGetTextureImageEXT
    , FuntypeGetTextureParameterfvEXT
    , rglGetTextureParameterfvEXT
    , glGetTextureParameterfvEXT
    , FuntypeGetTextureParameterivEXT
    , rglGetTextureParameterivEXT
    , glGetTextureParameterivEXT
    , FuntypeGetTextureLevelParameterfvEXT
    , rglGetTextureLevelParameterfvEXT
    , glGetTextureLevelParameterfvEXT
    , FuntypeGetTextureLevelParameterivEXT
    , rglGetTextureLevelParameterivEXT
    , glGetTextureLevelParameterivEXT
    , FuntypeTextureImage3DEXT
    , rglTextureImage3DEXT
    , glTextureImage3DEXT
    , FuntypeTextureSubImage3DEXT
    , rglTextureSubImage3DEXT
    , glTextureSubImage3DEXT
    , FuntypeCopyTextureSubImage3DEXT
    , rglCopyTextureSubImage3DEXT
    , glCopyTextureSubImage3DEXT
    , FuntypeBindMultiTextureEXT
    , rglBindMultiTextureEXT
    , glBindMultiTextureEXT
    , FuntypeMultiTexCoordPointerEXT
    , rglMultiTexCoordPointerEXT
    , glMultiTexCoordPointerEXT
    , FuntypeMultiTexEnvfEXT
    , rglMultiTexEnvfEXT
    , glMultiTexEnvfEXT
    , FuntypeMultiTexEnvfvEXT
    , rglMultiTexEnvfvEXT
    , glMultiTexEnvfvEXT
    , FuntypeMultiTexEnviEXT
    , rglMultiTexEnviEXT
    , glMultiTexEnviEXT
    , FuntypeMultiTexEnvivEXT
    , rglMultiTexEnvivEXT
    , glMultiTexEnvivEXT
    , FuntypeMultiTexGendEXT
    , rglMultiTexGendEXT
    , glMultiTexGendEXT
    , FuntypeMultiTexGendvEXT
    , rglMultiTexGendvEXT
    , glMultiTexGendvEXT
    , FuntypeMultiTexGenfEXT
    , rglMultiTexGenfEXT
    , glMultiTexGenfEXT
    , FuntypeMultiTexGenfvEXT
    , rglMultiTexGenfvEXT
    , glMultiTexGenfvEXT
    , FuntypeMultiTexGeniEXT
    , rglMultiTexGeniEXT
    , glMultiTexGeniEXT
    , FuntypeMultiTexGenivEXT
    , rglMultiTexGenivEXT
    , glMultiTexGenivEXT
    , FuntypeGetMultiTexEnvfvEXT
    , rglGetMultiTexEnvfvEXT
    , glGetMultiTexEnvfvEXT
    , FuntypeGetMultiTexEnvivEXT
    , rglGetMultiTexEnvivEXT
    , glGetMultiTexEnvivEXT
    , FuntypeGetMultiTexGendvEXT
    , rglGetMultiTexGendvEXT
    , glGetMultiTexGendvEXT
    , FuntypeGetMultiTexGenfvEXT
    , rglGetMultiTexGenfvEXT
    , glGetMultiTexGenfvEXT
    , FuntypeGetMultiTexGenivEXT
    , rglGetMultiTexGenivEXT
    , glGetMultiTexGenivEXT
    , FuntypeMultiTexParameteriEXT
    , rglMultiTexParameteriEXT
    , glMultiTexParameteriEXT
    , FuntypeMultiTexParameterivEXT
    , rglMultiTexParameterivEXT
    , glMultiTexParameterivEXT
    , FuntypeMultiTexParameterfEXT
    , rglMultiTexParameterfEXT
    , glMultiTexParameterfEXT
    , FuntypeMultiTexParameterfvEXT
    , rglMultiTexParameterfvEXT
    , glMultiTexParameterfvEXT
    , FuntypeMultiTexImage1DEXT
    , rglMultiTexImage1DEXT
    , glMultiTexImage1DEXT
    , FuntypeMultiTexImage2DEXT
    , rglMultiTexImage2DEXT
    , glMultiTexImage2DEXT
    , FuntypeMultiTexSubImage1DEXT
    , rglMultiTexSubImage1DEXT
    , glMultiTexSubImage1DEXT
    , FuntypeMultiTexSubImage2DEXT
    , rglMultiTexSubImage2DEXT
    , glMultiTexSubImage2DEXT
    , FuntypeCopyMultiTexImage1DEXT
    , rglCopyMultiTexImage1DEXT
    , glCopyMultiTexImage1DEXT
    , FuntypeCopyMultiTexImage2DEXT
    , rglCopyMultiTexImage2DEXT
    , glCopyMultiTexImage2DEXT
    , FuntypeCopyMultiTexSubImage1DEXT
    , rglCopyMultiTexSubImage1DEXT
    , glCopyMultiTexSubImage1DEXT
    , FuntypeCopyMultiTexSubImage2DEXT
    , rglCopyMultiTexSubImage2DEXT
    , glCopyMultiTexSubImage2DEXT
    , FuntypeGetMultiTexImageEXT
    , rglGetMultiTexImageEXT
    , glGetMultiTexImageEXT
    , FuntypeGetMultiTexParameterfvEXT
    , rglGetMultiTexParameterfvEXT
    , glGetMultiTexParameterfvEXT
    , FuntypeGetMultiTexParameterivEXT
    , rglGetMultiTexParameterivEXT
    , glGetMultiTexParameterivEXT
    , FuntypeGetMultiTexLevelParameterfvEXT
    , rglGetMultiTexLevelParameterfvEXT
    , glGetMultiTexLevelParameterfvEXT
    , FuntypeGetMultiTexLevelParameterivEXT
    , rglGetMultiTexLevelParameterivEXT
    , glGetMultiTexLevelParameterivEXT
    , FuntypeMultiTexImage3DEXT
    , rglMultiTexImage3DEXT
    , glMultiTexImage3DEXT
    , FuntypeMultiTexSubImage3DEXT
    , rglMultiTexSubImage3DEXT
    , glMultiTexSubImage3DEXT
    , FuntypeCopyMultiTexSubImage3DEXT
    , rglCopyMultiTexSubImage3DEXT
    , glCopyMultiTexSubImage3DEXT
    , FuntypeEnableClientStateIndexedEXT
    , rglEnableClientStateIndexedEXT
    , glEnableClientStateIndexedEXT
    , FuntypeDisableClientStateIndexedEXT
    , rglDisableClientStateIndexedEXT
    , glDisableClientStateIndexedEXT
    , FuntypeGetFloatIndexedvEXT
    , rglGetFloatIndexedvEXT
    , glGetFloatIndexedvEXT
    , FuntypeGetDoubleIndexedvEXT
    , rglGetDoubleIndexedvEXT
    , glGetDoubleIndexedvEXT
    , FuntypeGetPointerIndexedvEXT
    , rglGetPointerIndexedvEXT
    , glGetPointerIndexedvEXT
    , FuntypeEnableIndexedEXT
    , rglEnableIndexedEXT
    , glEnableIndexedEXT
    , FuntypeDisableIndexedEXT
    , rglDisableIndexedEXT
    , glDisableIndexedEXT
    , FuntypeIsEnabledIndexedEXT
    , rglIsEnabledIndexedEXT
    , glIsEnabledIndexedEXT
    , FuntypeGetIntegerIndexedvEXT
    , rglGetIntegerIndexedvEXT
    , glGetIntegerIndexedvEXT
    , FuntypeGetBooleanIndexedvEXT
    , rglGetBooleanIndexedvEXT
    , glGetBooleanIndexedvEXT
    , FuntypeCompressedTextureImage3DEXT
    , rglCompressedTextureImage3DEXT
    , glCompressedTextureImage3DEXT
    , FuntypeCompressedTextureImage2DEXT
    , rglCompressedTextureImage2DEXT
    , glCompressedTextureImage2DEXT
    , FuntypeCompressedTextureImage1DEXT
    , rglCompressedTextureImage1DEXT
    , glCompressedTextureImage1DEXT
    , FuntypeCompressedTextureSubImage3DEXT
    , rglCompressedTextureSubImage3DEXT
    , glCompressedTextureSubImage3DEXT
    , FuntypeCompressedTextureSubImage2DEXT
    , rglCompressedTextureSubImage2DEXT
    , glCompressedTextureSubImage2DEXT
    , FuntypeCompressedTextureSubImage1DEXT
    , rglCompressedTextureSubImage1DEXT
    , glCompressedTextureSubImage1DEXT
    , FuntypeGetCompressedTextureImageEXT
    , rglGetCompressedTextureImageEXT
    , glGetCompressedTextureImageEXT
    , FuntypeCompressedMultiTexImage3DEXT
    , rglCompressedMultiTexImage3DEXT
    , glCompressedMultiTexImage3DEXT
    , FuntypeCompressedMultiTexImage2DEXT
    , rglCompressedMultiTexImage2DEXT
    , glCompressedMultiTexImage2DEXT
    , FuntypeCompressedMultiTexImage1DEXT
    , rglCompressedMultiTexImage1DEXT
    , glCompressedMultiTexImage1DEXT
    , FuntypeCompressedMultiTexSubImage3DEXT
    , rglCompressedMultiTexSubImage3DEXT
    , glCompressedMultiTexSubImage3DEXT
    , FuntypeCompressedMultiTexSubImage2DEXT
    , rglCompressedMultiTexSubImage2DEXT
    , glCompressedMultiTexSubImage2DEXT
    , FuntypeCompressedMultiTexSubImage1DEXT
    , rglCompressedMultiTexSubImage1DEXT
    , glCompressedMultiTexSubImage1DEXT
    , FuntypeGetCompressedMultiTexImageEXT
    , rglGetCompressedMultiTexImageEXT
    , glGetCompressedMultiTexImageEXT
    , FuntypeMatrixLoadTransposefEXT
    , rglMatrixLoadTransposefEXT
    , glMatrixLoadTransposefEXT
    , FuntypeMatrixLoadTransposedEXT
    , rglMatrixLoadTransposedEXT
    , glMatrixLoadTransposedEXT
    , FuntypeMatrixMultTransposefEXT
    , rglMatrixMultTransposefEXT
    , glMatrixMultTransposefEXT
    , FuntypeMatrixMultTransposedEXT
    , rglMatrixMultTransposedEXT
    , glMatrixMultTransposedEXT
    , FuntypeNamedBufferDataEXT
    , rglNamedBufferDataEXT
    , glNamedBufferDataEXT
    , FuntypeNamedBufferSubDataEXT
    , rglNamedBufferSubDataEXT
    , glNamedBufferSubDataEXT
    , FuntypeMapNamedBufferEXT
    , rglMapNamedBufferEXT
    , glMapNamedBufferEXT
    , FuntypeUnmapNamedBufferEXT
    , rglUnmapNamedBufferEXT
    , glUnmapNamedBufferEXT
    , FuntypeGetNamedBufferParameterivEXT
    , rglGetNamedBufferParameterivEXT
    , glGetNamedBufferParameterivEXT
    , FuntypeGetNamedBufferPointervEXT
    , rglGetNamedBufferPointervEXT
    , glGetNamedBufferPointervEXT
    , FuntypeGetNamedBufferSubDataEXT
    , rglGetNamedBufferSubDataEXT
    , glGetNamedBufferSubDataEXT
    , FuntypeProgramUniform1fEXT
    , rglProgramUniform1fEXT
    , glProgramUniform1fEXT
    , FuntypeProgramUniform2fEXT
    , rglProgramUniform2fEXT
    , glProgramUniform2fEXT
    , FuntypeProgramUniform3fEXT
    , rglProgramUniform3fEXT
    , glProgramUniform3fEXT
    , FuntypeProgramUniform4fEXT
    , rglProgramUniform4fEXT
    , glProgramUniform4fEXT
    , FuntypeProgramUniform1iEXT
    , rglProgramUniform1iEXT
    , glProgramUniform1iEXT
    , FuntypeProgramUniform2iEXT
    , rglProgramUniform2iEXT
    , glProgramUniform2iEXT
    , FuntypeProgramUniform3iEXT
    , rglProgramUniform3iEXT
    , glProgramUniform3iEXT
    , FuntypeProgramUniform4iEXT
    , rglProgramUniform4iEXT
    , glProgramUniform4iEXT
    , FuntypeProgramUniform1fvEXT
    , rglProgramUniform1fvEXT
    , glProgramUniform1fvEXT
    , FuntypeProgramUniform2fvEXT
    , rglProgramUniform2fvEXT
    , glProgramUniform2fvEXT
    , FuntypeProgramUniform3fvEXT
    , rglProgramUniform3fvEXT
    , glProgramUniform3fvEXT
    , FuntypeProgramUniform4fvEXT
    , rglProgramUniform4fvEXT
    , glProgramUniform4fvEXT
    , FuntypeProgramUniform1ivEXT
    , rglProgramUniform1ivEXT
    , glProgramUniform1ivEXT
    , FuntypeProgramUniform2ivEXT
    , rglProgramUniform2ivEXT
    , glProgramUniform2ivEXT
    , FuntypeProgramUniform3ivEXT
    , rglProgramUniform3ivEXT
    , glProgramUniform3ivEXT
    , FuntypeProgramUniform4ivEXT
    , rglProgramUniform4ivEXT
    , glProgramUniform4ivEXT
    , FuntypeProgramUniformMatrix2fvEXT
    , rglProgramUniformMatrix2fvEXT
    , glProgramUniformMatrix2fvEXT
    , FuntypeProgramUniformMatrix3fvEXT
    , rglProgramUniformMatrix3fvEXT
    , glProgramUniformMatrix3fvEXT
    , FuntypeProgramUniformMatrix4fvEXT
    , rglProgramUniformMatrix4fvEXT
    , glProgramUniformMatrix4fvEXT
    , FuntypeProgramUniformMatrix2x3fvEXT
    , rglProgramUniformMatrix2x3fvEXT
    , glProgramUniformMatrix2x3fvEXT
    , FuntypeProgramUniformMatrix3x2fvEXT
    , rglProgramUniformMatrix3x2fvEXT
    , glProgramUniformMatrix3x2fvEXT
    , FuntypeProgramUniformMatrix2x4fvEXT
    , rglProgramUniformMatrix2x4fvEXT
    , glProgramUniformMatrix2x4fvEXT
    , FuntypeProgramUniformMatrix4x2fvEXT
    , rglProgramUniformMatrix4x2fvEXT
    , glProgramUniformMatrix4x2fvEXT
    , FuntypeProgramUniformMatrix3x4fvEXT
    , rglProgramUniformMatrix3x4fvEXT
    , glProgramUniformMatrix3x4fvEXT
    , FuntypeProgramUniformMatrix4x3fvEXT
    , rglProgramUniformMatrix4x3fvEXT
    , glProgramUniformMatrix4x3fvEXT
    , FuntypeTextureBufferEXT
    , rglTextureBufferEXT
    , glTextureBufferEXT
    , FuntypeMultiTexBufferEXT
    , rglMultiTexBufferEXT
    , glMultiTexBufferEXT
    , FuntypeTextureParameterIivEXT
    , rglTextureParameterIivEXT
    , glTextureParameterIivEXT
    , FuntypeTextureParameterIuivEXT
    , rglTextureParameterIuivEXT
    , glTextureParameterIuivEXT
    , FuntypeGetTextureParameterIivEXT
    , rglGetTextureParameterIivEXT
    , glGetTextureParameterIivEXT
    , FuntypeGetTextureParameterIuivEXT
    , rglGetTextureParameterIuivEXT
    , glGetTextureParameterIuivEXT
    , FuntypeMultiTexParameterIivEXT
    , rglMultiTexParameterIivEXT
    , glMultiTexParameterIivEXT
    , FuntypeMultiTexParameterIuivEXT
    , rglMultiTexParameterIuivEXT
    , glMultiTexParameterIuivEXT
    , FuntypeGetMultiTexParameterIivEXT
    , rglGetMultiTexParameterIivEXT
    , glGetMultiTexParameterIivEXT
    , FuntypeGetMultiTexParameterIuivEXT
    , rglGetMultiTexParameterIuivEXT
    , glGetMultiTexParameterIuivEXT
    , FuntypeProgramUniform1uiEXT
    , rglProgramUniform1uiEXT
    , glProgramUniform1uiEXT
    , FuntypeProgramUniform2uiEXT
    , rglProgramUniform2uiEXT
    , glProgramUniform2uiEXT
    , FuntypeProgramUniform3uiEXT
    , rglProgramUniform3uiEXT
    , glProgramUniform3uiEXT
    , FuntypeProgramUniform4uiEXT
    , rglProgramUniform4uiEXT
    , glProgramUniform4uiEXT
    , FuntypeProgramUniform1uivEXT
    , rglProgramUniform1uivEXT
    , glProgramUniform1uivEXT
    , FuntypeProgramUniform2uivEXT
    , rglProgramUniform2uivEXT
    , glProgramUniform2uivEXT
    , FuntypeProgramUniform3uivEXT
    , rglProgramUniform3uivEXT
    , glProgramUniform3uivEXT
    , FuntypeProgramUniform4uivEXT
    , rglProgramUniform4uivEXT
    , glProgramUniform4uivEXT
    , FuntypeNamedProgramLocalParameters4fvEXT
    , rglNamedProgramLocalParameters4fvEXT
    , glNamedProgramLocalParameters4fvEXT
    , FuntypeNamedProgramLocalParameterI4iEXT
    , rglNamedProgramLocalParameterI4iEXT
    , glNamedProgramLocalParameterI4iEXT
    , FuntypeNamedProgramLocalParameterI4ivEXT
    , rglNamedProgramLocalParameterI4ivEXT
    , glNamedProgramLocalParameterI4ivEXT
    , FuntypeNamedProgramLocalParametersI4ivEXT
    , rglNamedProgramLocalParametersI4ivEXT
    , glNamedProgramLocalParametersI4ivEXT
    , FuntypeNamedProgramLocalParameterI4uiEXT
    , rglNamedProgramLocalParameterI4uiEXT
    , glNamedProgramLocalParameterI4uiEXT
    , FuntypeNamedProgramLocalParameterI4uivEXT
    , rglNamedProgramLocalParameterI4uivEXT
    , glNamedProgramLocalParameterI4uivEXT
    , FuntypeNamedProgramLocalParametersI4uivEXT
    , rglNamedProgramLocalParametersI4uivEXT
    , glNamedProgramLocalParametersI4uivEXT
    , FuntypeGetNamedProgramLocalParameterIivEXT
    , rglGetNamedProgramLocalParameterIivEXT
    , glGetNamedProgramLocalParameterIivEXT
    , FuntypeGetNamedProgramLocalParameterIuivEXT
    , rglGetNamedProgramLocalParameterIuivEXT
    , glGetNamedProgramLocalParameterIuivEXT
    , FuntypeEnableClientStateiEXT
    , rglEnableClientStateiEXT
    , glEnableClientStateiEXT
    , FuntypeDisableClientStateiEXT
    , rglDisableClientStateiEXT
    , glDisableClientStateiEXT
    , FuntypeGetFloati_vEXT
    , rglGetFloati_vEXT
    , glGetFloati_vEXT
    , FuntypeGetDoublei_vEXT
    , rglGetDoublei_vEXT
    , glGetDoublei_vEXT
    , FuntypeGetPointeri_vEXT
    , rglGetPointeri_vEXT
    , glGetPointeri_vEXT
    , FuntypeNamedProgramStringEXT
    , rglNamedProgramStringEXT
    , glNamedProgramStringEXT
    , FuntypeNamedProgramLocalParameter4dEXT
    , rglNamedProgramLocalParameter4dEXT
    , glNamedProgramLocalParameter4dEXT
    , FuntypeNamedProgramLocalParameter4dvEXT
    , rglNamedProgramLocalParameter4dvEXT
    , glNamedProgramLocalParameter4dvEXT
    , FuntypeNamedProgramLocalParameter4fEXT
    , rglNamedProgramLocalParameter4fEXT
    , glNamedProgramLocalParameter4fEXT
    , FuntypeNamedProgramLocalParameter4fvEXT
    , rglNamedProgramLocalParameter4fvEXT
    , glNamedProgramLocalParameter4fvEXT
    , FuntypeGetNamedProgramLocalParameterdvEXT
    , rglGetNamedProgramLocalParameterdvEXT
    , glGetNamedProgramLocalParameterdvEXT
    , FuntypeGetNamedProgramLocalParameterfvEXT
    , rglGetNamedProgramLocalParameterfvEXT
    , glGetNamedProgramLocalParameterfvEXT
    , FuntypeGetNamedProgramivEXT
    , rglGetNamedProgramivEXT
    , glGetNamedProgramivEXT
    , FuntypeGetNamedProgramStringEXT
    , rglGetNamedProgramStringEXT
    , glGetNamedProgramStringEXT
    , FuntypeNamedRenderbufferStorageEXT
    , rglNamedRenderbufferStorageEXT
    , glNamedRenderbufferStorageEXT
    , FuntypeGetNamedRenderbufferParameterivEXT
    , rglGetNamedRenderbufferParameterivEXT
    , glGetNamedRenderbufferParameterivEXT
    , FuntypeNamedRenderbufferStorageMultisampleEXT
    , rglNamedRenderbufferStorageMultisampleEXT
    , glNamedRenderbufferStorageMultisampleEXT
    , FuntypeNamedRenderbufferStorageMultisampleCoverageEXT
    , rglNamedRenderbufferStorageMultisampleCoverageEXT
    , glNamedRenderbufferStorageMultisampleCoverageEXT
    , FuntypeCheckNamedFramebufferStatusEXT
    , rglCheckNamedFramebufferStatusEXT
    , glCheckNamedFramebufferStatusEXT
    , FuntypeNamedFramebufferTexture1DEXT
    , rglNamedFramebufferTexture1DEXT
    , glNamedFramebufferTexture1DEXT
    , FuntypeNamedFramebufferTexture2DEXT
    , rglNamedFramebufferTexture2DEXT
    , glNamedFramebufferTexture2DEXT
    , FuntypeNamedFramebufferTexture3DEXT
    , rglNamedFramebufferTexture3DEXT
    , glNamedFramebufferTexture3DEXT
    , FuntypeNamedFramebufferRenderbufferEXT
    , rglNamedFramebufferRenderbufferEXT
    , glNamedFramebufferRenderbufferEXT
    , FuntypeGetNamedFramebufferAttachmentParameterivEXT
    , rglGetNamedFramebufferAttachmentParameterivEXT
    , glGetNamedFramebufferAttachmentParameterivEXT
    , FuntypeGenerateTextureMipmapEXT
    , rglGenerateTextureMipmapEXT
    , glGenerateTextureMipmapEXT
    , FuntypeGenerateMultiTexMipmapEXT
    , rglGenerateMultiTexMipmapEXT
    , glGenerateMultiTexMipmapEXT
    , FuntypeFramebufferDrawBufferEXT
    , rglFramebufferDrawBufferEXT
    , glFramebufferDrawBufferEXT
    , FuntypeFramebufferDrawBuffersEXT
    , rglFramebufferDrawBuffersEXT
    , glFramebufferDrawBuffersEXT
    , FuntypeFramebufferReadBufferEXT
    , rglFramebufferReadBufferEXT
    , glFramebufferReadBufferEXT
    , FuntypeGetFramebufferParameterivEXT
    , rglGetFramebufferParameterivEXT
    , glGetFramebufferParameterivEXT
    , FuntypeNamedCopyBufferSubDataEXT
    , rglNamedCopyBufferSubDataEXT
    , glNamedCopyBufferSubDataEXT
    , FuntypeNamedFramebufferTextureEXT
    , rglNamedFramebufferTextureEXT
    , glNamedFramebufferTextureEXT
    , FuntypeNamedFramebufferTextureLayerEXT
    , rglNamedFramebufferTextureLayerEXT
    , glNamedFramebufferTextureLayerEXT
    , FuntypeNamedFramebufferTextureFaceEXT
    , rglNamedFramebufferTextureFaceEXT
    , glNamedFramebufferTextureFaceEXT
    , FuntypeTextureRenderbufferEXT
    , rglTextureRenderbufferEXT
    , glTextureRenderbufferEXT
    , FuntypeMultiTexRenderbufferEXT
    , rglMultiTexRenderbufferEXT
    , glMultiTexRenderbufferEXT
    , FuntypeVertexArrayVertexOffsetEXT
    , rglVertexArrayVertexOffsetEXT
    , glVertexArrayVertexOffsetEXT
    , FuntypeVertexArrayColorOffsetEXT
    , rglVertexArrayColorOffsetEXT
    , glVertexArrayColorOffsetEXT
    , FuntypeVertexArrayEdgeFlagOffsetEXT
    , rglVertexArrayEdgeFlagOffsetEXT
    , glVertexArrayEdgeFlagOffsetEXT
    , FuntypeVertexArrayIndexOffsetEXT
    , rglVertexArrayIndexOffsetEXT
    , glVertexArrayIndexOffsetEXT
    , FuntypeVertexArrayNormalOffsetEXT
    , rglVertexArrayNormalOffsetEXT
    , glVertexArrayNormalOffsetEXT
    , FuntypeVertexArrayTexCoordOffsetEXT
    , rglVertexArrayTexCoordOffsetEXT
    , glVertexArrayTexCoordOffsetEXT
    , FuntypeVertexArrayMultiTexCoordOffsetEXT
    , rglVertexArrayMultiTexCoordOffsetEXT
    , glVertexArrayMultiTexCoordOffsetEXT
    , FuntypeVertexArrayFogCoordOffsetEXT
    , rglVertexArrayFogCoordOffsetEXT
    , glVertexArrayFogCoordOffsetEXT
    , FuntypeVertexArraySecondaryColorOffsetEXT
    , rglVertexArraySecondaryColorOffsetEXT
    , glVertexArraySecondaryColorOffsetEXT
    , FuntypeVertexArrayVertexAttribOffsetEXT
    , rglVertexArrayVertexAttribOffsetEXT
    , glVertexArrayVertexAttribOffsetEXT
    , FuntypeVertexArrayVertexAttribIOffsetEXT
    , rglVertexArrayVertexAttribIOffsetEXT
    , glVertexArrayVertexAttribIOffsetEXT
    , FuntypeEnableVertexArrayEXT
    , rglEnableVertexArrayEXT
    , glEnableVertexArrayEXT
    , FuntypeDisableVertexArrayEXT
    , rglDisableVertexArrayEXT
    , glDisableVertexArrayEXT
    , FuntypeEnableVertexArrayAttribEXT
    , rglEnableVertexArrayAttribEXT
    , glEnableVertexArrayAttribEXT
    , FuntypeDisableVertexArrayAttribEXT
    , rglDisableVertexArrayAttribEXT
    , glDisableVertexArrayAttribEXT
    , FuntypeGetVertexArrayIntegervEXT
    , rglGetVertexArrayIntegervEXT
    , glGetVertexArrayIntegervEXT
    , FuntypeGetVertexArrayPointervEXT
    , rglGetVertexArrayPointervEXT
    , glGetVertexArrayPointervEXT
    , FuntypeGetVertexArrayIntegeri_vEXT
    , rglGetVertexArrayIntegeri_vEXT
    , glGetVertexArrayIntegeri_vEXT
    , FuntypeGetVertexArrayPointeri_vEXT
    , rglGetVertexArrayPointeri_vEXT
    , glGetVertexArrayPointeri_vEXT
    , FuntypeMapNamedBufferRangeEXT
    , rglMapNamedBufferRangeEXT
    , glMapNamedBufferRangeEXT
    , FuntypeFlushMappedNamedBufferRangeEXT
    , rglFlushMappedNamedBufferRangeEXT
    , glFlushMappedNamedBufferRangeEXT
    , FuntypeNamedBufferStorageEXT
    , rglNamedBufferStorageEXT
    , glNamedBufferStorageEXT
    , FuntypeClearNamedBufferDataEXT
    , rglClearNamedBufferDataEXT
    , glClearNamedBufferDataEXT
    , FuntypeClearNamedBufferSubDataEXT
    , rglClearNamedBufferSubDataEXT
    , glClearNamedBufferSubDataEXT
    , FuntypeNamedFramebufferParameteriEXT
    , rglNamedFramebufferParameteriEXT
    , glNamedFramebufferParameteriEXT
    , FuntypeGetNamedFramebufferParameterivEXT
    , rglGetNamedFramebufferParameterivEXT
    , glGetNamedFramebufferParameterivEXT
    , FuntypeProgramUniform1dEXT
    , rglProgramUniform1dEXT
    , glProgramUniform1dEXT
    , FuntypeProgramUniform2dEXT
    , rglProgramUniform2dEXT
    , glProgramUniform2dEXT
    , FuntypeProgramUniform3dEXT
    , rglProgramUniform3dEXT
    , glProgramUniform3dEXT
    , FuntypeProgramUniform4dEXT
    , rglProgramUniform4dEXT
    , glProgramUniform4dEXT
    , FuntypeProgramUniform1dvEXT
    , rglProgramUniform1dvEXT
    , glProgramUniform1dvEXT
    , FuntypeProgramUniform2dvEXT
    , rglProgramUniform2dvEXT
    , glProgramUniform2dvEXT
    , FuntypeProgramUniform3dvEXT
    , rglProgramUniform3dvEXT
    , glProgramUniform3dvEXT
    , FuntypeProgramUniform4dvEXT
    , rglProgramUniform4dvEXT
    , glProgramUniform4dvEXT
    , FuntypeProgramUniformMatrix2dvEXT
    , rglProgramUniformMatrix2dvEXT
    , glProgramUniformMatrix2dvEXT
    , FuntypeProgramUniformMatrix3dvEXT
    , rglProgramUniformMatrix3dvEXT
    , glProgramUniformMatrix3dvEXT
    , FuntypeProgramUniformMatrix4dvEXT
    , rglProgramUniformMatrix4dvEXT
    , glProgramUniformMatrix4dvEXT
    , FuntypeProgramUniformMatrix2x3dvEXT
    , rglProgramUniformMatrix2x3dvEXT
    , glProgramUniformMatrix2x3dvEXT
    , FuntypeProgramUniformMatrix2x4dvEXT
    , rglProgramUniformMatrix2x4dvEXT
    , glProgramUniformMatrix2x4dvEXT
    , FuntypeProgramUniformMatrix3x2dvEXT
    , rglProgramUniformMatrix3x2dvEXT
    , glProgramUniformMatrix3x2dvEXT
    , FuntypeProgramUniformMatrix3x4dvEXT
    , rglProgramUniformMatrix3x4dvEXT
    , glProgramUniformMatrix3x4dvEXT
    , FuntypeProgramUniformMatrix4x2dvEXT
    , rglProgramUniformMatrix4x2dvEXT
    , glProgramUniformMatrix4x2dvEXT
    , FuntypeProgramUniformMatrix4x3dvEXT
    , rglProgramUniformMatrix4x3dvEXT
    , glProgramUniformMatrix4x3dvEXT
    , FuntypeTextureBufferRangeEXT
    , rglTextureBufferRangeEXT
    , glTextureBufferRangeEXT
    , FuntypeTextureStorage1DEXT
    , rglTextureStorage1DEXT
    , glTextureStorage1DEXT
    , FuntypeTextureStorage2DEXT
    , rglTextureStorage2DEXT
    , glTextureStorage2DEXT
    , FuntypeTextureStorage3DEXT
    , rglTextureStorage3DEXT
    , glTextureStorage3DEXT
    , FuntypeTextureStorage2DMultisampleEXT
    , rglTextureStorage2DMultisampleEXT
    , glTextureStorage2DMultisampleEXT
    , FuntypeTextureStorage3DMultisampleEXT
    , rglTextureStorage3DMultisampleEXT
    , glTextureStorage3DMultisampleEXT
    , FuntypeVertexArrayBindVertexBufferEXT
    , rglVertexArrayBindVertexBufferEXT
    , glVertexArrayBindVertexBufferEXT
    , FuntypeVertexArrayVertexAttribFormatEXT
    , rglVertexArrayVertexAttribFormatEXT
    , glVertexArrayVertexAttribFormatEXT
    , FuntypeVertexArrayVertexAttribIFormatEXT
    , rglVertexArrayVertexAttribIFormatEXT
    , glVertexArrayVertexAttribIFormatEXT
    , FuntypeVertexArrayVertexAttribLFormatEXT
    , rglVertexArrayVertexAttribLFormatEXT
    , glVertexArrayVertexAttribLFormatEXT
    , FuntypeVertexArrayVertexAttribBindingEXT
    , rglVertexArrayVertexAttribBindingEXT
    , glVertexArrayVertexAttribBindingEXT
    , FuntypeVertexArrayVertexBindingDivisorEXT
    , rglVertexArrayVertexBindingDivisorEXT
    , glVertexArrayVertexBindingDivisorEXT
    , FuntypeVertexArrayVertexAttribLOffsetEXT
    , rglVertexArrayVertexAttribLOffsetEXT
    , glVertexArrayVertexAttribLOffsetEXT
    , FuntypeTexturePageCommitmentEXT
    , rglTexturePageCommitmentEXT
    , glTexturePageCommitmentEXT
    , FuntypeVertexArrayVertexAttribDivisorEXT
    , rglVertexArrayVertexAttribDivisorEXT
    , glVertexArrayVertexAttribDivisorEXT
    , FuntypeBufferStorage
    , rglBufferStorage
    , glBufferStorage
    , FuntypeUseProgramStages
    , rglUseProgramStages
    , glUseProgramStages
    , FuntypeActiveShaderProgram
    , rglActiveShaderProgram
    , glActiveShaderProgram
    , FuntypeCreateShaderProgramv
    , rglCreateShaderProgramv
    , glCreateShaderProgramv
    , FuntypeBindProgramPipeline
    , rglBindProgramPipeline
    , glBindProgramPipeline
    , FuntypeDeleteProgramPipelines
    , rglDeleteProgramPipelines
    , glDeleteProgramPipelines
    , FuntypeGenProgramPipelines
    , rglGenProgramPipelines
    , glGenProgramPipelines
    , FuntypeIsProgramPipeline
    , rglIsProgramPipeline
    , glIsProgramPipeline
    , FuntypeGetProgramPipelineiv
    , rglGetProgramPipelineiv
    , glGetProgramPipelineiv
    , FuntypeProgramUniform1i
    , rglProgramUniform1i
    , glProgramUniform1i
    , FuntypeProgramUniform1iv
    , rglProgramUniform1iv
    , glProgramUniform1iv
    , FuntypeProgramUniform1f
    , rglProgramUniform1f
    , glProgramUniform1f
    , FuntypeProgramUniform1fv
    , rglProgramUniform1fv
    , glProgramUniform1fv
    , FuntypeProgramUniform1d
    , rglProgramUniform1d
    , glProgramUniform1d
    , FuntypeProgramUniform1dv
    , rglProgramUniform1dv
    , glProgramUniform1dv
    , FuntypeProgramUniform1ui
    , rglProgramUniform1ui
    , glProgramUniform1ui
    , FuntypeProgramUniform1uiv
    , rglProgramUniform1uiv
    , glProgramUniform1uiv
    , FuntypeProgramUniform2i
    , rglProgramUniform2i
    , glProgramUniform2i
    , FuntypeProgramUniform2iv
    , rglProgramUniform2iv
    , glProgramUniform2iv
    , FuntypeProgramUniform2f
    , rglProgramUniform2f
    , glProgramUniform2f
    , FuntypeProgramUniform2fv
    , rglProgramUniform2fv
    , glProgramUniform2fv
    , FuntypeProgramUniform2d
    , rglProgramUniform2d
    , glProgramUniform2d
    , FuntypeProgramUniform2dv
    , rglProgramUniform2dv
    , glProgramUniform2dv
    , FuntypeProgramUniform2ui
    , rglProgramUniform2ui
    , glProgramUniform2ui
    , FuntypeProgramUniform2uiv
    , rglProgramUniform2uiv
    , glProgramUniform2uiv
    , FuntypeProgramUniform3i
    , rglProgramUniform3i
    , glProgramUniform3i
    , FuntypeProgramUniform3iv
    , rglProgramUniform3iv
    , glProgramUniform3iv
    , FuntypeProgramUniform3f
    , rglProgramUniform3f
    , glProgramUniform3f
    , FuntypeProgramUniform3fv
    , rglProgramUniform3fv
    , glProgramUniform3fv
    , FuntypeProgramUniform3d
    , rglProgramUniform3d
    , glProgramUniform3d
    , FuntypeProgramUniform3dv
    , rglProgramUniform3dv
    , glProgramUniform3dv
    , FuntypeProgramUniform3ui
    , rglProgramUniform3ui
    , glProgramUniform3ui
    , FuntypeProgramUniform3uiv
    , rglProgramUniform3uiv
    , glProgramUniform3uiv
    , FuntypeProgramUniform4i
    , rglProgramUniform4i
    , glProgramUniform4i
    , FuntypeProgramUniform4iv
    , rglProgramUniform4iv
    , glProgramUniform4iv
    , FuntypeProgramUniform4f
    , rglProgramUniform4f
    , glProgramUniform4f
    , FuntypeProgramUniform4fv
    , rglProgramUniform4fv
    , glProgramUniform4fv
    , FuntypeProgramUniform4d
    , rglProgramUniform4d
    , glProgramUniform4d
    , FuntypeProgramUniform4dv
    , rglProgramUniform4dv
    , glProgramUniform4dv
    , FuntypeProgramUniform4ui
    , rglProgramUniform4ui
    , glProgramUniform4ui
    , FuntypeProgramUniform4uiv
    , rglProgramUniform4uiv
    , glProgramUniform4uiv
    , FuntypeProgramUniformMatrix2fv
    , rglProgramUniformMatrix2fv
    , glProgramUniformMatrix2fv
    , FuntypeProgramUniformMatrix3fv
    , rglProgramUniformMatrix3fv
    , glProgramUniformMatrix3fv
    , FuntypeProgramUniformMatrix4fv
    , rglProgramUniformMatrix4fv
    , glProgramUniformMatrix4fv
    , FuntypeProgramUniformMatrix2dv
    , rglProgramUniformMatrix2dv
    , glProgramUniformMatrix2dv
    , FuntypeProgramUniformMatrix3dv
    , rglProgramUniformMatrix3dv
    , glProgramUniformMatrix3dv
    , FuntypeProgramUniformMatrix4dv
    , rglProgramUniformMatrix4dv
    , glProgramUniformMatrix4dv
    , FuntypeProgramUniformMatrix2x3fv
    , rglProgramUniformMatrix2x3fv
    , glProgramUniformMatrix2x3fv
    , FuntypeProgramUniformMatrix3x2fv
    , rglProgramUniformMatrix3x2fv
    , glProgramUniformMatrix3x2fv
    , FuntypeProgramUniformMatrix2x4fv
    , rglProgramUniformMatrix2x4fv
    , glProgramUniformMatrix2x4fv
    , FuntypeProgramUniformMatrix4x2fv
    , rglProgramUniformMatrix4x2fv
    , glProgramUniformMatrix4x2fv
    , FuntypeProgramUniformMatrix3x4fv
    , rglProgramUniformMatrix3x4fv
    , glProgramUniformMatrix3x4fv
    , FuntypeProgramUniformMatrix4x3fv
    , rglProgramUniformMatrix4x3fv
    , glProgramUniformMatrix4x3fv
    , FuntypeProgramUniformMatrix2x3dv
    , rglProgramUniformMatrix2x3dv
    , glProgramUniformMatrix2x3dv
    , FuntypeProgramUniformMatrix3x2dv
    , rglProgramUniformMatrix3x2dv
    , glProgramUniformMatrix3x2dv
    , FuntypeProgramUniformMatrix2x4dv
    , rglProgramUniformMatrix2x4dv
    , glProgramUniformMatrix2x4dv
    , FuntypeProgramUniformMatrix4x2dv
    , rglProgramUniformMatrix4x2dv
    , glProgramUniformMatrix4x2dv
    , FuntypeProgramUniformMatrix3x4dv
    , rglProgramUniformMatrix3x4dv
    , glProgramUniformMatrix3x4dv
    , FuntypeProgramUniformMatrix4x3dv
    , rglProgramUniformMatrix4x3dv
    , glProgramUniformMatrix4x3dv
    , FuntypeValidateProgramPipeline
    , rglValidateProgramPipeline
    , glValidateProgramPipeline
    , FuntypeGetProgramPipelineInfoLog
    , rglGetProgramPipelineInfoLog
    , glGetProgramPipelineInfoLog
    , FuntypeInvalidateTexSubImage
    , rglInvalidateTexSubImage
    , glInvalidateTexSubImage
    , FuntypeInvalidateTexImage
    , rglInvalidateTexImage
    , glInvalidateTexImage
    , FuntypeInvalidateBufferSubData
    , rglInvalidateBufferSubData
    , glInvalidateBufferSubData
    , FuntypeInvalidateBufferData
    , rglInvalidateBufferData
    , glInvalidateBufferData
    , FuntypeInvalidateFramebuffer
    , rglInvalidateFramebuffer
    , glInvalidateFramebuffer
    , FuntypeInvalidateSubFramebuffer
    , rglInvalidateSubFramebuffer
    , glInvalidateSubFramebuffer
    , has_GL_ARB_texture_storage
    , has_GL_KHR_debug
    , has_GL_EXT_direct_state_access
    , has_GL_ARB_buffer_storage
    , has_GL_ARB_separate_shader_objects
    , has_GL_ATI_meminfo
    , has_GL_NVX_gpu_memory_info
    , has_GL_ARB_invalidate_subdata
    , GLsync
    , GLsyncob()
    , GLhalf
    , GLhalfARB
    , GLintptrARB
    , GLsizeiptrARB
    , GLDEBUGPROC
    , GLDEBUGPROCARB
    , GLDEBUGPROCKHR
    , GLDEBUGPROCAMD
    , GLbyte
    , GLubyte
    , GLfloat
    , GLclampf
    , GLfixed
    , GLint64
    , GLuint64
    , GLint64EXT
    , GLuint64EXT
    , GLintptr
    , GLsizeiptr
    , GLhalfNV
    , GLvdpauSurfaceNV
    , GLenum
    , GLboolean
    , GLvoid
    , GLbitfield
    , GLshort
    , GLint
    , GLclampx
    , GLushort
    , GLuint
    , GLsizei
    , GLdouble
    , GLclampd
    , GLeglImageOESob()
    , GLeglImageOES
    , GLchar
    , GLcharARB
    , GLhandleARB
    )
    where

import Data.Typeable
import Data.IORef
import Data.Int
import Data.Word
import System.IO.Unsafe
import Control.Applicative
import Control.Exception
import Control.Monad.IO.Class
import Control.Monad.Trans.Except
import Foreign.C.Types
import Foreign.C.String
import Foreign.Ptr

#ifdef mingw32_HOST_OS
#define APIENTRY stdcall
#else
#define APIENTRY
import qualified System.Posix.DynamicLinker.ByteString as POSIX
#endif

flextGLCounter :: IORef Integer
flextGLCounter = unsafePerformIO $ newIORef 0
{-# NOINLINE flextGLCounter #-}

data FlextGL = FlextGL {
      counter :: !Integer
    , has_GL_ARB_texture_storage :: !Bool
    , has_GL_KHR_debug :: !Bool
    , has_GL_EXT_direct_state_access :: !Bool
    , has_GL_ARB_buffer_storage :: !Bool
    , has_GL_ARB_separate_shader_objects :: !Bool
    , has_GL_ATI_meminfo :: !Bool
    , has_GL_NVX_gpu_memory_info :: !Bool
    , has_GL_ARB_invalidate_subdata :: !Bool
    , rglCullFace :: !(FuntypeCullFace)
    , rglFrontFace :: !(FuntypeFrontFace)
    , rglHint :: !(FuntypeHint)
    , rglLineWidth :: !(FuntypeLineWidth)
    , rglPointSize :: !(FuntypePointSize)
    , rglPolygonMode :: !(FuntypePolygonMode)
    , rglScissor :: !(FuntypeScissor)
    , rglTexParameterf :: !(FuntypeTexParameterf)
    , rglTexParameterfv :: !(FuntypeTexParameterfv)
    , rglTexParameteri :: !(FuntypeTexParameteri)
    , rglTexParameteriv :: !(FuntypeTexParameteriv)
    , rglTexImage1D :: !(FuntypeTexImage1D)
    , rglTexImage2D :: !(FuntypeTexImage2D)
    , rglDrawBuffer :: !(FuntypeDrawBuffer)
    , rglClear :: !(FuntypeClear)
    , rglClearColor :: !(FuntypeClearColor)
    , rglClearStencil :: !(FuntypeClearStencil)
    , rglClearDepth :: !(FuntypeClearDepth)
    , rglStencilMask :: !(FuntypeStencilMask)
    , rglColorMask :: !(FuntypeColorMask)
    , rglDepthMask :: !(FuntypeDepthMask)
    , rglDisable :: !(FuntypeDisable)
    , rglEnable :: !(FuntypeEnable)
    , rglFinish :: !(FuntypeFinish)
    , rglFlush :: !(FuntypeFlush)
    , rglBlendFunc :: !(FuntypeBlendFunc)
    , rglLogicOp :: !(FuntypeLogicOp)
    , rglStencilFunc :: !(FuntypeStencilFunc)
    , rglStencilOp :: !(FuntypeStencilOp)
    , rglDepthFunc :: !(FuntypeDepthFunc)
    , rglPixelStoref :: !(FuntypePixelStoref)
    , rglPixelStorei :: !(FuntypePixelStorei)
    , rglReadBuffer :: !(FuntypeReadBuffer)
    , rglReadPixels :: !(FuntypeReadPixels)
    , rglGetBooleanv :: !(FuntypeGetBooleanv)
    , rglGetDoublev :: !(FuntypeGetDoublev)
    , rglGetError :: !(FuntypeGetError)
    , rglGetFloatv :: !(FuntypeGetFloatv)
    , rglGetIntegerv :: !(FuntypeGetIntegerv)
    , rglGetString :: !(FuntypeGetString)
    , rglGetTexImage :: !(FuntypeGetTexImage)
    , rglGetTexParameterfv :: !(FuntypeGetTexParameterfv)
    , rglGetTexParameteriv :: !(FuntypeGetTexParameteriv)
    , rglGetTexLevelParameterfv :: !(FuntypeGetTexLevelParameterfv)
    , rglGetTexLevelParameteriv :: !(FuntypeGetTexLevelParameteriv)
    , rglIsEnabled :: !(FuntypeIsEnabled)
    , rglDepthRange :: !(FuntypeDepthRange)
    , rglViewport :: !(FuntypeViewport)
    , rglDrawArrays :: !(FuntypeDrawArrays)
    , rglDrawElements :: !(FuntypeDrawElements)
    , rglPolygonOffset :: !(FuntypePolygonOffset)
    , rglCopyTexImage1D :: !(FuntypeCopyTexImage1D)
    , rglCopyTexImage2D :: !(FuntypeCopyTexImage2D)
    , rglCopyTexSubImage1D :: !(FuntypeCopyTexSubImage1D)
    , rglCopyTexSubImage2D :: !(FuntypeCopyTexSubImage2D)
    , rglTexSubImage1D :: !(FuntypeTexSubImage1D)
    , rglTexSubImage2D :: !(FuntypeTexSubImage2D)
    , rglBindTexture :: !(FuntypeBindTexture)
    , rglDeleteTextures :: !(FuntypeDeleteTextures)
    , rglGenTextures :: !(FuntypeGenTextures)
    , rglIsTexture :: !(FuntypeIsTexture)
    , rglDrawRangeElements :: !(FuntypeDrawRangeElements)
    , rglTexImage3D :: !(FuntypeTexImage3D)
    , rglTexSubImage3D :: !(FuntypeTexSubImage3D)
    , rglCopyTexSubImage3D :: !(FuntypeCopyTexSubImage3D)
    , rglActiveTexture :: !(FuntypeActiveTexture)
    , rglSampleCoverage :: !(FuntypeSampleCoverage)
    , rglCompressedTexImage3D :: !(FuntypeCompressedTexImage3D)
    , rglCompressedTexImage2D :: !(FuntypeCompressedTexImage2D)
    , rglCompressedTexImage1D :: !(FuntypeCompressedTexImage1D)
    , rglCompressedTexSubImage3D :: !(FuntypeCompressedTexSubImage3D)
    , rglCompressedTexSubImage2D :: !(FuntypeCompressedTexSubImage2D)
    , rglCompressedTexSubImage1D :: !(FuntypeCompressedTexSubImage1D)
    , rglGetCompressedTexImage :: !(FuntypeGetCompressedTexImage)
    , rglBlendFuncSeparate :: !(FuntypeBlendFuncSeparate)
    , rglMultiDrawArrays :: !(FuntypeMultiDrawArrays)
    , rglMultiDrawElements :: !(FuntypeMultiDrawElements)
    , rglPointParameterf :: !(FuntypePointParameterf)
    , rglPointParameterfv :: !(FuntypePointParameterfv)
    , rglPointParameteri :: !(FuntypePointParameteri)
    , rglPointParameteriv :: !(FuntypePointParameteriv)
    , rglBlendColor :: !(FuntypeBlendColor)
    , rglBlendEquation :: !(FuntypeBlendEquation)
    , rglGenQueries :: !(FuntypeGenQueries)
    , rglDeleteQueries :: !(FuntypeDeleteQueries)
    , rglIsQuery :: !(FuntypeIsQuery)
    , rglBeginQuery :: !(FuntypeBeginQuery)
    , rglEndQuery :: !(FuntypeEndQuery)
    , rglGetQueryiv :: !(FuntypeGetQueryiv)
    , rglGetQueryObjectiv :: !(FuntypeGetQueryObjectiv)
    , rglGetQueryObjectuiv :: !(FuntypeGetQueryObjectuiv)
    , rglBindBuffer :: !(FuntypeBindBuffer)
    , rglDeleteBuffers :: !(FuntypeDeleteBuffers)
    , rglGenBuffers :: !(FuntypeGenBuffers)
    , rglIsBuffer :: !(FuntypeIsBuffer)
    , rglBufferData :: !(FuntypeBufferData)
    , rglBufferSubData :: !(FuntypeBufferSubData)
    , rglGetBufferSubData :: !(FuntypeGetBufferSubData)
    , rglMapBuffer :: !(FuntypeMapBuffer)
    , rglUnmapBuffer :: !(FuntypeUnmapBuffer)
    , rglGetBufferParameteriv :: !(FuntypeGetBufferParameteriv)
    , rglGetBufferPointerv :: !(FuntypeGetBufferPointerv)
    , rglBlendEquationSeparate :: !(FuntypeBlendEquationSeparate)
    , rglDrawBuffers :: !(FuntypeDrawBuffers)
    , rglStencilOpSeparate :: !(FuntypeStencilOpSeparate)
    , rglStencilFuncSeparate :: !(FuntypeStencilFuncSeparate)
    , rglStencilMaskSeparate :: !(FuntypeStencilMaskSeparate)
    , rglAttachShader :: !(FuntypeAttachShader)
    , rglBindAttribLocation :: !(FuntypeBindAttribLocation)
    , rglCompileShader :: !(FuntypeCompileShader)
    , rglCreateProgram :: !(FuntypeCreateProgram)
    , rglCreateShader :: !(FuntypeCreateShader)
    , rglDeleteProgram :: !(FuntypeDeleteProgram)
    , rglDeleteShader :: !(FuntypeDeleteShader)
    , rglDetachShader :: !(FuntypeDetachShader)
    , rglDisableVertexAttribArray :: !(FuntypeDisableVertexAttribArray)
    , rglEnableVertexAttribArray :: !(FuntypeEnableVertexAttribArray)
    , rglGetActiveAttrib :: !(FuntypeGetActiveAttrib)
    , rglGetActiveUniform :: !(FuntypeGetActiveUniform)
    , rglGetAttachedShaders :: !(FuntypeGetAttachedShaders)
    , rglGetAttribLocation :: !(FuntypeGetAttribLocation)
    , rglGetProgramiv :: !(FuntypeGetProgramiv)
    , rglGetProgramInfoLog :: !(FuntypeGetProgramInfoLog)
    , rglGetShaderiv :: !(FuntypeGetShaderiv)
    , rglGetShaderInfoLog :: !(FuntypeGetShaderInfoLog)
    , rglGetShaderSource :: !(FuntypeGetShaderSource)
    , rglGetUniformLocation :: !(FuntypeGetUniformLocation)
    , rglGetUniformfv :: !(FuntypeGetUniformfv)
    , rglGetUniformiv :: !(FuntypeGetUniformiv)
    , rglGetVertexAttribdv :: !(FuntypeGetVertexAttribdv)
    , rglGetVertexAttribfv :: !(FuntypeGetVertexAttribfv)
    , rglGetVertexAttribiv :: !(FuntypeGetVertexAttribiv)
    , rglGetVertexAttribPointerv :: !(FuntypeGetVertexAttribPointerv)
    , rglIsProgram :: !(FuntypeIsProgram)
    , rglIsShader :: !(FuntypeIsShader)
    , rglLinkProgram :: !(FuntypeLinkProgram)
    , rglShaderSource :: !(FuntypeShaderSource)
    , rglUseProgram :: !(FuntypeUseProgram)
    , rglUniform1f :: !(FuntypeUniform1f)
    , rglUniform2f :: !(FuntypeUniform2f)
    , rglUniform3f :: !(FuntypeUniform3f)
    , rglUniform4f :: !(FuntypeUniform4f)
    , rglUniform1i :: !(FuntypeUniform1i)
    , rglUniform2i :: !(FuntypeUniform2i)
    , rglUniform3i :: !(FuntypeUniform3i)
    , rglUniform4i :: !(FuntypeUniform4i)
    , rglUniform1fv :: !(FuntypeUniform1fv)
    , rglUniform2fv :: !(FuntypeUniform2fv)
    , rglUniform3fv :: !(FuntypeUniform3fv)
    , rglUniform4fv :: !(FuntypeUniform4fv)
    , rglUniform1iv :: !(FuntypeUniform1iv)
    , rglUniform2iv :: !(FuntypeUniform2iv)
    , rglUniform3iv :: !(FuntypeUniform3iv)
    , rglUniform4iv :: !(FuntypeUniform4iv)
    , rglUniformMatrix2fv :: !(FuntypeUniformMatrix2fv)
    , rglUniformMatrix3fv :: !(FuntypeUniformMatrix3fv)
    , rglUniformMatrix4fv :: !(FuntypeUniformMatrix4fv)
    , rglValidateProgram :: !(FuntypeValidateProgram)
    , rglVertexAttrib1d :: !(FuntypeVertexAttrib1d)
    , rglVertexAttrib1dv :: !(FuntypeVertexAttrib1dv)
    , rglVertexAttrib1f :: !(FuntypeVertexAttrib1f)
    , rglVertexAttrib1fv :: !(FuntypeVertexAttrib1fv)
    , rglVertexAttrib1s :: !(FuntypeVertexAttrib1s)
    , rglVertexAttrib1sv :: !(FuntypeVertexAttrib1sv)
    , rglVertexAttrib2d :: !(FuntypeVertexAttrib2d)
    , rglVertexAttrib2dv :: !(FuntypeVertexAttrib2dv)
    , rglVertexAttrib2f :: !(FuntypeVertexAttrib2f)
    , rglVertexAttrib2fv :: !(FuntypeVertexAttrib2fv)
    , rglVertexAttrib2s :: !(FuntypeVertexAttrib2s)
    , rglVertexAttrib2sv :: !(FuntypeVertexAttrib2sv)
    , rglVertexAttrib3d :: !(FuntypeVertexAttrib3d)
    , rglVertexAttrib3dv :: !(FuntypeVertexAttrib3dv)
    , rglVertexAttrib3f :: !(FuntypeVertexAttrib3f)
    , rglVertexAttrib3fv :: !(FuntypeVertexAttrib3fv)
    , rglVertexAttrib3s :: !(FuntypeVertexAttrib3s)
    , rglVertexAttrib3sv :: !(FuntypeVertexAttrib3sv)
    , rglVertexAttrib4Nbv :: !(FuntypeVertexAttrib4Nbv)
    , rglVertexAttrib4Niv :: !(FuntypeVertexAttrib4Niv)
    , rglVertexAttrib4Nsv :: !(FuntypeVertexAttrib4Nsv)
    , rglVertexAttrib4Nub :: !(FuntypeVertexAttrib4Nub)
    , rglVertexAttrib4Nubv :: !(FuntypeVertexAttrib4Nubv)
    , rglVertexAttrib4Nuiv :: !(FuntypeVertexAttrib4Nuiv)
    , rglVertexAttrib4Nusv :: !(FuntypeVertexAttrib4Nusv)
    , rglVertexAttrib4bv :: !(FuntypeVertexAttrib4bv)
    , rglVertexAttrib4d :: !(FuntypeVertexAttrib4d)
    , rglVertexAttrib4dv :: !(FuntypeVertexAttrib4dv)
    , rglVertexAttrib4f :: !(FuntypeVertexAttrib4f)
    , rglVertexAttrib4fv :: !(FuntypeVertexAttrib4fv)
    , rglVertexAttrib4iv :: !(FuntypeVertexAttrib4iv)
    , rglVertexAttrib4s :: !(FuntypeVertexAttrib4s)
    , rglVertexAttrib4sv :: !(FuntypeVertexAttrib4sv)
    , rglVertexAttrib4ubv :: !(FuntypeVertexAttrib4ubv)
    , rglVertexAttrib4uiv :: !(FuntypeVertexAttrib4uiv)
    , rglVertexAttrib4usv :: !(FuntypeVertexAttrib4usv)
    , rglVertexAttribPointer :: !(FuntypeVertexAttribPointer)
    , rglUniformMatrix2x3fv :: !(FuntypeUniformMatrix2x3fv)
    , rglUniformMatrix3x2fv :: !(FuntypeUniformMatrix3x2fv)
    , rglUniformMatrix2x4fv :: !(FuntypeUniformMatrix2x4fv)
    , rglUniformMatrix4x2fv :: !(FuntypeUniformMatrix4x2fv)
    , rglUniformMatrix3x4fv :: !(FuntypeUniformMatrix3x4fv)
    , rglUniformMatrix4x3fv :: !(FuntypeUniformMatrix4x3fv)
    , rglColorMaski :: !(FuntypeColorMaski)
    , rglGetBooleani_v :: !(FuntypeGetBooleani_v)
    , rglGetIntegeri_v :: !(FuntypeGetIntegeri_v)
    , rglEnablei :: !(FuntypeEnablei)
    , rglDisablei :: !(FuntypeDisablei)
    , rglIsEnabledi :: !(FuntypeIsEnabledi)
    , rglBeginTransformFeedback :: !(FuntypeBeginTransformFeedback)
    , rglEndTransformFeedback :: !(FuntypeEndTransformFeedback)
    , rglBindBufferRange :: !(FuntypeBindBufferRange)
    , rglBindBufferBase :: !(FuntypeBindBufferBase)
    , rglTransformFeedbackVaryings :: !(FuntypeTransformFeedbackVaryings)
    , rglGetTransformFeedbackVarying :: !(FuntypeGetTransformFeedbackVarying)
    , rglClampColor :: !(FuntypeClampColor)
    , rglBeginConditionalRender :: !(FuntypeBeginConditionalRender)
    , rglEndConditionalRender :: !(FuntypeEndConditionalRender)
    , rglVertexAttribIPointer :: !(FuntypeVertexAttribIPointer)
    , rglGetVertexAttribIiv :: !(FuntypeGetVertexAttribIiv)
    , rglGetVertexAttribIuiv :: !(FuntypeGetVertexAttribIuiv)
    , rglVertexAttribI1i :: !(FuntypeVertexAttribI1i)
    , rglVertexAttribI2i :: !(FuntypeVertexAttribI2i)
    , rglVertexAttribI3i :: !(FuntypeVertexAttribI3i)
    , rglVertexAttribI4i :: !(FuntypeVertexAttribI4i)
    , rglVertexAttribI1ui :: !(FuntypeVertexAttribI1ui)
    , rglVertexAttribI2ui :: !(FuntypeVertexAttribI2ui)
    , rglVertexAttribI3ui :: !(FuntypeVertexAttribI3ui)
    , rglVertexAttribI4ui :: !(FuntypeVertexAttribI4ui)
    , rglVertexAttribI1iv :: !(FuntypeVertexAttribI1iv)
    , rglVertexAttribI2iv :: !(FuntypeVertexAttribI2iv)
    , rglVertexAttribI3iv :: !(FuntypeVertexAttribI3iv)
    , rglVertexAttribI4iv :: !(FuntypeVertexAttribI4iv)
    , rglVertexAttribI1uiv :: !(FuntypeVertexAttribI1uiv)
    , rglVertexAttribI2uiv :: !(FuntypeVertexAttribI2uiv)
    , rglVertexAttribI3uiv :: !(FuntypeVertexAttribI3uiv)
    , rglVertexAttribI4uiv :: !(FuntypeVertexAttribI4uiv)
    , rglVertexAttribI4bv :: !(FuntypeVertexAttribI4bv)
    , rglVertexAttribI4sv :: !(FuntypeVertexAttribI4sv)
    , rglVertexAttribI4ubv :: !(FuntypeVertexAttribI4ubv)
    , rglVertexAttribI4usv :: !(FuntypeVertexAttribI4usv)
    , rglGetUniformuiv :: !(FuntypeGetUniformuiv)
    , rglBindFragDataLocation :: !(FuntypeBindFragDataLocation)
    , rglGetFragDataLocation :: !(FuntypeGetFragDataLocation)
    , rglUniform1ui :: !(FuntypeUniform1ui)
    , rglUniform2ui :: !(FuntypeUniform2ui)
    , rglUniform3ui :: !(FuntypeUniform3ui)
    , rglUniform4ui :: !(FuntypeUniform4ui)
    , rglUniform1uiv :: !(FuntypeUniform1uiv)
    , rglUniform2uiv :: !(FuntypeUniform2uiv)
    , rglUniform3uiv :: !(FuntypeUniform3uiv)
    , rglUniform4uiv :: !(FuntypeUniform4uiv)
    , rglTexParameterIiv :: !(FuntypeTexParameterIiv)
    , rglTexParameterIuiv :: !(FuntypeTexParameterIuiv)
    , rglGetTexParameterIiv :: !(FuntypeGetTexParameterIiv)
    , rglGetTexParameterIuiv :: !(FuntypeGetTexParameterIuiv)
    , rglClearBufferiv :: !(FuntypeClearBufferiv)
    , rglClearBufferuiv :: !(FuntypeClearBufferuiv)
    , rglClearBufferfv :: !(FuntypeClearBufferfv)
    , rglClearBufferfi :: !(FuntypeClearBufferfi)
    , rglGetStringi :: !(FuntypeGetStringi)
    , rglIsRenderbuffer :: !(FuntypeIsRenderbuffer)
    , rglBindRenderbuffer :: !(FuntypeBindRenderbuffer)
    , rglDeleteRenderbuffers :: !(FuntypeDeleteRenderbuffers)
    , rglGenRenderbuffers :: !(FuntypeGenRenderbuffers)
    , rglRenderbufferStorage :: !(FuntypeRenderbufferStorage)
    , rglGetRenderbufferParameteriv :: !(FuntypeGetRenderbufferParameteriv)
    , rglIsFramebuffer :: !(FuntypeIsFramebuffer)
    , rglBindFramebuffer :: !(FuntypeBindFramebuffer)
    , rglDeleteFramebuffers :: !(FuntypeDeleteFramebuffers)
    , rglGenFramebuffers :: !(FuntypeGenFramebuffers)
    , rglCheckFramebufferStatus :: !(FuntypeCheckFramebufferStatus)
    , rglFramebufferTexture1D :: !(FuntypeFramebufferTexture1D)
    , rglFramebufferTexture2D :: !(FuntypeFramebufferTexture2D)
    , rglFramebufferTexture3D :: !(FuntypeFramebufferTexture3D)
    , rglFramebufferRenderbuffer :: !(FuntypeFramebufferRenderbuffer)
    , rglGetFramebufferAttachmentParameteriv :: !(FuntypeGetFramebufferAttachmentParameteriv)
    , rglGenerateMipmap :: !(FuntypeGenerateMipmap)
    , rglBlitFramebuffer :: !(FuntypeBlitFramebuffer)
    , rglRenderbufferStorageMultisample :: !(FuntypeRenderbufferStorageMultisample)
    , rglFramebufferTextureLayer :: !(FuntypeFramebufferTextureLayer)
    , rglMapBufferRange :: !(FuntypeMapBufferRange)
    , rglFlushMappedBufferRange :: !(FuntypeFlushMappedBufferRange)
    , rglBindVertexArray :: !(FuntypeBindVertexArray)
    , rglDeleteVertexArrays :: !(FuntypeDeleteVertexArrays)
    , rglGenVertexArrays :: !(FuntypeGenVertexArrays)
    , rglIsVertexArray :: !(FuntypeIsVertexArray)
    , rglDrawArraysInstanced :: !(FuntypeDrawArraysInstanced)
    , rglDrawElementsInstanced :: !(FuntypeDrawElementsInstanced)
    , rglTexBuffer :: !(FuntypeTexBuffer)
    , rglPrimitiveRestartIndex :: !(FuntypePrimitiveRestartIndex)
    , rglCopyBufferSubData :: !(FuntypeCopyBufferSubData)
    , rglGetUniformIndices :: !(FuntypeGetUniformIndices)
    , rglGetActiveUniformsiv :: !(FuntypeGetActiveUniformsiv)
    , rglGetActiveUniformName :: !(FuntypeGetActiveUniformName)
    , rglGetUniformBlockIndex :: !(FuntypeGetUniformBlockIndex)
    , rglGetActiveUniformBlockiv :: !(FuntypeGetActiveUniformBlockiv)
    , rglGetActiveUniformBlockName :: !(FuntypeGetActiveUniformBlockName)
    , rglUniformBlockBinding :: !(FuntypeUniformBlockBinding)
    , rglDrawElementsBaseVertex :: !(FuntypeDrawElementsBaseVertex)
    , rglDrawRangeElementsBaseVertex :: !(FuntypeDrawRangeElementsBaseVertex)
    , rglDrawElementsInstancedBaseVertex :: !(FuntypeDrawElementsInstancedBaseVertex)
    , rglMultiDrawElementsBaseVertex :: !(FuntypeMultiDrawElementsBaseVertex)
    , rglProvokingVertex :: !(FuntypeProvokingVertex)
    , rglFenceSync :: !(FuntypeFenceSync)
    , rglIsSync :: !(FuntypeIsSync)
    , rglDeleteSync :: !(FuntypeDeleteSync)
    , rglClientWaitSync :: !(FuntypeClientWaitSync)
    , rglWaitSync :: !(FuntypeWaitSync)
    , rglGetInteger64v :: !(FuntypeGetInteger64v)
    , rglGetSynciv :: !(FuntypeGetSynciv)
    , rglGetInteger64i_v :: !(FuntypeGetInteger64i_v)
    , rglGetBufferParameteri64v :: !(FuntypeGetBufferParameteri64v)
    , rglFramebufferTexture :: !(FuntypeFramebufferTexture)
    , rglTexImage2DMultisample :: !(FuntypeTexImage2DMultisample)
    , rglTexImage3DMultisample :: !(FuntypeTexImage3DMultisample)
    , rglGetMultisamplefv :: !(FuntypeGetMultisamplefv)
    , rglSampleMaski :: !(FuntypeSampleMaski)
    , rglBindFragDataLocationIndexed :: !(FuntypeBindFragDataLocationIndexed)
    , rglGetFragDataIndex :: !(FuntypeGetFragDataIndex)
    , rglGenSamplers :: !(FuntypeGenSamplers)
    , rglDeleteSamplers :: !(FuntypeDeleteSamplers)
    , rglIsSampler :: !(FuntypeIsSampler)
    , rglBindSampler :: !(FuntypeBindSampler)
    , rglSamplerParameteri :: !(FuntypeSamplerParameteri)
    , rglSamplerParameteriv :: !(FuntypeSamplerParameteriv)
    , rglSamplerParameterf :: !(FuntypeSamplerParameterf)
    , rglSamplerParameterfv :: !(FuntypeSamplerParameterfv)
    , rglSamplerParameterIiv :: !(FuntypeSamplerParameterIiv)
    , rglSamplerParameterIuiv :: !(FuntypeSamplerParameterIuiv)
    , rglGetSamplerParameteriv :: !(FuntypeGetSamplerParameteriv)
    , rglGetSamplerParameterIiv :: !(FuntypeGetSamplerParameterIiv)
    , rglGetSamplerParameterfv :: !(FuntypeGetSamplerParameterfv)
    , rglGetSamplerParameterIuiv :: !(FuntypeGetSamplerParameterIuiv)
    , rglQueryCounter :: !(FuntypeQueryCounter)
    , rglGetQueryObjecti64v :: !(FuntypeGetQueryObjecti64v)
    , rglGetQueryObjectui64v :: !(FuntypeGetQueryObjectui64v)
    , rglVertexAttribDivisor :: !(FuntypeVertexAttribDivisor)
    , rglVertexAttribP1ui :: !(FuntypeVertexAttribP1ui)
    , rglVertexAttribP1uiv :: !(FuntypeVertexAttribP1uiv)
    , rglVertexAttribP2ui :: !(FuntypeVertexAttribP2ui)
    , rglVertexAttribP2uiv :: !(FuntypeVertexAttribP2uiv)
    , rglVertexAttribP3ui :: !(FuntypeVertexAttribP3ui)
    , rglVertexAttribP3uiv :: !(FuntypeVertexAttribP3uiv)
    , rglVertexAttribP4ui :: !(FuntypeVertexAttribP4ui)
    , rglVertexAttribP4uiv :: !(FuntypeVertexAttribP4uiv)
    , rglTexStorage1D :: !(FuntypeTexStorage1D)
    , rglTexStorage2D :: !(FuntypeTexStorage2D)
    , rglTexStorage3D :: !(FuntypeTexStorage3D)
    , rglDebugMessageControl :: !(FuntypeDebugMessageControl)
    , rglDebugMessageInsert :: !(FuntypeDebugMessageInsert)
    , rglDebugMessageCallback :: !(FuntypeDebugMessageCallback)
    , rglGetDebugMessageLog :: !(FuntypeGetDebugMessageLog)
    , rglPushDebugGroup :: !(FuntypePushDebugGroup)
    , rglPopDebugGroup :: !(FuntypePopDebugGroup)
    , rglObjectLabel :: !(FuntypeObjectLabel)
    , rglGetObjectLabel :: !(FuntypeGetObjectLabel)
    , rglObjectPtrLabel :: !(FuntypeObjectPtrLabel)
    , rglGetObjectPtrLabel :: !(FuntypeGetObjectPtrLabel)
    , rglGetPointerv :: !(FuntypeGetPointerv)
    , rglDebugMessageControlKHR :: !(FuntypeDebugMessageControlKHR)
    , rglDebugMessageInsertKHR :: !(FuntypeDebugMessageInsertKHR)
    , rglDebugMessageCallbackKHR :: !(FuntypeDebugMessageCallbackKHR)
    , rglGetDebugMessageLogKHR :: !(FuntypeGetDebugMessageLogKHR)
    , rglPushDebugGroupKHR :: !(FuntypePushDebugGroupKHR)
    , rglPopDebugGroupKHR :: !(FuntypePopDebugGroupKHR)
    , rglObjectLabelKHR :: !(FuntypeObjectLabelKHR)
    , rglGetObjectLabelKHR :: !(FuntypeGetObjectLabelKHR)
    , rglObjectPtrLabelKHR :: !(FuntypeObjectPtrLabelKHR)
    , rglGetObjectPtrLabelKHR :: !(FuntypeGetObjectPtrLabelKHR)
    , rglGetPointervKHR :: !(FuntypeGetPointervKHR)
    , rglMatrixLoadfEXT :: !(FuntypeMatrixLoadfEXT)
    , rglMatrixLoaddEXT :: !(FuntypeMatrixLoaddEXT)
    , rglMatrixMultfEXT :: !(FuntypeMatrixMultfEXT)
    , rglMatrixMultdEXT :: !(FuntypeMatrixMultdEXT)
    , rglMatrixLoadIdentityEXT :: !(FuntypeMatrixLoadIdentityEXT)
    , rglMatrixRotatefEXT :: !(FuntypeMatrixRotatefEXT)
    , rglMatrixRotatedEXT :: !(FuntypeMatrixRotatedEXT)
    , rglMatrixScalefEXT :: !(FuntypeMatrixScalefEXT)
    , rglMatrixScaledEXT :: !(FuntypeMatrixScaledEXT)
    , rglMatrixTranslatefEXT :: !(FuntypeMatrixTranslatefEXT)
    , rglMatrixTranslatedEXT :: !(FuntypeMatrixTranslatedEXT)
    , rglMatrixFrustumEXT :: !(FuntypeMatrixFrustumEXT)
    , rglMatrixOrthoEXT :: !(FuntypeMatrixOrthoEXT)
    , rglMatrixPopEXT :: !(FuntypeMatrixPopEXT)
    , rglMatrixPushEXT :: !(FuntypeMatrixPushEXT)
    , rglClientAttribDefaultEXT :: !(FuntypeClientAttribDefaultEXT)
    , rglPushClientAttribDefaultEXT :: !(FuntypePushClientAttribDefaultEXT)
    , rglTextureParameterfEXT :: !(FuntypeTextureParameterfEXT)
    , rglTextureParameterfvEXT :: !(FuntypeTextureParameterfvEXT)
    , rglTextureParameteriEXT :: !(FuntypeTextureParameteriEXT)
    , rglTextureParameterivEXT :: !(FuntypeTextureParameterivEXT)
    , rglTextureImage1DEXT :: !(FuntypeTextureImage1DEXT)
    , rglTextureImage2DEXT :: !(FuntypeTextureImage2DEXT)
    , rglTextureSubImage1DEXT :: !(FuntypeTextureSubImage1DEXT)
    , rglTextureSubImage2DEXT :: !(FuntypeTextureSubImage2DEXT)
    , rglCopyTextureImage1DEXT :: !(FuntypeCopyTextureImage1DEXT)
    , rglCopyTextureImage2DEXT :: !(FuntypeCopyTextureImage2DEXT)
    , rglCopyTextureSubImage1DEXT :: !(FuntypeCopyTextureSubImage1DEXT)
    , rglCopyTextureSubImage2DEXT :: !(FuntypeCopyTextureSubImage2DEXT)
    , rglGetTextureImageEXT :: !(FuntypeGetTextureImageEXT)
    , rglGetTextureParameterfvEXT :: !(FuntypeGetTextureParameterfvEXT)
    , rglGetTextureParameterivEXT :: !(FuntypeGetTextureParameterivEXT)
    , rglGetTextureLevelParameterfvEXT :: !(FuntypeGetTextureLevelParameterfvEXT)
    , rglGetTextureLevelParameterivEXT :: !(FuntypeGetTextureLevelParameterivEXT)
    , rglTextureImage3DEXT :: !(FuntypeTextureImage3DEXT)
    , rglTextureSubImage3DEXT :: !(FuntypeTextureSubImage3DEXT)
    , rglCopyTextureSubImage3DEXT :: !(FuntypeCopyTextureSubImage3DEXT)
    , rglBindMultiTextureEXT :: !(FuntypeBindMultiTextureEXT)
    , rglMultiTexCoordPointerEXT :: !(FuntypeMultiTexCoordPointerEXT)
    , rglMultiTexEnvfEXT :: !(FuntypeMultiTexEnvfEXT)
    , rglMultiTexEnvfvEXT :: !(FuntypeMultiTexEnvfvEXT)
    , rglMultiTexEnviEXT :: !(FuntypeMultiTexEnviEXT)
    , rglMultiTexEnvivEXT :: !(FuntypeMultiTexEnvivEXT)
    , rglMultiTexGendEXT :: !(FuntypeMultiTexGendEXT)
    , rglMultiTexGendvEXT :: !(FuntypeMultiTexGendvEXT)
    , rglMultiTexGenfEXT :: !(FuntypeMultiTexGenfEXT)
    , rglMultiTexGenfvEXT :: !(FuntypeMultiTexGenfvEXT)
    , rglMultiTexGeniEXT :: !(FuntypeMultiTexGeniEXT)
    , rglMultiTexGenivEXT :: !(FuntypeMultiTexGenivEXT)
    , rglGetMultiTexEnvfvEXT :: !(FuntypeGetMultiTexEnvfvEXT)
    , rglGetMultiTexEnvivEXT :: !(FuntypeGetMultiTexEnvivEXT)
    , rglGetMultiTexGendvEXT :: !(FuntypeGetMultiTexGendvEXT)
    , rglGetMultiTexGenfvEXT :: !(FuntypeGetMultiTexGenfvEXT)
    , rglGetMultiTexGenivEXT :: !(FuntypeGetMultiTexGenivEXT)
    , rglMultiTexParameteriEXT :: !(FuntypeMultiTexParameteriEXT)
    , rglMultiTexParameterivEXT :: !(FuntypeMultiTexParameterivEXT)
    , rglMultiTexParameterfEXT :: !(FuntypeMultiTexParameterfEXT)
    , rglMultiTexParameterfvEXT :: !(FuntypeMultiTexParameterfvEXT)
    , rglMultiTexImage1DEXT :: !(FuntypeMultiTexImage1DEXT)
    , rglMultiTexImage2DEXT :: !(FuntypeMultiTexImage2DEXT)
    , rglMultiTexSubImage1DEXT :: !(FuntypeMultiTexSubImage1DEXT)
    , rglMultiTexSubImage2DEXT :: !(FuntypeMultiTexSubImage2DEXT)
    , rglCopyMultiTexImage1DEXT :: !(FuntypeCopyMultiTexImage1DEXT)
    , rglCopyMultiTexImage2DEXT :: !(FuntypeCopyMultiTexImage2DEXT)
    , rglCopyMultiTexSubImage1DEXT :: !(FuntypeCopyMultiTexSubImage1DEXT)
    , rglCopyMultiTexSubImage2DEXT :: !(FuntypeCopyMultiTexSubImage2DEXT)
    , rglGetMultiTexImageEXT :: !(FuntypeGetMultiTexImageEXT)
    , rglGetMultiTexParameterfvEXT :: !(FuntypeGetMultiTexParameterfvEXT)
    , rglGetMultiTexParameterivEXT :: !(FuntypeGetMultiTexParameterivEXT)
    , rglGetMultiTexLevelParameterfvEXT :: !(FuntypeGetMultiTexLevelParameterfvEXT)
    , rglGetMultiTexLevelParameterivEXT :: !(FuntypeGetMultiTexLevelParameterivEXT)
    , rglMultiTexImage3DEXT :: !(FuntypeMultiTexImage3DEXT)
    , rglMultiTexSubImage3DEXT :: !(FuntypeMultiTexSubImage3DEXT)
    , rglCopyMultiTexSubImage3DEXT :: !(FuntypeCopyMultiTexSubImage3DEXT)
    , rglEnableClientStateIndexedEXT :: !(FuntypeEnableClientStateIndexedEXT)
    , rglDisableClientStateIndexedEXT :: !(FuntypeDisableClientStateIndexedEXT)
    , rglGetFloatIndexedvEXT :: !(FuntypeGetFloatIndexedvEXT)
    , rglGetDoubleIndexedvEXT :: !(FuntypeGetDoubleIndexedvEXT)
    , rglGetPointerIndexedvEXT :: !(FuntypeGetPointerIndexedvEXT)
    , rglEnableIndexedEXT :: !(FuntypeEnableIndexedEXT)
    , rglDisableIndexedEXT :: !(FuntypeDisableIndexedEXT)
    , rglIsEnabledIndexedEXT :: !(FuntypeIsEnabledIndexedEXT)
    , rglGetIntegerIndexedvEXT :: !(FuntypeGetIntegerIndexedvEXT)
    , rglGetBooleanIndexedvEXT :: !(FuntypeGetBooleanIndexedvEXT)
    , rglCompressedTextureImage3DEXT :: !(FuntypeCompressedTextureImage3DEXT)
    , rglCompressedTextureImage2DEXT :: !(FuntypeCompressedTextureImage2DEXT)
    , rglCompressedTextureImage1DEXT :: !(FuntypeCompressedTextureImage1DEXT)
    , rglCompressedTextureSubImage3DEXT :: !(FuntypeCompressedTextureSubImage3DEXT)
    , rglCompressedTextureSubImage2DEXT :: !(FuntypeCompressedTextureSubImage2DEXT)
    , rglCompressedTextureSubImage1DEXT :: !(FuntypeCompressedTextureSubImage1DEXT)
    , rglGetCompressedTextureImageEXT :: !(FuntypeGetCompressedTextureImageEXT)
    , rglCompressedMultiTexImage3DEXT :: !(FuntypeCompressedMultiTexImage3DEXT)
    , rglCompressedMultiTexImage2DEXT :: !(FuntypeCompressedMultiTexImage2DEXT)
    , rglCompressedMultiTexImage1DEXT :: !(FuntypeCompressedMultiTexImage1DEXT)
    , rglCompressedMultiTexSubImage3DEXT :: !(FuntypeCompressedMultiTexSubImage3DEXT)
    , rglCompressedMultiTexSubImage2DEXT :: !(FuntypeCompressedMultiTexSubImage2DEXT)
    , rglCompressedMultiTexSubImage1DEXT :: !(FuntypeCompressedMultiTexSubImage1DEXT)
    , rglGetCompressedMultiTexImageEXT :: !(FuntypeGetCompressedMultiTexImageEXT)
    , rglMatrixLoadTransposefEXT :: !(FuntypeMatrixLoadTransposefEXT)
    , rglMatrixLoadTransposedEXT :: !(FuntypeMatrixLoadTransposedEXT)
    , rglMatrixMultTransposefEXT :: !(FuntypeMatrixMultTransposefEXT)
    , rglMatrixMultTransposedEXT :: !(FuntypeMatrixMultTransposedEXT)
    , rglNamedBufferDataEXT :: !(FuntypeNamedBufferDataEXT)
    , rglNamedBufferSubDataEXT :: !(FuntypeNamedBufferSubDataEXT)
    , rglMapNamedBufferEXT :: !(FuntypeMapNamedBufferEXT)
    , rglUnmapNamedBufferEXT :: !(FuntypeUnmapNamedBufferEXT)
    , rglGetNamedBufferParameterivEXT :: !(FuntypeGetNamedBufferParameterivEXT)
    , rglGetNamedBufferPointervEXT :: !(FuntypeGetNamedBufferPointervEXT)
    , rglGetNamedBufferSubDataEXT :: !(FuntypeGetNamedBufferSubDataEXT)
    , rglProgramUniform1fEXT :: !(FuntypeProgramUniform1fEXT)
    , rglProgramUniform2fEXT :: !(FuntypeProgramUniform2fEXT)
    , rglProgramUniform3fEXT :: !(FuntypeProgramUniform3fEXT)
    , rglProgramUniform4fEXT :: !(FuntypeProgramUniform4fEXT)
    , rglProgramUniform1iEXT :: !(FuntypeProgramUniform1iEXT)
    , rglProgramUniform2iEXT :: !(FuntypeProgramUniform2iEXT)
    , rglProgramUniform3iEXT :: !(FuntypeProgramUniform3iEXT)
    , rglProgramUniform4iEXT :: !(FuntypeProgramUniform4iEXT)
    , rglProgramUniform1fvEXT :: !(FuntypeProgramUniform1fvEXT)
    , rglProgramUniform2fvEXT :: !(FuntypeProgramUniform2fvEXT)
    , rglProgramUniform3fvEXT :: !(FuntypeProgramUniform3fvEXT)
    , rglProgramUniform4fvEXT :: !(FuntypeProgramUniform4fvEXT)
    , rglProgramUniform1ivEXT :: !(FuntypeProgramUniform1ivEXT)
    , rglProgramUniform2ivEXT :: !(FuntypeProgramUniform2ivEXT)
    , rglProgramUniform3ivEXT :: !(FuntypeProgramUniform3ivEXT)
    , rglProgramUniform4ivEXT :: !(FuntypeProgramUniform4ivEXT)
    , rglProgramUniformMatrix2fvEXT :: !(FuntypeProgramUniformMatrix2fvEXT)
    , rglProgramUniformMatrix3fvEXT :: !(FuntypeProgramUniformMatrix3fvEXT)
    , rglProgramUniformMatrix4fvEXT :: !(FuntypeProgramUniformMatrix4fvEXT)
    , rglProgramUniformMatrix2x3fvEXT :: !(FuntypeProgramUniformMatrix2x3fvEXT)
    , rglProgramUniformMatrix3x2fvEXT :: !(FuntypeProgramUniformMatrix3x2fvEXT)
    , rglProgramUniformMatrix2x4fvEXT :: !(FuntypeProgramUniformMatrix2x4fvEXT)
    , rglProgramUniformMatrix4x2fvEXT :: !(FuntypeProgramUniformMatrix4x2fvEXT)
    , rglProgramUniformMatrix3x4fvEXT :: !(FuntypeProgramUniformMatrix3x4fvEXT)
    , rglProgramUniformMatrix4x3fvEXT :: !(FuntypeProgramUniformMatrix4x3fvEXT)
    , rglTextureBufferEXT :: !(FuntypeTextureBufferEXT)
    , rglMultiTexBufferEXT :: !(FuntypeMultiTexBufferEXT)
    , rglTextureParameterIivEXT :: !(FuntypeTextureParameterIivEXT)
    , rglTextureParameterIuivEXT :: !(FuntypeTextureParameterIuivEXT)
    , rglGetTextureParameterIivEXT :: !(FuntypeGetTextureParameterIivEXT)
    , rglGetTextureParameterIuivEXT :: !(FuntypeGetTextureParameterIuivEXT)
    , rglMultiTexParameterIivEXT :: !(FuntypeMultiTexParameterIivEXT)
    , rglMultiTexParameterIuivEXT :: !(FuntypeMultiTexParameterIuivEXT)
    , rglGetMultiTexParameterIivEXT :: !(FuntypeGetMultiTexParameterIivEXT)
    , rglGetMultiTexParameterIuivEXT :: !(FuntypeGetMultiTexParameterIuivEXT)
    , rglProgramUniform1uiEXT :: !(FuntypeProgramUniform1uiEXT)
    , rglProgramUniform2uiEXT :: !(FuntypeProgramUniform2uiEXT)
    , rglProgramUniform3uiEXT :: !(FuntypeProgramUniform3uiEXT)
    , rglProgramUniform4uiEXT :: !(FuntypeProgramUniform4uiEXT)
    , rglProgramUniform1uivEXT :: !(FuntypeProgramUniform1uivEXT)
    , rglProgramUniform2uivEXT :: !(FuntypeProgramUniform2uivEXT)
    , rglProgramUniform3uivEXT :: !(FuntypeProgramUniform3uivEXT)
    , rglProgramUniform4uivEXT :: !(FuntypeProgramUniform4uivEXT)
    , rglNamedProgramLocalParameters4fvEXT :: !(FuntypeNamedProgramLocalParameters4fvEXT)
    , rglNamedProgramLocalParameterI4iEXT :: !(FuntypeNamedProgramLocalParameterI4iEXT)
    , rglNamedProgramLocalParameterI4ivEXT :: !(FuntypeNamedProgramLocalParameterI4ivEXT)
    , rglNamedProgramLocalParametersI4ivEXT :: !(FuntypeNamedProgramLocalParametersI4ivEXT)
    , rglNamedProgramLocalParameterI4uiEXT :: !(FuntypeNamedProgramLocalParameterI4uiEXT)
    , rglNamedProgramLocalParameterI4uivEXT :: !(FuntypeNamedProgramLocalParameterI4uivEXT)
    , rglNamedProgramLocalParametersI4uivEXT :: !(FuntypeNamedProgramLocalParametersI4uivEXT)
    , rglGetNamedProgramLocalParameterIivEXT :: !(FuntypeGetNamedProgramLocalParameterIivEXT)
    , rglGetNamedProgramLocalParameterIuivEXT :: !(FuntypeGetNamedProgramLocalParameterIuivEXT)
    , rglEnableClientStateiEXT :: !(FuntypeEnableClientStateiEXT)
    , rglDisableClientStateiEXT :: !(FuntypeDisableClientStateiEXT)
    , rglGetFloati_vEXT :: !(FuntypeGetFloati_vEXT)
    , rglGetDoublei_vEXT :: !(FuntypeGetDoublei_vEXT)
    , rglGetPointeri_vEXT :: !(FuntypeGetPointeri_vEXT)
    , rglNamedProgramStringEXT :: !(FuntypeNamedProgramStringEXT)
    , rglNamedProgramLocalParameter4dEXT :: !(FuntypeNamedProgramLocalParameter4dEXT)
    , rglNamedProgramLocalParameter4dvEXT :: !(FuntypeNamedProgramLocalParameter4dvEXT)
    , rglNamedProgramLocalParameter4fEXT :: !(FuntypeNamedProgramLocalParameter4fEXT)
    , rglNamedProgramLocalParameter4fvEXT :: !(FuntypeNamedProgramLocalParameter4fvEXT)
    , rglGetNamedProgramLocalParameterdvEXT :: !(FuntypeGetNamedProgramLocalParameterdvEXT)
    , rglGetNamedProgramLocalParameterfvEXT :: !(FuntypeGetNamedProgramLocalParameterfvEXT)
    , rglGetNamedProgramivEXT :: !(FuntypeGetNamedProgramivEXT)
    , rglGetNamedProgramStringEXT :: !(FuntypeGetNamedProgramStringEXT)
    , rglNamedRenderbufferStorageEXT :: !(FuntypeNamedRenderbufferStorageEXT)
    , rglGetNamedRenderbufferParameterivEXT :: !(FuntypeGetNamedRenderbufferParameterivEXT)
    , rglNamedRenderbufferStorageMultisampleEXT :: !(FuntypeNamedRenderbufferStorageMultisampleEXT)
    , rglNamedRenderbufferStorageMultisampleCoverageEXT :: !(FuntypeNamedRenderbufferStorageMultisampleCoverageEXT)
    , rglCheckNamedFramebufferStatusEXT :: !(FuntypeCheckNamedFramebufferStatusEXT)
    , rglNamedFramebufferTexture1DEXT :: !(FuntypeNamedFramebufferTexture1DEXT)
    , rglNamedFramebufferTexture2DEXT :: !(FuntypeNamedFramebufferTexture2DEXT)
    , rglNamedFramebufferTexture3DEXT :: !(FuntypeNamedFramebufferTexture3DEXT)
    , rglNamedFramebufferRenderbufferEXT :: !(FuntypeNamedFramebufferRenderbufferEXT)
    , rglGetNamedFramebufferAttachmentParameterivEXT :: !(FuntypeGetNamedFramebufferAttachmentParameterivEXT)
    , rglGenerateTextureMipmapEXT :: !(FuntypeGenerateTextureMipmapEXT)
    , rglGenerateMultiTexMipmapEXT :: !(FuntypeGenerateMultiTexMipmapEXT)
    , rglFramebufferDrawBufferEXT :: !(FuntypeFramebufferDrawBufferEXT)
    , rglFramebufferDrawBuffersEXT :: !(FuntypeFramebufferDrawBuffersEXT)
    , rglFramebufferReadBufferEXT :: !(FuntypeFramebufferReadBufferEXT)
    , rglGetFramebufferParameterivEXT :: !(FuntypeGetFramebufferParameterivEXT)
    , rglNamedCopyBufferSubDataEXT :: !(FuntypeNamedCopyBufferSubDataEXT)
    , rglNamedFramebufferTextureEXT :: !(FuntypeNamedFramebufferTextureEXT)
    , rglNamedFramebufferTextureLayerEXT :: !(FuntypeNamedFramebufferTextureLayerEXT)
    , rglNamedFramebufferTextureFaceEXT :: !(FuntypeNamedFramebufferTextureFaceEXT)
    , rglTextureRenderbufferEXT :: !(FuntypeTextureRenderbufferEXT)
    , rglMultiTexRenderbufferEXT :: !(FuntypeMultiTexRenderbufferEXT)
    , rglVertexArrayVertexOffsetEXT :: !(FuntypeVertexArrayVertexOffsetEXT)
    , rglVertexArrayColorOffsetEXT :: !(FuntypeVertexArrayColorOffsetEXT)
    , rglVertexArrayEdgeFlagOffsetEXT :: !(FuntypeVertexArrayEdgeFlagOffsetEXT)
    , rglVertexArrayIndexOffsetEXT :: !(FuntypeVertexArrayIndexOffsetEXT)
    , rglVertexArrayNormalOffsetEXT :: !(FuntypeVertexArrayNormalOffsetEXT)
    , rglVertexArrayTexCoordOffsetEXT :: !(FuntypeVertexArrayTexCoordOffsetEXT)
    , rglVertexArrayMultiTexCoordOffsetEXT :: !(FuntypeVertexArrayMultiTexCoordOffsetEXT)
    , rglVertexArrayFogCoordOffsetEXT :: !(FuntypeVertexArrayFogCoordOffsetEXT)
    , rglVertexArraySecondaryColorOffsetEXT :: !(FuntypeVertexArraySecondaryColorOffsetEXT)
    , rglVertexArrayVertexAttribOffsetEXT :: !(FuntypeVertexArrayVertexAttribOffsetEXT)
    , rglVertexArrayVertexAttribIOffsetEXT :: !(FuntypeVertexArrayVertexAttribIOffsetEXT)
    , rglEnableVertexArrayEXT :: !(FuntypeEnableVertexArrayEXT)
    , rglDisableVertexArrayEXT :: !(FuntypeDisableVertexArrayEXT)
    , rglEnableVertexArrayAttribEXT :: !(FuntypeEnableVertexArrayAttribEXT)
    , rglDisableVertexArrayAttribEXT :: !(FuntypeDisableVertexArrayAttribEXT)
    , rglGetVertexArrayIntegervEXT :: !(FuntypeGetVertexArrayIntegervEXT)
    , rglGetVertexArrayPointervEXT :: !(FuntypeGetVertexArrayPointervEXT)
    , rglGetVertexArrayIntegeri_vEXT :: !(FuntypeGetVertexArrayIntegeri_vEXT)
    , rglGetVertexArrayPointeri_vEXT :: !(FuntypeGetVertexArrayPointeri_vEXT)
    , rglMapNamedBufferRangeEXT :: !(FuntypeMapNamedBufferRangeEXT)
    , rglFlushMappedNamedBufferRangeEXT :: !(FuntypeFlushMappedNamedBufferRangeEXT)
    , rglNamedBufferStorageEXT :: !(FuntypeNamedBufferStorageEXT)
    , rglClearNamedBufferDataEXT :: !(FuntypeClearNamedBufferDataEXT)
    , rglClearNamedBufferSubDataEXT :: !(FuntypeClearNamedBufferSubDataEXT)
    , rglNamedFramebufferParameteriEXT :: !(FuntypeNamedFramebufferParameteriEXT)
    , rglGetNamedFramebufferParameterivEXT :: !(FuntypeGetNamedFramebufferParameterivEXT)
    , rglProgramUniform1dEXT :: !(FuntypeProgramUniform1dEXT)
    , rglProgramUniform2dEXT :: !(FuntypeProgramUniform2dEXT)
    , rglProgramUniform3dEXT :: !(FuntypeProgramUniform3dEXT)
    , rglProgramUniform4dEXT :: !(FuntypeProgramUniform4dEXT)
    , rglProgramUniform1dvEXT :: !(FuntypeProgramUniform1dvEXT)
    , rglProgramUniform2dvEXT :: !(FuntypeProgramUniform2dvEXT)
    , rglProgramUniform3dvEXT :: !(FuntypeProgramUniform3dvEXT)
    , rglProgramUniform4dvEXT :: !(FuntypeProgramUniform4dvEXT)
    , rglProgramUniformMatrix2dvEXT :: !(FuntypeProgramUniformMatrix2dvEXT)
    , rglProgramUniformMatrix3dvEXT :: !(FuntypeProgramUniformMatrix3dvEXT)
    , rglProgramUniformMatrix4dvEXT :: !(FuntypeProgramUniformMatrix4dvEXT)
    , rglProgramUniformMatrix2x3dvEXT :: !(FuntypeProgramUniformMatrix2x3dvEXT)
    , rglProgramUniformMatrix2x4dvEXT :: !(FuntypeProgramUniformMatrix2x4dvEXT)
    , rglProgramUniformMatrix3x2dvEXT :: !(FuntypeProgramUniformMatrix3x2dvEXT)
    , rglProgramUniformMatrix3x4dvEXT :: !(FuntypeProgramUniformMatrix3x4dvEXT)
    , rglProgramUniformMatrix4x2dvEXT :: !(FuntypeProgramUniformMatrix4x2dvEXT)
    , rglProgramUniformMatrix4x3dvEXT :: !(FuntypeProgramUniformMatrix4x3dvEXT)
    , rglTextureBufferRangeEXT :: !(FuntypeTextureBufferRangeEXT)
    , rglTextureStorage1DEXT :: !(FuntypeTextureStorage1DEXT)
    , rglTextureStorage2DEXT :: !(FuntypeTextureStorage2DEXT)
    , rglTextureStorage3DEXT :: !(FuntypeTextureStorage3DEXT)
    , rglTextureStorage2DMultisampleEXT :: !(FuntypeTextureStorage2DMultisampleEXT)
    , rglTextureStorage3DMultisampleEXT :: !(FuntypeTextureStorage3DMultisampleEXT)
    , rglVertexArrayBindVertexBufferEXT :: !(FuntypeVertexArrayBindVertexBufferEXT)
    , rglVertexArrayVertexAttribFormatEXT :: !(FuntypeVertexArrayVertexAttribFormatEXT)
    , rglVertexArrayVertexAttribIFormatEXT :: !(FuntypeVertexArrayVertexAttribIFormatEXT)
    , rglVertexArrayVertexAttribLFormatEXT :: !(FuntypeVertexArrayVertexAttribLFormatEXT)
    , rglVertexArrayVertexAttribBindingEXT :: !(FuntypeVertexArrayVertexAttribBindingEXT)
    , rglVertexArrayVertexBindingDivisorEXT :: !(FuntypeVertexArrayVertexBindingDivisorEXT)
    , rglVertexArrayVertexAttribLOffsetEXT :: !(FuntypeVertexArrayVertexAttribLOffsetEXT)
    , rglTexturePageCommitmentEXT :: !(FuntypeTexturePageCommitmentEXT)
    , rglVertexArrayVertexAttribDivisorEXT :: !(FuntypeVertexArrayVertexAttribDivisorEXT)
    , rglBufferStorage :: !(FuntypeBufferStorage)
    , rglUseProgramStages :: !(FuntypeUseProgramStages)
    , rglActiveShaderProgram :: !(FuntypeActiveShaderProgram)
    , rglCreateShaderProgramv :: !(FuntypeCreateShaderProgramv)
    , rglBindProgramPipeline :: !(FuntypeBindProgramPipeline)
    , rglDeleteProgramPipelines :: !(FuntypeDeleteProgramPipelines)
    , rglGenProgramPipelines :: !(FuntypeGenProgramPipelines)
    , rglIsProgramPipeline :: !(FuntypeIsProgramPipeline)
    , rglGetProgramPipelineiv :: !(FuntypeGetProgramPipelineiv)
    , rglProgramUniform1i :: !(FuntypeProgramUniform1i)
    , rglProgramUniform1iv :: !(FuntypeProgramUniform1iv)
    , rglProgramUniform1f :: !(FuntypeProgramUniform1f)
    , rglProgramUniform1fv :: !(FuntypeProgramUniform1fv)
    , rglProgramUniform1d :: !(FuntypeProgramUniform1d)
    , rglProgramUniform1dv :: !(FuntypeProgramUniform1dv)
    , rglProgramUniform1ui :: !(FuntypeProgramUniform1ui)
    , rglProgramUniform1uiv :: !(FuntypeProgramUniform1uiv)
    , rglProgramUniform2i :: !(FuntypeProgramUniform2i)
    , rglProgramUniform2iv :: !(FuntypeProgramUniform2iv)
    , rglProgramUniform2f :: !(FuntypeProgramUniform2f)
    , rglProgramUniform2fv :: !(FuntypeProgramUniform2fv)
    , rglProgramUniform2d :: !(FuntypeProgramUniform2d)
    , rglProgramUniform2dv :: !(FuntypeProgramUniform2dv)
    , rglProgramUniform2ui :: !(FuntypeProgramUniform2ui)
    , rglProgramUniform2uiv :: !(FuntypeProgramUniform2uiv)
    , rglProgramUniform3i :: !(FuntypeProgramUniform3i)
    , rglProgramUniform3iv :: !(FuntypeProgramUniform3iv)
    , rglProgramUniform3f :: !(FuntypeProgramUniform3f)
    , rglProgramUniform3fv :: !(FuntypeProgramUniform3fv)
    , rglProgramUniform3d :: !(FuntypeProgramUniform3d)
    , rglProgramUniform3dv :: !(FuntypeProgramUniform3dv)
    , rglProgramUniform3ui :: !(FuntypeProgramUniform3ui)
    , rglProgramUniform3uiv :: !(FuntypeProgramUniform3uiv)
    , rglProgramUniform4i :: !(FuntypeProgramUniform4i)
    , rglProgramUniform4iv :: !(FuntypeProgramUniform4iv)
    , rglProgramUniform4f :: !(FuntypeProgramUniform4f)
    , rglProgramUniform4fv :: !(FuntypeProgramUniform4fv)
    , rglProgramUniform4d :: !(FuntypeProgramUniform4d)
    , rglProgramUniform4dv :: !(FuntypeProgramUniform4dv)
    , rglProgramUniform4ui :: !(FuntypeProgramUniform4ui)
    , rglProgramUniform4uiv :: !(FuntypeProgramUniform4uiv)
    , rglProgramUniformMatrix2fv :: !(FuntypeProgramUniformMatrix2fv)
    , rglProgramUniformMatrix3fv :: !(FuntypeProgramUniformMatrix3fv)
    , rglProgramUniformMatrix4fv :: !(FuntypeProgramUniformMatrix4fv)
    , rglProgramUniformMatrix2dv :: !(FuntypeProgramUniformMatrix2dv)
    , rglProgramUniformMatrix3dv :: !(FuntypeProgramUniformMatrix3dv)
    , rglProgramUniformMatrix4dv :: !(FuntypeProgramUniformMatrix4dv)
    , rglProgramUniformMatrix2x3fv :: !(FuntypeProgramUniformMatrix2x3fv)
    , rglProgramUniformMatrix3x2fv :: !(FuntypeProgramUniformMatrix3x2fv)
    , rglProgramUniformMatrix2x4fv :: !(FuntypeProgramUniformMatrix2x4fv)
    , rglProgramUniformMatrix4x2fv :: !(FuntypeProgramUniformMatrix4x2fv)
    , rglProgramUniformMatrix3x4fv :: !(FuntypeProgramUniformMatrix3x4fv)
    , rglProgramUniformMatrix4x3fv :: !(FuntypeProgramUniformMatrix4x3fv)
    , rglProgramUniformMatrix2x3dv :: !(FuntypeProgramUniformMatrix2x3dv)
    , rglProgramUniformMatrix3x2dv :: !(FuntypeProgramUniformMatrix3x2dv)
    , rglProgramUniformMatrix2x4dv :: !(FuntypeProgramUniformMatrix2x4dv)
    , rglProgramUniformMatrix4x2dv :: !(FuntypeProgramUniformMatrix4x2dv)
    , rglProgramUniformMatrix3x4dv :: !(FuntypeProgramUniformMatrix3x4dv)
    , rglProgramUniformMatrix4x3dv :: !(FuntypeProgramUniformMatrix4x3dv)
    , rglValidateProgramPipeline :: !(FuntypeValidateProgramPipeline)
    , rglGetProgramPipelineInfoLog :: !(FuntypeGetProgramPipelineInfoLog)
    , rglInvalidateTexSubImage :: !(FuntypeInvalidateTexSubImage)
    , rglInvalidateTexImage :: !(FuntypeInvalidateTexImage)
    , rglInvalidateBufferSubData :: !(FuntypeInvalidateBufferSubData)
    , rglInvalidateBufferData :: !(FuntypeInvalidateBufferData)
    , rglInvalidateFramebuffer :: !(FuntypeInvalidateFramebuffer)
    , rglInvalidateSubFramebuffer :: !(FuntypeInvalidateSubFramebuffer)
    }
    deriving ( Typeable )

instance Show FlextGL where
    show fgl = "FlextGL <#" ++ show (counter fgl) ++ ">"

instance Eq FlextGL where
    fgl1 == fgl2 = counter fgl1 == counter fgl2

instance Ord FlextGL where
    fgl1 `compare` fgl2 = counter fgl1 `compare` counter fgl2

-- | The return type from `flextInit`.
data FlextInitResult = Failure { why :: String }
                     | Success !FlextGL
                     deriving ( Eq, Ord, Show )

deriving instance Typeable FlextInitResult
instance Exception FlextInitResult

-- | Thrown when someone calls an OpenGL function that's not available in the
--   context.
data NonExistentOpenGLFunction = NonExistentOpenGLFunction String
                                 deriving ( Eq, Ord, Show, Read )

deriving instance Typeable NonExistentOpenGLFunction
instance Exception NonExistentOpenGLFunction

proc :: Either a a -> a
proc (Left x) = x
proc (Right x) = x

parseExtensionString :: String -> [String]
parseExtensionString [] = []
parseExtensionString str = rec str [] [] where
    rec [] ext exts =
        if null ext
          then exts
          else (reverse ext:exts)
    rec (' ':rest) ext exts =
        if null ext
          then rec rest [] exts
          else rec rest [] (reverse ext:exts)
    rec (x:rest) ext exts =
        rec rest (x:ext) exts

-- | Initializes OpenGL entry points in the current OpenGL context.
flextInit :: (String -> IO (Ptr ())) -- ^ This function should return OpenGL entry point for given OpenGL function name.
          -> IO FlextInitResult
flextInit get_proc_address = fmap proc $ runExceptT $ do
    -- GL_VERSION_1_0

    refCullFace <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCullFace"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCullFace")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCullFace addr
                   else nonexistentCullFace
    refFrontFace <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFrontFace"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFrontFace")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFrontFace addr
                   else nonexistentFrontFace
    refHint <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glHint"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glHint")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynHint addr
                   else nonexistentHint
    refLineWidth <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glLineWidth"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glLineWidth")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynLineWidth addr
                   else nonexistentLineWidth
    refPointSize <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPointSize"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPointSize")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPointSize addr
                   else nonexistentPointSize
    refPolygonMode <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPolygonMode"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPolygonMode")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPolygonMode addr
                   else nonexistentPolygonMode
    refScissor <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glScissor"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glScissor")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynScissor addr
                   else nonexistentScissor
    refTexParameterf <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameterf"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameterf")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameterf addr
                   else nonexistentTexParameterf
    refTexParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameterfv addr
                   else nonexistentTexParameterfv
    refTexParameteri <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameteri"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameteri")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameteri addr
                   else nonexistentTexParameteri
    refTexParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameteriv addr
                   else nonexistentTexParameteriv
    refTexImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexImage1D addr
                   else nonexistentTexImage1D
    refTexImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexImage2D addr
                   else nonexistentTexImage2D
    refDrawBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawBuffer addr
                   else nonexistentDrawBuffer
    refClear <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClear"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClear")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClear addr
                   else nonexistentClear
    refClearColor <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearColor"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearColor")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearColor addr
                   else nonexistentClearColor
    refClearStencil <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearStencil"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearStencil")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearStencil addr
                   else nonexistentClearStencil
    refClearDepth <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearDepth"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearDepth")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearDepth addr
                   else nonexistentClearDepth
    refStencilMask <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilMask"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilMask")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilMask addr
                   else nonexistentStencilMask
    refColorMask <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glColorMask"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glColorMask")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynColorMask addr
                   else nonexistentColorMask
    refDepthMask <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDepthMask"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDepthMask")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDepthMask addr
                   else nonexistentDepthMask
    refDisable <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisable"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisable")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisable addr
                   else nonexistentDisable
    refEnable <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnable"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnable")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnable addr
                   else nonexistentEnable
    refFinish <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFinish"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFinish")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFinish addr
                   else nonexistentFinish
    refFlush <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFlush"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFlush")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFlush addr
                   else nonexistentFlush
    refBlendFunc <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlendFunc"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlendFunc")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlendFunc addr
                   else nonexistentBlendFunc
    refLogicOp <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glLogicOp"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glLogicOp")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynLogicOp addr
                   else nonexistentLogicOp
    refStencilFunc <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilFunc"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilFunc")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilFunc addr
                   else nonexistentStencilFunc
    refStencilOp <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilOp"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilOp")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilOp addr
                   else nonexistentStencilOp
    refDepthFunc <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDepthFunc"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDepthFunc")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDepthFunc addr
                   else nonexistentDepthFunc
    refPixelStoref <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPixelStoref"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPixelStoref")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPixelStoref addr
                   else nonexistentPixelStoref
    refPixelStorei <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPixelStorei"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPixelStorei")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPixelStorei addr
                   else nonexistentPixelStorei
    refReadBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glReadBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glReadBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynReadBuffer addr
                   else nonexistentReadBuffer
    refReadPixels <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glReadPixels"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glReadPixels")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynReadPixels addr
                   else nonexistentReadPixels
    refGetBooleanv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBooleanv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBooleanv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBooleanv addr
                   else nonexistentGetBooleanv
    refGetDoublev <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetDoublev"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetDoublev")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetDoublev addr
                   else nonexistentGetDoublev
    refGetError <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetError"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetError")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetError addr
                   else nonexistentGetError
    refGetFloatv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFloatv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFloatv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFloatv addr
                   else nonexistentGetFloatv
    refGetIntegerv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetIntegerv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetIntegerv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetIntegerv addr
                   else nonexistentGetIntegerv
    refGetString <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetString"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetString")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetString addr
                   else nonexistentGetString
    refGetTexImage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexImage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexImage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexImage addr
                   else nonexistentGetTexImage
    refGetTexParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexParameterfv addr
                   else nonexistentGetTexParameterfv
    refGetTexParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexParameteriv addr
                   else nonexistentGetTexParameteriv
    refGetTexLevelParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexLevelParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexLevelParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexLevelParameterfv addr
                   else nonexistentGetTexLevelParameterfv
    refGetTexLevelParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexLevelParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexLevelParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexLevelParameteriv addr
                   else nonexistentGetTexLevelParameteriv
    refIsEnabled <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsEnabled"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsEnabled")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsEnabled addr
                   else nonexistentIsEnabled
    refDepthRange <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDepthRange"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDepthRange")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDepthRange addr
                   else nonexistentDepthRange
    refViewport <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glViewport"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glViewport")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynViewport addr
                   else nonexistentViewport

    -- GL_VERSION_1_1

    refDrawArrays <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawArrays"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawArrays")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawArrays addr
                   else nonexistentDrawArrays
    refDrawElements <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawElements"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawElements")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawElements addr
                   else nonexistentDrawElements
    refPolygonOffset <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPolygonOffset"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPolygonOffset")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPolygonOffset addr
                   else nonexistentPolygonOffset
    refCopyTexImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTexImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTexImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTexImage1D addr
                   else nonexistentCopyTexImage1D
    refCopyTexImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTexImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTexImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTexImage2D addr
                   else nonexistentCopyTexImage2D
    refCopyTexSubImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTexSubImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTexSubImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTexSubImage1D addr
                   else nonexistentCopyTexSubImage1D
    refCopyTexSubImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTexSubImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTexSubImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTexSubImage2D addr
                   else nonexistentCopyTexSubImage2D
    refTexSubImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexSubImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexSubImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexSubImage1D addr
                   else nonexistentTexSubImage1D
    refTexSubImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexSubImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexSubImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexSubImage2D addr
                   else nonexistentTexSubImage2D
    refBindTexture <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindTexture"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindTexture")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindTexture addr
                   else nonexistentBindTexture
    refDeleteTextures <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteTextures"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteTextures")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteTextures addr
                   else nonexistentDeleteTextures
    refGenTextures <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenTextures"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenTextures")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenTextures addr
                   else nonexistentGenTextures
    refIsTexture <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsTexture"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsTexture")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsTexture addr
                   else nonexistentIsTexture

    -- GL_VERSION_1_2

    refDrawRangeElements <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawRangeElements"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawRangeElements")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawRangeElements addr
                   else nonexistentDrawRangeElements
    refTexImage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexImage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexImage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexImage3D addr
                   else nonexistentTexImage3D
    refTexSubImage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexSubImage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexSubImage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexSubImage3D addr
                   else nonexistentTexSubImage3D
    refCopyTexSubImage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTexSubImage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTexSubImage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTexSubImage3D addr
                   else nonexistentCopyTexSubImage3D

    -- GL_VERSION_1_3

    refActiveTexture <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glActiveTexture"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glActiveTexture")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynActiveTexture addr
                   else nonexistentActiveTexture
    refSampleCoverage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSampleCoverage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSampleCoverage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSampleCoverage addr
                   else nonexistentSampleCoverage
    refCompressedTexImage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexImage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexImage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexImage3D addr
                   else nonexistentCompressedTexImage3D
    refCompressedTexImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexImage2D addr
                   else nonexistentCompressedTexImage2D
    refCompressedTexImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexImage1D addr
                   else nonexistentCompressedTexImage1D
    refCompressedTexSubImage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexSubImage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexSubImage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexSubImage3D addr
                   else nonexistentCompressedTexSubImage3D
    refCompressedTexSubImage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexSubImage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexSubImage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexSubImage2D addr
                   else nonexistentCompressedTexSubImage2D
    refCompressedTexSubImage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTexSubImage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTexSubImage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTexSubImage1D addr
                   else nonexistentCompressedTexSubImage1D
    refGetCompressedTexImage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetCompressedTexImage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetCompressedTexImage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetCompressedTexImage addr
                   else nonexistentGetCompressedTexImage

    -- GL_VERSION_1_4

    refBlendFuncSeparate <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlendFuncSeparate"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlendFuncSeparate")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlendFuncSeparate addr
                   else nonexistentBlendFuncSeparate
    refMultiDrawArrays <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiDrawArrays"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiDrawArrays")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiDrawArrays addr
                   else nonexistentMultiDrawArrays
    refMultiDrawElements <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiDrawElements"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiDrawElements")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiDrawElements addr
                   else nonexistentMultiDrawElements
    refPointParameterf <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPointParameterf"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPointParameterf")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPointParameterf addr
                   else nonexistentPointParameterf
    refPointParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPointParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPointParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPointParameterfv addr
                   else nonexistentPointParameterfv
    refPointParameteri <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPointParameteri"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPointParameteri")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPointParameteri addr
                   else nonexistentPointParameteri
    refPointParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPointParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPointParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPointParameteriv addr
                   else nonexistentPointParameteriv
    refBlendColor <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlendColor"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlendColor")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlendColor addr
                   else nonexistentBlendColor
    refBlendEquation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlendEquation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlendEquation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlendEquation addr
                   else nonexistentBlendEquation

    -- GL_VERSION_1_5

    refGenQueries <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenQueries"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenQueries")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenQueries addr
                   else nonexistentGenQueries
    refDeleteQueries <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteQueries"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteQueries")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteQueries addr
                   else nonexistentDeleteQueries
    refIsQuery <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsQuery"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsQuery")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsQuery addr
                   else nonexistentIsQuery
    refBeginQuery <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBeginQuery"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBeginQuery")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBeginQuery addr
                   else nonexistentBeginQuery
    refEndQuery <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEndQuery"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEndQuery")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEndQuery addr
                   else nonexistentEndQuery
    refGetQueryiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetQueryiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetQueryiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetQueryiv addr
                   else nonexistentGetQueryiv
    refGetQueryObjectiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetQueryObjectiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetQueryObjectiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetQueryObjectiv addr
                   else nonexistentGetQueryObjectiv
    refGetQueryObjectuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetQueryObjectuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetQueryObjectuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetQueryObjectuiv addr
                   else nonexistentGetQueryObjectuiv
    refBindBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindBuffer addr
                   else nonexistentBindBuffer
    refDeleteBuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteBuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteBuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteBuffers addr
                   else nonexistentDeleteBuffers
    refGenBuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenBuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenBuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenBuffers addr
                   else nonexistentGenBuffers
    refIsBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsBuffer addr
                   else nonexistentIsBuffer
    refBufferData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBufferData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBufferData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBufferData addr
                   else nonexistentBufferData
    refBufferSubData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBufferSubData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBufferSubData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBufferSubData addr
                   else nonexistentBufferSubData
    refGetBufferSubData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBufferSubData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBufferSubData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBufferSubData addr
                   else nonexistentGetBufferSubData
    refMapBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMapBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMapBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMapBuffer addr
                   else nonexistentMapBuffer
    refUnmapBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUnmapBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUnmapBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUnmapBuffer addr
                   else nonexistentUnmapBuffer
    refGetBufferParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBufferParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBufferParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBufferParameteriv addr
                   else nonexistentGetBufferParameteriv
    refGetBufferPointerv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBufferPointerv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBufferPointerv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBufferPointerv addr
                   else nonexistentGetBufferPointerv

    -- GL_VERSION_2_0

    refBlendEquationSeparate <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlendEquationSeparate"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlendEquationSeparate")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlendEquationSeparate addr
                   else nonexistentBlendEquationSeparate
    refDrawBuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawBuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawBuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawBuffers addr
                   else nonexistentDrawBuffers
    refStencilOpSeparate <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilOpSeparate"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilOpSeparate")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilOpSeparate addr
                   else nonexistentStencilOpSeparate
    refStencilFuncSeparate <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilFuncSeparate"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilFuncSeparate")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilFuncSeparate addr
                   else nonexistentStencilFuncSeparate
    refStencilMaskSeparate <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glStencilMaskSeparate"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glStencilMaskSeparate")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynStencilMaskSeparate addr
                   else nonexistentStencilMaskSeparate
    refAttachShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glAttachShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glAttachShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynAttachShader addr
                   else nonexistentAttachShader
    refBindAttribLocation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindAttribLocation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindAttribLocation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindAttribLocation addr
                   else nonexistentBindAttribLocation
    refCompileShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompileShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompileShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompileShader addr
                   else nonexistentCompileShader
    refCreateProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCreateProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCreateProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCreateProgram addr
                   else nonexistentCreateProgram
    refCreateShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCreateShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCreateShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCreateShader addr
                   else nonexistentCreateShader
    refDeleteProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteProgram addr
                   else nonexistentDeleteProgram
    refDeleteShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteShader addr
                   else nonexistentDeleteShader
    refDetachShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDetachShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDetachShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDetachShader addr
                   else nonexistentDetachShader
    refDisableVertexAttribArray <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableVertexAttribArray"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableVertexAttribArray")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableVertexAttribArray addr
                   else nonexistentDisableVertexAttribArray
    refEnableVertexAttribArray <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableVertexAttribArray"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableVertexAttribArray")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableVertexAttribArray addr
                   else nonexistentEnableVertexAttribArray
    refGetActiveAttrib <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveAttrib"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveAttrib")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveAttrib addr
                   else nonexistentGetActiveAttrib
    refGetActiveUniform <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveUniform"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveUniform")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveUniform addr
                   else nonexistentGetActiveUniform
    refGetAttachedShaders <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetAttachedShaders"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetAttachedShaders")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetAttachedShaders addr
                   else nonexistentGetAttachedShaders
    refGetAttribLocation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetAttribLocation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetAttribLocation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetAttribLocation addr
                   else nonexistentGetAttribLocation
    refGetProgramiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetProgramiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetProgramiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetProgramiv addr
                   else nonexistentGetProgramiv
    refGetProgramInfoLog <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetProgramInfoLog"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetProgramInfoLog")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetProgramInfoLog addr
                   else nonexistentGetProgramInfoLog
    refGetShaderiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetShaderiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetShaderiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetShaderiv addr
                   else nonexistentGetShaderiv
    refGetShaderInfoLog <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetShaderInfoLog"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetShaderInfoLog")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetShaderInfoLog addr
                   else nonexistentGetShaderInfoLog
    refGetShaderSource <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetShaderSource"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetShaderSource")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetShaderSource addr
                   else nonexistentGetShaderSource
    refGetUniformLocation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformLocation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformLocation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformLocation addr
                   else nonexistentGetUniformLocation
    refGetUniformfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformfv addr
                   else nonexistentGetUniformfv
    refGetUniformiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformiv addr
                   else nonexistentGetUniformiv
    refGetVertexAttribdv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribdv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribdv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribdv addr
                   else nonexistentGetVertexAttribdv
    refGetVertexAttribfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribfv addr
                   else nonexistentGetVertexAttribfv
    refGetVertexAttribiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribiv addr
                   else nonexistentGetVertexAttribiv
    refGetVertexAttribPointerv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribPointerv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribPointerv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribPointerv addr
                   else nonexistentGetVertexAttribPointerv
    refIsProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsProgram addr
                   else nonexistentIsProgram
    refIsShader <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsShader"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsShader")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsShader addr
                   else nonexistentIsShader
    refLinkProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glLinkProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glLinkProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynLinkProgram addr
                   else nonexistentLinkProgram
    refShaderSource <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glShaderSource"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glShaderSource")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynShaderSource addr
                   else nonexistentShaderSource
    refUseProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUseProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUseProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUseProgram addr
                   else nonexistentUseProgram
    refUniform1f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1f addr
                   else nonexistentUniform1f
    refUniform2f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2f addr
                   else nonexistentUniform2f
    refUniform3f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3f addr
                   else nonexistentUniform3f
    refUniform4f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4f addr
                   else nonexistentUniform4f
    refUniform1i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1i addr
                   else nonexistentUniform1i
    refUniform2i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2i addr
                   else nonexistentUniform2i
    refUniform3i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3i addr
                   else nonexistentUniform3i
    refUniform4i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4i addr
                   else nonexistentUniform4i
    refUniform1fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1fv addr
                   else nonexistentUniform1fv
    refUniform2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2fv addr
                   else nonexistentUniform2fv
    refUniform3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3fv addr
                   else nonexistentUniform3fv
    refUniform4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4fv addr
                   else nonexistentUniform4fv
    refUniform1iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1iv addr
                   else nonexistentUniform1iv
    refUniform2iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2iv addr
                   else nonexistentUniform2iv
    refUniform3iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3iv addr
                   else nonexistentUniform3iv
    refUniform4iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4iv addr
                   else nonexistentUniform4iv
    refUniformMatrix2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix2fv addr
                   else nonexistentUniformMatrix2fv
    refUniformMatrix3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix3fv addr
                   else nonexistentUniformMatrix3fv
    refUniformMatrix4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix4fv addr
                   else nonexistentUniformMatrix4fv
    refValidateProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glValidateProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glValidateProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynValidateProgram addr
                   else nonexistentValidateProgram
    refVertexAttrib1d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1d addr
                   else nonexistentVertexAttrib1d
    refVertexAttrib1dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1dv addr
                   else nonexistentVertexAttrib1dv
    refVertexAttrib1f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1f addr
                   else nonexistentVertexAttrib1f
    refVertexAttrib1fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1fv addr
                   else nonexistentVertexAttrib1fv
    refVertexAttrib1s <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1s"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1s")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1s addr
                   else nonexistentVertexAttrib1s
    refVertexAttrib1sv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib1sv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib1sv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib1sv addr
                   else nonexistentVertexAttrib1sv
    refVertexAttrib2d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2d addr
                   else nonexistentVertexAttrib2d
    refVertexAttrib2dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2dv addr
                   else nonexistentVertexAttrib2dv
    refVertexAttrib2f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2f addr
                   else nonexistentVertexAttrib2f
    refVertexAttrib2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2fv addr
                   else nonexistentVertexAttrib2fv
    refVertexAttrib2s <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2s"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2s")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2s addr
                   else nonexistentVertexAttrib2s
    refVertexAttrib2sv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib2sv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib2sv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib2sv addr
                   else nonexistentVertexAttrib2sv
    refVertexAttrib3d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3d addr
                   else nonexistentVertexAttrib3d
    refVertexAttrib3dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3dv addr
                   else nonexistentVertexAttrib3dv
    refVertexAttrib3f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3f addr
                   else nonexistentVertexAttrib3f
    refVertexAttrib3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3fv addr
                   else nonexistentVertexAttrib3fv
    refVertexAttrib3s <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3s"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3s")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3s addr
                   else nonexistentVertexAttrib3s
    refVertexAttrib3sv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib3sv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib3sv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib3sv addr
                   else nonexistentVertexAttrib3sv
    refVertexAttrib4Nbv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nbv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nbv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nbv addr
                   else nonexistentVertexAttrib4Nbv
    refVertexAttrib4Niv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Niv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Niv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Niv addr
                   else nonexistentVertexAttrib4Niv
    refVertexAttrib4Nsv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nsv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nsv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nsv addr
                   else nonexistentVertexAttrib4Nsv
    refVertexAttrib4Nub <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nub"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nub")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nub addr
                   else nonexistentVertexAttrib4Nub
    refVertexAttrib4Nubv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nubv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nubv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nubv addr
                   else nonexistentVertexAttrib4Nubv
    refVertexAttrib4Nuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nuiv addr
                   else nonexistentVertexAttrib4Nuiv
    refVertexAttrib4Nusv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4Nusv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4Nusv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4Nusv addr
                   else nonexistentVertexAttrib4Nusv
    refVertexAttrib4bv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4bv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4bv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4bv addr
                   else nonexistentVertexAttrib4bv
    refVertexAttrib4d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4d addr
                   else nonexistentVertexAttrib4d
    refVertexAttrib4dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4dv addr
                   else nonexistentVertexAttrib4dv
    refVertexAttrib4f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4f addr
                   else nonexistentVertexAttrib4f
    refVertexAttrib4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4fv addr
                   else nonexistentVertexAttrib4fv
    refVertexAttrib4iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4iv addr
                   else nonexistentVertexAttrib4iv
    refVertexAttrib4s <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4s"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4s")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4s addr
                   else nonexistentVertexAttrib4s
    refVertexAttrib4sv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4sv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4sv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4sv addr
                   else nonexistentVertexAttrib4sv
    refVertexAttrib4ubv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4ubv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4ubv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4ubv addr
                   else nonexistentVertexAttrib4ubv
    refVertexAttrib4uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4uiv addr
                   else nonexistentVertexAttrib4uiv
    refVertexAttrib4usv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttrib4usv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttrib4usv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttrib4usv addr
                   else nonexistentVertexAttrib4usv
    refVertexAttribPointer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribPointer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribPointer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribPointer addr
                   else nonexistentVertexAttribPointer

    -- GL_VERSION_2_1

    refUniformMatrix2x3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix2x3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix2x3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix2x3fv addr
                   else nonexistentUniformMatrix2x3fv
    refUniformMatrix3x2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix3x2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix3x2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix3x2fv addr
                   else nonexistentUniformMatrix3x2fv
    refUniformMatrix2x4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix2x4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix2x4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix2x4fv addr
                   else nonexistentUniformMatrix2x4fv
    refUniformMatrix4x2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix4x2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix4x2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix4x2fv addr
                   else nonexistentUniformMatrix4x2fv
    refUniformMatrix3x4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix3x4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix3x4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix3x4fv addr
                   else nonexistentUniformMatrix3x4fv
    refUniformMatrix4x3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformMatrix4x3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformMatrix4x3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformMatrix4x3fv addr
                   else nonexistentUniformMatrix4x3fv

    -- GL_VERSION_3_0

    refColorMaski <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glColorMaski"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glColorMaski")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynColorMaski addr
                   else nonexistentColorMaski
    refGetBooleani_v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBooleani_v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBooleani_v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBooleani_v addr
                   else nonexistentGetBooleani_v
    refGetIntegeri_v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetIntegeri_v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetIntegeri_v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetIntegeri_v addr
                   else nonexistentGetIntegeri_v
    refEnablei <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnablei"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnablei")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnablei addr
                   else nonexistentEnablei
    refDisablei <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisablei"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisablei")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisablei addr
                   else nonexistentDisablei
    refIsEnabledi <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsEnabledi"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsEnabledi")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsEnabledi addr
                   else nonexistentIsEnabledi
    refBeginTransformFeedback <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBeginTransformFeedback"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBeginTransformFeedback")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBeginTransformFeedback addr
                   else nonexistentBeginTransformFeedback
    refEndTransformFeedback <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEndTransformFeedback"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEndTransformFeedback")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEndTransformFeedback addr
                   else nonexistentEndTransformFeedback
    refBindBufferRange <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindBufferRange"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindBufferRange")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindBufferRange addr
                   else nonexistentBindBufferRange
    refBindBufferBase <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindBufferBase"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindBufferBase")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindBufferBase addr
                   else nonexistentBindBufferBase
    refTransformFeedbackVaryings <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTransformFeedbackVaryings"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTransformFeedbackVaryings")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTransformFeedbackVaryings addr
                   else nonexistentTransformFeedbackVaryings
    refGetTransformFeedbackVarying <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTransformFeedbackVarying"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTransformFeedbackVarying")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTransformFeedbackVarying addr
                   else nonexistentGetTransformFeedbackVarying
    refClampColor <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClampColor"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClampColor")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClampColor addr
                   else nonexistentClampColor
    refBeginConditionalRender <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBeginConditionalRender"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBeginConditionalRender")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBeginConditionalRender addr
                   else nonexistentBeginConditionalRender
    refEndConditionalRender <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEndConditionalRender"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEndConditionalRender")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEndConditionalRender addr
                   else nonexistentEndConditionalRender
    refVertexAttribIPointer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribIPointer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribIPointer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribIPointer addr
                   else nonexistentVertexAttribIPointer
    refGetVertexAttribIiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribIiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribIiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribIiv addr
                   else nonexistentGetVertexAttribIiv
    refGetVertexAttribIuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexAttribIuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexAttribIuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexAttribIuiv addr
                   else nonexistentGetVertexAttribIuiv
    refVertexAttribI1i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI1i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI1i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI1i addr
                   else nonexistentVertexAttribI1i
    refVertexAttribI2i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI2i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI2i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI2i addr
                   else nonexistentVertexAttribI2i
    refVertexAttribI3i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI3i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI3i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI3i addr
                   else nonexistentVertexAttribI3i
    refVertexAttribI4i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4i addr
                   else nonexistentVertexAttribI4i
    refVertexAttribI1ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI1ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI1ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI1ui addr
                   else nonexistentVertexAttribI1ui
    refVertexAttribI2ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI2ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI2ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI2ui addr
                   else nonexistentVertexAttribI2ui
    refVertexAttribI3ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI3ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI3ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI3ui addr
                   else nonexistentVertexAttribI3ui
    refVertexAttribI4ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4ui addr
                   else nonexistentVertexAttribI4ui
    refVertexAttribI1iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI1iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI1iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI1iv addr
                   else nonexistentVertexAttribI1iv
    refVertexAttribI2iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI2iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI2iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI2iv addr
                   else nonexistentVertexAttribI2iv
    refVertexAttribI3iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI3iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI3iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI3iv addr
                   else nonexistentVertexAttribI3iv
    refVertexAttribI4iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4iv addr
                   else nonexistentVertexAttribI4iv
    refVertexAttribI1uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI1uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI1uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI1uiv addr
                   else nonexistentVertexAttribI1uiv
    refVertexAttribI2uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI2uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI2uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI2uiv addr
                   else nonexistentVertexAttribI2uiv
    refVertexAttribI3uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI3uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI3uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI3uiv addr
                   else nonexistentVertexAttribI3uiv
    refVertexAttribI4uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4uiv addr
                   else nonexistentVertexAttribI4uiv
    refVertexAttribI4bv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4bv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4bv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4bv addr
                   else nonexistentVertexAttribI4bv
    refVertexAttribI4sv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4sv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4sv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4sv addr
                   else nonexistentVertexAttribI4sv
    refVertexAttribI4ubv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4ubv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4ubv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4ubv addr
                   else nonexistentVertexAttribI4ubv
    refVertexAttribI4usv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribI4usv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribI4usv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribI4usv addr
                   else nonexistentVertexAttribI4usv
    refGetUniformuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformuiv addr
                   else nonexistentGetUniformuiv
    refBindFragDataLocation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindFragDataLocation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindFragDataLocation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindFragDataLocation addr
                   else nonexistentBindFragDataLocation
    refGetFragDataLocation <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFragDataLocation"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFragDataLocation")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFragDataLocation addr
                   else nonexistentGetFragDataLocation
    refUniform1ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1ui addr
                   else nonexistentUniform1ui
    refUniform2ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2ui addr
                   else nonexistentUniform2ui
    refUniform3ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3ui addr
                   else nonexistentUniform3ui
    refUniform4ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4ui addr
                   else nonexistentUniform4ui
    refUniform1uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform1uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform1uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform1uiv addr
                   else nonexistentUniform1uiv
    refUniform2uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform2uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform2uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform2uiv addr
                   else nonexistentUniform2uiv
    refUniform3uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform3uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform3uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform3uiv addr
                   else nonexistentUniform3uiv
    refUniform4uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniform4uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniform4uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniform4uiv addr
                   else nonexistentUniform4uiv
    refTexParameterIiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameterIiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameterIiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameterIiv addr
                   else nonexistentTexParameterIiv
    refTexParameterIuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexParameterIuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexParameterIuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexParameterIuiv addr
                   else nonexistentTexParameterIuiv
    refGetTexParameterIiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexParameterIiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexParameterIiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexParameterIiv addr
                   else nonexistentGetTexParameterIiv
    refGetTexParameterIuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTexParameterIuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTexParameterIuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTexParameterIuiv addr
                   else nonexistentGetTexParameterIuiv
    refClearBufferiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearBufferiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearBufferiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearBufferiv addr
                   else nonexistentClearBufferiv
    refClearBufferuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearBufferuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearBufferuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearBufferuiv addr
                   else nonexistentClearBufferuiv
    refClearBufferfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearBufferfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearBufferfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearBufferfv addr
                   else nonexistentClearBufferfv
    refClearBufferfi <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearBufferfi"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearBufferfi")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearBufferfi addr
                   else nonexistentClearBufferfi
    refGetStringi <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetStringi"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetStringi")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetStringi addr
                   else nonexistentGetStringi
    refIsRenderbuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsRenderbuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsRenderbuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsRenderbuffer addr
                   else nonexistentIsRenderbuffer
    refBindRenderbuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindRenderbuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindRenderbuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindRenderbuffer addr
                   else nonexistentBindRenderbuffer
    refDeleteRenderbuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteRenderbuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteRenderbuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteRenderbuffers addr
                   else nonexistentDeleteRenderbuffers
    refGenRenderbuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenRenderbuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenRenderbuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenRenderbuffers addr
                   else nonexistentGenRenderbuffers
    refRenderbufferStorage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glRenderbufferStorage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glRenderbufferStorage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynRenderbufferStorage addr
                   else nonexistentRenderbufferStorage
    refGetRenderbufferParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetRenderbufferParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetRenderbufferParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetRenderbufferParameteriv addr
                   else nonexistentGetRenderbufferParameteriv
    refIsFramebuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsFramebuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsFramebuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsFramebuffer addr
                   else nonexistentIsFramebuffer
    refBindFramebuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindFramebuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindFramebuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindFramebuffer addr
                   else nonexistentBindFramebuffer
    refDeleteFramebuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteFramebuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteFramebuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteFramebuffers addr
                   else nonexistentDeleteFramebuffers
    refGenFramebuffers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenFramebuffers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenFramebuffers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenFramebuffers addr
                   else nonexistentGenFramebuffers
    refCheckFramebufferStatus <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCheckFramebufferStatus"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCheckFramebufferStatus")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCheckFramebufferStatus addr
                   else nonexistentCheckFramebufferStatus
    refFramebufferTexture1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferTexture1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferTexture1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferTexture1D addr
                   else nonexistentFramebufferTexture1D
    refFramebufferTexture2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferTexture2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferTexture2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferTexture2D addr
                   else nonexistentFramebufferTexture2D
    refFramebufferTexture3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferTexture3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferTexture3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferTexture3D addr
                   else nonexistentFramebufferTexture3D
    refFramebufferRenderbuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferRenderbuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferRenderbuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferRenderbuffer addr
                   else nonexistentFramebufferRenderbuffer
    refGetFramebufferAttachmentParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFramebufferAttachmentParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFramebufferAttachmentParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFramebufferAttachmentParameteriv addr
                   else nonexistentGetFramebufferAttachmentParameteriv
    refGenerateMipmap <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenerateMipmap"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenerateMipmap")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenerateMipmap addr
                   else nonexistentGenerateMipmap
    refBlitFramebuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBlitFramebuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBlitFramebuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBlitFramebuffer addr
                   else nonexistentBlitFramebuffer
    refRenderbufferStorageMultisample <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glRenderbufferStorageMultisample"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glRenderbufferStorageMultisample")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynRenderbufferStorageMultisample addr
                   else nonexistentRenderbufferStorageMultisample
    refFramebufferTextureLayer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferTextureLayer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferTextureLayer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferTextureLayer addr
                   else nonexistentFramebufferTextureLayer
    refMapBufferRange <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMapBufferRange"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMapBufferRange")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMapBufferRange addr
                   else nonexistentMapBufferRange
    refFlushMappedBufferRange <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFlushMappedBufferRange"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFlushMappedBufferRange")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFlushMappedBufferRange addr
                   else nonexistentFlushMappedBufferRange
    refBindVertexArray <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindVertexArray"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindVertexArray")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindVertexArray addr
                   else nonexistentBindVertexArray
    refDeleteVertexArrays <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteVertexArrays"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteVertexArrays")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteVertexArrays addr
                   else nonexistentDeleteVertexArrays
    refGenVertexArrays <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenVertexArrays"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenVertexArrays")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenVertexArrays addr
                   else nonexistentGenVertexArrays
    refIsVertexArray <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsVertexArray"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsVertexArray")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsVertexArray addr
                   else nonexistentIsVertexArray

    -- GL_VERSION_3_1

    refDrawArraysInstanced <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawArraysInstanced"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawArraysInstanced")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawArraysInstanced addr
                   else nonexistentDrawArraysInstanced
    refDrawElementsInstanced <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawElementsInstanced"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawElementsInstanced")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawElementsInstanced addr
                   else nonexistentDrawElementsInstanced
    refTexBuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexBuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexBuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexBuffer addr
                   else nonexistentTexBuffer
    refPrimitiveRestartIndex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPrimitiveRestartIndex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPrimitiveRestartIndex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPrimitiveRestartIndex addr
                   else nonexistentPrimitiveRestartIndex
    refCopyBufferSubData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyBufferSubData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyBufferSubData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyBufferSubData addr
                   else nonexistentCopyBufferSubData
    refGetUniformIndices <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformIndices"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformIndices")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformIndices addr
                   else nonexistentGetUniformIndices
    refGetActiveUniformsiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveUniformsiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveUniformsiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveUniformsiv addr
                   else nonexistentGetActiveUniformsiv
    refGetActiveUniformName <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveUniformName"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveUniformName")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveUniformName addr
                   else nonexistentGetActiveUniformName
    refGetUniformBlockIndex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetUniformBlockIndex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetUniformBlockIndex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetUniformBlockIndex addr
                   else nonexistentGetUniformBlockIndex
    refGetActiveUniformBlockiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveUniformBlockiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveUniformBlockiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveUniformBlockiv addr
                   else nonexistentGetActiveUniformBlockiv
    refGetActiveUniformBlockName <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetActiveUniformBlockName"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetActiveUniformBlockName")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetActiveUniformBlockName addr
                   else nonexistentGetActiveUniformBlockName
    refUniformBlockBinding <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUniformBlockBinding"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUniformBlockBinding")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUniformBlockBinding addr
                   else nonexistentUniformBlockBinding

    -- GL_VERSION_3_2

    refDrawElementsBaseVertex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawElementsBaseVertex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawElementsBaseVertex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawElementsBaseVertex addr
                   else nonexistentDrawElementsBaseVertex
    refDrawRangeElementsBaseVertex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawRangeElementsBaseVertex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawRangeElementsBaseVertex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawRangeElementsBaseVertex addr
                   else nonexistentDrawRangeElementsBaseVertex
    refDrawElementsInstancedBaseVertex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDrawElementsInstancedBaseVertex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDrawElementsInstancedBaseVertex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDrawElementsInstancedBaseVertex addr
                   else nonexistentDrawElementsInstancedBaseVertex
    refMultiDrawElementsBaseVertex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiDrawElementsBaseVertex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiDrawElementsBaseVertex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiDrawElementsBaseVertex addr
                   else nonexistentMultiDrawElementsBaseVertex
    refProvokingVertex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProvokingVertex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProvokingVertex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProvokingVertex addr
                   else nonexistentProvokingVertex
    refFenceSync <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFenceSync"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFenceSync")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFenceSync addr
                   else nonexistentFenceSync
    refIsSync <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsSync"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsSync")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsSync addr
                   else nonexistentIsSync
    refDeleteSync <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteSync"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteSync")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteSync addr
                   else nonexistentDeleteSync
    refClientWaitSync <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClientWaitSync"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClientWaitSync")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClientWaitSync addr
                   else nonexistentClientWaitSync
    refWaitSync <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glWaitSync"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glWaitSync")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynWaitSync addr
                   else nonexistentWaitSync
    refGetInteger64v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetInteger64v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetInteger64v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetInteger64v addr
                   else nonexistentGetInteger64v
    refGetSynciv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetSynciv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetSynciv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetSynciv addr
                   else nonexistentGetSynciv
    refGetInteger64i_v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetInteger64i_v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetInteger64i_v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetInteger64i_v addr
                   else nonexistentGetInteger64i_v
    refGetBufferParameteri64v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBufferParameteri64v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBufferParameteri64v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBufferParameteri64v addr
                   else nonexistentGetBufferParameteri64v
    refFramebufferTexture <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferTexture"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferTexture")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferTexture addr
                   else nonexistentFramebufferTexture
    refTexImage2DMultisample <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexImage2DMultisample"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexImage2DMultisample")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexImage2DMultisample addr
                   else nonexistentTexImage2DMultisample
    refTexImage3DMultisample <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexImage3DMultisample"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexImage3DMultisample")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexImage3DMultisample addr
                   else nonexistentTexImage3DMultisample
    refGetMultisamplefv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultisamplefv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultisamplefv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultisamplefv addr
                   else nonexistentGetMultisamplefv
    refSampleMaski <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSampleMaski"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSampleMaski")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSampleMaski addr
                   else nonexistentSampleMaski

    -- GL_VERSION_3_3

    refBindFragDataLocationIndexed <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindFragDataLocationIndexed"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindFragDataLocationIndexed")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindFragDataLocationIndexed addr
                   else nonexistentBindFragDataLocationIndexed
    refGetFragDataIndex <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFragDataIndex"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFragDataIndex")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFragDataIndex addr
                   else nonexistentGetFragDataIndex
    refGenSamplers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenSamplers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenSamplers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenSamplers addr
                   else nonexistentGenSamplers
    refDeleteSamplers <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteSamplers"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteSamplers")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteSamplers addr
                   else nonexistentDeleteSamplers
    refIsSampler <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsSampler"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsSampler")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsSampler addr
                   else nonexistentIsSampler
    refBindSampler <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindSampler"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindSampler")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindSampler addr
                   else nonexistentBindSampler
    refSamplerParameteri <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameteri"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameteri")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameteri addr
                   else nonexistentSamplerParameteri
    refSamplerParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameteriv addr
                   else nonexistentSamplerParameteriv
    refSamplerParameterf <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameterf"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameterf")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameterf addr
                   else nonexistentSamplerParameterf
    refSamplerParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameterfv addr
                   else nonexistentSamplerParameterfv
    refSamplerParameterIiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameterIiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameterIiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameterIiv addr
                   else nonexistentSamplerParameterIiv
    refSamplerParameterIuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glSamplerParameterIuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glSamplerParameterIuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynSamplerParameterIuiv addr
                   else nonexistentSamplerParameterIuiv
    refGetSamplerParameteriv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetSamplerParameteriv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetSamplerParameteriv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetSamplerParameteriv addr
                   else nonexistentGetSamplerParameteriv
    refGetSamplerParameterIiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetSamplerParameterIiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetSamplerParameterIiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetSamplerParameterIiv addr
                   else nonexistentGetSamplerParameterIiv
    refGetSamplerParameterfv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetSamplerParameterfv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetSamplerParameterfv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetSamplerParameterfv addr
                   else nonexistentGetSamplerParameterfv
    refGetSamplerParameterIuiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetSamplerParameterIuiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetSamplerParameterIuiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetSamplerParameterIuiv addr
                   else nonexistentGetSamplerParameterIuiv
    refQueryCounter <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glQueryCounter"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glQueryCounter")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynQueryCounter addr
                   else nonexistentQueryCounter
    refGetQueryObjecti64v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetQueryObjecti64v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetQueryObjecti64v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetQueryObjecti64v addr
                   else nonexistentGetQueryObjecti64v
    refGetQueryObjectui64v <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetQueryObjectui64v"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetQueryObjectui64v")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetQueryObjectui64v addr
                   else nonexistentGetQueryObjectui64v
    refVertexAttribDivisor <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribDivisor"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribDivisor")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribDivisor addr
                   else nonexistentVertexAttribDivisor
    refVertexAttribP1ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP1ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP1ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP1ui addr
                   else nonexistentVertexAttribP1ui
    refVertexAttribP1uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP1uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP1uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP1uiv addr
                   else nonexistentVertexAttribP1uiv
    refVertexAttribP2ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP2ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP2ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP2ui addr
                   else nonexistentVertexAttribP2ui
    refVertexAttribP2uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP2uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP2uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP2uiv addr
                   else nonexistentVertexAttribP2uiv
    refVertexAttribP3ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP3ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP3ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP3ui addr
                   else nonexistentVertexAttribP3ui
    refVertexAttribP3uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP3uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP3uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP3uiv addr
                   else nonexistentVertexAttribP3uiv
    refVertexAttribP4ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP4ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP4ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP4ui addr
                   else nonexistentVertexAttribP4ui
    refVertexAttribP4uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexAttribP4uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexAttribP4uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexAttribP4uiv addr
                   else nonexistentVertexAttribP4uiv

    -- GL_ARB_texture_storage

    refTexStorage1D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexStorage1D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexStorage1D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexStorage1D addr
                   else nonexistentTexStorage1D
    refTexStorage2D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexStorage2D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexStorage2D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexStorage2D addr
                   else nonexistentTexStorage2D
    refTexStorage3D <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexStorage3D"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexStorage3D")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexStorage3D addr
                   else nonexistentTexStorage3D

    -- GL_KHR_debug

    refDebugMessageControl <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageControl"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageControl")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageControl addr
                   else nonexistentDebugMessageControl
    refDebugMessageInsert <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageInsert"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageInsert")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageInsert addr
                   else nonexistentDebugMessageInsert
    refDebugMessageCallback <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageCallback"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageCallback")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageCallback addr
                   else nonexistentDebugMessageCallback
    refGetDebugMessageLog <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetDebugMessageLog"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetDebugMessageLog")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetDebugMessageLog addr
                   else nonexistentGetDebugMessageLog
    refPushDebugGroup <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPushDebugGroup"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPushDebugGroup")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPushDebugGroup addr
                   else nonexistentPushDebugGroup
    refPopDebugGroup <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPopDebugGroup"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPopDebugGroup")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPopDebugGroup addr
                   else nonexistentPopDebugGroup
    refObjectLabel <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glObjectLabel"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glObjectLabel")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynObjectLabel addr
                   else nonexistentObjectLabel
    refGetObjectLabel <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetObjectLabel"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetObjectLabel")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetObjectLabel addr
                   else nonexistentGetObjectLabel
    refObjectPtrLabel <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glObjectPtrLabel"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glObjectPtrLabel")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynObjectPtrLabel addr
                   else nonexistentObjectPtrLabel
    refGetObjectPtrLabel <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetObjectPtrLabel"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetObjectPtrLabel")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetObjectPtrLabel addr
                   else nonexistentGetObjectPtrLabel
    refGetPointerv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetPointerv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetPointerv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetPointerv addr
                   else nonexistentGetPointerv
    refDebugMessageControlKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageControlKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageControlKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageControlKHR addr
                   else nonexistentDebugMessageControlKHR
    refDebugMessageInsertKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageInsertKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageInsertKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageInsertKHR addr
                   else nonexistentDebugMessageInsertKHR
    refDebugMessageCallbackKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDebugMessageCallbackKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDebugMessageCallbackKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDebugMessageCallbackKHR addr
                   else nonexistentDebugMessageCallbackKHR
    refGetDebugMessageLogKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetDebugMessageLogKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetDebugMessageLogKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetDebugMessageLogKHR addr
                   else nonexistentGetDebugMessageLogKHR
    refPushDebugGroupKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPushDebugGroupKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPushDebugGroupKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPushDebugGroupKHR addr
                   else nonexistentPushDebugGroupKHR
    refPopDebugGroupKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPopDebugGroupKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPopDebugGroupKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPopDebugGroupKHR addr
                   else nonexistentPopDebugGroupKHR
    refObjectLabelKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glObjectLabelKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glObjectLabelKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynObjectLabelKHR addr
                   else nonexistentObjectLabelKHR
    refGetObjectLabelKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetObjectLabelKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetObjectLabelKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetObjectLabelKHR addr
                   else nonexistentGetObjectLabelKHR
    refObjectPtrLabelKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glObjectPtrLabelKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glObjectPtrLabelKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynObjectPtrLabelKHR addr
                   else nonexistentObjectPtrLabelKHR
    refGetObjectPtrLabelKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetObjectPtrLabelKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetObjectPtrLabelKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetObjectPtrLabelKHR addr
                   else nonexistentGetObjectPtrLabelKHR
    refGetPointervKHR <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetPointervKHR"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetPointervKHR")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetPointervKHR addr
                   else nonexistentGetPointervKHR

    -- GL_EXT_direct_state_access

    refMatrixLoadfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixLoadfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixLoadfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixLoadfEXT addr
                   else nonexistentMatrixLoadfEXT
    refMatrixLoaddEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixLoaddEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixLoaddEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixLoaddEXT addr
                   else nonexistentMatrixLoaddEXT
    refMatrixMultfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixMultfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixMultfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixMultfEXT addr
                   else nonexistentMatrixMultfEXT
    refMatrixMultdEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixMultdEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixMultdEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixMultdEXT addr
                   else nonexistentMatrixMultdEXT
    refMatrixLoadIdentityEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixLoadIdentityEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixLoadIdentityEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixLoadIdentityEXT addr
                   else nonexistentMatrixLoadIdentityEXT
    refMatrixRotatefEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixRotatefEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixRotatefEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixRotatefEXT addr
                   else nonexistentMatrixRotatefEXT
    refMatrixRotatedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixRotatedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixRotatedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixRotatedEXT addr
                   else nonexistentMatrixRotatedEXT
    refMatrixScalefEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixScalefEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixScalefEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixScalefEXT addr
                   else nonexistentMatrixScalefEXT
    refMatrixScaledEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixScaledEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixScaledEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixScaledEXT addr
                   else nonexistentMatrixScaledEXT
    refMatrixTranslatefEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixTranslatefEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixTranslatefEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixTranslatefEXT addr
                   else nonexistentMatrixTranslatefEXT
    refMatrixTranslatedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixTranslatedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixTranslatedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixTranslatedEXT addr
                   else nonexistentMatrixTranslatedEXT
    refMatrixFrustumEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixFrustumEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixFrustumEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixFrustumEXT addr
                   else nonexistentMatrixFrustumEXT
    refMatrixOrthoEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixOrthoEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixOrthoEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixOrthoEXT addr
                   else nonexistentMatrixOrthoEXT
    refMatrixPopEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixPopEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixPopEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixPopEXT addr
                   else nonexistentMatrixPopEXT
    refMatrixPushEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixPushEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixPushEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixPushEXT addr
                   else nonexistentMatrixPushEXT
    refClientAttribDefaultEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClientAttribDefaultEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClientAttribDefaultEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClientAttribDefaultEXT addr
                   else nonexistentClientAttribDefaultEXT
    refPushClientAttribDefaultEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glPushClientAttribDefaultEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glPushClientAttribDefaultEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynPushClientAttribDefaultEXT addr
                   else nonexistentPushClientAttribDefaultEXT
    refTextureParameterfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameterfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameterfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameterfEXT addr
                   else nonexistentTextureParameterfEXT
    refTextureParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameterfvEXT addr
                   else nonexistentTextureParameterfvEXT
    refTextureParameteriEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameteriEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameteriEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameteriEXT addr
                   else nonexistentTextureParameteriEXT
    refTextureParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameterivEXT addr
                   else nonexistentTextureParameterivEXT
    refTextureImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureImage1DEXT addr
                   else nonexistentTextureImage1DEXT
    refTextureImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureImage2DEXT addr
                   else nonexistentTextureImage2DEXT
    refTextureSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureSubImage1DEXT addr
                   else nonexistentTextureSubImage1DEXT
    refTextureSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureSubImage2DEXT addr
                   else nonexistentTextureSubImage2DEXT
    refCopyTextureImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTextureImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTextureImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTextureImage1DEXT addr
                   else nonexistentCopyTextureImage1DEXT
    refCopyTextureImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTextureImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTextureImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTextureImage2DEXT addr
                   else nonexistentCopyTextureImage2DEXT
    refCopyTextureSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTextureSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTextureSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTextureSubImage1DEXT addr
                   else nonexistentCopyTextureSubImage1DEXT
    refCopyTextureSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTextureSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTextureSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTextureSubImage2DEXT addr
                   else nonexistentCopyTextureSubImage2DEXT
    refGetTextureImageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureImageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureImageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureImageEXT addr
                   else nonexistentGetTextureImageEXT
    refGetTextureParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureParameterfvEXT addr
                   else nonexistentGetTextureParameterfvEXT
    refGetTextureParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureParameterivEXT addr
                   else nonexistentGetTextureParameterivEXT
    refGetTextureLevelParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureLevelParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureLevelParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureLevelParameterfvEXT addr
                   else nonexistentGetTextureLevelParameterfvEXT
    refGetTextureLevelParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureLevelParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureLevelParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureLevelParameterivEXT addr
                   else nonexistentGetTextureLevelParameterivEXT
    refTextureImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureImage3DEXT addr
                   else nonexistentTextureImage3DEXT
    refTextureSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureSubImage3DEXT addr
                   else nonexistentTextureSubImage3DEXT
    refCopyTextureSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyTextureSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyTextureSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyTextureSubImage3DEXT addr
                   else nonexistentCopyTextureSubImage3DEXT
    refBindMultiTextureEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindMultiTextureEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindMultiTextureEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindMultiTextureEXT addr
                   else nonexistentBindMultiTextureEXT
    refMultiTexCoordPointerEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexCoordPointerEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexCoordPointerEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexCoordPointerEXT addr
                   else nonexistentMultiTexCoordPointerEXT
    refMultiTexEnvfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexEnvfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexEnvfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexEnvfEXT addr
                   else nonexistentMultiTexEnvfEXT
    refMultiTexEnvfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexEnvfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexEnvfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexEnvfvEXT addr
                   else nonexistentMultiTexEnvfvEXT
    refMultiTexEnviEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexEnviEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexEnviEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexEnviEXT addr
                   else nonexistentMultiTexEnviEXT
    refMultiTexEnvivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexEnvivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexEnvivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexEnvivEXT addr
                   else nonexistentMultiTexEnvivEXT
    refMultiTexGendEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGendEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGendEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGendEXT addr
                   else nonexistentMultiTexGendEXT
    refMultiTexGendvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGendvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGendvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGendvEXT addr
                   else nonexistentMultiTexGendvEXT
    refMultiTexGenfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGenfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGenfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGenfEXT addr
                   else nonexistentMultiTexGenfEXT
    refMultiTexGenfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGenfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGenfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGenfvEXT addr
                   else nonexistentMultiTexGenfvEXT
    refMultiTexGeniEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGeniEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGeniEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGeniEXT addr
                   else nonexistentMultiTexGeniEXT
    refMultiTexGenivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexGenivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexGenivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexGenivEXT addr
                   else nonexistentMultiTexGenivEXT
    refGetMultiTexEnvfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexEnvfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexEnvfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexEnvfvEXT addr
                   else nonexistentGetMultiTexEnvfvEXT
    refGetMultiTexEnvivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexEnvivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexEnvivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexEnvivEXT addr
                   else nonexistentGetMultiTexEnvivEXT
    refGetMultiTexGendvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexGendvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexGendvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexGendvEXT addr
                   else nonexistentGetMultiTexGendvEXT
    refGetMultiTexGenfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexGenfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexGenfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexGenfvEXT addr
                   else nonexistentGetMultiTexGenfvEXT
    refGetMultiTexGenivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexGenivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexGenivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexGenivEXT addr
                   else nonexistentGetMultiTexGenivEXT
    refMultiTexParameteriEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameteriEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameteriEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameteriEXT addr
                   else nonexistentMultiTexParameteriEXT
    refMultiTexParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameterivEXT addr
                   else nonexistentMultiTexParameterivEXT
    refMultiTexParameterfEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameterfEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameterfEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameterfEXT addr
                   else nonexistentMultiTexParameterfEXT
    refMultiTexParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameterfvEXT addr
                   else nonexistentMultiTexParameterfvEXT
    refMultiTexImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexImage1DEXT addr
                   else nonexistentMultiTexImage1DEXT
    refMultiTexImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexImage2DEXT addr
                   else nonexistentMultiTexImage2DEXT
    refMultiTexSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexSubImage1DEXT addr
                   else nonexistentMultiTexSubImage1DEXT
    refMultiTexSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexSubImage2DEXT addr
                   else nonexistentMultiTexSubImage2DEXT
    refCopyMultiTexImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyMultiTexImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyMultiTexImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyMultiTexImage1DEXT addr
                   else nonexistentCopyMultiTexImage1DEXT
    refCopyMultiTexImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyMultiTexImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyMultiTexImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyMultiTexImage2DEXT addr
                   else nonexistentCopyMultiTexImage2DEXT
    refCopyMultiTexSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyMultiTexSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyMultiTexSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyMultiTexSubImage1DEXT addr
                   else nonexistentCopyMultiTexSubImage1DEXT
    refCopyMultiTexSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyMultiTexSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyMultiTexSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyMultiTexSubImage2DEXT addr
                   else nonexistentCopyMultiTexSubImage2DEXT
    refGetMultiTexImageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexImageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexImageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexImageEXT addr
                   else nonexistentGetMultiTexImageEXT
    refGetMultiTexParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexParameterfvEXT addr
                   else nonexistentGetMultiTexParameterfvEXT
    refGetMultiTexParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexParameterivEXT addr
                   else nonexistentGetMultiTexParameterivEXT
    refGetMultiTexLevelParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexLevelParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexLevelParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexLevelParameterfvEXT addr
                   else nonexistentGetMultiTexLevelParameterfvEXT
    refGetMultiTexLevelParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexLevelParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexLevelParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexLevelParameterivEXT addr
                   else nonexistentGetMultiTexLevelParameterivEXT
    refMultiTexImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexImage3DEXT addr
                   else nonexistentMultiTexImage3DEXT
    refMultiTexSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexSubImage3DEXT addr
                   else nonexistentMultiTexSubImage3DEXT
    refCopyMultiTexSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCopyMultiTexSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCopyMultiTexSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCopyMultiTexSubImage3DEXT addr
                   else nonexistentCopyMultiTexSubImage3DEXT
    refEnableClientStateIndexedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableClientStateIndexedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableClientStateIndexedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableClientStateIndexedEXT addr
                   else nonexistentEnableClientStateIndexedEXT
    refDisableClientStateIndexedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableClientStateIndexedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableClientStateIndexedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableClientStateIndexedEXT addr
                   else nonexistentDisableClientStateIndexedEXT
    refGetFloatIndexedvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFloatIndexedvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFloatIndexedvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFloatIndexedvEXT addr
                   else nonexistentGetFloatIndexedvEXT
    refGetDoubleIndexedvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetDoubleIndexedvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetDoubleIndexedvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetDoubleIndexedvEXT addr
                   else nonexistentGetDoubleIndexedvEXT
    refGetPointerIndexedvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetPointerIndexedvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetPointerIndexedvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetPointerIndexedvEXT addr
                   else nonexistentGetPointerIndexedvEXT
    refEnableIndexedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableIndexedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableIndexedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableIndexedEXT addr
                   else nonexistentEnableIndexedEXT
    refDisableIndexedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableIndexedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableIndexedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableIndexedEXT addr
                   else nonexistentDisableIndexedEXT
    refIsEnabledIndexedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsEnabledIndexedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsEnabledIndexedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsEnabledIndexedEXT addr
                   else nonexistentIsEnabledIndexedEXT
    refGetIntegerIndexedvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetIntegerIndexedvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetIntegerIndexedvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetIntegerIndexedvEXT addr
                   else nonexistentGetIntegerIndexedvEXT
    refGetBooleanIndexedvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetBooleanIndexedvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetBooleanIndexedvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetBooleanIndexedvEXT addr
                   else nonexistentGetBooleanIndexedvEXT
    refCompressedTextureImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureImage3DEXT addr
                   else nonexistentCompressedTextureImage3DEXT
    refCompressedTextureImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureImage2DEXT addr
                   else nonexistentCompressedTextureImage2DEXT
    refCompressedTextureImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureImage1DEXT addr
                   else nonexistentCompressedTextureImage1DEXT
    refCompressedTextureSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureSubImage3DEXT addr
                   else nonexistentCompressedTextureSubImage3DEXT
    refCompressedTextureSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureSubImage2DEXT addr
                   else nonexistentCompressedTextureSubImage2DEXT
    refCompressedTextureSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedTextureSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedTextureSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedTextureSubImage1DEXT addr
                   else nonexistentCompressedTextureSubImage1DEXT
    refGetCompressedTextureImageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetCompressedTextureImageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetCompressedTextureImageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetCompressedTextureImageEXT addr
                   else nonexistentGetCompressedTextureImageEXT
    refCompressedMultiTexImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexImage3DEXT addr
                   else nonexistentCompressedMultiTexImage3DEXT
    refCompressedMultiTexImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexImage2DEXT addr
                   else nonexistentCompressedMultiTexImage2DEXT
    refCompressedMultiTexImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexImage1DEXT addr
                   else nonexistentCompressedMultiTexImage1DEXT
    refCompressedMultiTexSubImage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexSubImage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexSubImage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexSubImage3DEXT addr
                   else nonexistentCompressedMultiTexSubImage3DEXT
    refCompressedMultiTexSubImage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexSubImage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexSubImage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexSubImage2DEXT addr
                   else nonexistentCompressedMultiTexSubImage2DEXT
    refCompressedMultiTexSubImage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCompressedMultiTexSubImage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCompressedMultiTexSubImage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCompressedMultiTexSubImage1DEXT addr
                   else nonexistentCompressedMultiTexSubImage1DEXT
    refGetCompressedMultiTexImageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetCompressedMultiTexImageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetCompressedMultiTexImageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetCompressedMultiTexImageEXT addr
                   else nonexistentGetCompressedMultiTexImageEXT
    refMatrixLoadTransposefEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixLoadTransposefEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixLoadTransposefEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixLoadTransposefEXT addr
                   else nonexistentMatrixLoadTransposefEXT
    refMatrixLoadTransposedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixLoadTransposedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixLoadTransposedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixLoadTransposedEXT addr
                   else nonexistentMatrixLoadTransposedEXT
    refMatrixMultTransposefEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixMultTransposefEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixMultTransposefEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixMultTransposefEXT addr
                   else nonexistentMatrixMultTransposefEXT
    refMatrixMultTransposedEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMatrixMultTransposedEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMatrixMultTransposedEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMatrixMultTransposedEXT addr
                   else nonexistentMatrixMultTransposedEXT
    refNamedBufferDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedBufferDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedBufferDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedBufferDataEXT addr
                   else nonexistentNamedBufferDataEXT
    refNamedBufferSubDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedBufferSubDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedBufferSubDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedBufferSubDataEXT addr
                   else nonexistentNamedBufferSubDataEXT
    refMapNamedBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMapNamedBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMapNamedBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMapNamedBufferEXT addr
                   else nonexistentMapNamedBufferEXT
    refUnmapNamedBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUnmapNamedBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUnmapNamedBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUnmapNamedBufferEXT addr
                   else nonexistentUnmapNamedBufferEXT
    refGetNamedBufferParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedBufferParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedBufferParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedBufferParameterivEXT addr
                   else nonexistentGetNamedBufferParameterivEXT
    refGetNamedBufferPointervEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedBufferPointervEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedBufferPointervEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedBufferPointervEXT addr
                   else nonexistentGetNamedBufferPointervEXT
    refGetNamedBufferSubDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedBufferSubDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedBufferSubDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedBufferSubDataEXT addr
                   else nonexistentGetNamedBufferSubDataEXT
    refProgramUniform1fEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1fEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1fEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1fEXT addr
                   else nonexistentProgramUniform1fEXT
    refProgramUniform2fEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2fEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2fEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2fEXT addr
                   else nonexistentProgramUniform2fEXT
    refProgramUniform3fEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3fEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3fEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3fEXT addr
                   else nonexistentProgramUniform3fEXT
    refProgramUniform4fEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4fEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4fEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4fEXT addr
                   else nonexistentProgramUniform4fEXT
    refProgramUniform1iEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1iEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1iEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1iEXT addr
                   else nonexistentProgramUniform1iEXT
    refProgramUniform2iEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2iEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2iEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2iEXT addr
                   else nonexistentProgramUniform2iEXT
    refProgramUniform3iEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3iEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3iEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3iEXT addr
                   else nonexistentProgramUniform3iEXT
    refProgramUniform4iEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4iEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4iEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4iEXT addr
                   else nonexistentProgramUniform4iEXT
    refProgramUniform1fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1fvEXT addr
                   else nonexistentProgramUniform1fvEXT
    refProgramUniform2fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2fvEXT addr
                   else nonexistentProgramUniform2fvEXT
    refProgramUniform3fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3fvEXT addr
                   else nonexistentProgramUniform3fvEXT
    refProgramUniform4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4fvEXT addr
                   else nonexistentProgramUniform4fvEXT
    refProgramUniform1ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1ivEXT addr
                   else nonexistentProgramUniform1ivEXT
    refProgramUniform2ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2ivEXT addr
                   else nonexistentProgramUniform2ivEXT
    refProgramUniform3ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3ivEXT addr
                   else nonexistentProgramUniform3ivEXT
    refProgramUniform4ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4ivEXT addr
                   else nonexistentProgramUniform4ivEXT
    refProgramUniformMatrix2fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2fvEXT addr
                   else nonexistentProgramUniformMatrix2fvEXT
    refProgramUniformMatrix3fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3fvEXT addr
                   else nonexistentProgramUniformMatrix3fvEXT
    refProgramUniformMatrix4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4fvEXT addr
                   else nonexistentProgramUniformMatrix4fvEXT
    refProgramUniformMatrix2x3fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x3fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x3fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x3fvEXT addr
                   else nonexistentProgramUniformMatrix2x3fvEXT
    refProgramUniformMatrix3x2fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x2fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x2fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x2fvEXT addr
                   else nonexistentProgramUniformMatrix3x2fvEXT
    refProgramUniformMatrix2x4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x4fvEXT addr
                   else nonexistentProgramUniformMatrix2x4fvEXT
    refProgramUniformMatrix4x2fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x2fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x2fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x2fvEXT addr
                   else nonexistentProgramUniformMatrix4x2fvEXT
    refProgramUniformMatrix3x4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x4fvEXT addr
                   else nonexistentProgramUniformMatrix3x4fvEXT
    refProgramUniformMatrix4x3fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x3fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x3fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x3fvEXT addr
                   else nonexistentProgramUniformMatrix4x3fvEXT
    refTextureBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureBufferEXT addr
                   else nonexistentTextureBufferEXT
    refMultiTexBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexBufferEXT addr
                   else nonexistentMultiTexBufferEXT
    refTextureParameterIivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameterIivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameterIivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameterIivEXT addr
                   else nonexistentTextureParameterIivEXT
    refTextureParameterIuivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureParameterIuivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureParameterIuivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureParameterIuivEXT addr
                   else nonexistentTextureParameterIuivEXT
    refGetTextureParameterIivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureParameterIivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureParameterIivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureParameterIivEXT addr
                   else nonexistentGetTextureParameterIivEXT
    refGetTextureParameterIuivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetTextureParameterIuivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetTextureParameterIuivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetTextureParameterIuivEXT addr
                   else nonexistentGetTextureParameterIuivEXT
    refMultiTexParameterIivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameterIivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameterIivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameterIivEXT addr
                   else nonexistentMultiTexParameterIivEXT
    refMultiTexParameterIuivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexParameterIuivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexParameterIuivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexParameterIuivEXT addr
                   else nonexistentMultiTexParameterIuivEXT
    refGetMultiTexParameterIivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexParameterIivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexParameterIivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexParameterIivEXT addr
                   else nonexistentGetMultiTexParameterIivEXT
    refGetMultiTexParameterIuivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetMultiTexParameterIuivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetMultiTexParameterIuivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetMultiTexParameterIuivEXT addr
                   else nonexistentGetMultiTexParameterIuivEXT
    refProgramUniform1uiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1uiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1uiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1uiEXT addr
                   else nonexistentProgramUniform1uiEXT
    refProgramUniform2uiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2uiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2uiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2uiEXT addr
                   else nonexistentProgramUniform2uiEXT
    refProgramUniform3uiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3uiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3uiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3uiEXT addr
                   else nonexistentProgramUniform3uiEXT
    refProgramUniform4uiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4uiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4uiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4uiEXT addr
                   else nonexistentProgramUniform4uiEXT
    refProgramUniform1uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1uivEXT addr
                   else nonexistentProgramUniform1uivEXT
    refProgramUniform2uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2uivEXT addr
                   else nonexistentProgramUniform2uivEXT
    refProgramUniform3uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3uivEXT addr
                   else nonexistentProgramUniform3uivEXT
    refProgramUniform4uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4uivEXT addr
                   else nonexistentProgramUniform4uivEXT
    refNamedProgramLocalParameters4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameters4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameters4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameters4fvEXT addr
                   else nonexistentNamedProgramLocalParameters4fvEXT
    refNamedProgramLocalParameterI4iEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameterI4iEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameterI4iEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameterI4iEXT addr
                   else nonexistentNamedProgramLocalParameterI4iEXT
    refNamedProgramLocalParameterI4ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameterI4ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameterI4ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameterI4ivEXT addr
                   else nonexistentNamedProgramLocalParameterI4ivEXT
    refNamedProgramLocalParametersI4ivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParametersI4ivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParametersI4ivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParametersI4ivEXT addr
                   else nonexistentNamedProgramLocalParametersI4ivEXT
    refNamedProgramLocalParameterI4uiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameterI4uiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameterI4uiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameterI4uiEXT addr
                   else nonexistentNamedProgramLocalParameterI4uiEXT
    refNamedProgramLocalParameterI4uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameterI4uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameterI4uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameterI4uivEXT addr
                   else nonexistentNamedProgramLocalParameterI4uivEXT
    refNamedProgramLocalParametersI4uivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParametersI4uivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParametersI4uivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParametersI4uivEXT addr
                   else nonexistentNamedProgramLocalParametersI4uivEXT
    refGetNamedProgramLocalParameterIivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramLocalParameterIivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramLocalParameterIivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramLocalParameterIivEXT addr
                   else nonexistentGetNamedProgramLocalParameterIivEXT
    refGetNamedProgramLocalParameterIuivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramLocalParameterIuivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramLocalParameterIuivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramLocalParameterIuivEXT addr
                   else nonexistentGetNamedProgramLocalParameterIuivEXT
    refEnableClientStateiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableClientStateiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableClientStateiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableClientStateiEXT addr
                   else nonexistentEnableClientStateiEXT
    refDisableClientStateiEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableClientStateiEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableClientStateiEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableClientStateiEXT addr
                   else nonexistentDisableClientStateiEXT
    refGetFloati_vEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFloati_vEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFloati_vEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFloati_vEXT addr
                   else nonexistentGetFloati_vEXT
    refGetDoublei_vEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetDoublei_vEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetDoublei_vEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetDoublei_vEXT addr
                   else nonexistentGetDoublei_vEXT
    refGetPointeri_vEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetPointeri_vEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetPointeri_vEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetPointeri_vEXT addr
                   else nonexistentGetPointeri_vEXT
    refNamedProgramStringEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramStringEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramStringEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramStringEXT addr
                   else nonexistentNamedProgramStringEXT
    refNamedProgramLocalParameter4dEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameter4dEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameter4dEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameter4dEXT addr
                   else nonexistentNamedProgramLocalParameter4dEXT
    refNamedProgramLocalParameter4dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameter4dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameter4dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameter4dvEXT addr
                   else nonexistentNamedProgramLocalParameter4dvEXT
    refNamedProgramLocalParameter4fEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameter4fEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameter4fEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameter4fEXT addr
                   else nonexistentNamedProgramLocalParameter4fEXT
    refNamedProgramLocalParameter4fvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedProgramLocalParameter4fvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedProgramLocalParameter4fvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedProgramLocalParameter4fvEXT addr
                   else nonexistentNamedProgramLocalParameter4fvEXT
    refGetNamedProgramLocalParameterdvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramLocalParameterdvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramLocalParameterdvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramLocalParameterdvEXT addr
                   else nonexistentGetNamedProgramLocalParameterdvEXT
    refGetNamedProgramLocalParameterfvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramLocalParameterfvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramLocalParameterfvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramLocalParameterfvEXT addr
                   else nonexistentGetNamedProgramLocalParameterfvEXT
    refGetNamedProgramivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramivEXT addr
                   else nonexistentGetNamedProgramivEXT
    refGetNamedProgramStringEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedProgramStringEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedProgramStringEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedProgramStringEXT addr
                   else nonexistentGetNamedProgramStringEXT
    refNamedRenderbufferStorageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedRenderbufferStorageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedRenderbufferStorageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedRenderbufferStorageEXT addr
                   else nonexistentNamedRenderbufferStorageEXT
    refGetNamedRenderbufferParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedRenderbufferParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedRenderbufferParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedRenderbufferParameterivEXT addr
                   else nonexistentGetNamedRenderbufferParameterivEXT
    refNamedRenderbufferStorageMultisampleEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedRenderbufferStorageMultisampleEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedRenderbufferStorageMultisampleEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedRenderbufferStorageMultisampleEXT addr
                   else nonexistentNamedRenderbufferStorageMultisampleEXT
    refNamedRenderbufferStorageMultisampleCoverageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedRenderbufferStorageMultisampleCoverageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedRenderbufferStorageMultisampleCoverageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedRenderbufferStorageMultisampleCoverageEXT addr
                   else nonexistentNamedRenderbufferStorageMultisampleCoverageEXT
    refCheckNamedFramebufferStatusEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCheckNamedFramebufferStatusEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCheckNamedFramebufferStatusEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCheckNamedFramebufferStatusEXT addr
                   else nonexistentCheckNamedFramebufferStatusEXT
    refNamedFramebufferTexture1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTexture1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTexture1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTexture1DEXT addr
                   else nonexistentNamedFramebufferTexture1DEXT
    refNamedFramebufferTexture2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTexture2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTexture2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTexture2DEXT addr
                   else nonexistentNamedFramebufferTexture2DEXT
    refNamedFramebufferTexture3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTexture3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTexture3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTexture3DEXT addr
                   else nonexistentNamedFramebufferTexture3DEXT
    refNamedFramebufferRenderbufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferRenderbufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferRenderbufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferRenderbufferEXT addr
                   else nonexistentNamedFramebufferRenderbufferEXT
    refGetNamedFramebufferAttachmentParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedFramebufferAttachmentParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedFramebufferAttachmentParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedFramebufferAttachmentParameterivEXT addr
                   else nonexistentGetNamedFramebufferAttachmentParameterivEXT
    refGenerateTextureMipmapEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenerateTextureMipmapEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenerateTextureMipmapEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenerateTextureMipmapEXT addr
                   else nonexistentGenerateTextureMipmapEXT
    refGenerateMultiTexMipmapEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenerateMultiTexMipmapEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenerateMultiTexMipmapEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenerateMultiTexMipmapEXT addr
                   else nonexistentGenerateMultiTexMipmapEXT
    refFramebufferDrawBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferDrawBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferDrawBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferDrawBufferEXT addr
                   else nonexistentFramebufferDrawBufferEXT
    refFramebufferDrawBuffersEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferDrawBuffersEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferDrawBuffersEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferDrawBuffersEXT addr
                   else nonexistentFramebufferDrawBuffersEXT
    refFramebufferReadBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFramebufferReadBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFramebufferReadBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFramebufferReadBufferEXT addr
                   else nonexistentFramebufferReadBufferEXT
    refGetFramebufferParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetFramebufferParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetFramebufferParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetFramebufferParameterivEXT addr
                   else nonexistentGetFramebufferParameterivEXT
    refNamedCopyBufferSubDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedCopyBufferSubDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedCopyBufferSubDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedCopyBufferSubDataEXT addr
                   else nonexistentNamedCopyBufferSubDataEXT
    refNamedFramebufferTextureEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTextureEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTextureEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTextureEXT addr
                   else nonexistentNamedFramebufferTextureEXT
    refNamedFramebufferTextureLayerEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTextureLayerEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTextureLayerEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTextureLayerEXT addr
                   else nonexistentNamedFramebufferTextureLayerEXT
    refNamedFramebufferTextureFaceEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferTextureFaceEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferTextureFaceEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferTextureFaceEXT addr
                   else nonexistentNamedFramebufferTextureFaceEXT
    refTextureRenderbufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureRenderbufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureRenderbufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureRenderbufferEXT addr
                   else nonexistentTextureRenderbufferEXT
    refMultiTexRenderbufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMultiTexRenderbufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMultiTexRenderbufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMultiTexRenderbufferEXT addr
                   else nonexistentMultiTexRenderbufferEXT
    refVertexArrayVertexOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexOffsetEXT addr
                   else nonexistentVertexArrayVertexOffsetEXT
    refVertexArrayColorOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayColorOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayColorOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayColorOffsetEXT addr
                   else nonexistentVertexArrayColorOffsetEXT
    refVertexArrayEdgeFlagOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayEdgeFlagOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayEdgeFlagOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayEdgeFlagOffsetEXT addr
                   else nonexistentVertexArrayEdgeFlagOffsetEXT
    refVertexArrayIndexOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayIndexOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayIndexOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayIndexOffsetEXT addr
                   else nonexistentVertexArrayIndexOffsetEXT
    refVertexArrayNormalOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayNormalOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayNormalOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayNormalOffsetEXT addr
                   else nonexistentVertexArrayNormalOffsetEXT
    refVertexArrayTexCoordOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayTexCoordOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayTexCoordOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayTexCoordOffsetEXT addr
                   else nonexistentVertexArrayTexCoordOffsetEXT
    refVertexArrayMultiTexCoordOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayMultiTexCoordOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayMultiTexCoordOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayMultiTexCoordOffsetEXT addr
                   else nonexistentVertexArrayMultiTexCoordOffsetEXT
    refVertexArrayFogCoordOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayFogCoordOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayFogCoordOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayFogCoordOffsetEXT addr
                   else nonexistentVertexArrayFogCoordOffsetEXT
    refVertexArraySecondaryColorOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArraySecondaryColorOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArraySecondaryColorOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArraySecondaryColorOffsetEXT addr
                   else nonexistentVertexArraySecondaryColorOffsetEXT
    refVertexArrayVertexAttribOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribOffsetEXT addr
                   else nonexistentVertexArrayVertexAttribOffsetEXT
    refVertexArrayVertexAttribIOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribIOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribIOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribIOffsetEXT addr
                   else nonexistentVertexArrayVertexAttribIOffsetEXT
    refEnableVertexArrayEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableVertexArrayEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableVertexArrayEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableVertexArrayEXT addr
                   else nonexistentEnableVertexArrayEXT
    refDisableVertexArrayEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableVertexArrayEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableVertexArrayEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableVertexArrayEXT addr
                   else nonexistentDisableVertexArrayEXT
    refEnableVertexArrayAttribEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glEnableVertexArrayAttribEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glEnableVertexArrayAttribEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynEnableVertexArrayAttribEXT addr
                   else nonexistentEnableVertexArrayAttribEXT
    refDisableVertexArrayAttribEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDisableVertexArrayAttribEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDisableVertexArrayAttribEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDisableVertexArrayAttribEXT addr
                   else nonexistentDisableVertexArrayAttribEXT
    refGetVertexArrayIntegervEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexArrayIntegervEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexArrayIntegervEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexArrayIntegervEXT addr
                   else nonexistentGetVertexArrayIntegervEXT
    refGetVertexArrayPointervEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexArrayPointervEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexArrayPointervEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexArrayPointervEXT addr
                   else nonexistentGetVertexArrayPointervEXT
    refGetVertexArrayIntegeri_vEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexArrayIntegeri_vEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexArrayIntegeri_vEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexArrayIntegeri_vEXT addr
                   else nonexistentGetVertexArrayIntegeri_vEXT
    refGetVertexArrayPointeri_vEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetVertexArrayPointeri_vEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetVertexArrayPointeri_vEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetVertexArrayPointeri_vEXT addr
                   else nonexistentGetVertexArrayPointeri_vEXT
    refMapNamedBufferRangeEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glMapNamedBufferRangeEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glMapNamedBufferRangeEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynMapNamedBufferRangeEXT addr
                   else nonexistentMapNamedBufferRangeEXT
    refFlushMappedNamedBufferRangeEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glFlushMappedNamedBufferRangeEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glFlushMappedNamedBufferRangeEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynFlushMappedNamedBufferRangeEXT addr
                   else nonexistentFlushMappedNamedBufferRangeEXT
    refNamedBufferStorageEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedBufferStorageEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedBufferStorageEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedBufferStorageEXT addr
                   else nonexistentNamedBufferStorageEXT
    refClearNamedBufferDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearNamedBufferDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearNamedBufferDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearNamedBufferDataEXT addr
                   else nonexistentClearNamedBufferDataEXT
    refClearNamedBufferSubDataEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glClearNamedBufferSubDataEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glClearNamedBufferSubDataEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynClearNamedBufferSubDataEXT addr
                   else nonexistentClearNamedBufferSubDataEXT
    refNamedFramebufferParameteriEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glNamedFramebufferParameteriEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glNamedFramebufferParameteriEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynNamedFramebufferParameteriEXT addr
                   else nonexistentNamedFramebufferParameteriEXT
    refGetNamedFramebufferParameterivEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetNamedFramebufferParameterivEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetNamedFramebufferParameterivEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetNamedFramebufferParameterivEXT addr
                   else nonexistentGetNamedFramebufferParameterivEXT
    refProgramUniform1dEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1dEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1dEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1dEXT addr
                   else nonexistentProgramUniform1dEXT
    refProgramUniform2dEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2dEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2dEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2dEXT addr
                   else nonexistentProgramUniform2dEXT
    refProgramUniform3dEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3dEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3dEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3dEXT addr
                   else nonexistentProgramUniform3dEXT
    refProgramUniform4dEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4dEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4dEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4dEXT addr
                   else nonexistentProgramUniform4dEXT
    refProgramUniform1dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1dvEXT addr
                   else nonexistentProgramUniform1dvEXT
    refProgramUniform2dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2dvEXT addr
                   else nonexistentProgramUniform2dvEXT
    refProgramUniform3dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3dvEXT addr
                   else nonexistentProgramUniform3dvEXT
    refProgramUniform4dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4dvEXT addr
                   else nonexistentProgramUniform4dvEXT
    refProgramUniformMatrix2dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2dvEXT addr
                   else nonexistentProgramUniformMatrix2dvEXT
    refProgramUniformMatrix3dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3dvEXT addr
                   else nonexistentProgramUniformMatrix3dvEXT
    refProgramUniformMatrix4dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4dvEXT addr
                   else nonexistentProgramUniformMatrix4dvEXT
    refProgramUniformMatrix2x3dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x3dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x3dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x3dvEXT addr
                   else nonexistentProgramUniformMatrix2x3dvEXT
    refProgramUniformMatrix2x4dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x4dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x4dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x4dvEXT addr
                   else nonexistentProgramUniformMatrix2x4dvEXT
    refProgramUniformMatrix3x2dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x2dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x2dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x2dvEXT addr
                   else nonexistentProgramUniformMatrix3x2dvEXT
    refProgramUniformMatrix3x4dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x4dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x4dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x4dvEXT addr
                   else nonexistentProgramUniformMatrix3x4dvEXT
    refProgramUniformMatrix4x2dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x2dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x2dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x2dvEXT addr
                   else nonexistentProgramUniformMatrix4x2dvEXT
    refProgramUniformMatrix4x3dvEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x3dvEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x3dvEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x3dvEXT addr
                   else nonexistentProgramUniformMatrix4x3dvEXT
    refTextureBufferRangeEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureBufferRangeEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureBufferRangeEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureBufferRangeEXT addr
                   else nonexistentTextureBufferRangeEXT
    refTextureStorage1DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureStorage1DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureStorage1DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureStorage1DEXT addr
                   else nonexistentTextureStorage1DEXT
    refTextureStorage2DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureStorage2DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureStorage2DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureStorage2DEXT addr
                   else nonexistentTextureStorage2DEXT
    refTextureStorage3DEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureStorage3DEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureStorage3DEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureStorage3DEXT addr
                   else nonexistentTextureStorage3DEXT
    refTextureStorage2DMultisampleEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureStorage2DMultisampleEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureStorage2DMultisampleEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureStorage2DMultisampleEXT addr
                   else nonexistentTextureStorage2DMultisampleEXT
    refTextureStorage3DMultisampleEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTextureStorage3DMultisampleEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTextureStorage3DMultisampleEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTextureStorage3DMultisampleEXT addr
                   else nonexistentTextureStorage3DMultisampleEXT
    refVertexArrayBindVertexBufferEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayBindVertexBufferEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayBindVertexBufferEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayBindVertexBufferEXT addr
                   else nonexistentVertexArrayBindVertexBufferEXT
    refVertexArrayVertexAttribFormatEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribFormatEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribFormatEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribFormatEXT addr
                   else nonexistentVertexArrayVertexAttribFormatEXT
    refVertexArrayVertexAttribIFormatEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribIFormatEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribIFormatEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribIFormatEXT addr
                   else nonexistentVertexArrayVertexAttribIFormatEXT
    refVertexArrayVertexAttribLFormatEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribLFormatEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribLFormatEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribLFormatEXT addr
                   else nonexistentVertexArrayVertexAttribLFormatEXT
    refVertexArrayVertexAttribBindingEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribBindingEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribBindingEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribBindingEXT addr
                   else nonexistentVertexArrayVertexAttribBindingEXT
    refVertexArrayVertexBindingDivisorEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexBindingDivisorEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexBindingDivisorEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexBindingDivisorEXT addr
                   else nonexistentVertexArrayVertexBindingDivisorEXT
    refVertexArrayVertexAttribLOffsetEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribLOffsetEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribLOffsetEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribLOffsetEXT addr
                   else nonexistentVertexArrayVertexAttribLOffsetEXT
    refTexturePageCommitmentEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glTexturePageCommitmentEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glTexturePageCommitmentEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynTexturePageCommitmentEXT addr
                   else nonexistentTexturePageCommitmentEXT
    refVertexArrayVertexAttribDivisorEXT <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glVertexArrayVertexAttribDivisorEXT"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glVertexArrayVertexAttribDivisorEXT")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynVertexArrayVertexAttribDivisorEXT addr
                   else nonexistentVertexArrayVertexAttribDivisorEXT

    -- GL_ARB_buffer_storage

    refBufferStorage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBufferStorage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBufferStorage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBufferStorage addr
                   else nonexistentBufferStorage

    -- GL_ARB_separate_shader_objects

    refUseProgramStages <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glUseProgramStages"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glUseProgramStages")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynUseProgramStages addr
                   else nonexistentUseProgramStages
    refActiveShaderProgram <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glActiveShaderProgram"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glActiveShaderProgram")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynActiveShaderProgram addr
                   else nonexistentActiveShaderProgram
    refCreateShaderProgramv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glCreateShaderProgramv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glCreateShaderProgramv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynCreateShaderProgramv addr
                   else nonexistentCreateShaderProgramv
    refBindProgramPipeline <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glBindProgramPipeline"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glBindProgramPipeline")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynBindProgramPipeline addr
                   else nonexistentBindProgramPipeline
    refDeleteProgramPipelines <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glDeleteProgramPipelines"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glDeleteProgramPipelines")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynDeleteProgramPipelines addr
                   else nonexistentDeleteProgramPipelines
    refGenProgramPipelines <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGenProgramPipelines"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGenProgramPipelines")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGenProgramPipelines addr
                   else nonexistentGenProgramPipelines
    refIsProgramPipeline <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glIsProgramPipeline"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glIsProgramPipeline")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynIsProgramPipeline addr
                   else nonexistentIsProgramPipeline
    refGetProgramPipelineiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetProgramPipelineiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetProgramPipelineiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetProgramPipelineiv addr
                   else nonexistentGetProgramPipelineiv
    refProgramUniform1i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1i addr
                   else nonexistentProgramUniform1i
    refProgramUniform1iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1iv addr
                   else nonexistentProgramUniform1iv
    refProgramUniform1f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1f addr
                   else nonexistentProgramUniform1f
    refProgramUniform1fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1fv addr
                   else nonexistentProgramUniform1fv
    refProgramUniform1d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1d addr
                   else nonexistentProgramUniform1d
    refProgramUniform1dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1dv addr
                   else nonexistentProgramUniform1dv
    refProgramUniform1ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1ui addr
                   else nonexistentProgramUniform1ui
    refProgramUniform1uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform1uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform1uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform1uiv addr
                   else nonexistentProgramUniform1uiv
    refProgramUniform2i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2i addr
                   else nonexistentProgramUniform2i
    refProgramUniform2iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2iv addr
                   else nonexistentProgramUniform2iv
    refProgramUniform2f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2f addr
                   else nonexistentProgramUniform2f
    refProgramUniform2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2fv addr
                   else nonexistentProgramUniform2fv
    refProgramUniform2d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2d addr
                   else nonexistentProgramUniform2d
    refProgramUniform2dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2dv addr
                   else nonexistentProgramUniform2dv
    refProgramUniform2ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2ui addr
                   else nonexistentProgramUniform2ui
    refProgramUniform2uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform2uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform2uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform2uiv addr
                   else nonexistentProgramUniform2uiv
    refProgramUniform3i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3i addr
                   else nonexistentProgramUniform3i
    refProgramUniform3iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3iv addr
                   else nonexistentProgramUniform3iv
    refProgramUniform3f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3f addr
                   else nonexistentProgramUniform3f
    refProgramUniform3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3fv addr
                   else nonexistentProgramUniform3fv
    refProgramUniform3d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3d addr
                   else nonexistentProgramUniform3d
    refProgramUniform3dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3dv addr
                   else nonexistentProgramUniform3dv
    refProgramUniform3ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3ui addr
                   else nonexistentProgramUniform3ui
    refProgramUniform3uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform3uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform3uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform3uiv addr
                   else nonexistentProgramUniform3uiv
    refProgramUniform4i <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4i"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4i")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4i addr
                   else nonexistentProgramUniform4i
    refProgramUniform4iv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4iv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4iv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4iv addr
                   else nonexistentProgramUniform4iv
    refProgramUniform4f <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4f"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4f")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4f addr
                   else nonexistentProgramUniform4f
    refProgramUniform4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4fv addr
                   else nonexistentProgramUniform4fv
    refProgramUniform4d <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4d"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4d")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4d addr
                   else nonexistentProgramUniform4d
    refProgramUniform4dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4dv addr
                   else nonexistentProgramUniform4dv
    refProgramUniform4ui <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4ui"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4ui")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4ui addr
                   else nonexistentProgramUniform4ui
    refProgramUniform4uiv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniform4uiv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniform4uiv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniform4uiv addr
                   else nonexistentProgramUniform4uiv
    refProgramUniformMatrix2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2fv addr
                   else nonexistentProgramUniformMatrix2fv
    refProgramUniformMatrix3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3fv addr
                   else nonexistentProgramUniformMatrix3fv
    refProgramUniformMatrix4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4fv addr
                   else nonexistentProgramUniformMatrix4fv
    refProgramUniformMatrix2dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2dv addr
                   else nonexistentProgramUniformMatrix2dv
    refProgramUniformMatrix3dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3dv addr
                   else nonexistentProgramUniformMatrix3dv
    refProgramUniformMatrix4dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4dv addr
                   else nonexistentProgramUniformMatrix4dv
    refProgramUniformMatrix2x3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x3fv addr
                   else nonexistentProgramUniformMatrix2x3fv
    refProgramUniformMatrix3x2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x2fv addr
                   else nonexistentProgramUniformMatrix3x2fv
    refProgramUniformMatrix2x4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x4fv addr
                   else nonexistentProgramUniformMatrix2x4fv
    refProgramUniformMatrix4x2fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x2fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x2fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x2fv addr
                   else nonexistentProgramUniformMatrix4x2fv
    refProgramUniformMatrix3x4fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x4fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x4fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x4fv addr
                   else nonexistentProgramUniformMatrix3x4fv
    refProgramUniformMatrix4x3fv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x3fv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x3fv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x3fv addr
                   else nonexistentProgramUniformMatrix4x3fv
    refProgramUniformMatrix2x3dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x3dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x3dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x3dv addr
                   else nonexistentProgramUniformMatrix2x3dv
    refProgramUniformMatrix3x2dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x2dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x2dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x2dv addr
                   else nonexistentProgramUniformMatrix3x2dv
    refProgramUniformMatrix2x4dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix2x4dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix2x4dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix2x4dv addr
                   else nonexistentProgramUniformMatrix2x4dv
    refProgramUniformMatrix4x2dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x2dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x2dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x2dv addr
                   else nonexistentProgramUniformMatrix4x2dv
    refProgramUniformMatrix3x4dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix3x4dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix3x4dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix3x4dv addr
                   else nonexistentProgramUniformMatrix3x4dv
    refProgramUniformMatrix4x3dv <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glProgramUniformMatrix4x3dv"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glProgramUniformMatrix4x3dv")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynProgramUniformMatrix4x3dv addr
                   else nonexistentProgramUniformMatrix4x3dv
    refValidateProgramPipeline <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glValidateProgramPipeline"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glValidateProgramPipeline")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynValidateProgramPipeline addr
                   else nonexistentValidateProgramPipeline
    refGetProgramPipelineInfoLog <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glGetProgramPipelineInfoLog"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glGetProgramPipelineInfoLog")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynGetProgramPipelineInfoLog addr
                   else nonexistentGetProgramPipelineInfoLog

    -- GL_ATI_meminfo


    -- GL_NVX_gpu_memory_info


    -- GL_ARB_invalidate_subdata

    refInvalidateTexSubImage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateTexSubImage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateTexSubImage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateTexSubImage addr
                   else nonexistentInvalidateTexSubImage
    refInvalidateTexImage <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateTexImage"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateTexImage")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateTexImage addr
                   else nonexistentInvalidateTexImage
    refInvalidateBufferSubData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateBufferSubData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateBufferSubData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateBufferSubData addr
                   else nonexistentInvalidateBufferSubData
    refInvalidateBufferData <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateBufferData"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateBufferData")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateBufferData addr
                   else nonexistentInvalidateBufferData
    refInvalidateFramebuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateFramebuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateFramebuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateFramebuffer addr
                   else nonexistentInvalidateFramebuffer
    refInvalidateSubFramebuffer <- liftIO $ do
        addr' <- castPtrToFunPtr . castPtr <$> get_proc_address "glInvalidateSubFramebuffer"
#ifndef mingw32_HOST_OS
        addr <- if addr' == nullFunPtr
          then catch (POSIX.dlsym POSIX.Default "glInvalidateSubFramebuffer")
                     (\exc -> (exc :: SomeException) `seq` return nullFunPtr)
          else return addr'
#else
        let addr = addr'
#endif
        return $ if addr /= nullFunPtr
                   then gldynInvalidateSubFramebuffer addr
                   else nonexistentInvalidateSubFramebuffer



    -- This function should exist in every OpenGL
    exts_raw <- liftIO $ castPtr `fmap` refGetString gl_EXTENSIONS
    exts_cptr <- liftIO $ peekCString exts_raw
    let exts = parseExtensionString exts_cptr

    refhas_GL_ARB_texture_storage <- do
        let result = elem "GL_ARB_texture_storage" exts
        return result
    refhas_GL_KHR_debug <- do
        let result = elem "GL_KHR_debug" exts
        return result
    refhas_GL_EXT_direct_state_access <- do
        let result = elem "GL_EXT_direct_state_access" exts
        return result
    refhas_GL_ARB_buffer_storage <- do
        let result = elem "GL_ARB_buffer_storage" exts
        return result
    refhas_GL_ARB_separate_shader_objects <- do
        let result = elem "GL_ARB_separate_shader_objects" exts
        return result
    refhas_GL_ATI_meminfo <- do
        let result = elem "GL_ATI_meminfo" exts
        return result
    refhas_GL_NVX_gpu_memory_info <- do
        let result = elem "GL_NVX_gpu_memory_info" exts
        return result
    refhas_GL_ARB_invalidate_subdata <- do
        let result = elem "GL_ARB_invalidate_subdata" exts
        return result

    counter <- liftIO $ atomicModifyIORef' flextGLCounter $ \old -> ( old+1, old )

    return $ Success FlextGL {
        counter = counter
      , has_GL_ARB_texture_storage = refhas_GL_ARB_texture_storage
      , has_GL_KHR_debug = refhas_GL_KHR_debug
      , has_GL_EXT_direct_state_access = refhas_GL_EXT_direct_state_access
      , has_GL_ARB_buffer_storage = refhas_GL_ARB_buffer_storage
      , has_GL_ARB_separate_shader_objects = refhas_GL_ARB_separate_shader_objects
      , has_GL_ATI_meminfo = refhas_GL_ATI_meminfo
      , has_GL_NVX_gpu_memory_info = refhas_GL_NVX_gpu_memory_info
      , has_GL_ARB_invalidate_subdata = refhas_GL_ARB_invalidate_subdata
      , rglCullFace = refCullFace
      , rglFrontFace = refFrontFace
      , rglHint = refHint
      , rglLineWidth = refLineWidth
      , rglPointSize = refPointSize
      , rglPolygonMode = refPolygonMode
      , rglScissor = refScissor
      , rglTexParameterf = refTexParameterf
      , rglTexParameterfv = refTexParameterfv
      , rglTexParameteri = refTexParameteri
      , rglTexParameteriv = refTexParameteriv
      , rglTexImage1D = refTexImage1D
      , rglTexImage2D = refTexImage2D
      , rglDrawBuffer = refDrawBuffer
      , rglClear = refClear
      , rglClearColor = refClearColor
      , rglClearStencil = refClearStencil
      , rglClearDepth = refClearDepth
      , rglStencilMask = refStencilMask
      , rglColorMask = refColorMask
      , rglDepthMask = refDepthMask
      , rglDisable = refDisable
      , rglEnable = refEnable
      , rglFinish = refFinish
      , rglFlush = refFlush
      , rglBlendFunc = refBlendFunc
      , rglLogicOp = refLogicOp
      , rglStencilFunc = refStencilFunc
      , rglStencilOp = refStencilOp
      , rglDepthFunc = refDepthFunc
      , rglPixelStoref = refPixelStoref
      , rglPixelStorei = refPixelStorei
      , rglReadBuffer = refReadBuffer
      , rglReadPixels = refReadPixels
      , rglGetBooleanv = refGetBooleanv
      , rglGetDoublev = refGetDoublev
      , rglGetError = refGetError
      , rglGetFloatv = refGetFloatv
      , rglGetIntegerv = refGetIntegerv
      , rglGetString = refGetString
      , rglGetTexImage = refGetTexImage
      , rglGetTexParameterfv = refGetTexParameterfv
      , rglGetTexParameteriv = refGetTexParameteriv
      , rglGetTexLevelParameterfv = refGetTexLevelParameterfv
      , rglGetTexLevelParameteriv = refGetTexLevelParameteriv
      , rglIsEnabled = refIsEnabled
      , rglDepthRange = refDepthRange
      , rglViewport = refViewport
      , rglDrawArrays = refDrawArrays
      , rglDrawElements = refDrawElements
      , rglPolygonOffset = refPolygonOffset
      , rglCopyTexImage1D = refCopyTexImage1D
      , rglCopyTexImage2D = refCopyTexImage2D
      , rglCopyTexSubImage1D = refCopyTexSubImage1D
      , rglCopyTexSubImage2D = refCopyTexSubImage2D
      , rglTexSubImage1D = refTexSubImage1D
      , rglTexSubImage2D = refTexSubImage2D
      , rglBindTexture = refBindTexture
      , rglDeleteTextures = refDeleteTextures
      , rglGenTextures = refGenTextures
      , rglIsTexture = refIsTexture
      , rglDrawRangeElements = refDrawRangeElements
      , rglTexImage3D = refTexImage3D
      , rglTexSubImage3D = refTexSubImage3D
      , rglCopyTexSubImage3D = refCopyTexSubImage3D
      , rglActiveTexture = refActiveTexture
      , rglSampleCoverage = refSampleCoverage
      , rglCompressedTexImage3D = refCompressedTexImage3D
      , rglCompressedTexImage2D = refCompressedTexImage2D
      , rglCompressedTexImage1D = refCompressedTexImage1D
      , rglCompressedTexSubImage3D = refCompressedTexSubImage3D
      , rglCompressedTexSubImage2D = refCompressedTexSubImage2D
      , rglCompressedTexSubImage1D = refCompressedTexSubImage1D
      , rglGetCompressedTexImage = refGetCompressedTexImage
      , rglBlendFuncSeparate = refBlendFuncSeparate
      , rglMultiDrawArrays = refMultiDrawArrays
      , rglMultiDrawElements = refMultiDrawElements
      , rglPointParameterf = refPointParameterf
      , rglPointParameterfv = refPointParameterfv
      , rglPointParameteri = refPointParameteri
      , rglPointParameteriv = refPointParameteriv
      , rglBlendColor = refBlendColor
      , rglBlendEquation = refBlendEquation
      , rglGenQueries = refGenQueries
      , rglDeleteQueries = refDeleteQueries
      , rglIsQuery = refIsQuery
      , rglBeginQuery = refBeginQuery
      , rglEndQuery = refEndQuery
      , rglGetQueryiv = refGetQueryiv
      , rglGetQueryObjectiv = refGetQueryObjectiv
      , rglGetQueryObjectuiv = refGetQueryObjectuiv
      , rglBindBuffer = refBindBuffer
      , rglDeleteBuffers = refDeleteBuffers
      , rglGenBuffers = refGenBuffers
      , rglIsBuffer = refIsBuffer
      , rglBufferData = refBufferData
      , rglBufferSubData = refBufferSubData
      , rglGetBufferSubData = refGetBufferSubData
      , rglMapBuffer = refMapBuffer
      , rglUnmapBuffer = refUnmapBuffer
      , rglGetBufferParameteriv = refGetBufferParameteriv
      , rglGetBufferPointerv = refGetBufferPointerv
      , rglBlendEquationSeparate = refBlendEquationSeparate
      , rglDrawBuffers = refDrawBuffers
      , rglStencilOpSeparate = refStencilOpSeparate
      , rglStencilFuncSeparate = refStencilFuncSeparate
      , rglStencilMaskSeparate = refStencilMaskSeparate
      , rglAttachShader = refAttachShader
      , rglBindAttribLocation = refBindAttribLocation
      , rglCompileShader = refCompileShader
      , rglCreateProgram = refCreateProgram
      , rglCreateShader = refCreateShader
      , rglDeleteProgram = refDeleteProgram
      , rglDeleteShader = refDeleteShader
      , rglDetachShader = refDetachShader
      , rglDisableVertexAttribArray = refDisableVertexAttribArray
      , rglEnableVertexAttribArray = refEnableVertexAttribArray
      , rglGetActiveAttrib = refGetActiveAttrib
      , rglGetActiveUniform = refGetActiveUniform
      , rglGetAttachedShaders = refGetAttachedShaders
      , rglGetAttribLocation = refGetAttribLocation
      , rglGetProgramiv = refGetProgramiv
      , rglGetProgramInfoLog = refGetProgramInfoLog
      , rglGetShaderiv = refGetShaderiv
      , rglGetShaderInfoLog = refGetShaderInfoLog
      , rglGetShaderSource = refGetShaderSource
      , rglGetUniformLocation = refGetUniformLocation
      , rglGetUniformfv = refGetUniformfv
      , rglGetUniformiv = refGetUniformiv
      , rglGetVertexAttribdv = refGetVertexAttribdv
      , rglGetVertexAttribfv = refGetVertexAttribfv
      , rglGetVertexAttribiv = refGetVertexAttribiv
      , rglGetVertexAttribPointerv = refGetVertexAttribPointerv
      , rglIsProgram = refIsProgram
      , rglIsShader = refIsShader
      , rglLinkProgram = refLinkProgram
      , rglShaderSource = refShaderSource
      , rglUseProgram = refUseProgram
      , rglUniform1f = refUniform1f
      , rglUniform2f = refUniform2f
      , rglUniform3f = refUniform3f
      , rglUniform4f = refUniform4f
      , rglUniform1i = refUniform1i
      , rglUniform2i = refUniform2i
      , rglUniform3i = refUniform3i
      , rglUniform4i = refUniform4i
      , rglUniform1fv = refUniform1fv
      , rglUniform2fv = refUniform2fv
      , rglUniform3fv = refUniform3fv
      , rglUniform4fv = refUniform4fv
      , rglUniform1iv = refUniform1iv
      , rglUniform2iv = refUniform2iv
      , rglUniform3iv = refUniform3iv
      , rglUniform4iv = refUniform4iv
      , rglUniformMatrix2fv = refUniformMatrix2fv
      , rglUniformMatrix3fv = refUniformMatrix3fv
      , rglUniformMatrix4fv = refUniformMatrix4fv
      , rglValidateProgram = refValidateProgram
      , rglVertexAttrib1d = refVertexAttrib1d
      , rglVertexAttrib1dv = refVertexAttrib1dv
      , rglVertexAttrib1f = refVertexAttrib1f
      , rglVertexAttrib1fv = refVertexAttrib1fv
      , rglVertexAttrib1s = refVertexAttrib1s
      , rglVertexAttrib1sv = refVertexAttrib1sv
      , rglVertexAttrib2d = refVertexAttrib2d
      , rglVertexAttrib2dv = refVertexAttrib2dv
      , rglVertexAttrib2f = refVertexAttrib2f
      , rglVertexAttrib2fv = refVertexAttrib2fv
      , rglVertexAttrib2s = refVertexAttrib2s
      , rglVertexAttrib2sv = refVertexAttrib2sv
      , rglVertexAttrib3d = refVertexAttrib3d
      , rglVertexAttrib3dv = refVertexAttrib3dv
      , rglVertexAttrib3f = refVertexAttrib3f
      , rglVertexAttrib3fv = refVertexAttrib3fv
      , rglVertexAttrib3s = refVertexAttrib3s
      , rglVertexAttrib3sv = refVertexAttrib3sv
      , rglVertexAttrib4Nbv = refVertexAttrib4Nbv
      , rglVertexAttrib4Niv = refVertexAttrib4Niv
      , rglVertexAttrib4Nsv = refVertexAttrib4Nsv
      , rglVertexAttrib4Nub = refVertexAttrib4Nub
      , rglVertexAttrib4Nubv = refVertexAttrib4Nubv
      , rglVertexAttrib4Nuiv = refVertexAttrib4Nuiv
      , rglVertexAttrib4Nusv = refVertexAttrib4Nusv
      , rglVertexAttrib4bv = refVertexAttrib4bv
      , rglVertexAttrib4d = refVertexAttrib4d
      , rglVertexAttrib4dv = refVertexAttrib4dv
      , rglVertexAttrib4f = refVertexAttrib4f
      , rglVertexAttrib4fv = refVertexAttrib4fv
      , rglVertexAttrib4iv = refVertexAttrib4iv
      , rglVertexAttrib4s = refVertexAttrib4s
      , rglVertexAttrib4sv = refVertexAttrib4sv
      , rglVertexAttrib4ubv = refVertexAttrib4ubv
      , rglVertexAttrib4uiv = refVertexAttrib4uiv
      , rglVertexAttrib4usv = refVertexAttrib4usv
      , rglVertexAttribPointer = refVertexAttribPointer
      , rglUniformMatrix2x3fv = refUniformMatrix2x3fv
      , rglUniformMatrix3x2fv = refUniformMatrix3x2fv
      , rglUniformMatrix2x4fv = refUniformMatrix2x4fv
      , rglUniformMatrix4x2fv = refUniformMatrix4x2fv
      , rglUniformMatrix3x4fv = refUniformMatrix3x4fv
      , rglUniformMatrix4x3fv = refUniformMatrix4x3fv
      , rglColorMaski = refColorMaski
      , rglGetBooleani_v = refGetBooleani_v
      , rglGetIntegeri_v = refGetIntegeri_v
      , rglEnablei = refEnablei
      , rglDisablei = refDisablei
      , rglIsEnabledi = refIsEnabledi
      , rglBeginTransformFeedback = refBeginTransformFeedback
      , rglEndTransformFeedback = refEndTransformFeedback
      , rglBindBufferRange = refBindBufferRange
      , rglBindBufferBase = refBindBufferBase
      , rglTransformFeedbackVaryings = refTransformFeedbackVaryings
      , rglGetTransformFeedbackVarying = refGetTransformFeedbackVarying
      , rglClampColor = refClampColor
      , rglBeginConditionalRender = refBeginConditionalRender
      , rglEndConditionalRender = refEndConditionalRender
      , rglVertexAttribIPointer = refVertexAttribIPointer
      , rglGetVertexAttribIiv = refGetVertexAttribIiv
      , rglGetVertexAttribIuiv = refGetVertexAttribIuiv
      , rglVertexAttribI1i = refVertexAttribI1i
      , rglVertexAttribI2i = refVertexAttribI2i
      , rglVertexAttribI3i = refVertexAttribI3i
      , rglVertexAttribI4i = refVertexAttribI4i
      , rglVertexAttribI1ui = refVertexAttribI1ui
      , rglVertexAttribI2ui = refVertexAttribI2ui
      , rglVertexAttribI3ui = refVertexAttribI3ui
      , rglVertexAttribI4ui = refVertexAttribI4ui
      , rglVertexAttribI1iv = refVertexAttribI1iv
      , rglVertexAttribI2iv = refVertexAttribI2iv
      , rglVertexAttribI3iv = refVertexAttribI3iv
      , rglVertexAttribI4iv = refVertexAttribI4iv
      , rglVertexAttribI1uiv = refVertexAttribI1uiv
      , rglVertexAttribI2uiv = refVertexAttribI2uiv
      , rglVertexAttribI3uiv = refVertexAttribI3uiv
      , rglVertexAttribI4uiv = refVertexAttribI4uiv
      , rglVertexAttribI4bv = refVertexAttribI4bv
      , rglVertexAttribI4sv = refVertexAttribI4sv
      , rglVertexAttribI4ubv = refVertexAttribI4ubv
      , rglVertexAttribI4usv = refVertexAttribI4usv
      , rglGetUniformuiv = refGetUniformuiv
      , rglBindFragDataLocation = refBindFragDataLocation
      , rglGetFragDataLocation = refGetFragDataLocation
      , rglUniform1ui = refUniform1ui
      , rglUniform2ui = refUniform2ui
      , rglUniform3ui = refUniform3ui
      , rglUniform4ui = refUniform4ui
      , rglUniform1uiv = refUniform1uiv
      , rglUniform2uiv = refUniform2uiv
      , rglUniform3uiv = refUniform3uiv
      , rglUniform4uiv = refUniform4uiv
      , rglTexParameterIiv = refTexParameterIiv
      , rglTexParameterIuiv = refTexParameterIuiv
      , rglGetTexParameterIiv = refGetTexParameterIiv
      , rglGetTexParameterIuiv = refGetTexParameterIuiv
      , rglClearBufferiv = refClearBufferiv
      , rglClearBufferuiv = refClearBufferuiv
      , rglClearBufferfv = refClearBufferfv
      , rglClearBufferfi = refClearBufferfi
      , rglGetStringi = refGetStringi
      , rglIsRenderbuffer = refIsRenderbuffer
      , rglBindRenderbuffer = refBindRenderbuffer
      , rglDeleteRenderbuffers = refDeleteRenderbuffers
      , rglGenRenderbuffers = refGenRenderbuffers
      , rglRenderbufferStorage = refRenderbufferStorage
      , rglGetRenderbufferParameteriv = refGetRenderbufferParameteriv
      , rglIsFramebuffer = refIsFramebuffer
      , rglBindFramebuffer = refBindFramebuffer
      , rglDeleteFramebuffers = refDeleteFramebuffers
      , rglGenFramebuffers = refGenFramebuffers
      , rglCheckFramebufferStatus = refCheckFramebufferStatus
      , rglFramebufferTexture1D = refFramebufferTexture1D
      , rglFramebufferTexture2D = refFramebufferTexture2D
      , rglFramebufferTexture3D = refFramebufferTexture3D
      , rglFramebufferRenderbuffer = refFramebufferRenderbuffer
      , rglGetFramebufferAttachmentParameteriv = refGetFramebufferAttachmentParameteriv
      , rglGenerateMipmap = refGenerateMipmap
      , rglBlitFramebuffer = refBlitFramebuffer
      , rglRenderbufferStorageMultisample = refRenderbufferStorageMultisample
      , rglFramebufferTextureLayer = refFramebufferTextureLayer
      , rglMapBufferRange = refMapBufferRange
      , rglFlushMappedBufferRange = refFlushMappedBufferRange
      , rglBindVertexArray = refBindVertexArray
      , rglDeleteVertexArrays = refDeleteVertexArrays
      , rglGenVertexArrays = refGenVertexArrays
      , rglIsVertexArray = refIsVertexArray
      , rglDrawArraysInstanced = refDrawArraysInstanced
      , rglDrawElementsInstanced = refDrawElementsInstanced
      , rglTexBuffer = refTexBuffer
      , rglPrimitiveRestartIndex = refPrimitiveRestartIndex
      , rglCopyBufferSubData = refCopyBufferSubData
      , rglGetUniformIndices = refGetUniformIndices
      , rglGetActiveUniformsiv = refGetActiveUniformsiv
      , rglGetActiveUniformName = refGetActiveUniformName
      , rglGetUniformBlockIndex = refGetUniformBlockIndex
      , rglGetActiveUniformBlockiv = refGetActiveUniformBlockiv
      , rglGetActiveUniformBlockName = refGetActiveUniformBlockName
      , rglUniformBlockBinding = refUniformBlockBinding
      , rglDrawElementsBaseVertex = refDrawElementsBaseVertex
      , rglDrawRangeElementsBaseVertex = refDrawRangeElementsBaseVertex
      , rglDrawElementsInstancedBaseVertex = refDrawElementsInstancedBaseVertex
      , rglMultiDrawElementsBaseVertex = refMultiDrawElementsBaseVertex
      , rglProvokingVertex = refProvokingVertex
      , rglFenceSync = refFenceSync
      , rglIsSync = refIsSync
      , rglDeleteSync = refDeleteSync
      , rglClientWaitSync = refClientWaitSync
      , rglWaitSync = refWaitSync
      , rglGetInteger64v = refGetInteger64v
      , rglGetSynciv = refGetSynciv
      , rglGetInteger64i_v = refGetInteger64i_v
      , rglGetBufferParameteri64v = refGetBufferParameteri64v
      , rglFramebufferTexture = refFramebufferTexture
      , rglTexImage2DMultisample = refTexImage2DMultisample
      , rglTexImage3DMultisample = refTexImage3DMultisample
      , rglGetMultisamplefv = refGetMultisamplefv
      , rglSampleMaski = refSampleMaski
      , rglBindFragDataLocationIndexed = refBindFragDataLocationIndexed
      , rglGetFragDataIndex = refGetFragDataIndex
      , rglGenSamplers = refGenSamplers
      , rglDeleteSamplers = refDeleteSamplers
      , rglIsSampler = refIsSampler
      , rglBindSampler = refBindSampler
      , rglSamplerParameteri = refSamplerParameteri
      , rglSamplerParameteriv = refSamplerParameteriv
      , rglSamplerParameterf = refSamplerParameterf
      , rglSamplerParameterfv = refSamplerParameterfv
      , rglSamplerParameterIiv = refSamplerParameterIiv
      , rglSamplerParameterIuiv = refSamplerParameterIuiv
      , rglGetSamplerParameteriv = refGetSamplerParameteriv
      , rglGetSamplerParameterIiv = refGetSamplerParameterIiv
      , rglGetSamplerParameterfv = refGetSamplerParameterfv
      , rglGetSamplerParameterIuiv = refGetSamplerParameterIuiv
      , rglQueryCounter = refQueryCounter
      , rglGetQueryObjecti64v = refGetQueryObjecti64v
      , rglGetQueryObjectui64v = refGetQueryObjectui64v
      , rglVertexAttribDivisor = refVertexAttribDivisor
      , rglVertexAttribP1ui = refVertexAttribP1ui
      , rglVertexAttribP1uiv = refVertexAttribP1uiv
      , rglVertexAttribP2ui = refVertexAttribP2ui
      , rglVertexAttribP2uiv = refVertexAttribP2uiv
      , rglVertexAttribP3ui = refVertexAttribP3ui
      , rglVertexAttribP3uiv = refVertexAttribP3uiv
      , rglVertexAttribP4ui = refVertexAttribP4ui
      , rglVertexAttribP4uiv = refVertexAttribP4uiv
      , rglTexStorage1D = refTexStorage1D
      , rglTexStorage2D = refTexStorage2D
      , rglTexStorage3D = refTexStorage3D
      , rglDebugMessageControl = refDebugMessageControl
      , rglDebugMessageInsert = refDebugMessageInsert
      , rglDebugMessageCallback = refDebugMessageCallback
      , rglGetDebugMessageLog = refGetDebugMessageLog
      , rglPushDebugGroup = refPushDebugGroup
      , rglPopDebugGroup = refPopDebugGroup
      , rglObjectLabel = refObjectLabel
      , rglGetObjectLabel = refGetObjectLabel
      , rglObjectPtrLabel = refObjectPtrLabel
      , rglGetObjectPtrLabel = refGetObjectPtrLabel
      , rglGetPointerv = refGetPointerv
      , rglDebugMessageControlKHR = refDebugMessageControlKHR
      , rglDebugMessageInsertKHR = refDebugMessageInsertKHR
      , rglDebugMessageCallbackKHR = refDebugMessageCallbackKHR
      , rglGetDebugMessageLogKHR = refGetDebugMessageLogKHR
      , rglPushDebugGroupKHR = refPushDebugGroupKHR
      , rglPopDebugGroupKHR = refPopDebugGroupKHR
      , rglObjectLabelKHR = refObjectLabelKHR
      , rglGetObjectLabelKHR = refGetObjectLabelKHR
      , rglObjectPtrLabelKHR = refObjectPtrLabelKHR
      , rglGetObjectPtrLabelKHR = refGetObjectPtrLabelKHR
      , rglGetPointervKHR = refGetPointervKHR
      , rglMatrixLoadfEXT = refMatrixLoadfEXT
      , rglMatrixLoaddEXT = refMatrixLoaddEXT
      , rglMatrixMultfEXT = refMatrixMultfEXT
      , rglMatrixMultdEXT = refMatrixMultdEXT
      , rglMatrixLoadIdentityEXT = refMatrixLoadIdentityEXT
      , rglMatrixRotatefEXT = refMatrixRotatefEXT
      , rglMatrixRotatedEXT = refMatrixRotatedEXT
      , rglMatrixScalefEXT = refMatrixScalefEXT
      , rglMatrixScaledEXT = refMatrixScaledEXT
      , rglMatrixTranslatefEXT = refMatrixTranslatefEXT
      , rglMatrixTranslatedEXT = refMatrixTranslatedEXT
      , rglMatrixFrustumEXT = refMatrixFrustumEXT
      , rglMatrixOrthoEXT = refMatrixOrthoEXT
      , rglMatrixPopEXT = refMatrixPopEXT
      , rglMatrixPushEXT = refMatrixPushEXT
      , rglClientAttribDefaultEXT = refClientAttribDefaultEXT
      , rglPushClientAttribDefaultEXT = refPushClientAttribDefaultEXT
      , rglTextureParameterfEXT = refTextureParameterfEXT
      , rglTextureParameterfvEXT = refTextureParameterfvEXT
      , rglTextureParameteriEXT = refTextureParameteriEXT
      , rglTextureParameterivEXT = refTextureParameterivEXT
      , rglTextureImage1DEXT = refTextureImage1DEXT
      , rglTextureImage2DEXT = refTextureImage2DEXT
      , rglTextureSubImage1DEXT = refTextureSubImage1DEXT
      , rglTextureSubImage2DEXT = refTextureSubImage2DEXT
      , rglCopyTextureImage1DEXT = refCopyTextureImage1DEXT
      , rglCopyTextureImage2DEXT = refCopyTextureImage2DEXT
      , rglCopyTextureSubImage1DEXT = refCopyTextureSubImage1DEXT
      , rglCopyTextureSubImage2DEXT = refCopyTextureSubImage2DEXT
      , rglGetTextureImageEXT = refGetTextureImageEXT
      , rglGetTextureParameterfvEXT = refGetTextureParameterfvEXT
      , rglGetTextureParameterivEXT = refGetTextureParameterivEXT
      , rglGetTextureLevelParameterfvEXT = refGetTextureLevelParameterfvEXT
      , rglGetTextureLevelParameterivEXT = refGetTextureLevelParameterivEXT
      , rglTextureImage3DEXT = refTextureImage3DEXT
      , rglTextureSubImage3DEXT = refTextureSubImage3DEXT
      , rglCopyTextureSubImage3DEXT = refCopyTextureSubImage3DEXT
      , rglBindMultiTextureEXT = refBindMultiTextureEXT
      , rglMultiTexCoordPointerEXT = refMultiTexCoordPointerEXT
      , rglMultiTexEnvfEXT = refMultiTexEnvfEXT
      , rglMultiTexEnvfvEXT = refMultiTexEnvfvEXT
      , rglMultiTexEnviEXT = refMultiTexEnviEXT
      , rglMultiTexEnvivEXT = refMultiTexEnvivEXT
      , rglMultiTexGendEXT = refMultiTexGendEXT
      , rglMultiTexGendvEXT = refMultiTexGendvEXT
      , rglMultiTexGenfEXT = refMultiTexGenfEXT
      , rglMultiTexGenfvEXT = refMultiTexGenfvEXT
      , rglMultiTexGeniEXT = refMultiTexGeniEXT
      , rglMultiTexGenivEXT = refMultiTexGenivEXT
      , rglGetMultiTexEnvfvEXT = refGetMultiTexEnvfvEXT
      , rglGetMultiTexEnvivEXT = refGetMultiTexEnvivEXT
      , rglGetMultiTexGendvEXT = refGetMultiTexGendvEXT
      , rglGetMultiTexGenfvEXT = refGetMultiTexGenfvEXT
      , rglGetMultiTexGenivEXT = refGetMultiTexGenivEXT
      , rglMultiTexParameteriEXT = refMultiTexParameteriEXT
      , rglMultiTexParameterivEXT = refMultiTexParameterivEXT
      , rglMultiTexParameterfEXT = refMultiTexParameterfEXT
      , rglMultiTexParameterfvEXT = refMultiTexParameterfvEXT
      , rglMultiTexImage1DEXT = refMultiTexImage1DEXT
      , rglMultiTexImage2DEXT = refMultiTexImage2DEXT
      , rglMultiTexSubImage1DEXT = refMultiTexSubImage1DEXT
      , rglMultiTexSubImage2DEXT = refMultiTexSubImage2DEXT
      , rglCopyMultiTexImage1DEXT = refCopyMultiTexImage1DEXT
      , rglCopyMultiTexImage2DEXT = refCopyMultiTexImage2DEXT
      , rglCopyMultiTexSubImage1DEXT = refCopyMultiTexSubImage1DEXT
      , rglCopyMultiTexSubImage2DEXT = refCopyMultiTexSubImage2DEXT
      , rglGetMultiTexImageEXT = refGetMultiTexImageEXT
      , rglGetMultiTexParameterfvEXT = refGetMultiTexParameterfvEXT
      , rglGetMultiTexParameterivEXT = refGetMultiTexParameterivEXT
      , rglGetMultiTexLevelParameterfvEXT = refGetMultiTexLevelParameterfvEXT
      , rglGetMultiTexLevelParameterivEXT = refGetMultiTexLevelParameterivEXT
      , rglMultiTexImage3DEXT = refMultiTexImage3DEXT
      , rglMultiTexSubImage3DEXT = refMultiTexSubImage3DEXT
      , rglCopyMultiTexSubImage3DEXT = refCopyMultiTexSubImage3DEXT
      , rglEnableClientStateIndexedEXT = refEnableClientStateIndexedEXT
      , rglDisableClientStateIndexedEXT = refDisableClientStateIndexedEXT
      , rglGetFloatIndexedvEXT = refGetFloatIndexedvEXT
      , rglGetDoubleIndexedvEXT = refGetDoubleIndexedvEXT
      , rglGetPointerIndexedvEXT = refGetPointerIndexedvEXT
      , rglEnableIndexedEXT = refEnableIndexedEXT
      , rglDisableIndexedEXT = refDisableIndexedEXT
      , rglIsEnabledIndexedEXT = refIsEnabledIndexedEXT
      , rglGetIntegerIndexedvEXT = refGetIntegerIndexedvEXT
      , rglGetBooleanIndexedvEXT = refGetBooleanIndexedvEXT
      , rglCompressedTextureImage3DEXT = refCompressedTextureImage3DEXT
      , rglCompressedTextureImage2DEXT = refCompressedTextureImage2DEXT
      , rglCompressedTextureImage1DEXT = refCompressedTextureImage1DEXT
      , rglCompressedTextureSubImage3DEXT = refCompressedTextureSubImage3DEXT
      , rglCompressedTextureSubImage2DEXT = refCompressedTextureSubImage2DEXT
      , rglCompressedTextureSubImage1DEXT = refCompressedTextureSubImage1DEXT
      , rglGetCompressedTextureImageEXT = refGetCompressedTextureImageEXT
      , rglCompressedMultiTexImage3DEXT = refCompressedMultiTexImage3DEXT
      , rglCompressedMultiTexImage2DEXT = refCompressedMultiTexImage2DEXT
      , rglCompressedMultiTexImage1DEXT = refCompressedMultiTexImage1DEXT
      , rglCompressedMultiTexSubImage3DEXT = refCompressedMultiTexSubImage3DEXT
      , rglCompressedMultiTexSubImage2DEXT = refCompressedMultiTexSubImage2DEXT
      , rglCompressedMultiTexSubImage1DEXT = refCompressedMultiTexSubImage1DEXT
      , rglGetCompressedMultiTexImageEXT = refGetCompressedMultiTexImageEXT
      , rglMatrixLoadTransposefEXT = refMatrixLoadTransposefEXT
      , rglMatrixLoadTransposedEXT = refMatrixLoadTransposedEXT
      , rglMatrixMultTransposefEXT = refMatrixMultTransposefEXT
      , rglMatrixMultTransposedEXT = refMatrixMultTransposedEXT
      , rglNamedBufferDataEXT = refNamedBufferDataEXT
      , rglNamedBufferSubDataEXT = refNamedBufferSubDataEXT
      , rglMapNamedBufferEXT = refMapNamedBufferEXT
      , rglUnmapNamedBufferEXT = refUnmapNamedBufferEXT
      , rglGetNamedBufferParameterivEXT = refGetNamedBufferParameterivEXT
      , rglGetNamedBufferPointervEXT = refGetNamedBufferPointervEXT
      , rglGetNamedBufferSubDataEXT = refGetNamedBufferSubDataEXT
      , rglProgramUniform1fEXT = refProgramUniform1fEXT
      , rglProgramUniform2fEXT = refProgramUniform2fEXT
      , rglProgramUniform3fEXT = refProgramUniform3fEXT
      , rglProgramUniform4fEXT = refProgramUniform4fEXT
      , rglProgramUniform1iEXT = refProgramUniform1iEXT
      , rglProgramUniform2iEXT = refProgramUniform2iEXT
      , rglProgramUniform3iEXT = refProgramUniform3iEXT
      , rglProgramUniform4iEXT = refProgramUniform4iEXT
      , rglProgramUniform1fvEXT = refProgramUniform1fvEXT
      , rglProgramUniform2fvEXT = refProgramUniform2fvEXT
      , rglProgramUniform3fvEXT = refProgramUniform3fvEXT
      , rglProgramUniform4fvEXT = refProgramUniform4fvEXT
      , rglProgramUniform1ivEXT = refProgramUniform1ivEXT
      , rglProgramUniform2ivEXT = refProgramUniform2ivEXT
      , rglProgramUniform3ivEXT = refProgramUniform3ivEXT
      , rglProgramUniform4ivEXT = refProgramUniform4ivEXT
      , rglProgramUniformMatrix2fvEXT = refProgramUniformMatrix2fvEXT
      , rglProgramUniformMatrix3fvEXT = refProgramUniformMatrix3fvEXT
      , rglProgramUniformMatrix4fvEXT = refProgramUniformMatrix4fvEXT
      , rglProgramUniformMatrix2x3fvEXT = refProgramUniformMatrix2x3fvEXT
      , rglProgramUniformMatrix3x2fvEXT = refProgramUniformMatrix3x2fvEXT
      , rglProgramUniformMatrix2x4fvEXT = refProgramUniformMatrix2x4fvEXT
      , rglProgramUniformMatrix4x2fvEXT = refProgramUniformMatrix4x2fvEXT
      , rglProgramUniformMatrix3x4fvEXT = refProgramUniformMatrix3x4fvEXT
      , rglProgramUniformMatrix4x3fvEXT = refProgramUniformMatrix4x3fvEXT
      , rglTextureBufferEXT = refTextureBufferEXT
      , rglMultiTexBufferEXT = refMultiTexBufferEXT
      , rglTextureParameterIivEXT = refTextureParameterIivEXT
      , rglTextureParameterIuivEXT = refTextureParameterIuivEXT
      , rglGetTextureParameterIivEXT = refGetTextureParameterIivEXT
      , rglGetTextureParameterIuivEXT = refGetTextureParameterIuivEXT
      , rglMultiTexParameterIivEXT = refMultiTexParameterIivEXT
      , rglMultiTexParameterIuivEXT = refMultiTexParameterIuivEXT
      , rglGetMultiTexParameterIivEXT = refGetMultiTexParameterIivEXT
      , rglGetMultiTexParameterIuivEXT = refGetMultiTexParameterIuivEXT
      , rglProgramUniform1uiEXT = refProgramUniform1uiEXT
      , rglProgramUniform2uiEXT = refProgramUniform2uiEXT
      , rglProgramUniform3uiEXT = refProgramUniform3uiEXT
      , rglProgramUniform4uiEXT = refProgramUniform4uiEXT
      , rglProgramUniform1uivEXT = refProgramUniform1uivEXT
      , rglProgramUniform2uivEXT = refProgramUniform2uivEXT
      , rglProgramUniform3uivEXT = refProgramUniform3uivEXT
      , rglProgramUniform4uivEXT = refProgramUniform4uivEXT
      , rglNamedProgramLocalParameters4fvEXT = refNamedProgramLocalParameters4fvEXT
      , rglNamedProgramLocalParameterI4iEXT = refNamedProgramLocalParameterI4iEXT
      , rglNamedProgramLocalParameterI4ivEXT = refNamedProgramLocalParameterI4ivEXT
      , rglNamedProgramLocalParametersI4ivEXT = refNamedProgramLocalParametersI4ivEXT
      , rglNamedProgramLocalParameterI4uiEXT = refNamedProgramLocalParameterI4uiEXT
      , rglNamedProgramLocalParameterI4uivEXT = refNamedProgramLocalParameterI4uivEXT
      , rglNamedProgramLocalParametersI4uivEXT = refNamedProgramLocalParametersI4uivEXT
      , rglGetNamedProgramLocalParameterIivEXT = refGetNamedProgramLocalParameterIivEXT
      , rglGetNamedProgramLocalParameterIuivEXT = refGetNamedProgramLocalParameterIuivEXT
      , rglEnableClientStateiEXT = refEnableClientStateiEXT
      , rglDisableClientStateiEXT = refDisableClientStateiEXT
      , rglGetFloati_vEXT = refGetFloati_vEXT
      , rglGetDoublei_vEXT = refGetDoublei_vEXT
      , rglGetPointeri_vEXT = refGetPointeri_vEXT
      , rglNamedProgramStringEXT = refNamedProgramStringEXT
      , rglNamedProgramLocalParameter4dEXT = refNamedProgramLocalParameter4dEXT
      , rglNamedProgramLocalParameter4dvEXT = refNamedProgramLocalParameter4dvEXT
      , rglNamedProgramLocalParameter4fEXT = refNamedProgramLocalParameter4fEXT
      , rglNamedProgramLocalParameter4fvEXT = refNamedProgramLocalParameter4fvEXT
      , rglGetNamedProgramLocalParameterdvEXT = refGetNamedProgramLocalParameterdvEXT
      , rglGetNamedProgramLocalParameterfvEXT = refGetNamedProgramLocalParameterfvEXT
      , rglGetNamedProgramivEXT = refGetNamedProgramivEXT
      , rglGetNamedProgramStringEXT = refGetNamedProgramStringEXT
      , rglNamedRenderbufferStorageEXT = refNamedRenderbufferStorageEXT
      , rglGetNamedRenderbufferParameterivEXT = refGetNamedRenderbufferParameterivEXT
      , rglNamedRenderbufferStorageMultisampleEXT = refNamedRenderbufferStorageMultisampleEXT
      , rglNamedRenderbufferStorageMultisampleCoverageEXT = refNamedRenderbufferStorageMultisampleCoverageEXT
      , rglCheckNamedFramebufferStatusEXT = refCheckNamedFramebufferStatusEXT
      , rglNamedFramebufferTexture1DEXT = refNamedFramebufferTexture1DEXT
      , rglNamedFramebufferTexture2DEXT = refNamedFramebufferTexture2DEXT
      , rglNamedFramebufferTexture3DEXT = refNamedFramebufferTexture3DEXT
      , rglNamedFramebufferRenderbufferEXT = refNamedFramebufferRenderbufferEXT
      , rglGetNamedFramebufferAttachmentParameterivEXT = refGetNamedFramebufferAttachmentParameterivEXT
      , rglGenerateTextureMipmapEXT = refGenerateTextureMipmapEXT
      , rglGenerateMultiTexMipmapEXT = refGenerateMultiTexMipmapEXT
      , rglFramebufferDrawBufferEXT = refFramebufferDrawBufferEXT
      , rglFramebufferDrawBuffersEXT = refFramebufferDrawBuffersEXT
      , rglFramebufferReadBufferEXT = refFramebufferReadBufferEXT
      , rglGetFramebufferParameterivEXT = refGetFramebufferParameterivEXT
      , rglNamedCopyBufferSubDataEXT = refNamedCopyBufferSubDataEXT
      , rglNamedFramebufferTextureEXT = refNamedFramebufferTextureEXT
      , rglNamedFramebufferTextureLayerEXT = refNamedFramebufferTextureLayerEXT
      , rglNamedFramebufferTextureFaceEXT = refNamedFramebufferTextureFaceEXT
      , rglTextureRenderbufferEXT = refTextureRenderbufferEXT
      , rglMultiTexRenderbufferEXT = refMultiTexRenderbufferEXT
      , rglVertexArrayVertexOffsetEXT = refVertexArrayVertexOffsetEXT
      , rglVertexArrayColorOffsetEXT = refVertexArrayColorOffsetEXT
      , rglVertexArrayEdgeFlagOffsetEXT = refVertexArrayEdgeFlagOffsetEXT
      , rglVertexArrayIndexOffsetEXT = refVertexArrayIndexOffsetEXT
      , rglVertexArrayNormalOffsetEXT = refVertexArrayNormalOffsetEXT
      , rglVertexArrayTexCoordOffsetEXT = refVertexArrayTexCoordOffsetEXT
      , rglVertexArrayMultiTexCoordOffsetEXT = refVertexArrayMultiTexCoordOffsetEXT
      , rglVertexArrayFogCoordOffsetEXT = refVertexArrayFogCoordOffsetEXT
      , rglVertexArraySecondaryColorOffsetEXT = refVertexArraySecondaryColorOffsetEXT
      , rglVertexArrayVertexAttribOffsetEXT = refVertexArrayVertexAttribOffsetEXT
      , rglVertexArrayVertexAttribIOffsetEXT = refVertexArrayVertexAttribIOffsetEXT
      , rglEnableVertexArrayEXT = refEnableVertexArrayEXT
      , rglDisableVertexArrayEXT = refDisableVertexArrayEXT
      , rglEnableVertexArrayAttribEXT = refEnableVertexArrayAttribEXT
      , rglDisableVertexArrayAttribEXT = refDisableVertexArrayAttribEXT
      , rglGetVertexArrayIntegervEXT = refGetVertexArrayIntegervEXT
      , rglGetVertexArrayPointervEXT = refGetVertexArrayPointervEXT
      , rglGetVertexArrayIntegeri_vEXT = refGetVertexArrayIntegeri_vEXT
      , rglGetVertexArrayPointeri_vEXT = refGetVertexArrayPointeri_vEXT
      , rglMapNamedBufferRangeEXT = refMapNamedBufferRangeEXT
      , rglFlushMappedNamedBufferRangeEXT = refFlushMappedNamedBufferRangeEXT
      , rglNamedBufferStorageEXT = refNamedBufferStorageEXT
      , rglClearNamedBufferDataEXT = refClearNamedBufferDataEXT
      , rglClearNamedBufferSubDataEXT = refClearNamedBufferSubDataEXT
      , rglNamedFramebufferParameteriEXT = refNamedFramebufferParameteriEXT
      , rglGetNamedFramebufferParameterivEXT = refGetNamedFramebufferParameterivEXT
      , rglProgramUniform1dEXT = refProgramUniform1dEXT
      , rglProgramUniform2dEXT = refProgramUniform2dEXT
      , rglProgramUniform3dEXT = refProgramUniform3dEXT
      , rglProgramUniform4dEXT = refProgramUniform4dEXT
      , rglProgramUniform1dvEXT = refProgramUniform1dvEXT
      , rglProgramUniform2dvEXT = refProgramUniform2dvEXT
      , rglProgramUniform3dvEXT = refProgramUniform3dvEXT
      , rglProgramUniform4dvEXT = refProgramUniform4dvEXT
      , rglProgramUniformMatrix2dvEXT = refProgramUniformMatrix2dvEXT
      , rglProgramUniformMatrix3dvEXT = refProgramUniformMatrix3dvEXT
      , rglProgramUniformMatrix4dvEXT = refProgramUniformMatrix4dvEXT
      , rglProgramUniformMatrix2x3dvEXT = refProgramUniformMatrix2x3dvEXT
      , rglProgramUniformMatrix2x4dvEXT = refProgramUniformMatrix2x4dvEXT
      , rglProgramUniformMatrix3x2dvEXT = refProgramUniformMatrix3x2dvEXT
      , rglProgramUniformMatrix3x4dvEXT = refProgramUniformMatrix3x4dvEXT
      , rglProgramUniformMatrix4x2dvEXT = refProgramUniformMatrix4x2dvEXT
      , rglProgramUniformMatrix4x3dvEXT = refProgramUniformMatrix4x3dvEXT
      , rglTextureBufferRangeEXT = refTextureBufferRangeEXT
      , rglTextureStorage1DEXT = refTextureStorage1DEXT
      , rglTextureStorage2DEXT = refTextureStorage2DEXT
      , rglTextureStorage3DEXT = refTextureStorage3DEXT
      , rglTextureStorage2DMultisampleEXT = refTextureStorage2DMultisampleEXT
      , rglTextureStorage3DMultisampleEXT = refTextureStorage3DMultisampleEXT
      , rglVertexArrayBindVertexBufferEXT = refVertexArrayBindVertexBufferEXT
      , rglVertexArrayVertexAttribFormatEXT = refVertexArrayVertexAttribFormatEXT
      , rglVertexArrayVertexAttribIFormatEXT = refVertexArrayVertexAttribIFormatEXT
      , rglVertexArrayVertexAttribLFormatEXT = refVertexArrayVertexAttribLFormatEXT
      , rglVertexArrayVertexAttribBindingEXT = refVertexArrayVertexAttribBindingEXT
      , rglVertexArrayVertexBindingDivisorEXT = refVertexArrayVertexBindingDivisorEXT
      , rglVertexArrayVertexAttribLOffsetEXT = refVertexArrayVertexAttribLOffsetEXT
      , rglTexturePageCommitmentEXT = refTexturePageCommitmentEXT
      , rglVertexArrayVertexAttribDivisorEXT = refVertexArrayVertexAttribDivisorEXT
      , rglBufferStorage = refBufferStorage
      , rglUseProgramStages = refUseProgramStages
      , rglActiveShaderProgram = refActiveShaderProgram
      , rglCreateShaderProgramv = refCreateShaderProgramv
      , rglBindProgramPipeline = refBindProgramPipeline
      , rglDeleteProgramPipelines = refDeleteProgramPipelines
      , rglGenProgramPipelines = refGenProgramPipelines
      , rglIsProgramPipeline = refIsProgramPipeline
      , rglGetProgramPipelineiv = refGetProgramPipelineiv
      , rglProgramUniform1i = refProgramUniform1i
      , rglProgramUniform1iv = refProgramUniform1iv
      , rglProgramUniform1f = refProgramUniform1f
      , rglProgramUniform1fv = refProgramUniform1fv
      , rglProgramUniform1d = refProgramUniform1d
      , rglProgramUniform1dv = refProgramUniform1dv
      , rglProgramUniform1ui = refProgramUniform1ui
      , rglProgramUniform1uiv = refProgramUniform1uiv
      , rglProgramUniform2i = refProgramUniform2i
      , rglProgramUniform2iv = refProgramUniform2iv
      , rglProgramUniform2f = refProgramUniform2f
      , rglProgramUniform2fv = refProgramUniform2fv
      , rglProgramUniform2d = refProgramUniform2d
      , rglProgramUniform2dv = refProgramUniform2dv
      , rglProgramUniform2ui = refProgramUniform2ui
      , rglProgramUniform2uiv = refProgramUniform2uiv
      , rglProgramUniform3i = refProgramUniform3i
      , rglProgramUniform3iv = refProgramUniform3iv
      , rglProgramUniform3f = refProgramUniform3f
      , rglProgramUniform3fv = refProgramUniform3fv
      , rglProgramUniform3d = refProgramUniform3d
      , rglProgramUniform3dv = refProgramUniform3dv
      , rglProgramUniform3ui = refProgramUniform3ui
      , rglProgramUniform3uiv = refProgramUniform3uiv
      , rglProgramUniform4i = refProgramUniform4i
      , rglProgramUniform4iv = refProgramUniform4iv
      , rglProgramUniform4f = refProgramUniform4f
      , rglProgramUniform4fv = refProgramUniform4fv
      , rglProgramUniform4d = refProgramUniform4d
      , rglProgramUniform4dv = refProgramUniform4dv
      , rglProgramUniform4ui = refProgramUniform4ui
      , rglProgramUniform4uiv = refProgramUniform4uiv
      , rglProgramUniformMatrix2fv = refProgramUniformMatrix2fv
      , rglProgramUniformMatrix3fv = refProgramUniformMatrix3fv
      , rglProgramUniformMatrix4fv = refProgramUniformMatrix4fv
      , rglProgramUniformMatrix2dv = refProgramUniformMatrix2dv
      , rglProgramUniformMatrix3dv = refProgramUniformMatrix3dv
      , rglProgramUniformMatrix4dv = refProgramUniformMatrix4dv
      , rglProgramUniformMatrix2x3fv = refProgramUniformMatrix2x3fv
      , rglProgramUniformMatrix3x2fv = refProgramUniformMatrix3x2fv
      , rglProgramUniformMatrix2x4fv = refProgramUniformMatrix2x4fv
      , rglProgramUniformMatrix4x2fv = refProgramUniformMatrix4x2fv
      , rglProgramUniformMatrix3x4fv = refProgramUniformMatrix3x4fv
      , rglProgramUniformMatrix4x3fv = refProgramUniformMatrix4x3fv
      , rglProgramUniformMatrix2x3dv = refProgramUniformMatrix2x3dv
      , rglProgramUniformMatrix3x2dv = refProgramUniformMatrix3x2dv
      , rglProgramUniformMatrix2x4dv = refProgramUniformMatrix2x4dv
      , rglProgramUniformMatrix4x2dv = refProgramUniformMatrix4x2dv
      , rglProgramUniformMatrix3x4dv = refProgramUniformMatrix3x4dv
      , rglProgramUniformMatrix4x3dv = refProgramUniformMatrix4x3dv
      , rglValidateProgramPipeline = refValidateProgramPipeline
      , rglGetProgramPipelineInfoLog = refGetProgramPipelineInfoLog
      , rglInvalidateTexSubImage = refInvalidateTexSubImage
      , rglInvalidateTexImage = refInvalidateTexImage
      , rglInvalidateBufferSubData = refInvalidateBufferSubData
      , rglInvalidateBufferData = refInvalidateBufferData
      , rglInvalidateFramebuffer = refInvalidateFramebuffer
      , rglInvalidateSubFramebuffer = refInvalidateSubFramebuffer
    }


-- GL_VERSION_1_0

type FuntypeCullFace =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCullFace :: FunPtr FuntypeCullFace -> FuntypeCullFace
glCullFace ::
    GLenum ->
    FlextGL -> IO ( () )
glCullFace
    a0
    fgl = rglCullFace fgl

    a0

nonexistentCullFace :: FuntypeCullFace
nonexistentCullFace
    _
    = throwIO $ NonExistentOpenGLFunction "glCullFace"
type FuntypeFrontFace =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFrontFace :: FunPtr FuntypeFrontFace -> FuntypeFrontFace
glFrontFace ::
    GLenum ->
    FlextGL -> IO ( () )
glFrontFace
    a0
    fgl = rglFrontFace fgl

    a0

nonexistentFrontFace :: FuntypeFrontFace
nonexistentFrontFace
    _
    = throwIO $ NonExistentOpenGLFunction "glFrontFace"
type FuntypeHint =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynHint :: FunPtr FuntypeHint -> FuntypeHint
glHint ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glHint
    a0
    a1
    fgl = rglHint fgl

    a0
    a1

nonexistentHint :: FuntypeHint
nonexistentHint
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glHint"
type FuntypeLineWidth =
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynLineWidth :: FunPtr FuntypeLineWidth -> FuntypeLineWidth
glLineWidth ::
    GLfloat ->
    FlextGL -> IO ( () )
glLineWidth
    a0
    fgl = rglLineWidth fgl

    a0

nonexistentLineWidth :: FuntypeLineWidth
nonexistentLineWidth
    _
    = throwIO $ NonExistentOpenGLFunction "glLineWidth"
type FuntypePointSize =
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPointSize :: FunPtr FuntypePointSize -> FuntypePointSize
glPointSize ::
    GLfloat ->
    FlextGL -> IO ( () )
glPointSize
    a0
    fgl = rglPointSize fgl

    a0

nonexistentPointSize :: FuntypePointSize
nonexistentPointSize
    _
    = throwIO $ NonExistentOpenGLFunction "glPointSize"
type FuntypePolygonMode =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPolygonMode :: FunPtr FuntypePolygonMode -> FuntypePolygonMode
glPolygonMode ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glPolygonMode
    a0
    a1
    fgl = rglPolygonMode fgl

    a0
    a1

nonexistentPolygonMode :: FuntypePolygonMode
nonexistentPolygonMode
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPolygonMode"
type FuntypeScissor =
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynScissor :: FunPtr FuntypeScissor -> FuntypeScissor
glScissor ::
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glScissor
    a0
    a1
    a2
    a3
    fgl = rglScissor fgl

    a0
    a1
    a2
    a3

nonexistentScissor :: FuntypeScissor
nonexistentScissor
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glScissor"
type FuntypeTexParameterf =
    GLenum ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameterf :: FunPtr FuntypeTexParameterf -> FuntypeTexParameterf
glTexParameterf ::
    GLenum ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glTexParameterf
    a0
    a1
    a2
    fgl = rglTexParameterf fgl

    a0
    a1
    a2

nonexistentTexParameterf :: FuntypeTexParameterf
nonexistentTexParameterf
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameterf"
type FuntypeTexParameterfv =
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameterfv :: FunPtr FuntypeTexParameterfv -> FuntypeTexParameterfv
glTexParameterfv ::
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glTexParameterfv
    a0
    a1
    a2
    fgl = rglTexParameterfv fgl

    a0
    a1
    a2

nonexistentTexParameterfv :: FuntypeTexParameterfv
nonexistentTexParameterfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameterfv"
type FuntypeTexParameteri =
    GLenum ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameteri :: FunPtr FuntypeTexParameteri -> FuntypeTexParameteri
glTexParameteri ::
    GLenum ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glTexParameteri
    a0
    a1
    a2
    fgl = rglTexParameteri fgl

    a0
    a1
    a2

nonexistentTexParameteri :: FuntypeTexParameteri
nonexistentTexParameteri
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameteri"
type FuntypeTexParameteriv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameteriv :: FunPtr FuntypeTexParameteriv -> FuntypeTexParameteriv
glTexParameteriv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glTexParameteriv
    a0
    a1
    a2
    fgl = rglTexParameteriv fgl

    a0
    a1
    a2

nonexistentTexParameteriv :: FuntypeTexParameteriv
nonexistentTexParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameteriv"
type FuntypeTexImage1D =
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexImage1D :: FunPtr FuntypeTexImage1D -> FuntypeTexImage1D
glTexImage1D ::
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglTexImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentTexImage1D :: FuntypeTexImage1D
nonexistentTexImage1D
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexImage1D"
type FuntypeTexImage2D =
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexImage2D :: FunPtr FuntypeTexImage2D -> FuntypeTexImage2D
glTexImage2D ::
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglTexImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentTexImage2D :: FuntypeTexImage2D
nonexistentTexImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexImage2D"
type FuntypeDrawBuffer =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawBuffer :: FunPtr FuntypeDrawBuffer -> FuntypeDrawBuffer
glDrawBuffer ::
    GLenum ->
    FlextGL -> IO ( () )
glDrawBuffer
    a0
    fgl = rglDrawBuffer fgl

    a0

nonexistentDrawBuffer :: FuntypeDrawBuffer
nonexistentDrawBuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawBuffer"
type FuntypeClear =
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClear :: FunPtr FuntypeClear -> FuntypeClear
glClear ::
    GLbitfield ->
    FlextGL -> IO ( () )
glClear
    a0
    fgl = rglClear fgl

    a0

nonexistentClear :: FuntypeClear
nonexistentClear
    _
    = throwIO $ NonExistentOpenGLFunction "glClear"
type FuntypeClearColor =
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearColor :: FunPtr FuntypeClearColor -> FuntypeClearColor
glClearColor ::
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glClearColor
    a0
    a1
    a2
    a3
    fgl = rglClearColor fgl

    a0
    a1
    a2
    a3

nonexistentClearColor :: FuntypeClearColor
nonexistentClearColor
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearColor"
type FuntypeClearStencil =
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearStencil :: FunPtr FuntypeClearStencil -> FuntypeClearStencil
glClearStencil ::
    GLint ->
    FlextGL -> IO ( () )
glClearStencil
    a0
    fgl = rglClearStencil fgl

    a0

nonexistentClearStencil :: FuntypeClearStencil
nonexistentClearStencil
    _
    = throwIO $ NonExistentOpenGLFunction "glClearStencil"
type FuntypeClearDepth =
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearDepth :: FunPtr FuntypeClearDepth -> FuntypeClearDepth
glClearDepth ::
    GLdouble ->
    FlextGL -> IO ( () )
glClearDepth
    a0
    fgl = rglClearDepth fgl

    a0

nonexistentClearDepth :: FuntypeClearDepth
nonexistentClearDepth
    _
    = throwIO $ NonExistentOpenGLFunction "glClearDepth"
type FuntypeStencilMask =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilMask :: FunPtr FuntypeStencilMask -> FuntypeStencilMask
glStencilMask ::
    GLuint ->
    FlextGL -> IO ( () )
glStencilMask
    a0
    fgl = rglStencilMask fgl

    a0

nonexistentStencilMask :: FuntypeStencilMask
nonexistentStencilMask
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilMask"
type FuntypeColorMask =
    GLboolean ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynColorMask :: FunPtr FuntypeColorMask -> FuntypeColorMask
glColorMask ::
    GLboolean ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    FlextGL -> IO ( () )
glColorMask
    a0
    a1
    a2
    a3
    fgl = rglColorMask fgl

    a0
    a1
    a2
    a3

nonexistentColorMask :: FuntypeColorMask
nonexistentColorMask
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glColorMask"
type FuntypeDepthMask =
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDepthMask :: FunPtr FuntypeDepthMask -> FuntypeDepthMask
glDepthMask ::
    GLboolean ->
    FlextGL -> IO ( () )
glDepthMask
    a0
    fgl = rglDepthMask fgl

    a0

nonexistentDepthMask :: FuntypeDepthMask
nonexistentDepthMask
    _
    = throwIO $ NonExistentOpenGLFunction "glDepthMask"
type FuntypeDisable =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisable :: FunPtr FuntypeDisable -> FuntypeDisable
glDisable ::
    GLenum ->
    FlextGL -> IO ( () )
glDisable
    a0
    fgl = rglDisable fgl

    a0

nonexistentDisable :: FuntypeDisable
nonexistentDisable
    _
    = throwIO $ NonExistentOpenGLFunction "glDisable"
type FuntypeEnable =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnable :: FunPtr FuntypeEnable -> FuntypeEnable
glEnable ::
    GLenum ->
    FlextGL -> IO ( () )
glEnable
    a0
    fgl = rglEnable fgl

    a0

nonexistentEnable :: FuntypeEnable
nonexistentEnable
    _
    = throwIO $ NonExistentOpenGLFunction "glEnable"
type FuntypeFinish =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFinish :: FunPtr FuntypeFinish -> FuntypeFinish
glFinish ::
    FlextGL -> IO ( () )
glFinish
    fgl = rglFinish fgl


nonexistentFinish :: FuntypeFinish
nonexistentFinish
    = throwIO $ NonExistentOpenGLFunction "glFinish"
type FuntypeFlush =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFlush :: FunPtr FuntypeFlush -> FuntypeFlush
glFlush ::
    FlextGL -> IO ( () )
glFlush
    fgl = rglFlush fgl


nonexistentFlush :: FuntypeFlush
nonexistentFlush
    = throwIO $ NonExistentOpenGLFunction "glFlush"
type FuntypeBlendFunc =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlendFunc :: FunPtr FuntypeBlendFunc -> FuntypeBlendFunc
glBlendFunc ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glBlendFunc
    a0
    a1
    fgl = rglBlendFunc fgl

    a0
    a1

nonexistentBlendFunc :: FuntypeBlendFunc
nonexistentBlendFunc
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBlendFunc"
type FuntypeLogicOp =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynLogicOp :: FunPtr FuntypeLogicOp -> FuntypeLogicOp
glLogicOp ::
    GLenum ->
    FlextGL -> IO ( () )
glLogicOp
    a0
    fgl = rglLogicOp fgl

    a0

nonexistentLogicOp :: FuntypeLogicOp
nonexistentLogicOp
    _
    = throwIO $ NonExistentOpenGLFunction "glLogicOp"
type FuntypeStencilFunc =
    GLenum ->
    GLint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilFunc :: FunPtr FuntypeStencilFunc -> FuntypeStencilFunc
glStencilFunc ::
    GLenum ->
    GLint ->
    GLuint ->
    FlextGL -> IO ( () )
glStencilFunc
    a0
    a1
    a2
    fgl = rglStencilFunc fgl

    a0
    a1
    a2

nonexistentStencilFunc :: FuntypeStencilFunc
nonexistentStencilFunc
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilFunc"
type FuntypeStencilOp =
    GLenum ->
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilOp :: FunPtr FuntypeStencilOp -> FuntypeStencilOp
glStencilOp ::
    GLenum ->
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glStencilOp
    a0
    a1
    a2
    fgl = rglStencilOp fgl

    a0
    a1
    a2

nonexistentStencilOp :: FuntypeStencilOp
nonexistentStencilOp
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilOp"
type FuntypeDepthFunc =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDepthFunc :: FunPtr FuntypeDepthFunc -> FuntypeDepthFunc
glDepthFunc ::
    GLenum ->
    FlextGL -> IO ( () )
glDepthFunc
    a0
    fgl = rglDepthFunc fgl

    a0

nonexistentDepthFunc :: FuntypeDepthFunc
nonexistentDepthFunc
    _
    = throwIO $ NonExistentOpenGLFunction "glDepthFunc"
type FuntypePixelStoref =
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPixelStoref :: FunPtr FuntypePixelStoref -> FuntypePixelStoref
glPixelStoref ::
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glPixelStoref
    a0
    a1
    fgl = rglPixelStoref fgl

    a0
    a1

nonexistentPixelStoref :: FuntypePixelStoref
nonexistentPixelStoref
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPixelStoref"
type FuntypePixelStorei =
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPixelStorei :: FunPtr FuntypePixelStorei -> FuntypePixelStorei
glPixelStorei ::
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glPixelStorei
    a0
    a1
    fgl = rglPixelStorei fgl

    a0
    a1

nonexistentPixelStorei :: FuntypePixelStorei
nonexistentPixelStorei
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPixelStorei"
type FuntypeReadBuffer =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynReadBuffer :: FunPtr FuntypeReadBuffer -> FuntypeReadBuffer
glReadBuffer ::
    GLenum ->
    FlextGL -> IO ( () )
glReadBuffer
    a0
    fgl = rglReadBuffer fgl

    a0

nonexistentReadBuffer :: FuntypeReadBuffer
nonexistentReadBuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glReadBuffer"
type FuntypeReadPixels =
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynReadPixels :: FunPtr FuntypeReadPixels -> FuntypeReadPixels
glReadPixels ::
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glReadPixels
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglReadPixels fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentReadPixels :: FuntypeReadPixels
nonexistentReadPixels
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glReadPixels"
type FuntypeGetBooleanv =
    GLenum ->
    Ptr (GLboolean) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBooleanv :: FunPtr FuntypeGetBooleanv -> FuntypeGetBooleanv
glGetBooleanv ::
    GLenum ->
    Ptr (GLboolean) ->
    FlextGL -> IO ( () )
glGetBooleanv
    a0
    a1
    fgl = rglGetBooleanv fgl

    a0
    a1

nonexistentGetBooleanv :: FuntypeGetBooleanv
nonexistentGetBooleanv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBooleanv"
type FuntypeGetDoublev =
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetDoublev :: FunPtr FuntypeGetDoublev -> FuntypeGetDoublev
glGetDoublev ::
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetDoublev
    a0
    a1
    fgl = rglGetDoublev fgl

    a0
    a1

nonexistentGetDoublev :: FuntypeGetDoublev
nonexistentGetDoublev
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetDoublev"
type FuntypeGetError =
    IO ( GLenum )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetError :: FunPtr FuntypeGetError -> FuntypeGetError
glGetError ::
    FlextGL -> IO ( GLenum )
glGetError
    fgl = rglGetError fgl


nonexistentGetError :: FuntypeGetError
nonexistentGetError
    = throwIO $ NonExistentOpenGLFunction "glGetError"
type FuntypeGetFloatv =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFloatv :: FunPtr FuntypeGetFloatv -> FuntypeGetFloatv
glGetFloatv ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetFloatv
    a0
    a1
    fgl = rglGetFloatv fgl

    a0
    a1

nonexistentGetFloatv :: FuntypeGetFloatv
nonexistentGetFloatv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFloatv"
type FuntypeGetIntegerv =
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetIntegerv :: FunPtr FuntypeGetIntegerv -> FuntypeGetIntegerv
glGetIntegerv ::
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetIntegerv
    a0
    a1
    fgl = rglGetIntegerv fgl

    a0
    a1

nonexistentGetIntegerv :: FuntypeGetIntegerv
nonexistentGetIntegerv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetIntegerv"
type FuntypeGetString =
    GLenum ->
    IO ( Ptr (GLubyte) )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetString :: FunPtr FuntypeGetString -> FuntypeGetString
glGetString ::
    GLenum ->
    FlextGL -> IO ( Ptr (GLubyte) )
glGetString
    a0
    fgl = rglGetString fgl

    a0

nonexistentGetString :: FuntypeGetString
nonexistentGetString
    _
    = throwIO $ NonExistentOpenGLFunction "glGetString"
type FuntypeGetTexImage =
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexImage :: FunPtr FuntypeGetTexImage -> FuntypeGetTexImage
glGetTexImage ::
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetTexImage
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetTexImage fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetTexImage :: FuntypeGetTexImage
nonexistentGetTexImage
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexImage"
type FuntypeGetTexParameterfv =
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexParameterfv :: FunPtr FuntypeGetTexParameterfv -> FuntypeGetTexParameterfv
glGetTexParameterfv ::
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetTexParameterfv
    a0
    a1
    a2
    fgl = rglGetTexParameterfv fgl

    a0
    a1
    a2

nonexistentGetTexParameterfv :: FuntypeGetTexParameterfv
nonexistentGetTexParameterfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexParameterfv"
type FuntypeGetTexParameteriv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexParameteriv :: FunPtr FuntypeGetTexParameteriv -> FuntypeGetTexParameteriv
glGetTexParameteriv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTexParameteriv
    a0
    a1
    a2
    fgl = rglGetTexParameteriv fgl

    a0
    a1
    a2

nonexistentGetTexParameteriv :: FuntypeGetTexParameteriv
nonexistentGetTexParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexParameteriv"
type FuntypeGetTexLevelParameterfv =
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexLevelParameterfv :: FunPtr FuntypeGetTexLevelParameterfv -> FuntypeGetTexLevelParameterfv
glGetTexLevelParameterfv ::
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetTexLevelParameterfv
    a0
    a1
    a2
    a3
    fgl = rglGetTexLevelParameterfv fgl

    a0
    a1
    a2
    a3

nonexistentGetTexLevelParameterfv :: FuntypeGetTexLevelParameterfv
nonexistentGetTexLevelParameterfv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexLevelParameterfv"
type FuntypeGetTexLevelParameteriv =
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexLevelParameteriv :: FunPtr FuntypeGetTexLevelParameteriv -> FuntypeGetTexLevelParameteriv
glGetTexLevelParameteriv ::
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTexLevelParameteriv
    a0
    a1
    a2
    a3
    fgl = rglGetTexLevelParameteriv fgl

    a0
    a1
    a2
    a3

nonexistentGetTexLevelParameteriv :: FuntypeGetTexLevelParameteriv
nonexistentGetTexLevelParameteriv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexLevelParameteriv"
type FuntypeIsEnabled =
    GLenum ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsEnabled :: FunPtr FuntypeIsEnabled -> FuntypeIsEnabled
glIsEnabled ::
    GLenum ->
    FlextGL -> IO ( GLboolean )
glIsEnabled
    a0
    fgl = rglIsEnabled fgl

    a0

nonexistentIsEnabled :: FuntypeIsEnabled
nonexistentIsEnabled
    _
    = throwIO $ NonExistentOpenGLFunction "glIsEnabled"
type FuntypeDepthRange =
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDepthRange :: FunPtr FuntypeDepthRange -> FuntypeDepthRange
glDepthRange ::
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glDepthRange
    a0
    a1
    fgl = rglDepthRange fgl

    a0
    a1

nonexistentDepthRange :: FuntypeDepthRange
nonexistentDepthRange
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDepthRange"
type FuntypeViewport =
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynViewport :: FunPtr FuntypeViewport -> FuntypeViewport
glViewport ::
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glViewport
    a0
    a1
    a2
    a3
    fgl = rglViewport fgl

    a0
    a1
    a2
    a3

nonexistentViewport :: FuntypeViewport
nonexistentViewport
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glViewport"

-- GL_VERSION_1_1

type FuntypeDrawArrays =
    GLenum ->
    GLint ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawArrays :: FunPtr FuntypeDrawArrays -> FuntypeDrawArrays
glDrawArrays ::
    GLenum ->
    GLint ->
    GLsizei ->
    FlextGL -> IO ( () )
glDrawArrays
    a0
    a1
    a2
    fgl = rglDrawArrays fgl

    a0
    a1
    a2

nonexistentDrawArrays :: FuntypeDrawArrays
nonexistentDrawArrays
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawArrays"
type FuntypeDrawElements =
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawElements :: FunPtr FuntypeDrawElements -> FuntypeDrawElements
glDrawElements ::
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glDrawElements
    a0
    a1
    a2
    a3
    fgl = rglDrawElements fgl

    a0
    a1
    a2
    a3

nonexistentDrawElements :: FuntypeDrawElements
nonexistentDrawElements
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawElements"
type FuntypePolygonOffset =
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPolygonOffset :: FunPtr FuntypePolygonOffset -> FuntypePolygonOffset
glPolygonOffset ::
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glPolygonOffset
    a0
    a1
    fgl = rglPolygonOffset fgl

    a0
    a1

nonexistentPolygonOffset :: FuntypePolygonOffset
nonexistentPolygonOffset
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPolygonOffset"
type FuntypeCopyTexImage1D =
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTexImage1D :: FunPtr FuntypeCopyTexImage1D -> FuntypeCopyTexImage1D
glCopyTexImage1D ::
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyTexImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglCopyTexImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentCopyTexImage1D :: FuntypeCopyTexImage1D
nonexistentCopyTexImage1D
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTexImage1D"
type FuntypeCopyTexImage2D =
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTexImage2D :: FunPtr FuntypeCopyTexImage2D -> FuntypeCopyTexImage2D
glCopyTexImage2D ::
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyTexImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCopyTexImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCopyTexImage2D :: FuntypeCopyTexImage2D
nonexistentCopyTexImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTexImage2D"
type FuntypeCopyTexSubImage1D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTexSubImage1D :: FunPtr FuntypeCopyTexSubImage1D -> FuntypeCopyTexSubImage1D
glCopyTexSubImage1D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTexSubImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglCopyTexSubImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentCopyTexSubImage1D :: FuntypeCopyTexSubImage1D
nonexistentCopyTexSubImage1D
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTexSubImage1D"
type FuntypeCopyTexSubImage2D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTexSubImage2D :: FunPtr FuntypeCopyTexSubImage2D -> FuntypeCopyTexSubImage2D
glCopyTexSubImage2D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTexSubImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCopyTexSubImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCopyTexSubImage2D :: FuntypeCopyTexSubImage2D
nonexistentCopyTexSubImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTexSubImage2D"
type FuntypeTexSubImage1D =
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexSubImage1D :: FunPtr FuntypeTexSubImage1D -> FuntypeTexSubImage1D
glTexSubImage1D ::
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexSubImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglTexSubImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentTexSubImage1D :: FuntypeTexSubImage1D
nonexistentTexSubImage1D
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexSubImage1D"
type FuntypeTexSubImage2D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexSubImage2D :: FunPtr FuntypeTexSubImage2D -> FuntypeTexSubImage2D
glTexSubImage2D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexSubImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglTexSubImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentTexSubImage2D :: FuntypeTexSubImage2D
nonexistentTexSubImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexSubImage2D"
type FuntypeBindTexture =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindTexture :: FunPtr FuntypeBindTexture -> FuntypeBindTexture
glBindTexture ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBindTexture
    a0
    a1
    fgl = rglBindTexture fgl

    a0
    a1

nonexistentBindTexture :: FuntypeBindTexture
nonexistentBindTexture
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindTexture"
type FuntypeDeleteTextures =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteTextures :: FunPtr FuntypeDeleteTextures -> FuntypeDeleteTextures
glDeleteTextures ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteTextures
    a0
    a1
    fgl = rglDeleteTextures fgl

    a0
    a1

nonexistentDeleteTextures :: FuntypeDeleteTextures
nonexistentDeleteTextures
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteTextures"
type FuntypeGenTextures =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenTextures :: FunPtr FuntypeGenTextures -> FuntypeGenTextures
glGenTextures ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenTextures
    a0
    a1
    fgl = rglGenTextures fgl

    a0
    a1

nonexistentGenTextures :: FuntypeGenTextures
nonexistentGenTextures
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenTextures"
type FuntypeIsTexture =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsTexture :: FunPtr FuntypeIsTexture -> FuntypeIsTexture
glIsTexture ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsTexture
    a0
    fgl = rglIsTexture fgl

    a0

nonexistentIsTexture :: FuntypeIsTexture
nonexistentIsTexture
    _
    = throwIO $ NonExistentOpenGLFunction "glIsTexture"

-- GL_VERSION_1_2

type FuntypeDrawRangeElements =
    GLenum ->
    GLuint ->
    GLuint ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawRangeElements :: FunPtr FuntypeDrawRangeElements -> FuntypeDrawRangeElements
glDrawRangeElements ::
    GLenum ->
    GLuint ->
    GLuint ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glDrawRangeElements
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDrawRangeElements fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDrawRangeElements :: FuntypeDrawRangeElements
nonexistentDrawRangeElements
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawRangeElements"
type FuntypeTexImage3D =
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexImage3D :: FunPtr FuntypeTexImage3D -> FuntypeTexImage3D
glTexImage3D ::
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexImage3D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglTexImage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentTexImage3D :: FuntypeTexImage3D
nonexistentTexImage3D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexImage3D"
type FuntypeTexSubImage3D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexSubImage3D :: FunPtr FuntypeTexSubImage3D -> FuntypeTexSubImage3D
glTexSubImage3D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTexSubImage3D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    fgl = rglTexSubImage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10

nonexistentTexSubImage3D :: FuntypeTexSubImage3D
nonexistentTexSubImage3D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexSubImage3D"
type FuntypeCopyTexSubImage3D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTexSubImage3D :: FunPtr FuntypeCopyTexSubImage3D -> FuntypeCopyTexSubImage3D
glCopyTexSubImage3D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTexSubImage3D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCopyTexSubImage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCopyTexSubImage3D :: FuntypeCopyTexSubImage3D
nonexistentCopyTexSubImage3D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTexSubImage3D"

-- GL_VERSION_1_3

type FuntypeActiveTexture =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynActiveTexture :: FunPtr FuntypeActiveTexture -> FuntypeActiveTexture
glActiveTexture ::
    GLenum ->
    FlextGL -> IO ( () )
glActiveTexture
    a0
    fgl = rglActiveTexture fgl

    a0

nonexistentActiveTexture :: FuntypeActiveTexture
nonexistentActiveTexture
    _
    = throwIO $ NonExistentOpenGLFunction "glActiveTexture"
type FuntypeSampleCoverage =
    GLfloat ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSampleCoverage :: FunPtr FuntypeSampleCoverage -> FuntypeSampleCoverage
glSampleCoverage ::
    GLfloat ->
    GLboolean ->
    FlextGL -> IO ( () )
glSampleCoverage
    a0
    a1
    fgl = rglSampleCoverage fgl

    a0
    a1

nonexistentSampleCoverage :: FuntypeSampleCoverage
nonexistentSampleCoverage
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSampleCoverage"
type FuntypeCompressedTexImage3D =
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexImage3D :: FunPtr FuntypeCompressedTexImage3D -> FuntypeCompressedTexImage3D
glCompressedTexImage3D ::
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexImage3D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCompressedTexImage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCompressedTexImage3D :: FuntypeCompressedTexImage3D
nonexistentCompressedTexImage3D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexImage3D"
type FuntypeCompressedTexImage2D =
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexImage2D :: FunPtr FuntypeCompressedTexImage2D -> FuntypeCompressedTexImage2D
glCompressedTexImage2D ::
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCompressedTexImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCompressedTexImage2D :: FuntypeCompressedTexImage2D
nonexistentCompressedTexImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexImage2D"
type FuntypeCompressedTexImage1D =
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexImage1D :: FunPtr FuntypeCompressedTexImage1D -> FuntypeCompressedTexImage1D
glCompressedTexImage1D ::
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglCompressedTexImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentCompressedTexImage1D :: FuntypeCompressedTexImage1D
nonexistentCompressedTexImage1D
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexImage1D"
type FuntypeCompressedTexSubImage3D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexSubImage3D :: FunPtr FuntypeCompressedTexSubImage3D -> FuntypeCompressedTexSubImage3D
glCompressedTexSubImage3D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexSubImage3D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    fgl = rglCompressedTexSubImage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10

nonexistentCompressedTexSubImage3D :: FuntypeCompressedTexSubImage3D
nonexistentCompressedTexSubImage3D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexSubImage3D"
type FuntypeCompressedTexSubImage2D =
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexSubImage2D :: FunPtr FuntypeCompressedTexSubImage2D -> FuntypeCompressedTexSubImage2D
glCompressedTexSubImage2D ::
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexSubImage2D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCompressedTexSubImage2D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCompressedTexSubImage2D :: FuntypeCompressedTexSubImage2D
nonexistentCompressedTexSubImage2D
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexSubImage2D"
type FuntypeCompressedTexSubImage1D =
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTexSubImage1D :: FunPtr FuntypeCompressedTexSubImage1D -> FuntypeCompressedTexSubImage1D
glCompressedTexSubImage1D ::
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTexSubImage1D
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglCompressedTexSubImage1D fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentCompressedTexSubImage1D :: FuntypeCompressedTexSubImage1D
nonexistentCompressedTexSubImage1D
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTexSubImage1D"
type FuntypeGetCompressedTexImage =
    GLenum ->
    GLint ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetCompressedTexImage :: FunPtr FuntypeGetCompressedTexImage -> FuntypeGetCompressedTexImage
glGetCompressedTexImage ::
    GLenum ->
    GLint ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetCompressedTexImage
    a0
    a1
    a2
    fgl = rglGetCompressedTexImage fgl

    a0
    a1
    a2

nonexistentGetCompressedTexImage :: FuntypeGetCompressedTexImage
nonexistentGetCompressedTexImage
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetCompressedTexImage"

-- GL_VERSION_1_4

type FuntypeBlendFuncSeparate =
    GLenum ->
    GLenum ->
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlendFuncSeparate :: FunPtr FuntypeBlendFuncSeparate -> FuntypeBlendFuncSeparate
glBlendFuncSeparate ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glBlendFuncSeparate
    a0
    a1
    a2
    a3
    fgl = rglBlendFuncSeparate fgl

    a0
    a1
    a2
    a3

nonexistentBlendFuncSeparate :: FuntypeBlendFuncSeparate
nonexistentBlendFuncSeparate
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBlendFuncSeparate"
type FuntypeMultiDrawArrays =
    GLenum ->
    Ptr (GLint) ->
    Ptr (GLsizei) ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiDrawArrays :: FunPtr FuntypeMultiDrawArrays -> FuntypeMultiDrawArrays
glMultiDrawArrays ::
    GLenum ->
    Ptr (GLint) ->
    Ptr (GLsizei) ->
    GLsizei ->
    FlextGL -> IO ( () )
glMultiDrawArrays
    a0
    a1
    a2
    a3
    fgl = rglMultiDrawArrays fgl

    a0
    a1
    a2
    a3

nonexistentMultiDrawArrays :: FuntypeMultiDrawArrays
nonexistentMultiDrawArrays
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiDrawArrays"
type FuntypeMultiDrawElements =
    GLenum ->
    Ptr (GLsizei) ->
    GLenum ->
    Ptr (Ptr ()) ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiDrawElements :: FunPtr FuntypeMultiDrawElements -> FuntypeMultiDrawElements
glMultiDrawElements ::
    GLenum ->
    Ptr (GLsizei) ->
    GLenum ->
    Ptr (Ptr ()) ->
    GLsizei ->
    FlextGL -> IO ( () )
glMultiDrawElements
    a0
    a1
    a2
    a3
    a4
    fgl = rglMultiDrawElements fgl

    a0
    a1
    a2
    a3
    a4

nonexistentMultiDrawElements :: FuntypeMultiDrawElements
nonexistentMultiDrawElements
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiDrawElements"
type FuntypePointParameterf =
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPointParameterf :: FunPtr FuntypePointParameterf -> FuntypePointParameterf
glPointParameterf ::
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glPointParameterf
    a0
    a1
    fgl = rglPointParameterf fgl

    a0
    a1

nonexistentPointParameterf :: FuntypePointParameterf
nonexistentPointParameterf
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPointParameterf"
type FuntypePointParameterfv =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPointParameterfv :: FunPtr FuntypePointParameterfv -> FuntypePointParameterfv
glPointParameterfv ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glPointParameterfv
    a0
    a1
    fgl = rglPointParameterfv fgl

    a0
    a1

nonexistentPointParameterfv :: FuntypePointParameterfv
nonexistentPointParameterfv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPointParameterfv"
type FuntypePointParameteri =
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPointParameteri :: FunPtr FuntypePointParameteri -> FuntypePointParameteri
glPointParameteri ::
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glPointParameteri
    a0
    a1
    fgl = rglPointParameteri fgl

    a0
    a1

nonexistentPointParameteri :: FuntypePointParameteri
nonexistentPointParameteri
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPointParameteri"
type FuntypePointParameteriv =
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPointParameteriv :: FunPtr FuntypePointParameteriv -> FuntypePointParameteriv
glPointParameteriv ::
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glPointParameteriv
    a0
    a1
    fgl = rglPointParameteriv fgl

    a0
    a1

nonexistentPointParameteriv :: FuntypePointParameteriv
nonexistentPointParameteriv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPointParameteriv"
type FuntypeBlendColor =
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlendColor :: FunPtr FuntypeBlendColor -> FuntypeBlendColor
glBlendColor ::
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glBlendColor
    a0
    a1
    a2
    a3
    fgl = rglBlendColor fgl

    a0
    a1
    a2
    a3

nonexistentBlendColor :: FuntypeBlendColor
nonexistentBlendColor
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBlendColor"
type FuntypeBlendEquation =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlendEquation :: FunPtr FuntypeBlendEquation -> FuntypeBlendEquation
glBlendEquation ::
    GLenum ->
    FlextGL -> IO ( () )
glBlendEquation
    a0
    fgl = rglBlendEquation fgl

    a0

nonexistentBlendEquation :: FuntypeBlendEquation
nonexistentBlendEquation
    _
    = throwIO $ NonExistentOpenGLFunction "glBlendEquation"

-- GL_VERSION_1_5

type FuntypeGenQueries =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenQueries :: FunPtr FuntypeGenQueries -> FuntypeGenQueries
glGenQueries ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenQueries
    a0
    a1
    fgl = rglGenQueries fgl

    a0
    a1

nonexistentGenQueries :: FuntypeGenQueries
nonexistentGenQueries
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenQueries"
type FuntypeDeleteQueries =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteQueries :: FunPtr FuntypeDeleteQueries -> FuntypeDeleteQueries
glDeleteQueries ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteQueries
    a0
    a1
    fgl = rglDeleteQueries fgl

    a0
    a1

nonexistentDeleteQueries :: FuntypeDeleteQueries
nonexistentDeleteQueries
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteQueries"
type FuntypeIsQuery =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsQuery :: FunPtr FuntypeIsQuery -> FuntypeIsQuery
glIsQuery ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsQuery
    a0
    fgl = rglIsQuery fgl

    a0

nonexistentIsQuery :: FuntypeIsQuery
nonexistentIsQuery
    _
    = throwIO $ NonExistentOpenGLFunction "glIsQuery"
type FuntypeBeginQuery =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBeginQuery :: FunPtr FuntypeBeginQuery -> FuntypeBeginQuery
glBeginQuery ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBeginQuery
    a0
    a1
    fgl = rglBeginQuery fgl

    a0
    a1

nonexistentBeginQuery :: FuntypeBeginQuery
nonexistentBeginQuery
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBeginQuery"
type FuntypeEndQuery =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEndQuery :: FunPtr FuntypeEndQuery -> FuntypeEndQuery
glEndQuery ::
    GLenum ->
    FlextGL -> IO ( () )
glEndQuery
    a0
    fgl = rglEndQuery fgl

    a0

nonexistentEndQuery :: FuntypeEndQuery
nonexistentEndQuery
    _
    = throwIO $ NonExistentOpenGLFunction "glEndQuery"
type FuntypeGetQueryiv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetQueryiv :: FunPtr FuntypeGetQueryiv -> FuntypeGetQueryiv
glGetQueryiv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetQueryiv
    a0
    a1
    a2
    fgl = rglGetQueryiv fgl

    a0
    a1
    a2

nonexistentGetQueryiv :: FuntypeGetQueryiv
nonexistentGetQueryiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetQueryiv"
type FuntypeGetQueryObjectiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetQueryObjectiv :: FunPtr FuntypeGetQueryObjectiv -> FuntypeGetQueryObjectiv
glGetQueryObjectiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetQueryObjectiv
    a0
    a1
    a2
    fgl = rglGetQueryObjectiv fgl

    a0
    a1
    a2

nonexistentGetQueryObjectiv :: FuntypeGetQueryObjectiv
nonexistentGetQueryObjectiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetQueryObjectiv"
type FuntypeGetQueryObjectuiv =
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetQueryObjectuiv :: FunPtr FuntypeGetQueryObjectuiv -> FuntypeGetQueryObjectuiv
glGetQueryObjectuiv ::
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetQueryObjectuiv
    a0
    a1
    a2
    fgl = rglGetQueryObjectuiv fgl

    a0
    a1
    a2

nonexistentGetQueryObjectuiv :: FuntypeGetQueryObjectuiv
nonexistentGetQueryObjectuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetQueryObjectuiv"
type FuntypeBindBuffer =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindBuffer :: FunPtr FuntypeBindBuffer -> FuntypeBindBuffer
glBindBuffer ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBindBuffer
    a0
    a1
    fgl = rglBindBuffer fgl

    a0
    a1

nonexistentBindBuffer :: FuntypeBindBuffer
nonexistentBindBuffer
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindBuffer"
type FuntypeDeleteBuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteBuffers :: FunPtr FuntypeDeleteBuffers -> FuntypeDeleteBuffers
glDeleteBuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteBuffers
    a0
    a1
    fgl = rglDeleteBuffers fgl

    a0
    a1

nonexistentDeleteBuffers :: FuntypeDeleteBuffers
nonexistentDeleteBuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteBuffers"
type FuntypeGenBuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenBuffers :: FunPtr FuntypeGenBuffers -> FuntypeGenBuffers
glGenBuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenBuffers
    a0
    a1
    fgl = rglGenBuffers fgl

    a0
    a1

nonexistentGenBuffers :: FuntypeGenBuffers
nonexistentGenBuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenBuffers"
type FuntypeIsBuffer =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsBuffer :: FunPtr FuntypeIsBuffer -> FuntypeIsBuffer
glIsBuffer ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsBuffer
    a0
    fgl = rglIsBuffer fgl

    a0

nonexistentIsBuffer :: FuntypeIsBuffer
nonexistentIsBuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glIsBuffer"
type FuntypeBufferData =
    GLenum ->
    GLsizeiptr ->
    Ptr () ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBufferData :: FunPtr FuntypeBufferData -> FuntypeBufferData
glBufferData ::
    GLenum ->
    GLsizeiptr ->
    Ptr () ->
    GLenum ->
    FlextGL -> IO ( () )
glBufferData
    a0
    a1
    a2
    a3
    fgl = rglBufferData fgl

    a0
    a1
    a2
    a3

nonexistentBufferData :: FuntypeBufferData
nonexistentBufferData
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBufferData"
type FuntypeBufferSubData =
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBufferSubData :: FunPtr FuntypeBufferSubData -> FuntypeBufferSubData
glBufferSubData ::
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    FlextGL -> IO ( () )
glBufferSubData
    a0
    a1
    a2
    a3
    fgl = rglBufferSubData fgl

    a0
    a1
    a2
    a3

nonexistentBufferSubData :: FuntypeBufferSubData
nonexistentBufferSubData
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBufferSubData"
type FuntypeGetBufferSubData =
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBufferSubData :: FunPtr FuntypeGetBufferSubData -> FuntypeGetBufferSubData
glGetBufferSubData ::
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetBufferSubData
    a0
    a1
    a2
    a3
    fgl = rglGetBufferSubData fgl

    a0
    a1
    a2
    a3

nonexistentGetBufferSubData :: FuntypeGetBufferSubData
nonexistentGetBufferSubData
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBufferSubData"
type FuntypeMapBuffer =
    GLenum ->
    GLenum ->
    IO ( Ptr () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMapBuffer :: FunPtr FuntypeMapBuffer -> FuntypeMapBuffer
glMapBuffer ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( Ptr () )
glMapBuffer
    a0
    a1
    fgl = rglMapBuffer fgl

    a0
    a1

nonexistentMapBuffer :: FuntypeMapBuffer
nonexistentMapBuffer
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMapBuffer"
type FuntypeUnmapBuffer =
    GLenum ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUnmapBuffer :: FunPtr FuntypeUnmapBuffer -> FuntypeUnmapBuffer
glUnmapBuffer ::
    GLenum ->
    FlextGL -> IO ( GLboolean )
glUnmapBuffer
    a0
    fgl = rglUnmapBuffer fgl

    a0

nonexistentUnmapBuffer :: FuntypeUnmapBuffer
nonexistentUnmapBuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glUnmapBuffer"
type FuntypeGetBufferParameteriv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBufferParameteriv :: FunPtr FuntypeGetBufferParameteriv -> FuntypeGetBufferParameteriv
glGetBufferParameteriv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetBufferParameteriv
    a0
    a1
    a2
    fgl = rglGetBufferParameteriv fgl

    a0
    a1
    a2

nonexistentGetBufferParameteriv :: FuntypeGetBufferParameteriv
nonexistentGetBufferParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBufferParameteriv"
type FuntypeGetBufferPointerv =
    GLenum ->
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBufferPointerv :: FunPtr FuntypeGetBufferPointerv -> FuntypeGetBufferPointerv
glGetBufferPointerv ::
    GLenum ->
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetBufferPointerv
    a0
    a1
    a2
    fgl = rglGetBufferPointerv fgl

    a0
    a1
    a2

nonexistentGetBufferPointerv :: FuntypeGetBufferPointerv
nonexistentGetBufferPointerv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBufferPointerv"

-- GL_VERSION_2_0

type FuntypeBlendEquationSeparate =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlendEquationSeparate :: FunPtr FuntypeBlendEquationSeparate -> FuntypeBlendEquationSeparate
glBlendEquationSeparate ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glBlendEquationSeparate
    a0
    a1
    fgl = rglBlendEquationSeparate fgl

    a0
    a1

nonexistentBlendEquationSeparate :: FuntypeBlendEquationSeparate
nonexistentBlendEquationSeparate
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBlendEquationSeparate"
type FuntypeDrawBuffers =
    GLsizei ->
    Ptr (GLenum) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawBuffers :: FunPtr FuntypeDrawBuffers -> FuntypeDrawBuffers
glDrawBuffers ::
    GLsizei ->
    Ptr (GLenum) ->
    FlextGL -> IO ( () )
glDrawBuffers
    a0
    a1
    fgl = rglDrawBuffers fgl

    a0
    a1

nonexistentDrawBuffers :: FuntypeDrawBuffers
nonexistentDrawBuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawBuffers"
type FuntypeStencilOpSeparate =
    GLenum ->
    GLenum ->
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilOpSeparate :: FunPtr FuntypeStencilOpSeparate -> FuntypeStencilOpSeparate
glStencilOpSeparate ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glStencilOpSeparate
    a0
    a1
    a2
    a3
    fgl = rglStencilOpSeparate fgl

    a0
    a1
    a2
    a3

nonexistentStencilOpSeparate :: FuntypeStencilOpSeparate
nonexistentStencilOpSeparate
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilOpSeparate"
type FuntypeStencilFuncSeparate =
    GLenum ->
    GLenum ->
    GLint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilFuncSeparate :: FunPtr FuntypeStencilFuncSeparate -> FuntypeStencilFuncSeparate
glStencilFuncSeparate ::
    GLenum ->
    GLenum ->
    GLint ->
    GLuint ->
    FlextGL -> IO ( () )
glStencilFuncSeparate
    a0
    a1
    a2
    a3
    fgl = rglStencilFuncSeparate fgl

    a0
    a1
    a2
    a3

nonexistentStencilFuncSeparate :: FuntypeStencilFuncSeparate
nonexistentStencilFuncSeparate
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilFuncSeparate"
type FuntypeStencilMaskSeparate =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynStencilMaskSeparate :: FunPtr FuntypeStencilMaskSeparate -> FuntypeStencilMaskSeparate
glStencilMaskSeparate ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glStencilMaskSeparate
    a0
    a1
    fgl = rglStencilMaskSeparate fgl

    a0
    a1

nonexistentStencilMaskSeparate :: FuntypeStencilMaskSeparate
nonexistentStencilMaskSeparate
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glStencilMaskSeparate"
type FuntypeAttachShader =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynAttachShader :: FunPtr FuntypeAttachShader -> FuntypeAttachShader
glAttachShader ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glAttachShader
    a0
    a1
    fgl = rglAttachShader fgl

    a0
    a1

nonexistentAttachShader :: FuntypeAttachShader
nonexistentAttachShader
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glAttachShader"
type FuntypeBindAttribLocation =
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindAttribLocation :: FunPtr FuntypeBindAttribLocation -> FuntypeBindAttribLocation
glBindAttribLocation ::
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glBindAttribLocation
    a0
    a1
    a2
    fgl = rglBindAttribLocation fgl

    a0
    a1
    a2

nonexistentBindAttribLocation :: FuntypeBindAttribLocation
nonexistentBindAttribLocation
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindAttribLocation"
type FuntypeCompileShader =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompileShader :: FunPtr FuntypeCompileShader -> FuntypeCompileShader
glCompileShader ::
    GLuint ->
    FlextGL -> IO ( () )
glCompileShader
    a0
    fgl = rglCompileShader fgl

    a0

nonexistentCompileShader :: FuntypeCompileShader
nonexistentCompileShader
    _
    = throwIO $ NonExistentOpenGLFunction "glCompileShader"
type FuntypeCreateProgram =
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCreateProgram :: FunPtr FuntypeCreateProgram -> FuntypeCreateProgram
glCreateProgram ::
    FlextGL -> IO ( GLuint )
glCreateProgram
    fgl = rglCreateProgram fgl


nonexistentCreateProgram :: FuntypeCreateProgram
nonexistentCreateProgram
    = throwIO $ NonExistentOpenGLFunction "glCreateProgram"
type FuntypeCreateShader =
    GLenum ->
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCreateShader :: FunPtr FuntypeCreateShader -> FuntypeCreateShader
glCreateShader ::
    GLenum ->
    FlextGL -> IO ( GLuint )
glCreateShader
    a0
    fgl = rglCreateShader fgl

    a0

nonexistentCreateShader :: FuntypeCreateShader
nonexistentCreateShader
    _
    = throwIO $ NonExistentOpenGLFunction "glCreateShader"
type FuntypeDeleteProgram =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteProgram :: FunPtr FuntypeDeleteProgram -> FuntypeDeleteProgram
glDeleteProgram ::
    GLuint ->
    FlextGL -> IO ( () )
glDeleteProgram
    a0
    fgl = rglDeleteProgram fgl

    a0

nonexistentDeleteProgram :: FuntypeDeleteProgram
nonexistentDeleteProgram
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteProgram"
type FuntypeDeleteShader =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteShader :: FunPtr FuntypeDeleteShader -> FuntypeDeleteShader
glDeleteShader ::
    GLuint ->
    FlextGL -> IO ( () )
glDeleteShader
    a0
    fgl = rglDeleteShader fgl

    a0

nonexistentDeleteShader :: FuntypeDeleteShader
nonexistentDeleteShader
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteShader"
type FuntypeDetachShader =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDetachShader :: FunPtr FuntypeDetachShader -> FuntypeDetachShader
glDetachShader ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glDetachShader
    a0
    a1
    fgl = rglDetachShader fgl

    a0
    a1

nonexistentDetachShader :: FuntypeDetachShader
nonexistentDetachShader
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDetachShader"
type FuntypeDisableVertexAttribArray =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableVertexAttribArray :: FunPtr FuntypeDisableVertexAttribArray -> FuntypeDisableVertexAttribArray
glDisableVertexAttribArray ::
    GLuint ->
    FlextGL -> IO ( () )
glDisableVertexAttribArray
    a0
    fgl = rglDisableVertexAttribArray fgl

    a0

nonexistentDisableVertexAttribArray :: FuntypeDisableVertexAttribArray
nonexistentDisableVertexAttribArray
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableVertexAttribArray"
type FuntypeEnableVertexAttribArray =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableVertexAttribArray :: FunPtr FuntypeEnableVertexAttribArray -> FuntypeEnableVertexAttribArray
glEnableVertexAttribArray ::
    GLuint ->
    FlextGL -> IO ( () )
glEnableVertexAttribArray
    a0
    fgl = rglEnableVertexAttribArray fgl

    a0

nonexistentEnableVertexAttribArray :: FuntypeEnableVertexAttribArray
nonexistentEnableVertexAttribArray
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableVertexAttribArray"
type FuntypeGetActiveAttrib =
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveAttrib :: FunPtr FuntypeGetActiveAttrib -> FuntypeGetActiveAttrib
glGetActiveAttrib ::
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetActiveAttrib
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglGetActiveAttrib fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentGetActiveAttrib :: FuntypeGetActiveAttrib
nonexistentGetActiveAttrib
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveAttrib"
type FuntypeGetActiveUniform =
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveUniform :: FunPtr FuntypeGetActiveUniform -> FuntypeGetActiveUniform
glGetActiveUniform ::
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetActiveUniform
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglGetActiveUniform fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentGetActiveUniform :: FuntypeGetActiveUniform
nonexistentGetActiveUniform
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveUniform"
type FuntypeGetAttachedShaders =
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetAttachedShaders :: FunPtr FuntypeGetAttachedShaders -> FuntypeGetAttachedShaders
glGetAttachedShaders ::
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetAttachedShaders
    a0
    a1
    a2
    a3
    fgl = rglGetAttachedShaders fgl

    a0
    a1
    a2
    a3

nonexistentGetAttachedShaders :: FuntypeGetAttachedShaders
nonexistentGetAttachedShaders
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetAttachedShaders"
type FuntypeGetAttribLocation =
    GLuint ->
    Ptr (GLchar) ->
    IO ( GLint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetAttribLocation :: FunPtr FuntypeGetAttribLocation -> FuntypeGetAttribLocation
glGetAttribLocation ::
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLint )
glGetAttribLocation
    a0
    a1
    fgl = rglGetAttribLocation fgl

    a0
    a1

nonexistentGetAttribLocation :: FuntypeGetAttribLocation
nonexistentGetAttribLocation
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetAttribLocation"
type FuntypeGetProgramiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetProgramiv :: FunPtr FuntypeGetProgramiv -> FuntypeGetProgramiv
glGetProgramiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetProgramiv
    a0
    a1
    a2
    fgl = rglGetProgramiv fgl

    a0
    a1
    a2

nonexistentGetProgramiv :: FuntypeGetProgramiv
nonexistentGetProgramiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetProgramiv"
type FuntypeGetProgramInfoLog =
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetProgramInfoLog :: FunPtr FuntypeGetProgramInfoLog -> FuntypeGetProgramInfoLog
glGetProgramInfoLog ::
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetProgramInfoLog
    a0
    a1
    a2
    a3
    fgl = rglGetProgramInfoLog fgl

    a0
    a1
    a2
    a3

nonexistentGetProgramInfoLog :: FuntypeGetProgramInfoLog
nonexistentGetProgramInfoLog
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetProgramInfoLog"
type FuntypeGetShaderiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetShaderiv :: FunPtr FuntypeGetShaderiv -> FuntypeGetShaderiv
glGetShaderiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetShaderiv
    a0
    a1
    a2
    fgl = rglGetShaderiv fgl

    a0
    a1
    a2

nonexistentGetShaderiv :: FuntypeGetShaderiv
nonexistentGetShaderiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetShaderiv"
type FuntypeGetShaderInfoLog =
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetShaderInfoLog :: FunPtr FuntypeGetShaderInfoLog -> FuntypeGetShaderInfoLog
glGetShaderInfoLog ::
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetShaderInfoLog
    a0
    a1
    a2
    a3
    fgl = rglGetShaderInfoLog fgl

    a0
    a1
    a2
    a3

nonexistentGetShaderInfoLog :: FuntypeGetShaderInfoLog
nonexistentGetShaderInfoLog
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetShaderInfoLog"
type FuntypeGetShaderSource =
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetShaderSource :: FunPtr FuntypeGetShaderSource -> FuntypeGetShaderSource
glGetShaderSource ::
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetShaderSource
    a0
    a1
    a2
    a3
    fgl = rglGetShaderSource fgl

    a0
    a1
    a2
    a3

nonexistentGetShaderSource :: FuntypeGetShaderSource
nonexistentGetShaderSource
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetShaderSource"
type FuntypeGetUniformLocation =
    GLuint ->
    Ptr (GLchar) ->
    IO ( GLint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformLocation :: FunPtr FuntypeGetUniformLocation -> FuntypeGetUniformLocation
glGetUniformLocation ::
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLint )
glGetUniformLocation
    a0
    a1
    fgl = rglGetUniformLocation fgl

    a0
    a1

nonexistentGetUniformLocation :: FuntypeGetUniformLocation
nonexistentGetUniformLocation
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformLocation"
type FuntypeGetUniformfv =
    GLuint ->
    GLint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformfv :: FunPtr FuntypeGetUniformfv -> FuntypeGetUniformfv
glGetUniformfv ::
    GLuint ->
    GLint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetUniformfv
    a0
    a1
    a2
    fgl = rglGetUniformfv fgl

    a0
    a1
    a2

nonexistentGetUniformfv :: FuntypeGetUniformfv
nonexistentGetUniformfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformfv"
type FuntypeGetUniformiv =
    GLuint ->
    GLint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformiv :: FunPtr FuntypeGetUniformiv -> FuntypeGetUniformiv
glGetUniformiv ::
    GLuint ->
    GLint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetUniformiv
    a0
    a1
    a2
    fgl = rglGetUniformiv fgl

    a0
    a1
    a2

nonexistentGetUniformiv :: FuntypeGetUniformiv
nonexistentGetUniformiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformiv"
type FuntypeGetVertexAttribdv =
    GLuint ->
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribdv :: FunPtr FuntypeGetVertexAttribdv -> FuntypeGetVertexAttribdv
glGetVertexAttribdv ::
    GLuint ->
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetVertexAttribdv
    a0
    a1
    a2
    fgl = rglGetVertexAttribdv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribdv :: FuntypeGetVertexAttribdv
nonexistentGetVertexAttribdv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribdv"
type FuntypeGetVertexAttribfv =
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribfv :: FunPtr FuntypeGetVertexAttribfv -> FuntypeGetVertexAttribfv
glGetVertexAttribfv ::
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetVertexAttribfv
    a0
    a1
    a2
    fgl = rglGetVertexAttribfv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribfv :: FuntypeGetVertexAttribfv
nonexistentGetVertexAttribfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribfv"
type FuntypeGetVertexAttribiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribiv :: FunPtr FuntypeGetVertexAttribiv -> FuntypeGetVertexAttribiv
glGetVertexAttribiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetVertexAttribiv
    a0
    a1
    a2
    fgl = rglGetVertexAttribiv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribiv :: FuntypeGetVertexAttribiv
nonexistentGetVertexAttribiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribiv"
type FuntypeGetVertexAttribPointerv =
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribPointerv :: FunPtr FuntypeGetVertexAttribPointerv -> FuntypeGetVertexAttribPointerv
glGetVertexAttribPointerv ::
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetVertexAttribPointerv
    a0
    a1
    a2
    fgl = rglGetVertexAttribPointerv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribPointerv :: FuntypeGetVertexAttribPointerv
nonexistentGetVertexAttribPointerv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribPointerv"
type FuntypeIsProgram =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsProgram :: FunPtr FuntypeIsProgram -> FuntypeIsProgram
glIsProgram ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsProgram
    a0
    fgl = rglIsProgram fgl

    a0

nonexistentIsProgram :: FuntypeIsProgram
nonexistentIsProgram
    _
    = throwIO $ NonExistentOpenGLFunction "glIsProgram"
type FuntypeIsShader =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsShader :: FunPtr FuntypeIsShader -> FuntypeIsShader
glIsShader ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsShader
    a0
    fgl = rglIsShader fgl

    a0

nonexistentIsShader :: FuntypeIsShader
nonexistentIsShader
    _
    = throwIO $ NonExistentOpenGLFunction "glIsShader"
type FuntypeLinkProgram =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynLinkProgram :: FunPtr FuntypeLinkProgram -> FuntypeLinkProgram
glLinkProgram ::
    GLuint ->
    FlextGL -> IO ( () )
glLinkProgram
    a0
    fgl = rglLinkProgram fgl

    a0

nonexistentLinkProgram :: FuntypeLinkProgram
nonexistentLinkProgram
    _
    = throwIO $ NonExistentOpenGLFunction "glLinkProgram"
type FuntypeShaderSource =
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynShaderSource :: FunPtr FuntypeShaderSource -> FuntypeShaderSource
glShaderSource ::
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glShaderSource
    a0
    a1
    a2
    a3
    fgl = rglShaderSource fgl

    a0
    a1
    a2
    a3

nonexistentShaderSource :: FuntypeShaderSource
nonexistentShaderSource
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glShaderSource"
type FuntypeUseProgram =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUseProgram :: FunPtr FuntypeUseProgram -> FuntypeUseProgram
glUseProgram ::
    GLuint ->
    FlextGL -> IO ( () )
glUseProgram
    a0
    fgl = rglUseProgram fgl

    a0

nonexistentUseProgram :: FuntypeUseProgram
nonexistentUseProgram
    _
    = throwIO $ NonExistentOpenGLFunction "glUseProgram"
type FuntypeUniform1f =
    GLint ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1f :: FunPtr FuntypeUniform1f -> FuntypeUniform1f
glUniform1f ::
    GLint ->
    GLfloat ->
    FlextGL -> IO ( () )
glUniform1f
    a0
    a1
    fgl = rglUniform1f fgl

    a0
    a1

nonexistentUniform1f :: FuntypeUniform1f
nonexistentUniform1f
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1f"
type FuntypeUniform2f =
    GLint ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2f :: FunPtr FuntypeUniform2f -> FuntypeUniform2f
glUniform2f ::
    GLint ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glUniform2f
    a0
    a1
    a2
    fgl = rglUniform2f fgl

    a0
    a1
    a2

nonexistentUniform2f :: FuntypeUniform2f
nonexistentUniform2f
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2f"
type FuntypeUniform3f =
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3f :: FunPtr FuntypeUniform3f -> FuntypeUniform3f
glUniform3f ::
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glUniform3f
    a0
    a1
    a2
    a3
    fgl = rglUniform3f fgl

    a0
    a1
    a2
    a3

nonexistentUniform3f :: FuntypeUniform3f
nonexistentUniform3f
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3f"
type FuntypeUniform4f =
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4f :: FunPtr FuntypeUniform4f -> FuntypeUniform4f
glUniform4f ::
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glUniform4f
    a0
    a1
    a2
    a3
    a4
    fgl = rglUniform4f fgl

    a0
    a1
    a2
    a3
    a4

nonexistentUniform4f :: FuntypeUniform4f
nonexistentUniform4f
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4f"
type FuntypeUniform1i =
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1i :: FunPtr FuntypeUniform1i -> FuntypeUniform1i
glUniform1i ::
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glUniform1i
    a0
    a1
    fgl = rglUniform1i fgl

    a0
    a1

nonexistentUniform1i :: FuntypeUniform1i
nonexistentUniform1i
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1i"
type FuntypeUniform2i =
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2i :: FunPtr FuntypeUniform2i -> FuntypeUniform2i
glUniform2i ::
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glUniform2i
    a0
    a1
    a2
    fgl = rglUniform2i fgl

    a0
    a1
    a2

nonexistentUniform2i :: FuntypeUniform2i
nonexistentUniform2i
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2i"
type FuntypeUniform3i =
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3i :: FunPtr FuntypeUniform3i -> FuntypeUniform3i
glUniform3i ::
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glUniform3i
    a0
    a1
    a2
    a3
    fgl = rglUniform3i fgl

    a0
    a1
    a2
    a3

nonexistentUniform3i :: FuntypeUniform3i
nonexistentUniform3i
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3i"
type FuntypeUniform4i =
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4i :: FunPtr FuntypeUniform4i -> FuntypeUniform4i
glUniform4i ::
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glUniform4i
    a0
    a1
    a2
    a3
    a4
    fgl = rglUniform4i fgl

    a0
    a1
    a2
    a3
    a4

nonexistentUniform4i :: FuntypeUniform4i
nonexistentUniform4i
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4i"
type FuntypeUniform1fv =
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1fv :: FunPtr FuntypeUniform1fv -> FuntypeUniform1fv
glUniform1fv ::
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniform1fv
    a0
    a1
    a2
    fgl = rglUniform1fv fgl

    a0
    a1
    a2

nonexistentUniform1fv :: FuntypeUniform1fv
nonexistentUniform1fv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1fv"
type FuntypeUniform2fv =
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2fv :: FunPtr FuntypeUniform2fv -> FuntypeUniform2fv
glUniform2fv ::
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniform2fv
    a0
    a1
    a2
    fgl = rglUniform2fv fgl

    a0
    a1
    a2

nonexistentUniform2fv :: FuntypeUniform2fv
nonexistentUniform2fv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2fv"
type FuntypeUniform3fv =
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3fv :: FunPtr FuntypeUniform3fv -> FuntypeUniform3fv
glUniform3fv ::
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniform3fv
    a0
    a1
    a2
    fgl = rglUniform3fv fgl

    a0
    a1
    a2

nonexistentUniform3fv :: FuntypeUniform3fv
nonexistentUniform3fv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3fv"
type FuntypeUniform4fv =
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4fv :: FunPtr FuntypeUniform4fv -> FuntypeUniform4fv
glUniform4fv ::
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniform4fv
    a0
    a1
    a2
    fgl = rglUniform4fv fgl

    a0
    a1
    a2

nonexistentUniform4fv :: FuntypeUniform4fv
nonexistentUniform4fv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4fv"
type FuntypeUniform1iv =
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1iv :: FunPtr FuntypeUniform1iv -> FuntypeUniform1iv
glUniform1iv ::
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glUniform1iv
    a0
    a1
    a2
    fgl = rglUniform1iv fgl

    a0
    a1
    a2

nonexistentUniform1iv :: FuntypeUniform1iv
nonexistentUniform1iv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1iv"
type FuntypeUniform2iv =
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2iv :: FunPtr FuntypeUniform2iv -> FuntypeUniform2iv
glUniform2iv ::
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glUniform2iv
    a0
    a1
    a2
    fgl = rglUniform2iv fgl

    a0
    a1
    a2

nonexistentUniform2iv :: FuntypeUniform2iv
nonexistentUniform2iv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2iv"
type FuntypeUniform3iv =
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3iv :: FunPtr FuntypeUniform3iv -> FuntypeUniform3iv
glUniform3iv ::
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glUniform3iv
    a0
    a1
    a2
    fgl = rglUniform3iv fgl

    a0
    a1
    a2

nonexistentUniform3iv :: FuntypeUniform3iv
nonexistentUniform3iv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3iv"
type FuntypeUniform4iv =
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4iv :: FunPtr FuntypeUniform4iv -> FuntypeUniform4iv
glUniform4iv ::
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glUniform4iv
    a0
    a1
    a2
    fgl = rglUniform4iv fgl

    a0
    a1
    a2

nonexistentUniform4iv :: FuntypeUniform4iv
nonexistentUniform4iv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4iv"
type FuntypeUniformMatrix2fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix2fv :: FunPtr FuntypeUniformMatrix2fv -> FuntypeUniformMatrix2fv
glUniformMatrix2fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix2fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix2fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix2fv :: FuntypeUniformMatrix2fv
nonexistentUniformMatrix2fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix2fv"
type FuntypeUniformMatrix3fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix3fv :: FunPtr FuntypeUniformMatrix3fv -> FuntypeUniformMatrix3fv
glUniformMatrix3fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix3fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix3fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix3fv :: FuntypeUniformMatrix3fv
nonexistentUniformMatrix3fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix3fv"
type FuntypeUniformMatrix4fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix4fv :: FunPtr FuntypeUniformMatrix4fv -> FuntypeUniformMatrix4fv
glUniformMatrix4fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix4fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix4fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix4fv :: FuntypeUniformMatrix4fv
nonexistentUniformMatrix4fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix4fv"
type FuntypeValidateProgram =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynValidateProgram :: FunPtr FuntypeValidateProgram -> FuntypeValidateProgram
glValidateProgram ::
    GLuint ->
    FlextGL -> IO ( () )
glValidateProgram
    a0
    fgl = rglValidateProgram fgl

    a0

nonexistentValidateProgram :: FuntypeValidateProgram
nonexistentValidateProgram
    _
    = throwIO $ NonExistentOpenGLFunction "glValidateProgram"
type FuntypeVertexAttrib1d =
    GLuint ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1d :: FunPtr FuntypeVertexAttrib1d -> FuntypeVertexAttrib1d
glVertexAttrib1d ::
    GLuint ->
    GLdouble ->
    FlextGL -> IO ( () )
glVertexAttrib1d
    a0
    a1
    fgl = rglVertexAttrib1d fgl

    a0
    a1

nonexistentVertexAttrib1d :: FuntypeVertexAttrib1d
nonexistentVertexAttrib1d
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1d"
type FuntypeVertexAttrib1dv =
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1dv :: FunPtr FuntypeVertexAttrib1dv -> FuntypeVertexAttrib1dv
glVertexAttrib1dv ::
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glVertexAttrib1dv
    a0
    a1
    fgl = rglVertexAttrib1dv fgl

    a0
    a1

nonexistentVertexAttrib1dv :: FuntypeVertexAttrib1dv
nonexistentVertexAttrib1dv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1dv"
type FuntypeVertexAttrib1f =
    GLuint ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1f :: FunPtr FuntypeVertexAttrib1f -> FuntypeVertexAttrib1f
glVertexAttrib1f ::
    GLuint ->
    GLfloat ->
    FlextGL -> IO ( () )
glVertexAttrib1f
    a0
    a1
    fgl = rglVertexAttrib1f fgl

    a0
    a1

nonexistentVertexAttrib1f :: FuntypeVertexAttrib1f
nonexistentVertexAttrib1f
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1f"
type FuntypeVertexAttrib1fv =
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1fv :: FunPtr FuntypeVertexAttrib1fv -> FuntypeVertexAttrib1fv
glVertexAttrib1fv ::
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glVertexAttrib1fv
    a0
    a1
    fgl = rglVertexAttrib1fv fgl

    a0
    a1

nonexistentVertexAttrib1fv :: FuntypeVertexAttrib1fv
nonexistentVertexAttrib1fv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1fv"
type FuntypeVertexAttrib1s =
    GLuint ->
    GLshort ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1s :: FunPtr FuntypeVertexAttrib1s -> FuntypeVertexAttrib1s
glVertexAttrib1s ::
    GLuint ->
    GLshort ->
    FlextGL -> IO ( () )
glVertexAttrib1s
    a0
    a1
    fgl = rglVertexAttrib1s fgl

    a0
    a1

nonexistentVertexAttrib1s :: FuntypeVertexAttrib1s
nonexistentVertexAttrib1s
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1s"
type FuntypeVertexAttrib1sv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib1sv :: FunPtr FuntypeVertexAttrib1sv -> FuntypeVertexAttrib1sv
glVertexAttrib1sv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttrib1sv
    a0
    a1
    fgl = rglVertexAttrib1sv fgl

    a0
    a1

nonexistentVertexAttrib1sv :: FuntypeVertexAttrib1sv
nonexistentVertexAttrib1sv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib1sv"
type FuntypeVertexAttrib2d =
    GLuint ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2d :: FunPtr FuntypeVertexAttrib2d -> FuntypeVertexAttrib2d
glVertexAttrib2d ::
    GLuint ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glVertexAttrib2d
    a0
    a1
    a2
    fgl = rglVertexAttrib2d fgl

    a0
    a1
    a2

nonexistentVertexAttrib2d :: FuntypeVertexAttrib2d
nonexistentVertexAttrib2d
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2d"
type FuntypeVertexAttrib2dv =
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2dv :: FunPtr FuntypeVertexAttrib2dv -> FuntypeVertexAttrib2dv
glVertexAttrib2dv ::
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glVertexAttrib2dv
    a0
    a1
    fgl = rglVertexAttrib2dv fgl

    a0
    a1

nonexistentVertexAttrib2dv :: FuntypeVertexAttrib2dv
nonexistentVertexAttrib2dv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2dv"
type FuntypeVertexAttrib2f =
    GLuint ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2f :: FunPtr FuntypeVertexAttrib2f -> FuntypeVertexAttrib2f
glVertexAttrib2f ::
    GLuint ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glVertexAttrib2f
    a0
    a1
    a2
    fgl = rglVertexAttrib2f fgl

    a0
    a1
    a2

nonexistentVertexAttrib2f :: FuntypeVertexAttrib2f
nonexistentVertexAttrib2f
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2f"
type FuntypeVertexAttrib2fv =
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2fv :: FunPtr FuntypeVertexAttrib2fv -> FuntypeVertexAttrib2fv
glVertexAttrib2fv ::
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glVertexAttrib2fv
    a0
    a1
    fgl = rglVertexAttrib2fv fgl

    a0
    a1

nonexistentVertexAttrib2fv :: FuntypeVertexAttrib2fv
nonexistentVertexAttrib2fv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2fv"
type FuntypeVertexAttrib2s =
    GLuint ->
    GLshort ->
    GLshort ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2s :: FunPtr FuntypeVertexAttrib2s -> FuntypeVertexAttrib2s
glVertexAttrib2s ::
    GLuint ->
    GLshort ->
    GLshort ->
    FlextGL -> IO ( () )
glVertexAttrib2s
    a0
    a1
    a2
    fgl = rglVertexAttrib2s fgl

    a0
    a1
    a2

nonexistentVertexAttrib2s :: FuntypeVertexAttrib2s
nonexistentVertexAttrib2s
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2s"
type FuntypeVertexAttrib2sv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib2sv :: FunPtr FuntypeVertexAttrib2sv -> FuntypeVertexAttrib2sv
glVertexAttrib2sv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttrib2sv
    a0
    a1
    fgl = rglVertexAttrib2sv fgl

    a0
    a1

nonexistentVertexAttrib2sv :: FuntypeVertexAttrib2sv
nonexistentVertexAttrib2sv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib2sv"
type FuntypeVertexAttrib3d =
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3d :: FunPtr FuntypeVertexAttrib3d -> FuntypeVertexAttrib3d
glVertexAttrib3d ::
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glVertexAttrib3d
    a0
    a1
    a2
    a3
    fgl = rglVertexAttrib3d fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttrib3d :: FuntypeVertexAttrib3d
nonexistentVertexAttrib3d
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3d"
type FuntypeVertexAttrib3dv =
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3dv :: FunPtr FuntypeVertexAttrib3dv -> FuntypeVertexAttrib3dv
glVertexAttrib3dv ::
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glVertexAttrib3dv
    a0
    a1
    fgl = rglVertexAttrib3dv fgl

    a0
    a1

nonexistentVertexAttrib3dv :: FuntypeVertexAttrib3dv
nonexistentVertexAttrib3dv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3dv"
type FuntypeVertexAttrib3f =
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3f :: FunPtr FuntypeVertexAttrib3f -> FuntypeVertexAttrib3f
glVertexAttrib3f ::
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glVertexAttrib3f
    a0
    a1
    a2
    a3
    fgl = rglVertexAttrib3f fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttrib3f :: FuntypeVertexAttrib3f
nonexistentVertexAttrib3f
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3f"
type FuntypeVertexAttrib3fv =
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3fv :: FunPtr FuntypeVertexAttrib3fv -> FuntypeVertexAttrib3fv
glVertexAttrib3fv ::
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glVertexAttrib3fv
    a0
    a1
    fgl = rglVertexAttrib3fv fgl

    a0
    a1

nonexistentVertexAttrib3fv :: FuntypeVertexAttrib3fv
nonexistentVertexAttrib3fv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3fv"
type FuntypeVertexAttrib3s =
    GLuint ->
    GLshort ->
    GLshort ->
    GLshort ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3s :: FunPtr FuntypeVertexAttrib3s -> FuntypeVertexAttrib3s
glVertexAttrib3s ::
    GLuint ->
    GLshort ->
    GLshort ->
    GLshort ->
    FlextGL -> IO ( () )
glVertexAttrib3s
    a0
    a1
    a2
    a3
    fgl = rglVertexAttrib3s fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttrib3s :: FuntypeVertexAttrib3s
nonexistentVertexAttrib3s
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3s"
type FuntypeVertexAttrib3sv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib3sv :: FunPtr FuntypeVertexAttrib3sv -> FuntypeVertexAttrib3sv
glVertexAttrib3sv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttrib3sv
    a0
    a1
    fgl = rglVertexAttrib3sv fgl

    a0
    a1

nonexistentVertexAttrib3sv :: FuntypeVertexAttrib3sv
nonexistentVertexAttrib3sv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib3sv"
type FuntypeVertexAttrib4Nbv =
    GLuint ->
    Ptr (GLbyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nbv :: FunPtr FuntypeVertexAttrib4Nbv -> FuntypeVertexAttrib4Nbv
glVertexAttrib4Nbv ::
    GLuint ->
    Ptr (GLbyte) ->
    FlextGL -> IO ( () )
glVertexAttrib4Nbv
    a0
    a1
    fgl = rglVertexAttrib4Nbv fgl

    a0
    a1

nonexistentVertexAttrib4Nbv :: FuntypeVertexAttrib4Nbv
nonexistentVertexAttrib4Nbv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nbv"
type FuntypeVertexAttrib4Niv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Niv :: FunPtr FuntypeVertexAttrib4Niv -> FuntypeVertexAttrib4Niv
glVertexAttrib4Niv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttrib4Niv
    a0
    a1
    fgl = rglVertexAttrib4Niv fgl

    a0
    a1

nonexistentVertexAttrib4Niv :: FuntypeVertexAttrib4Niv
nonexistentVertexAttrib4Niv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Niv"
type FuntypeVertexAttrib4Nsv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nsv :: FunPtr FuntypeVertexAttrib4Nsv -> FuntypeVertexAttrib4Nsv
glVertexAttrib4Nsv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttrib4Nsv
    a0
    a1
    fgl = rglVertexAttrib4Nsv fgl

    a0
    a1

nonexistentVertexAttrib4Nsv :: FuntypeVertexAttrib4Nsv
nonexistentVertexAttrib4Nsv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nsv"
type FuntypeVertexAttrib4Nub =
    GLuint ->
    GLubyte ->
    GLubyte ->
    GLubyte ->
    GLubyte ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nub :: FunPtr FuntypeVertexAttrib4Nub -> FuntypeVertexAttrib4Nub
glVertexAttrib4Nub ::
    GLuint ->
    GLubyte ->
    GLubyte ->
    GLubyte ->
    GLubyte ->
    FlextGL -> IO ( () )
glVertexAttrib4Nub
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttrib4Nub fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttrib4Nub :: FuntypeVertexAttrib4Nub
nonexistentVertexAttrib4Nub
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nub"
type FuntypeVertexAttrib4Nubv =
    GLuint ->
    Ptr (GLubyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nubv :: FunPtr FuntypeVertexAttrib4Nubv -> FuntypeVertexAttrib4Nubv
glVertexAttrib4Nubv ::
    GLuint ->
    Ptr (GLubyte) ->
    FlextGL -> IO ( () )
glVertexAttrib4Nubv
    a0
    a1
    fgl = rglVertexAttrib4Nubv fgl

    a0
    a1

nonexistentVertexAttrib4Nubv :: FuntypeVertexAttrib4Nubv
nonexistentVertexAttrib4Nubv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nubv"
type FuntypeVertexAttrib4Nuiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nuiv :: FunPtr FuntypeVertexAttrib4Nuiv -> FuntypeVertexAttrib4Nuiv
glVertexAttrib4Nuiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttrib4Nuiv
    a0
    a1
    fgl = rglVertexAttrib4Nuiv fgl

    a0
    a1

nonexistentVertexAttrib4Nuiv :: FuntypeVertexAttrib4Nuiv
nonexistentVertexAttrib4Nuiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nuiv"
type FuntypeVertexAttrib4Nusv =
    GLuint ->
    Ptr (GLushort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4Nusv :: FunPtr FuntypeVertexAttrib4Nusv -> FuntypeVertexAttrib4Nusv
glVertexAttrib4Nusv ::
    GLuint ->
    Ptr (GLushort) ->
    FlextGL -> IO ( () )
glVertexAttrib4Nusv
    a0
    a1
    fgl = rglVertexAttrib4Nusv fgl

    a0
    a1

nonexistentVertexAttrib4Nusv :: FuntypeVertexAttrib4Nusv
nonexistentVertexAttrib4Nusv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4Nusv"
type FuntypeVertexAttrib4bv =
    GLuint ->
    Ptr (GLbyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4bv :: FunPtr FuntypeVertexAttrib4bv -> FuntypeVertexAttrib4bv
glVertexAttrib4bv ::
    GLuint ->
    Ptr (GLbyte) ->
    FlextGL -> IO ( () )
glVertexAttrib4bv
    a0
    a1
    fgl = rglVertexAttrib4bv fgl

    a0
    a1

nonexistentVertexAttrib4bv :: FuntypeVertexAttrib4bv
nonexistentVertexAttrib4bv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4bv"
type FuntypeVertexAttrib4d =
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4d :: FunPtr FuntypeVertexAttrib4d -> FuntypeVertexAttrib4d
glVertexAttrib4d ::
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glVertexAttrib4d
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttrib4d fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttrib4d :: FuntypeVertexAttrib4d
nonexistentVertexAttrib4d
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4d"
type FuntypeVertexAttrib4dv =
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4dv :: FunPtr FuntypeVertexAttrib4dv -> FuntypeVertexAttrib4dv
glVertexAttrib4dv ::
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glVertexAttrib4dv
    a0
    a1
    fgl = rglVertexAttrib4dv fgl

    a0
    a1

nonexistentVertexAttrib4dv :: FuntypeVertexAttrib4dv
nonexistentVertexAttrib4dv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4dv"
type FuntypeVertexAttrib4f =
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4f :: FunPtr FuntypeVertexAttrib4f -> FuntypeVertexAttrib4f
glVertexAttrib4f ::
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glVertexAttrib4f
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttrib4f fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttrib4f :: FuntypeVertexAttrib4f
nonexistentVertexAttrib4f
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4f"
type FuntypeVertexAttrib4fv =
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4fv :: FunPtr FuntypeVertexAttrib4fv -> FuntypeVertexAttrib4fv
glVertexAttrib4fv ::
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glVertexAttrib4fv
    a0
    a1
    fgl = rglVertexAttrib4fv fgl

    a0
    a1

nonexistentVertexAttrib4fv :: FuntypeVertexAttrib4fv
nonexistentVertexAttrib4fv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4fv"
type FuntypeVertexAttrib4iv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4iv :: FunPtr FuntypeVertexAttrib4iv -> FuntypeVertexAttrib4iv
glVertexAttrib4iv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttrib4iv
    a0
    a1
    fgl = rglVertexAttrib4iv fgl

    a0
    a1

nonexistentVertexAttrib4iv :: FuntypeVertexAttrib4iv
nonexistentVertexAttrib4iv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4iv"
type FuntypeVertexAttrib4s =
    GLuint ->
    GLshort ->
    GLshort ->
    GLshort ->
    GLshort ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4s :: FunPtr FuntypeVertexAttrib4s -> FuntypeVertexAttrib4s
glVertexAttrib4s ::
    GLuint ->
    GLshort ->
    GLshort ->
    GLshort ->
    GLshort ->
    FlextGL -> IO ( () )
glVertexAttrib4s
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttrib4s fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttrib4s :: FuntypeVertexAttrib4s
nonexistentVertexAttrib4s
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4s"
type FuntypeVertexAttrib4sv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4sv :: FunPtr FuntypeVertexAttrib4sv -> FuntypeVertexAttrib4sv
glVertexAttrib4sv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttrib4sv
    a0
    a1
    fgl = rglVertexAttrib4sv fgl

    a0
    a1

nonexistentVertexAttrib4sv :: FuntypeVertexAttrib4sv
nonexistentVertexAttrib4sv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4sv"
type FuntypeVertexAttrib4ubv =
    GLuint ->
    Ptr (GLubyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4ubv :: FunPtr FuntypeVertexAttrib4ubv -> FuntypeVertexAttrib4ubv
glVertexAttrib4ubv ::
    GLuint ->
    Ptr (GLubyte) ->
    FlextGL -> IO ( () )
glVertexAttrib4ubv
    a0
    a1
    fgl = rglVertexAttrib4ubv fgl

    a0
    a1

nonexistentVertexAttrib4ubv :: FuntypeVertexAttrib4ubv
nonexistentVertexAttrib4ubv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4ubv"
type FuntypeVertexAttrib4uiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4uiv :: FunPtr FuntypeVertexAttrib4uiv -> FuntypeVertexAttrib4uiv
glVertexAttrib4uiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttrib4uiv
    a0
    a1
    fgl = rglVertexAttrib4uiv fgl

    a0
    a1

nonexistentVertexAttrib4uiv :: FuntypeVertexAttrib4uiv
nonexistentVertexAttrib4uiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4uiv"
type FuntypeVertexAttrib4usv =
    GLuint ->
    Ptr (GLushort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttrib4usv :: FunPtr FuntypeVertexAttrib4usv -> FuntypeVertexAttrib4usv
glVertexAttrib4usv ::
    GLuint ->
    Ptr (GLushort) ->
    FlextGL -> IO ( () )
glVertexAttrib4usv
    a0
    a1
    fgl = rglVertexAttrib4usv fgl

    a0
    a1

nonexistentVertexAttrib4usv :: FuntypeVertexAttrib4usv
nonexistentVertexAttrib4usv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttrib4usv"
type FuntypeVertexAttribPointer =
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribPointer :: FunPtr FuntypeVertexAttribPointer -> FuntypeVertexAttribPointer
glVertexAttribPointer ::
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glVertexAttribPointer
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexAttribPointer fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexAttribPointer :: FuntypeVertexAttribPointer
nonexistentVertexAttribPointer
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribPointer"

-- GL_VERSION_2_1

type FuntypeUniformMatrix2x3fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix2x3fv :: FunPtr FuntypeUniformMatrix2x3fv -> FuntypeUniformMatrix2x3fv
glUniformMatrix2x3fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix2x3fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix2x3fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix2x3fv :: FuntypeUniformMatrix2x3fv
nonexistentUniformMatrix2x3fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix2x3fv"
type FuntypeUniformMatrix3x2fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix3x2fv :: FunPtr FuntypeUniformMatrix3x2fv -> FuntypeUniformMatrix3x2fv
glUniformMatrix3x2fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix3x2fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix3x2fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix3x2fv :: FuntypeUniformMatrix3x2fv
nonexistentUniformMatrix3x2fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix3x2fv"
type FuntypeUniformMatrix2x4fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix2x4fv :: FunPtr FuntypeUniformMatrix2x4fv -> FuntypeUniformMatrix2x4fv
glUniformMatrix2x4fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix2x4fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix2x4fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix2x4fv :: FuntypeUniformMatrix2x4fv
nonexistentUniformMatrix2x4fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix2x4fv"
type FuntypeUniformMatrix4x2fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix4x2fv :: FunPtr FuntypeUniformMatrix4x2fv -> FuntypeUniformMatrix4x2fv
glUniformMatrix4x2fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix4x2fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix4x2fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix4x2fv :: FuntypeUniformMatrix4x2fv
nonexistentUniformMatrix4x2fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix4x2fv"
type FuntypeUniformMatrix3x4fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix3x4fv :: FunPtr FuntypeUniformMatrix3x4fv -> FuntypeUniformMatrix3x4fv
glUniformMatrix3x4fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix3x4fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix3x4fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix3x4fv :: FuntypeUniformMatrix3x4fv
nonexistentUniformMatrix3x4fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix3x4fv"
type FuntypeUniformMatrix4x3fv =
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformMatrix4x3fv :: FunPtr FuntypeUniformMatrix4x3fv -> FuntypeUniformMatrix4x3fv
glUniformMatrix4x3fv ::
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glUniformMatrix4x3fv
    a0
    a1
    a2
    a3
    fgl = rglUniformMatrix4x3fv fgl

    a0
    a1
    a2
    a3

nonexistentUniformMatrix4x3fv :: FuntypeUniformMatrix4x3fv
nonexistentUniformMatrix4x3fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformMatrix4x3fv"

-- GL_VERSION_3_0

type FuntypeColorMaski =
    GLuint ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynColorMaski :: FunPtr FuntypeColorMaski -> FuntypeColorMaski
glColorMaski ::
    GLuint ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    GLboolean ->
    FlextGL -> IO ( () )
glColorMaski
    a0
    a1
    a2
    a3
    a4
    fgl = rglColorMaski fgl

    a0
    a1
    a2
    a3
    a4

nonexistentColorMaski :: FuntypeColorMaski
nonexistentColorMaski
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glColorMaski"
type FuntypeGetBooleani_v =
    GLenum ->
    GLuint ->
    Ptr (GLboolean) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBooleani_v :: FunPtr FuntypeGetBooleani_v -> FuntypeGetBooleani_v
glGetBooleani_v ::
    GLenum ->
    GLuint ->
    Ptr (GLboolean) ->
    FlextGL -> IO ( () )
glGetBooleani_v
    a0
    a1
    a2
    fgl = rglGetBooleani_v fgl

    a0
    a1
    a2

nonexistentGetBooleani_v :: FuntypeGetBooleani_v
nonexistentGetBooleani_v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBooleani_v"
type FuntypeGetIntegeri_v =
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetIntegeri_v :: FunPtr FuntypeGetIntegeri_v -> FuntypeGetIntegeri_v
glGetIntegeri_v ::
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetIntegeri_v
    a0
    a1
    a2
    fgl = rglGetIntegeri_v fgl

    a0
    a1
    a2

nonexistentGetIntegeri_v :: FuntypeGetIntegeri_v
nonexistentGetIntegeri_v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetIntegeri_v"
type FuntypeEnablei =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnablei :: FunPtr FuntypeEnablei -> FuntypeEnablei
glEnablei ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glEnablei
    a0
    a1
    fgl = rglEnablei fgl

    a0
    a1

nonexistentEnablei :: FuntypeEnablei
nonexistentEnablei
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnablei"
type FuntypeDisablei =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisablei :: FunPtr FuntypeDisablei -> FuntypeDisablei
glDisablei ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glDisablei
    a0
    a1
    fgl = rglDisablei fgl

    a0
    a1

nonexistentDisablei :: FuntypeDisablei
nonexistentDisablei
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisablei"
type FuntypeIsEnabledi =
    GLenum ->
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsEnabledi :: FunPtr FuntypeIsEnabledi -> FuntypeIsEnabledi
glIsEnabledi ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsEnabledi
    a0
    a1
    fgl = rglIsEnabledi fgl

    a0
    a1

nonexistentIsEnabledi :: FuntypeIsEnabledi
nonexistentIsEnabledi
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glIsEnabledi"
type FuntypeBeginTransformFeedback =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBeginTransformFeedback :: FunPtr FuntypeBeginTransformFeedback -> FuntypeBeginTransformFeedback
glBeginTransformFeedback ::
    GLenum ->
    FlextGL -> IO ( () )
glBeginTransformFeedback
    a0
    fgl = rglBeginTransformFeedback fgl

    a0

nonexistentBeginTransformFeedback :: FuntypeBeginTransformFeedback
nonexistentBeginTransformFeedback
    _
    = throwIO $ NonExistentOpenGLFunction "glBeginTransformFeedback"
type FuntypeEndTransformFeedback =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEndTransformFeedback :: FunPtr FuntypeEndTransformFeedback -> FuntypeEndTransformFeedback
glEndTransformFeedback ::
    FlextGL -> IO ( () )
glEndTransformFeedback
    fgl = rglEndTransformFeedback fgl


nonexistentEndTransformFeedback :: FuntypeEndTransformFeedback
nonexistentEndTransformFeedback
    = throwIO $ NonExistentOpenGLFunction "glEndTransformFeedback"
type FuntypeBindBufferRange =
    GLenum ->
    GLuint ->
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindBufferRange :: FunPtr FuntypeBindBufferRange -> FuntypeBindBufferRange
glBindBufferRange ::
    GLenum ->
    GLuint ->
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glBindBufferRange
    a0
    a1
    a2
    a3
    a4
    fgl = rglBindBufferRange fgl

    a0
    a1
    a2
    a3
    a4

nonexistentBindBufferRange :: FuntypeBindBufferRange
nonexistentBindBufferRange
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindBufferRange"
type FuntypeBindBufferBase =
    GLenum ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindBufferBase :: FunPtr FuntypeBindBufferBase -> FuntypeBindBufferBase
glBindBufferBase ::
    GLenum ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glBindBufferBase
    a0
    a1
    a2
    fgl = rglBindBufferBase fgl

    a0
    a1
    a2

nonexistentBindBufferBase :: FuntypeBindBufferBase
nonexistentBindBufferBase
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindBufferBase"
type FuntypeTransformFeedbackVaryings =
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTransformFeedbackVaryings :: FunPtr FuntypeTransformFeedbackVaryings -> FuntypeTransformFeedbackVaryings
glTransformFeedbackVaryings ::
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    GLenum ->
    FlextGL -> IO ( () )
glTransformFeedbackVaryings
    a0
    a1
    a2
    a3
    fgl = rglTransformFeedbackVaryings fgl

    a0
    a1
    a2
    a3

nonexistentTransformFeedbackVaryings :: FuntypeTransformFeedbackVaryings
nonexistentTransformFeedbackVaryings
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTransformFeedbackVaryings"
type FuntypeGetTransformFeedbackVarying =
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLsizei) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTransformFeedbackVarying :: FunPtr FuntypeGetTransformFeedbackVarying -> FuntypeGetTransformFeedbackVarying
glGetTransformFeedbackVarying ::
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLsizei) ->
    Ptr (GLenum) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetTransformFeedbackVarying
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglGetTransformFeedbackVarying fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentGetTransformFeedbackVarying :: FuntypeGetTransformFeedbackVarying
nonexistentGetTransformFeedbackVarying
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTransformFeedbackVarying"
type FuntypeClampColor =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClampColor :: FunPtr FuntypeClampColor -> FuntypeClampColor
glClampColor ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glClampColor
    a0
    a1
    fgl = rglClampColor fgl

    a0
    a1

nonexistentClampColor :: FuntypeClampColor
nonexistentClampColor
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClampColor"
type FuntypeBeginConditionalRender =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBeginConditionalRender :: FunPtr FuntypeBeginConditionalRender -> FuntypeBeginConditionalRender
glBeginConditionalRender ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glBeginConditionalRender
    a0
    a1
    fgl = rglBeginConditionalRender fgl

    a0
    a1

nonexistentBeginConditionalRender :: FuntypeBeginConditionalRender
nonexistentBeginConditionalRender
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBeginConditionalRender"
type FuntypeEndConditionalRender =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEndConditionalRender :: FunPtr FuntypeEndConditionalRender -> FuntypeEndConditionalRender
glEndConditionalRender ::
    FlextGL -> IO ( () )
glEndConditionalRender
    fgl = rglEndConditionalRender fgl


nonexistentEndConditionalRender :: FuntypeEndConditionalRender
nonexistentEndConditionalRender
    = throwIO $ NonExistentOpenGLFunction "glEndConditionalRender"
type FuntypeVertexAttribIPointer =
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribIPointer :: FunPtr FuntypeVertexAttribIPointer -> FuntypeVertexAttribIPointer
glVertexAttribIPointer ::
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glVertexAttribIPointer
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttribIPointer fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttribIPointer :: FuntypeVertexAttribIPointer
nonexistentVertexAttribIPointer
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribIPointer"
type FuntypeGetVertexAttribIiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribIiv :: FunPtr FuntypeGetVertexAttribIiv -> FuntypeGetVertexAttribIiv
glGetVertexAttribIiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetVertexAttribIiv
    a0
    a1
    a2
    fgl = rglGetVertexAttribIiv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribIiv :: FuntypeGetVertexAttribIiv
nonexistentGetVertexAttribIiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribIiv"
type FuntypeGetVertexAttribIuiv =
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexAttribIuiv :: FunPtr FuntypeGetVertexAttribIuiv -> FuntypeGetVertexAttribIuiv
glGetVertexAttribIuiv ::
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetVertexAttribIuiv
    a0
    a1
    a2
    fgl = rglGetVertexAttribIuiv fgl

    a0
    a1
    a2

nonexistentGetVertexAttribIuiv :: FuntypeGetVertexAttribIuiv
nonexistentGetVertexAttribIuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexAttribIuiv"
type FuntypeVertexAttribI1i =
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI1i :: FunPtr FuntypeVertexAttribI1i -> FuntypeVertexAttribI1i
glVertexAttribI1i ::
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glVertexAttribI1i
    a0
    a1
    fgl = rglVertexAttribI1i fgl

    a0
    a1

nonexistentVertexAttribI1i :: FuntypeVertexAttribI1i
nonexistentVertexAttribI1i
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI1i"
type FuntypeVertexAttribI2i =
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI2i :: FunPtr FuntypeVertexAttribI2i -> FuntypeVertexAttribI2i
glVertexAttribI2i ::
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glVertexAttribI2i
    a0
    a1
    a2
    fgl = rglVertexAttribI2i fgl

    a0
    a1
    a2

nonexistentVertexAttribI2i :: FuntypeVertexAttribI2i
nonexistentVertexAttribI2i
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI2i"
type FuntypeVertexAttribI3i =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI3i :: FunPtr FuntypeVertexAttribI3i -> FuntypeVertexAttribI3i
glVertexAttribI3i ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glVertexAttribI3i
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribI3i fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribI3i :: FuntypeVertexAttribI3i
nonexistentVertexAttribI3i
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI3i"
type FuntypeVertexAttribI4i =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4i :: FunPtr FuntypeVertexAttribI4i -> FuntypeVertexAttribI4i
glVertexAttribI4i ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glVertexAttribI4i
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttribI4i fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttribI4i :: FuntypeVertexAttribI4i
nonexistentVertexAttribI4i
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4i"
type FuntypeVertexAttribI1ui =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI1ui :: FunPtr FuntypeVertexAttribI1ui -> FuntypeVertexAttribI1ui
glVertexAttribI1ui ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribI1ui
    a0
    a1
    fgl = rglVertexAttribI1ui fgl

    a0
    a1

nonexistentVertexAttribI1ui :: FuntypeVertexAttribI1ui
nonexistentVertexAttribI1ui
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI1ui"
type FuntypeVertexAttribI2ui =
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI2ui :: FunPtr FuntypeVertexAttribI2ui -> FuntypeVertexAttribI2ui
glVertexAttribI2ui ::
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribI2ui
    a0
    a1
    a2
    fgl = rglVertexAttribI2ui fgl

    a0
    a1
    a2

nonexistentVertexAttribI2ui :: FuntypeVertexAttribI2ui
nonexistentVertexAttribI2ui
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI2ui"
type FuntypeVertexAttribI3ui =
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI3ui :: FunPtr FuntypeVertexAttribI3ui -> FuntypeVertexAttribI3ui
glVertexAttribI3ui ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribI3ui
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribI3ui fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribI3ui :: FuntypeVertexAttribI3ui
nonexistentVertexAttribI3ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI3ui"
type FuntypeVertexAttribI4ui =
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4ui :: FunPtr FuntypeVertexAttribI4ui -> FuntypeVertexAttribI4ui
glVertexAttribI4ui ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribI4ui
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexAttribI4ui fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexAttribI4ui :: FuntypeVertexAttribI4ui
nonexistentVertexAttribI4ui
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4ui"
type FuntypeVertexAttribI1iv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI1iv :: FunPtr FuntypeVertexAttribI1iv -> FuntypeVertexAttribI1iv
glVertexAttribI1iv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttribI1iv
    a0
    a1
    fgl = rglVertexAttribI1iv fgl

    a0
    a1

nonexistentVertexAttribI1iv :: FuntypeVertexAttribI1iv
nonexistentVertexAttribI1iv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI1iv"
type FuntypeVertexAttribI2iv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI2iv :: FunPtr FuntypeVertexAttribI2iv -> FuntypeVertexAttribI2iv
glVertexAttribI2iv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttribI2iv
    a0
    a1
    fgl = rglVertexAttribI2iv fgl

    a0
    a1

nonexistentVertexAttribI2iv :: FuntypeVertexAttribI2iv
nonexistentVertexAttribI2iv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI2iv"
type FuntypeVertexAttribI3iv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI3iv :: FunPtr FuntypeVertexAttribI3iv -> FuntypeVertexAttribI3iv
glVertexAttribI3iv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttribI3iv
    a0
    a1
    fgl = rglVertexAttribI3iv fgl

    a0
    a1

nonexistentVertexAttribI3iv :: FuntypeVertexAttribI3iv
nonexistentVertexAttribI3iv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI3iv"
type FuntypeVertexAttribI4iv =
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4iv :: FunPtr FuntypeVertexAttribI4iv -> FuntypeVertexAttribI4iv
glVertexAttribI4iv ::
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glVertexAttribI4iv
    a0
    a1
    fgl = rglVertexAttribI4iv fgl

    a0
    a1

nonexistentVertexAttribI4iv :: FuntypeVertexAttribI4iv
nonexistentVertexAttribI4iv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4iv"
type FuntypeVertexAttribI1uiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI1uiv :: FunPtr FuntypeVertexAttribI1uiv -> FuntypeVertexAttribI1uiv
glVertexAttribI1uiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribI1uiv
    a0
    a1
    fgl = rglVertexAttribI1uiv fgl

    a0
    a1

nonexistentVertexAttribI1uiv :: FuntypeVertexAttribI1uiv
nonexistentVertexAttribI1uiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI1uiv"
type FuntypeVertexAttribI2uiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI2uiv :: FunPtr FuntypeVertexAttribI2uiv -> FuntypeVertexAttribI2uiv
glVertexAttribI2uiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribI2uiv
    a0
    a1
    fgl = rglVertexAttribI2uiv fgl

    a0
    a1

nonexistentVertexAttribI2uiv :: FuntypeVertexAttribI2uiv
nonexistentVertexAttribI2uiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI2uiv"
type FuntypeVertexAttribI3uiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI3uiv :: FunPtr FuntypeVertexAttribI3uiv -> FuntypeVertexAttribI3uiv
glVertexAttribI3uiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribI3uiv
    a0
    a1
    fgl = rglVertexAttribI3uiv fgl

    a0
    a1

nonexistentVertexAttribI3uiv :: FuntypeVertexAttribI3uiv
nonexistentVertexAttribI3uiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI3uiv"
type FuntypeVertexAttribI4uiv =
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4uiv :: FunPtr FuntypeVertexAttribI4uiv -> FuntypeVertexAttribI4uiv
glVertexAttribI4uiv ::
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribI4uiv
    a0
    a1
    fgl = rglVertexAttribI4uiv fgl

    a0
    a1

nonexistentVertexAttribI4uiv :: FuntypeVertexAttribI4uiv
nonexistentVertexAttribI4uiv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4uiv"
type FuntypeVertexAttribI4bv =
    GLuint ->
    Ptr (GLbyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4bv :: FunPtr FuntypeVertexAttribI4bv -> FuntypeVertexAttribI4bv
glVertexAttribI4bv ::
    GLuint ->
    Ptr (GLbyte) ->
    FlextGL -> IO ( () )
glVertexAttribI4bv
    a0
    a1
    fgl = rglVertexAttribI4bv fgl

    a0
    a1

nonexistentVertexAttribI4bv :: FuntypeVertexAttribI4bv
nonexistentVertexAttribI4bv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4bv"
type FuntypeVertexAttribI4sv =
    GLuint ->
    Ptr (GLshort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4sv :: FunPtr FuntypeVertexAttribI4sv -> FuntypeVertexAttribI4sv
glVertexAttribI4sv ::
    GLuint ->
    Ptr (GLshort) ->
    FlextGL -> IO ( () )
glVertexAttribI4sv
    a0
    a1
    fgl = rglVertexAttribI4sv fgl

    a0
    a1

nonexistentVertexAttribI4sv :: FuntypeVertexAttribI4sv
nonexistentVertexAttribI4sv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4sv"
type FuntypeVertexAttribI4ubv =
    GLuint ->
    Ptr (GLubyte) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4ubv :: FunPtr FuntypeVertexAttribI4ubv -> FuntypeVertexAttribI4ubv
glVertexAttribI4ubv ::
    GLuint ->
    Ptr (GLubyte) ->
    FlextGL -> IO ( () )
glVertexAttribI4ubv
    a0
    a1
    fgl = rglVertexAttribI4ubv fgl

    a0
    a1

nonexistentVertexAttribI4ubv :: FuntypeVertexAttribI4ubv
nonexistentVertexAttribI4ubv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4ubv"
type FuntypeVertexAttribI4usv =
    GLuint ->
    Ptr (GLushort) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribI4usv :: FunPtr FuntypeVertexAttribI4usv -> FuntypeVertexAttribI4usv
glVertexAttribI4usv ::
    GLuint ->
    Ptr (GLushort) ->
    FlextGL -> IO ( () )
glVertexAttribI4usv
    a0
    a1
    fgl = rglVertexAttribI4usv fgl

    a0
    a1

nonexistentVertexAttribI4usv :: FuntypeVertexAttribI4usv
nonexistentVertexAttribI4usv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribI4usv"
type FuntypeGetUniformuiv =
    GLuint ->
    GLint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformuiv :: FunPtr FuntypeGetUniformuiv -> FuntypeGetUniformuiv
glGetUniformuiv ::
    GLuint ->
    GLint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetUniformuiv
    a0
    a1
    a2
    fgl = rglGetUniformuiv fgl

    a0
    a1
    a2

nonexistentGetUniformuiv :: FuntypeGetUniformuiv
nonexistentGetUniformuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformuiv"
type FuntypeBindFragDataLocation =
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindFragDataLocation :: FunPtr FuntypeBindFragDataLocation -> FuntypeBindFragDataLocation
glBindFragDataLocation ::
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glBindFragDataLocation
    a0
    a1
    a2
    fgl = rglBindFragDataLocation fgl

    a0
    a1
    a2

nonexistentBindFragDataLocation :: FuntypeBindFragDataLocation
nonexistentBindFragDataLocation
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindFragDataLocation"
type FuntypeGetFragDataLocation =
    GLuint ->
    Ptr (GLchar) ->
    IO ( GLint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFragDataLocation :: FunPtr FuntypeGetFragDataLocation -> FuntypeGetFragDataLocation
glGetFragDataLocation ::
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLint )
glGetFragDataLocation
    a0
    a1
    fgl = rglGetFragDataLocation fgl

    a0
    a1

nonexistentGetFragDataLocation :: FuntypeGetFragDataLocation
nonexistentGetFragDataLocation
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFragDataLocation"
type FuntypeUniform1ui =
    GLint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1ui :: FunPtr FuntypeUniform1ui -> FuntypeUniform1ui
glUniform1ui ::
    GLint ->
    GLuint ->
    FlextGL -> IO ( () )
glUniform1ui
    a0
    a1
    fgl = rglUniform1ui fgl

    a0
    a1

nonexistentUniform1ui :: FuntypeUniform1ui
nonexistentUniform1ui
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1ui"
type FuntypeUniform2ui =
    GLint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2ui :: FunPtr FuntypeUniform2ui -> FuntypeUniform2ui
glUniform2ui ::
    GLint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glUniform2ui
    a0
    a1
    a2
    fgl = rglUniform2ui fgl

    a0
    a1
    a2

nonexistentUniform2ui :: FuntypeUniform2ui
nonexistentUniform2ui
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2ui"
type FuntypeUniform3ui =
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3ui :: FunPtr FuntypeUniform3ui -> FuntypeUniform3ui
glUniform3ui ::
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glUniform3ui
    a0
    a1
    a2
    a3
    fgl = rglUniform3ui fgl

    a0
    a1
    a2
    a3

nonexistentUniform3ui :: FuntypeUniform3ui
nonexistentUniform3ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3ui"
type FuntypeUniform4ui =
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4ui :: FunPtr FuntypeUniform4ui -> FuntypeUniform4ui
glUniform4ui ::
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glUniform4ui
    a0
    a1
    a2
    a3
    a4
    fgl = rglUniform4ui fgl

    a0
    a1
    a2
    a3
    a4

nonexistentUniform4ui :: FuntypeUniform4ui
nonexistentUniform4ui
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4ui"
type FuntypeUniform1uiv =
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform1uiv :: FunPtr FuntypeUniform1uiv -> FuntypeUniform1uiv
glUniform1uiv ::
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glUniform1uiv
    a0
    a1
    a2
    fgl = rglUniform1uiv fgl

    a0
    a1
    a2

nonexistentUniform1uiv :: FuntypeUniform1uiv
nonexistentUniform1uiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform1uiv"
type FuntypeUniform2uiv =
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform2uiv :: FunPtr FuntypeUniform2uiv -> FuntypeUniform2uiv
glUniform2uiv ::
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glUniform2uiv
    a0
    a1
    a2
    fgl = rglUniform2uiv fgl

    a0
    a1
    a2

nonexistentUniform2uiv :: FuntypeUniform2uiv
nonexistentUniform2uiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform2uiv"
type FuntypeUniform3uiv =
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform3uiv :: FunPtr FuntypeUniform3uiv -> FuntypeUniform3uiv
glUniform3uiv ::
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glUniform3uiv
    a0
    a1
    a2
    fgl = rglUniform3uiv fgl

    a0
    a1
    a2

nonexistentUniform3uiv :: FuntypeUniform3uiv
nonexistentUniform3uiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform3uiv"
type FuntypeUniform4uiv =
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniform4uiv :: FunPtr FuntypeUniform4uiv -> FuntypeUniform4uiv
glUniform4uiv ::
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glUniform4uiv
    a0
    a1
    a2
    fgl = rglUniform4uiv fgl

    a0
    a1
    a2

nonexistentUniform4uiv :: FuntypeUniform4uiv
nonexistentUniform4uiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniform4uiv"
type FuntypeTexParameterIiv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameterIiv :: FunPtr FuntypeTexParameterIiv -> FuntypeTexParameterIiv
glTexParameterIiv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glTexParameterIiv
    a0
    a1
    a2
    fgl = rglTexParameterIiv fgl

    a0
    a1
    a2

nonexistentTexParameterIiv :: FuntypeTexParameterIiv
nonexistentTexParameterIiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameterIiv"
type FuntypeTexParameterIuiv =
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexParameterIuiv :: FunPtr FuntypeTexParameterIuiv -> FuntypeTexParameterIuiv
glTexParameterIuiv ::
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glTexParameterIuiv
    a0
    a1
    a2
    fgl = rglTexParameterIuiv fgl

    a0
    a1
    a2

nonexistentTexParameterIuiv :: FuntypeTexParameterIuiv
nonexistentTexParameterIuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexParameterIuiv"
type FuntypeGetTexParameterIiv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexParameterIiv :: FunPtr FuntypeGetTexParameterIiv -> FuntypeGetTexParameterIiv
glGetTexParameterIiv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTexParameterIiv
    a0
    a1
    a2
    fgl = rglGetTexParameterIiv fgl

    a0
    a1
    a2

nonexistentGetTexParameterIiv :: FuntypeGetTexParameterIiv
nonexistentGetTexParameterIiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexParameterIiv"
type FuntypeGetTexParameterIuiv =
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTexParameterIuiv :: FunPtr FuntypeGetTexParameterIuiv -> FuntypeGetTexParameterIuiv
glGetTexParameterIuiv ::
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetTexParameterIuiv
    a0
    a1
    a2
    fgl = rglGetTexParameterIuiv fgl

    a0
    a1
    a2

nonexistentGetTexParameterIuiv :: FuntypeGetTexParameterIuiv
nonexistentGetTexParameterIuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTexParameterIuiv"
type FuntypeClearBufferiv =
    GLenum ->
    GLint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearBufferiv :: FunPtr FuntypeClearBufferiv -> FuntypeClearBufferiv
glClearBufferiv ::
    GLenum ->
    GLint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glClearBufferiv
    a0
    a1
    a2
    fgl = rglClearBufferiv fgl

    a0
    a1
    a2

nonexistentClearBufferiv :: FuntypeClearBufferiv
nonexistentClearBufferiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearBufferiv"
type FuntypeClearBufferuiv =
    GLenum ->
    GLint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearBufferuiv :: FunPtr FuntypeClearBufferuiv -> FuntypeClearBufferuiv
glClearBufferuiv ::
    GLenum ->
    GLint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glClearBufferuiv
    a0
    a1
    a2
    fgl = rglClearBufferuiv fgl

    a0
    a1
    a2

nonexistentClearBufferuiv :: FuntypeClearBufferuiv
nonexistentClearBufferuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearBufferuiv"
type FuntypeClearBufferfv =
    GLenum ->
    GLint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearBufferfv :: FunPtr FuntypeClearBufferfv -> FuntypeClearBufferfv
glClearBufferfv ::
    GLenum ->
    GLint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glClearBufferfv
    a0
    a1
    a2
    fgl = rglClearBufferfv fgl

    a0
    a1
    a2

nonexistentClearBufferfv :: FuntypeClearBufferfv
nonexistentClearBufferfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearBufferfv"
type FuntypeClearBufferfi =
    GLenum ->
    GLint ->
    GLfloat ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearBufferfi :: FunPtr FuntypeClearBufferfi -> FuntypeClearBufferfi
glClearBufferfi ::
    GLenum ->
    GLint ->
    GLfloat ->
    GLint ->
    FlextGL -> IO ( () )
glClearBufferfi
    a0
    a1
    a2
    a3
    fgl = rglClearBufferfi fgl

    a0
    a1
    a2
    a3

nonexistentClearBufferfi :: FuntypeClearBufferfi
nonexistentClearBufferfi
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearBufferfi"
type FuntypeGetStringi =
    GLenum ->
    GLuint ->
    IO ( Ptr (GLubyte) )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetStringi :: FunPtr FuntypeGetStringi -> FuntypeGetStringi
glGetStringi ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( Ptr (GLubyte) )
glGetStringi
    a0
    a1
    fgl = rglGetStringi fgl

    a0
    a1

nonexistentGetStringi :: FuntypeGetStringi
nonexistentGetStringi
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetStringi"
type FuntypeIsRenderbuffer =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsRenderbuffer :: FunPtr FuntypeIsRenderbuffer -> FuntypeIsRenderbuffer
glIsRenderbuffer ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsRenderbuffer
    a0
    fgl = rglIsRenderbuffer fgl

    a0

nonexistentIsRenderbuffer :: FuntypeIsRenderbuffer
nonexistentIsRenderbuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glIsRenderbuffer"
type FuntypeBindRenderbuffer =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindRenderbuffer :: FunPtr FuntypeBindRenderbuffer -> FuntypeBindRenderbuffer
glBindRenderbuffer ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBindRenderbuffer
    a0
    a1
    fgl = rglBindRenderbuffer fgl

    a0
    a1

nonexistentBindRenderbuffer :: FuntypeBindRenderbuffer
nonexistentBindRenderbuffer
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindRenderbuffer"
type FuntypeDeleteRenderbuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteRenderbuffers :: FunPtr FuntypeDeleteRenderbuffers -> FuntypeDeleteRenderbuffers
glDeleteRenderbuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteRenderbuffers
    a0
    a1
    fgl = rglDeleteRenderbuffers fgl

    a0
    a1

nonexistentDeleteRenderbuffers :: FuntypeDeleteRenderbuffers
nonexistentDeleteRenderbuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteRenderbuffers"
type FuntypeGenRenderbuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenRenderbuffers :: FunPtr FuntypeGenRenderbuffers -> FuntypeGenRenderbuffers
glGenRenderbuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenRenderbuffers
    a0
    a1
    fgl = rglGenRenderbuffers fgl

    a0
    a1

nonexistentGenRenderbuffers :: FuntypeGenRenderbuffers
nonexistentGenRenderbuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenRenderbuffers"
type FuntypeRenderbufferStorage =
    GLenum ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynRenderbufferStorage :: FunPtr FuntypeRenderbufferStorage -> FuntypeRenderbufferStorage
glRenderbufferStorage ::
    GLenum ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glRenderbufferStorage
    a0
    a1
    a2
    a3
    fgl = rglRenderbufferStorage fgl

    a0
    a1
    a2
    a3

nonexistentRenderbufferStorage :: FuntypeRenderbufferStorage
nonexistentRenderbufferStorage
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glRenderbufferStorage"
type FuntypeGetRenderbufferParameteriv =
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetRenderbufferParameteriv :: FunPtr FuntypeGetRenderbufferParameteriv -> FuntypeGetRenderbufferParameteriv
glGetRenderbufferParameteriv ::
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetRenderbufferParameteriv
    a0
    a1
    a2
    fgl = rglGetRenderbufferParameteriv fgl

    a0
    a1
    a2

nonexistentGetRenderbufferParameteriv :: FuntypeGetRenderbufferParameteriv
nonexistentGetRenderbufferParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetRenderbufferParameteriv"
type FuntypeIsFramebuffer =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsFramebuffer :: FunPtr FuntypeIsFramebuffer -> FuntypeIsFramebuffer
glIsFramebuffer ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsFramebuffer
    a0
    fgl = rglIsFramebuffer fgl

    a0

nonexistentIsFramebuffer :: FuntypeIsFramebuffer
nonexistentIsFramebuffer
    _
    = throwIO $ NonExistentOpenGLFunction "glIsFramebuffer"
type FuntypeBindFramebuffer =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindFramebuffer :: FunPtr FuntypeBindFramebuffer -> FuntypeBindFramebuffer
glBindFramebuffer ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBindFramebuffer
    a0
    a1
    fgl = rglBindFramebuffer fgl

    a0
    a1

nonexistentBindFramebuffer :: FuntypeBindFramebuffer
nonexistentBindFramebuffer
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindFramebuffer"
type FuntypeDeleteFramebuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteFramebuffers :: FunPtr FuntypeDeleteFramebuffers -> FuntypeDeleteFramebuffers
glDeleteFramebuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteFramebuffers
    a0
    a1
    fgl = rglDeleteFramebuffers fgl

    a0
    a1

nonexistentDeleteFramebuffers :: FuntypeDeleteFramebuffers
nonexistentDeleteFramebuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteFramebuffers"
type FuntypeGenFramebuffers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenFramebuffers :: FunPtr FuntypeGenFramebuffers -> FuntypeGenFramebuffers
glGenFramebuffers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenFramebuffers
    a0
    a1
    fgl = rglGenFramebuffers fgl

    a0
    a1

nonexistentGenFramebuffers :: FuntypeGenFramebuffers
nonexistentGenFramebuffers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenFramebuffers"
type FuntypeCheckFramebufferStatus =
    GLenum ->
    IO ( GLenum )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCheckFramebufferStatus :: FunPtr FuntypeCheckFramebufferStatus -> FuntypeCheckFramebufferStatus
glCheckFramebufferStatus ::
    GLenum ->
    FlextGL -> IO ( GLenum )
glCheckFramebufferStatus
    a0
    fgl = rglCheckFramebufferStatus fgl

    a0

nonexistentCheckFramebufferStatus :: FuntypeCheckFramebufferStatus
nonexistentCheckFramebufferStatus
    _
    = throwIO $ NonExistentOpenGLFunction "glCheckFramebufferStatus"
type FuntypeFramebufferTexture1D =
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferTexture1D :: FunPtr FuntypeFramebufferTexture1D -> FuntypeFramebufferTexture1D
glFramebufferTexture1D ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glFramebufferTexture1D
    a0
    a1
    a2
    a3
    a4
    fgl = rglFramebufferTexture1D fgl

    a0
    a1
    a2
    a3
    a4

nonexistentFramebufferTexture1D :: FuntypeFramebufferTexture1D
nonexistentFramebufferTexture1D
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferTexture1D"
type FuntypeFramebufferTexture2D =
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferTexture2D :: FunPtr FuntypeFramebufferTexture2D -> FuntypeFramebufferTexture2D
glFramebufferTexture2D ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glFramebufferTexture2D
    a0
    a1
    a2
    a3
    a4
    fgl = rglFramebufferTexture2D fgl

    a0
    a1
    a2
    a3
    a4

nonexistentFramebufferTexture2D :: FuntypeFramebufferTexture2D
nonexistentFramebufferTexture2D
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferTexture2D"
type FuntypeFramebufferTexture3D =
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferTexture3D :: FunPtr FuntypeFramebufferTexture3D -> FuntypeFramebufferTexture3D
glFramebufferTexture3D ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glFramebufferTexture3D
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglFramebufferTexture3D fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentFramebufferTexture3D :: FuntypeFramebufferTexture3D
nonexistentFramebufferTexture3D
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferTexture3D"
type FuntypeFramebufferRenderbuffer =
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferRenderbuffer :: FunPtr FuntypeFramebufferRenderbuffer -> FuntypeFramebufferRenderbuffer
glFramebufferRenderbuffer ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glFramebufferRenderbuffer
    a0
    a1
    a2
    a3
    fgl = rglFramebufferRenderbuffer fgl

    a0
    a1
    a2
    a3

nonexistentFramebufferRenderbuffer :: FuntypeFramebufferRenderbuffer
nonexistentFramebufferRenderbuffer
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferRenderbuffer"
type FuntypeGetFramebufferAttachmentParameteriv =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFramebufferAttachmentParameteriv :: FunPtr FuntypeGetFramebufferAttachmentParameteriv -> FuntypeGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameteriv ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetFramebufferAttachmentParameteriv
    a0
    a1
    a2
    a3
    fgl = rglGetFramebufferAttachmentParameteriv fgl

    a0
    a1
    a2
    a3

nonexistentGetFramebufferAttachmentParameteriv :: FuntypeGetFramebufferAttachmentParameteriv
nonexistentGetFramebufferAttachmentParameteriv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFramebufferAttachmentParameteriv"
type FuntypeGenerateMipmap =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenerateMipmap :: FunPtr FuntypeGenerateMipmap -> FuntypeGenerateMipmap
glGenerateMipmap ::
    GLenum ->
    FlextGL -> IO ( () )
glGenerateMipmap
    a0
    fgl = rglGenerateMipmap fgl

    a0

nonexistentGenerateMipmap :: FuntypeGenerateMipmap
nonexistentGenerateMipmap
    _
    = throwIO $ NonExistentOpenGLFunction "glGenerateMipmap"
type FuntypeBlitFramebuffer =
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLbitfield ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBlitFramebuffer :: FunPtr FuntypeBlitFramebuffer -> FuntypeBlitFramebuffer
glBlitFramebuffer ::
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLbitfield ->
    GLenum ->
    FlextGL -> IO ( () )
glBlitFramebuffer
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglBlitFramebuffer fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentBlitFramebuffer :: FuntypeBlitFramebuffer
nonexistentBlitFramebuffer
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBlitFramebuffer"
type FuntypeRenderbufferStorageMultisample =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynRenderbufferStorageMultisample :: FunPtr FuntypeRenderbufferStorageMultisample -> FuntypeRenderbufferStorageMultisample
glRenderbufferStorageMultisample ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glRenderbufferStorageMultisample
    a0
    a1
    a2
    a3
    a4
    fgl = rglRenderbufferStorageMultisample fgl

    a0
    a1
    a2
    a3
    a4

nonexistentRenderbufferStorageMultisample :: FuntypeRenderbufferStorageMultisample
nonexistentRenderbufferStorageMultisample
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glRenderbufferStorageMultisample"
type FuntypeFramebufferTextureLayer =
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferTextureLayer :: FunPtr FuntypeFramebufferTextureLayer -> FuntypeFramebufferTextureLayer
glFramebufferTextureLayer ::
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glFramebufferTextureLayer
    a0
    a1
    a2
    a3
    a4
    fgl = rglFramebufferTextureLayer fgl

    a0
    a1
    a2
    a3
    a4

nonexistentFramebufferTextureLayer :: FuntypeFramebufferTextureLayer
nonexistentFramebufferTextureLayer
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferTextureLayer"
type FuntypeMapBufferRange =
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    GLbitfield ->
    IO ( Ptr () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMapBufferRange :: FunPtr FuntypeMapBufferRange -> FuntypeMapBufferRange
glMapBufferRange ::
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    GLbitfield ->
    FlextGL -> IO ( Ptr () )
glMapBufferRange
    a0
    a1
    a2
    a3
    fgl = rglMapBufferRange fgl

    a0
    a1
    a2
    a3

nonexistentMapBufferRange :: FuntypeMapBufferRange
nonexistentMapBufferRange
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMapBufferRange"
type FuntypeFlushMappedBufferRange =
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFlushMappedBufferRange :: FunPtr FuntypeFlushMappedBufferRange -> FuntypeFlushMappedBufferRange
glFlushMappedBufferRange ::
    GLenum ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glFlushMappedBufferRange
    a0
    a1
    a2
    fgl = rglFlushMappedBufferRange fgl

    a0
    a1
    a2

nonexistentFlushMappedBufferRange :: FuntypeFlushMappedBufferRange
nonexistentFlushMappedBufferRange
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFlushMappedBufferRange"
type FuntypeBindVertexArray =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindVertexArray :: FunPtr FuntypeBindVertexArray -> FuntypeBindVertexArray
glBindVertexArray ::
    GLuint ->
    FlextGL -> IO ( () )
glBindVertexArray
    a0
    fgl = rglBindVertexArray fgl

    a0

nonexistentBindVertexArray :: FuntypeBindVertexArray
nonexistentBindVertexArray
    _
    = throwIO $ NonExistentOpenGLFunction "glBindVertexArray"
type FuntypeDeleteVertexArrays =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteVertexArrays :: FunPtr FuntypeDeleteVertexArrays -> FuntypeDeleteVertexArrays
glDeleteVertexArrays ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteVertexArrays
    a0
    a1
    fgl = rglDeleteVertexArrays fgl

    a0
    a1

nonexistentDeleteVertexArrays :: FuntypeDeleteVertexArrays
nonexistentDeleteVertexArrays
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteVertexArrays"
type FuntypeGenVertexArrays =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenVertexArrays :: FunPtr FuntypeGenVertexArrays -> FuntypeGenVertexArrays
glGenVertexArrays ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenVertexArrays
    a0
    a1
    fgl = rglGenVertexArrays fgl

    a0
    a1

nonexistentGenVertexArrays :: FuntypeGenVertexArrays
nonexistentGenVertexArrays
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenVertexArrays"
type FuntypeIsVertexArray =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsVertexArray :: FunPtr FuntypeIsVertexArray -> FuntypeIsVertexArray
glIsVertexArray ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsVertexArray
    a0
    fgl = rglIsVertexArray fgl

    a0

nonexistentIsVertexArray :: FuntypeIsVertexArray
nonexistentIsVertexArray
    _
    = throwIO $ NonExistentOpenGLFunction "glIsVertexArray"

-- GL_VERSION_3_1

type FuntypeDrawArraysInstanced =
    GLenum ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawArraysInstanced :: FunPtr FuntypeDrawArraysInstanced -> FuntypeDrawArraysInstanced
glDrawArraysInstanced ::
    GLenum ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glDrawArraysInstanced
    a0
    a1
    a2
    a3
    fgl = rglDrawArraysInstanced fgl

    a0
    a1
    a2
    a3

nonexistentDrawArraysInstanced :: FuntypeDrawArraysInstanced
nonexistentDrawArraysInstanced
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawArraysInstanced"
type FuntypeDrawElementsInstanced =
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawElementsInstanced :: FunPtr FuntypeDrawElementsInstanced -> FuntypeDrawElementsInstanced
glDrawElementsInstanced ::
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLsizei ->
    FlextGL -> IO ( () )
glDrawElementsInstanced
    a0
    a1
    a2
    a3
    a4
    fgl = rglDrawElementsInstanced fgl

    a0
    a1
    a2
    a3
    a4

nonexistentDrawElementsInstanced :: FuntypeDrawElementsInstanced
nonexistentDrawElementsInstanced
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawElementsInstanced"
type FuntypeTexBuffer =
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexBuffer :: FunPtr FuntypeTexBuffer -> FuntypeTexBuffer
glTexBuffer ::
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glTexBuffer
    a0
    a1
    a2
    fgl = rglTexBuffer fgl

    a0
    a1
    a2

nonexistentTexBuffer :: FuntypeTexBuffer
nonexistentTexBuffer
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexBuffer"
type FuntypePrimitiveRestartIndex =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPrimitiveRestartIndex :: FunPtr FuntypePrimitiveRestartIndex -> FuntypePrimitiveRestartIndex
glPrimitiveRestartIndex ::
    GLuint ->
    FlextGL -> IO ( () )
glPrimitiveRestartIndex
    a0
    fgl = rglPrimitiveRestartIndex fgl

    a0

nonexistentPrimitiveRestartIndex :: FuntypePrimitiveRestartIndex
nonexistentPrimitiveRestartIndex
    _
    = throwIO $ NonExistentOpenGLFunction "glPrimitiveRestartIndex"
type FuntypeCopyBufferSubData =
    GLenum ->
    GLenum ->
    GLintptr ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyBufferSubData :: FunPtr FuntypeCopyBufferSubData -> FuntypeCopyBufferSubData
glCopyBufferSubData ::
    GLenum ->
    GLenum ->
    GLintptr ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glCopyBufferSubData
    a0
    a1
    a2
    a3
    a4
    fgl = rglCopyBufferSubData fgl

    a0
    a1
    a2
    a3
    a4

nonexistentCopyBufferSubData :: FuntypeCopyBufferSubData
nonexistentCopyBufferSubData
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyBufferSubData"
type FuntypeGetUniformIndices =
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformIndices :: FunPtr FuntypeGetUniformIndices -> FuntypeGetUniformIndices
glGetUniformIndices ::
    GLuint ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetUniformIndices
    a0
    a1
    a2
    a3
    fgl = rglGetUniformIndices fgl

    a0
    a1
    a2
    a3

nonexistentGetUniformIndices :: FuntypeGetUniformIndices
nonexistentGetUniformIndices
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformIndices"
type FuntypeGetActiveUniformsiv =
    GLuint ->
    GLsizei ->
    Ptr (GLuint) ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveUniformsiv :: FunPtr FuntypeGetActiveUniformsiv -> FuntypeGetActiveUniformsiv
glGetActiveUniformsiv ::
    GLuint ->
    GLsizei ->
    Ptr (GLuint) ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetActiveUniformsiv
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetActiveUniformsiv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetActiveUniformsiv :: FuntypeGetActiveUniformsiv
nonexistentGetActiveUniformsiv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveUniformsiv"
type FuntypeGetActiveUniformName =
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveUniformName :: FunPtr FuntypeGetActiveUniformName -> FuntypeGetActiveUniformName
glGetActiveUniformName ::
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetActiveUniformName
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetActiveUniformName fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetActiveUniformName :: FuntypeGetActiveUniformName
nonexistentGetActiveUniformName
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveUniformName"
type FuntypeGetUniformBlockIndex =
    GLuint ->
    Ptr (GLchar) ->
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetUniformBlockIndex :: FunPtr FuntypeGetUniformBlockIndex -> FuntypeGetUniformBlockIndex
glGetUniformBlockIndex ::
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLuint )
glGetUniformBlockIndex
    a0
    a1
    fgl = rglGetUniformBlockIndex fgl

    a0
    a1

nonexistentGetUniformBlockIndex :: FuntypeGetUniformBlockIndex
nonexistentGetUniformBlockIndex
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetUniformBlockIndex"
type FuntypeGetActiveUniformBlockiv =
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveUniformBlockiv :: FunPtr FuntypeGetActiveUniformBlockiv -> FuntypeGetActiveUniformBlockiv
glGetActiveUniformBlockiv ::
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetActiveUniformBlockiv
    a0
    a1
    a2
    a3
    fgl = rglGetActiveUniformBlockiv fgl

    a0
    a1
    a2
    a3

nonexistentGetActiveUniformBlockiv :: FuntypeGetActiveUniformBlockiv
nonexistentGetActiveUniformBlockiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveUniformBlockiv"
type FuntypeGetActiveUniformBlockName =
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetActiveUniformBlockName :: FunPtr FuntypeGetActiveUniformBlockName -> FuntypeGetActiveUniformBlockName
glGetActiveUniformBlockName ::
    GLuint ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetActiveUniformBlockName
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetActiveUniformBlockName fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetActiveUniformBlockName :: FuntypeGetActiveUniformBlockName
nonexistentGetActiveUniformBlockName
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetActiveUniformBlockName"
type FuntypeUniformBlockBinding =
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUniformBlockBinding :: FunPtr FuntypeUniformBlockBinding -> FuntypeUniformBlockBinding
glUniformBlockBinding ::
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glUniformBlockBinding
    a0
    a1
    a2
    fgl = rglUniformBlockBinding fgl

    a0
    a1
    a2

nonexistentUniformBlockBinding :: FuntypeUniformBlockBinding
nonexistentUniformBlockBinding
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUniformBlockBinding"

-- GL_VERSION_3_2

type FuntypeDrawElementsBaseVertex =
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawElementsBaseVertex :: FunPtr FuntypeDrawElementsBaseVertex -> FuntypeDrawElementsBaseVertex
glDrawElementsBaseVertex ::
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLint ->
    FlextGL -> IO ( () )
glDrawElementsBaseVertex
    a0
    a1
    a2
    a3
    a4
    fgl = rglDrawElementsBaseVertex fgl

    a0
    a1
    a2
    a3
    a4

nonexistentDrawElementsBaseVertex :: FuntypeDrawElementsBaseVertex
nonexistentDrawElementsBaseVertex
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawElementsBaseVertex"
type FuntypeDrawRangeElementsBaseVertex =
    GLenum ->
    GLuint ->
    GLuint ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawRangeElementsBaseVertex :: FunPtr FuntypeDrawRangeElementsBaseVertex -> FuntypeDrawRangeElementsBaseVertex
glDrawRangeElementsBaseVertex ::
    GLenum ->
    GLuint ->
    GLuint ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLint ->
    FlextGL -> IO ( () )
glDrawRangeElementsBaseVertex
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglDrawRangeElementsBaseVertex fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentDrawRangeElementsBaseVertex :: FuntypeDrawRangeElementsBaseVertex
nonexistentDrawRangeElementsBaseVertex
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawRangeElementsBaseVertex"
type FuntypeDrawElementsInstancedBaseVertex =
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDrawElementsInstancedBaseVertex :: FunPtr FuntypeDrawElementsInstancedBaseVertex -> FuntypeDrawElementsInstancedBaseVertex
glDrawElementsInstancedBaseVertex ::
    GLenum ->
    GLsizei ->
    GLenum ->
    Ptr () ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glDrawElementsInstancedBaseVertex
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDrawElementsInstancedBaseVertex fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDrawElementsInstancedBaseVertex :: FuntypeDrawElementsInstancedBaseVertex
nonexistentDrawElementsInstancedBaseVertex
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDrawElementsInstancedBaseVertex"
type FuntypeMultiDrawElementsBaseVertex =
    GLenum ->
    Ptr (GLsizei) ->
    GLenum ->
    Ptr (Ptr ()) ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiDrawElementsBaseVertex :: FunPtr FuntypeMultiDrawElementsBaseVertex -> FuntypeMultiDrawElementsBaseVertex
glMultiDrawElementsBaseVertex ::
    GLenum ->
    Ptr (GLsizei) ->
    GLenum ->
    Ptr (Ptr ()) ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glMultiDrawElementsBaseVertex
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglMultiDrawElementsBaseVertex fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentMultiDrawElementsBaseVertex :: FuntypeMultiDrawElementsBaseVertex
nonexistentMultiDrawElementsBaseVertex
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiDrawElementsBaseVertex"
type FuntypeProvokingVertex =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProvokingVertex :: FunPtr FuntypeProvokingVertex -> FuntypeProvokingVertex
glProvokingVertex ::
    GLenum ->
    FlextGL -> IO ( () )
glProvokingVertex
    a0
    fgl = rglProvokingVertex fgl

    a0

nonexistentProvokingVertex :: FuntypeProvokingVertex
nonexistentProvokingVertex
    _
    = throwIO $ NonExistentOpenGLFunction "glProvokingVertex"
type FuntypeFenceSync =
    GLenum ->
    GLbitfield ->
    IO ( GLsync )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFenceSync :: FunPtr FuntypeFenceSync -> FuntypeFenceSync
glFenceSync ::
    GLenum ->
    GLbitfield ->
    FlextGL -> IO ( GLsync )
glFenceSync
    a0
    a1
    fgl = rglFenceSync fgl

    a0
    a1

nonexistentFenceSync :: FuntypeFenceSync
nonexistentFenceSync
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFenceSync"
type FuntypeIsSync =
    GLsync ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsSync :: FunPtr FuntypeIsSync -> FuntypeIsSync
glIsSync ::
    GLsync ->
    FlextGL -> IO ( GLboolean )
glIsSync
    a0
    fgl = rglIsSync fgl

    a0

nonexistentIsSync :: FuntypeIsSync
nonexistentIsSync
    _
    = throwIO $ NonExistentOpenGLFunction "glIsSync"
type FuntypeDeleteSync =
    GLsync ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteSync :: FunPtr FuntypeDeleteSync -> FuntypeDeleteSync
glDeleteSync ::
    GLsync ->
    FlextGL -> IO ( () )
glDeleteSync
    a0
    fgl = rglDeleteSync fgl

    a0

nonexistentDeleteSync :: FuntypeDeleteSync
nonexistentDeleteSync
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteSync"
type FuntypeClientWaitSync =
    GLsync ->
    GLbitfield ->
    GLuint64 ->
    IO ( GLenum )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClientWaitSync :: FunPtr FuntypeClientWaitSync -> FuntypeClientWaitSync
glClientWaitSync ::
    GLsync ->
    GLbitfield ->
    GLuint64 ->
    FlextGL -> IO ( GLenum )
glClientWaitSync
    a0
    a1
    a2
    fgl = rglClientWaitSync fgl

    a0
    a1
    a2

nonexistentClientWaitSync :: FuntypeClientWaitSync
nonexistentClientWaitSync
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClientWaitSync"
type FuntypeWaitSync =
    GLsync ->
    GLbitfield ->
    GLuint64 ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynWaitSync :: FunPtr FuntypeWaitSync -> FuntypeWaitSync
glWaitSync ::
    GLsync ->
    GLbitfield ->
    GLuint64 ->
    FlextGL -> IO ( () )
glWaitSync
    a0
    a1
    a2
    fgl = rglWaitSync fgl

    a0
    a1
    a2

nonexistentWaitSync :: FuntypeWaitSync
nonexistentWaitSync
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glWaitSync"
type FuntypeGetInteger64v =
    GLenum ->
    Ptr (GLint64) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetInteger64v :: FunPtr FuntypeGetInteger64v -> FuntypeGetInteger64v
glGetInteger64v ::
    GLenum ->
    Ptr (GLint64) ->
    FlextGL -> IO ( () )
glGetInteger64v
    a0
    a1
    fgl = rglGetInteger64v fgl

    a0
    a1

nonexistentGetInteger64v :: FuntypeGetInteger64v
nonexistentGetInteger64v
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetInteger64v"
type FuntypeGetSynciv =
    GLsync ->
    GLenum ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetSynciv :: FunPtr FuntypeGetSynciv -> FuntypeGetSynciv
glGetSynciv ::
    GLsync ->
    GLenum ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetSynciv
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetSynciv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetSynciv :: FuntypeGetSynciv
nonexistentGetSynciv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetSynciv"
type FuntypeGetInteger64i_v =
    GLenum ->
    GLuint ->
    Ptr (GLint64) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetInteger64i_v :: FunPtr FuntypeGetInteger64i_v -> FuntypeGetInteger64i_v
glGetInteger64i_v ::
    GLenum ->
    GLuint ->
    Ptr (GLint64) ->
    FlextGL -> IO ( () )
glGetInteger64i_v
    a0
    a1
    a2
    fgl = rglGetInteger64i_v fgl

    a0
    a1
    a2

nonexistentGetInteger64i_v :: FuntypeGetInteger64i_v
nonexistentGetInteger64i_v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetInteger64i_v"
type FuntypeGetBufferParameteri64v =
    GLenum ->
    GLenum ->
    Ptr (GLint64) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBufferParameteri64v :: FunPtr FuntypeGetBufferParameteri64v -> FuntypeGetBufferParameteri64v
glGetBufferParameteri64v ::
    GLenum ->
    GLenum ->
    Ptr (GLint64) ->
    FlextGL -> IO ( () )
glGetBufferParameteri64v
    a0
    a1
    a2
    fgl = rglGetBufferParameteri64v fgl

    a0
    a1
    a2

nonexistentGetBufferParameteri64v :: FuntypeGetBufferParameteri64v
nonexistentGetBufferParameteri64v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBufferParameteri64v"
type FuntypeFramebufferTexture =
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferTexture :: FunPtr FuntypeFramebufferTexture -> FuntypeFramebufferTexture
glFramebufferTexture ::
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glFramebufferTexture
    a0
    a1
    a2
    a3
    fgl = rglFramebufferTexture fgl

    a0
    a1
    a2
    a3

nonexistentFramebufferTexture :: FuntypeFramebufferTexture
nonexistentFramebufferTexture
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferTexture"
type FuntypeTexImage2DMultisample =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexImage2DMultisample :: FunPtr FuntypeTexImage2DMultisample -> FuntypeTexImage2DMultisample
glTexImage2DMultisample ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    FlextGL -> IO ( () )
glTexImage2DMultisample
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglTexImage2DMultisample fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentTexImage2DMultisample :: FuntypeTexImage2DMultisample
nonexistentTexImage2DMultisample
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexImage2DMultisample"
type FuntypeTexImage3DMultisample =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexImage3DMultisample :: FunPtr FuntypeTexImage3DMultisample -> FuntypeTexImage3DMultisample
glTexImage3DMultisample ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    FlextGL -> IO ( () )
glTexImage3DMultisample
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglTexImage3DMultisample fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentTexImage3DMultisample :: FuntypeTexImage3DMultisample
nonexistentTexImage3DMultisample
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexImage3DMultisample"
type FuntypeGetMultisamplefv =
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultisamplefv :: FunPtr FuntypeGetMultisamplefv -> FuntypeGetMultisamplefv
glGetMultisamplefv ::
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetMultisamplefv
    a0
    a1
    a2
    fgl = rglGetMultisamplefv fgl

    a0
    a1
    a2

nonexistentGetMultisamplefv :: FuntypeGetMultisamplefv
nonexistentGetMultisamplefv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultisamplefv"
type FuntypeSampleMaski =
    GLuint ->
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSampleMaski :: FunPtr FuntypeSampleMaski -> FuntypeSampleMaski
glSampleMaski ::
    GLuint ->
    GLbitfield ->
    FlextGL -> IO ( () )
glSampleMaski
    a0
    a1
    fgl = rglSampleMaski fgl

    a0
    a1

nonexistentSampleMaski :: FuntypeSampleMaski
nonexistentSampleMaski
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSampleMaski"

-- GL_VERSION_3_3

type FuntypeBindFragDataLocationIndexed =
    GLuint ->
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindFragDataLocationIndexed :: FunPtr FuntypeBindFragDataLocationIndexed -> FuntypeBindFragDataLocationIndexed
glBindFragDataLocationIndexed ::
    GLuint ->
    GLuint ->
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glBindFragDataLocationIndexed
    a0
    a1
    a2
    a3
    fgl = rglBindFragDataLocationIndexed fgl

    a0
    a1
    a2
    a3

nonexistentBindFragDataLocationIndexed :: FuntypeBindFragDataLocationIndexed
nonexistentBindFragDataLocationIndexed
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindFragDataLocationIndexed"
type FuntypeGetFragDataIndex =
    GLuint ->
    Ptr (GLchar) ->
    IO ( GLint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFragDataIndex :: FunPtr FuntypeGetFragDataIndex -> FuntypeGetFragDataIndex
glGetFragDataIndex ::
    GLuint ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLint )
glGetFragDataIndex
    a0
    a1
    fgl = rglGetFragDataIndex fgl

    a0
    a1

nonexistentGetFragDataIndex :: FuntypeGetFragDataIndex
nonexistentGetFragDataIndex
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFragDataIndex"
type FuntypeGenSamplers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenSamplers :: FunPtr FuntypeGenSamplers -> FuntypeGenSamplers
glGenSamplers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenSamplers
    a0
    a1
    fgl = rglGenSamplers fgl

    a0
    a1

nonexistentGenSamplers :: FuntypeGenSamplers
nonexistentGenSamplers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenSamplers"
type FuntypeDeleteSamplers =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteSamplers :: FunPtr FuntypeDeleteSamplers -> FuntypeDeleteSamplers
glDeleteSamplers ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteSamplers
    a0
    a1
    fgl = rglDeleteSamplers fgl

    a0
    a1

nonexistentDeleteSamplers :: FuntypeDeleteSamplers
nonexistentDeleteSamplers
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteSamplers"
type FuntypeIsSampler =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsSampler :: FunPtr FuntypeIsSampler -> FuntypeIsSampler
glIsSampler ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsSampler
    a0
    fgl = rglIsSampler fgl

    a0

nonexistentIsSampler :: FuntypeIsSampler
nonexistentIsSampler
    _
    = throwIO $ NonExistentOpenGLFunction "glIsSampler"
type FuntypeBindSampler =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindSampler :: FunPtr FuntypeBindSampler -> FuntypeBindSampler
glBindSampler ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glBindSampler
    a0
    a1
    fgl = rglBindSampler fgl

    a0
    a1

nonexistentBindSampler :: FuntypeBindSampler
nonexistentBindSampler
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindSampler"
type FuntypeSamplerParameteri =
    GLuint ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameteri :: FunPtr FuntypeSamplerParameteri -> FuntypeSamplerParameteri
glSamplerParameteri ::
    GLuint ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glSamplerParameteri
    a0
    a1
    a2
    fgl = rglSamplerParameteri fgl

    a0
    a1
    a2

nonexistentSamplerParameteri :: FuntypeSamplerParameteri
nonexistentSamplerParameteri
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameteri"
type FuntypeSamplerParameteriv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameteriv :: FunPtr FuntypeSamplerParameteriv -> FuntypeSamplerParameteriv
glSamplerParameteriv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glSamplerParameteriv
    a0
    a1
    a2
    fgl = rglSamplerParameteriv fgl

    a0
    a1
    a2

nonexistentSamplerParameteriv :: FuntypeSamplerParameteriv
nonexistentSamplerParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameteriv"
type FuntypeSamplerParameterf =
    GLuint ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameterf :: FunPtr FuntypeSamplerParameterf -> FuntypeSamplerParameterf
glSamplerParameterf ::
    GLuint ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glSamplerParameterf
    a0
    a1
    a2
    fgl = rglSamplerParameterf fgl

    a0
    a1
    a2

nonexistentSamplerParameterf :: FuntypeSamplerParameterf
nonexistentSamplerParameterf
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameterf"
type FuntypeSamplerParameterfv =
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameterfv :: FunPtr FuntypeSamplerParameterfv -> FuntypeSamplerParameterfv
glSamplerParameterfv ::
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glSamplerParameterfv
    a0
    a1
    a2
    fgl = rglSamplerParameterfv fgl

    a0
    a1
    a2

nonexistentSamplerParameterfv :: FuntypeSamplerParameterfv
nonexistentSamplerParameterfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameterfv"
type FuntypeSamplerParameterIiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameterIiv :: FunPtr FuntypeSamplerParameterIiv -> FuntypeSamplerParameterIiv
glSamplerParameterIiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glSamplerParameterIiv
    a0
    a1
    a2
    fgl = rglSamplerParameterIiv fgl

    a0
    a1
    a2

nonexistentSamplerParameterIiv :: FuntypeSamplerParameterIiv
nonexistentSamplerParameterIiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameterIiv"
type FuntypeSamplerParameterIuiv =
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynSamplerParameterIuiv :: FunPtr FuntypeSamplerParameterIuiv -> FuntypeSamplerParameterIuiv
glSamplerParameterIuiv ::
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glSamplerParameterIuiv
    a0
    a1
    a2
    fgl = rglSamplerParameterIuiv fgl

    a0
    a1
    a2

nonexistentSamplerParameterIuiv :: FuntypeSamplerParameterIuiv
nonexistentSamplerParameterIuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glSamplerParameterIuiv"
type FuntypeGetSamplerParameteriv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetSamplerParameteriv :: FunPtr FuntypeGetSamplerParameteriv -> FuntypeGetSamplerParameteriv
glGetSamplerParameteriv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetSamplerParameteriv
    a0
    a1
    a2
    fgl = rglGetSamplerParameteriv fgl

    a0
    a1
    a2

nonexistentGetSamplerParameteriv :: FuntypeGetSamplerParameteriv
nonexistentGetSamplerParameteriv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetSamplerParameteriv"
type FuntypeGetSamplerParameterIiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetSamplerParameterIiv :: FunPtr FuntypeGetSamplerParameterIiv -> FuntypeGetSamplerParameterIiv
glGetSamplerParameterIiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetSamplerParameterIiv
    a0
    a1
    a2
    fgl = rglGetSamplerParameterIiv fgl

    a0
    a1
    a2

nonexistentGetSamplerParameterIiv :: FuntypeGetSamplerParameterIiv
nonexistentGetSamplerParameterIiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetSamplerParameterIiv"
type FuntypeGetSamplerParameterfv =
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetSamplerParameterfv :: FunPtr FuntypeGetSamplerParameterfv -> FuntypeGetSamplerParameterfv
glGetSamplerParameterfv ::
    GLuint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetSamplerParameterfv
    a0
    a1
    a2
    fgl = rglGetSamplerParameterfv fgl

    a0
    a1
    a2

nonexistentGetSamplerParameterfv :: FuntypeGetSamplerParameterfv
nonexistentGetSamplerParameterfv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetSamplerParameterfv"
type FuntypeGetSamplerParameterIuiv =
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetSamplerParameterIuiv :: FunPtr FuntypeGetSamplerParameterIuiv -> FuntypeGetSamplerParameterIuiv
glGetSamplerParameterIuiv ::
    GLuint ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetSamplerParameterIuiv
    a0
    a1
    a2
    fgl = rglGetSamplerParameterIuiv fgl

    a0
    a1
    a2

nonexistentGetSamplerParameterIuiv :: FuntypeGetSamplerParameterIuiv
nonexistentGetSamplerParameterIuiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetSamplerParameterIuiv"
type FuntypeQueryCounter =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynQueryCounter :: FunPtr FuntypeQueryCounter -> FuntypeQueryCounter
glQueryCounter ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glQueryCounter
    a0
    a1
    fgl = rglQueryCounter fgl

    a0
    a1

nonexistentQueryCounter :: FuntypeQueryCounter
nonexistentQueryCounter
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glQueryCounter"
type FuntypeGetQueryObjecti64v =
    GLuint ->
    GLenum ->
    Ptr (GLint64) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetQueryObjecti64v :: FunPtr FuntypeGetQueryObjecti64v -> FuntypeGetQueryObjecti64v
glGetQueryObjecti64v ::
    GLuint ->
    GLenum ->
    Ptr (GLint64) ->
    FlextGL -> IO ( () )
glGetQueryObjecti64v
    a0
    a1
    a2
    fgl = rglGetQueryObjecti64v fgl

    a0
    a1
    a2

nonexistentGetQueryObjecti64v :: FuntypeGetQueryObjecti64v
nonexistentGetQueryObjecti64v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetQueryObjecti64v"
type FuntypeGetQueryObjectui64v =
    GLuint ->
    GLenum ->
    Ptr (GLuint64) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetQueryObjectui64v :: FunPtr FuntypeGetQueryObjectui64v -> FuntypeGetQueryObjectui64v
glGetQueryObjectui64v ::
    GLuint ->
    GLenum ->
    Ptr (GLuint64) ->
    FlextGL -> IO ( () )
glGetQueryObjectui64v
    a0
    a1
    a2
    fgl = rglGetQueryObjectui64v fgl

    a0
    a1
    a2

nonexistentGetQueryObjectui64v :: FuntypeGetQueryObjectui64v
nonexistentGetQueryObjectui64v
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetQueryObjectui64v"
type FuntypeVertexAttribDivisor =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribDivisor :: FunPtr FuntypeVertexAttribDivisor -> FuntypeVertexAttribDivisor
glVertexAttribDivisor ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribDivisor
    a0
    a1
    fgl = rglVertexAttribDivisor fgl

    a0
    a1

nonexistentVertexAttribDivisor :: FuntypeVertexAttribDivisor
nonexistentVertexAttribDivisor
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribDivisor"
type FuntypeVertexAttribP1ui =
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP1ui :: FunPtr FuntypeVertexAttribP1ui -> FuntypeVertexAttribP1ui
glVertexAttribP1ui ::
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribP1ui
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP1ui fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP1ui :: FuntypeVertexAttribP1ui
nonexistentVertexAttribP1ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP1ui"
type FuntypeVertexAttribP1uiv =
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP1uiv :: FunPtr FuntypeVertexAttribP1uiv -> FuntypeVertexAttribP1uiv
glVertexAttribP1uiv ::
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribP1uiv
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP1uiv fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP1uiv :: FuntypeVertexAttribP1uiv
nonexistentVertexAttribP1uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP1uiv"
type FuntypeVertexAttribP2ui =
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP2ui :: FunPtr FuntypeVertexAttribP2ui -> FuntypeVertexAttribP2ui
glVertexAttribP2ui ::
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribP2ui
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP2ui fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP2ui :: FuntypeVertexAttribP2ui
nonexistentVertexAttribP2ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP2ui"
type FuntypeVertexAttribP2uiv =
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP2uiv :: FunPtr FuntypeVertexAttribP2uiv -> FuntypeVertexAttribP2uiv
glVertexAttribP2uiv ::
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribP2uiv
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP2uiv fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP2uiv :: FuntypeVertexAttribP2uiv
nonexistentVertexAttribP2uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP2uiv"
type FuntypeVertexAttribP3ui =
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP3ui :: FunPtr FuntypeVertexAttribP3ui -> FuntypeVertexAttribP3ui
glVertexAttribP3ui ::
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribP3ui
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP3ui fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP3ui :: FuntypeVertexAttribP3ui
nonexistentVertexAttribP3ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP3ui"
type FuntypeVertexAttribP3uiv =
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP3uiv :: FunPtr FuntypeVertexAttribP3uiv -> FuntypeVertexAttribP3uiv
glVertexAttribP3uiv ::
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribP3uiv
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP3uiv fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP3uiv :: FuntypeVertexAttribP3uiv
nonexistentVertexAttribP3uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP3uiv"
type FuntypeVertexAttribP4ui =
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP4ui :: FunPtr FuntypeVertexAttribP4ui -> FuntypeVertexAttribP4ui
glVertexAttribP4ui ::
    GLuint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexAttribP4ui
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP4ui fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP4ui :: FuntypeVertexAttribP4ui
nonexistentVertexAttribP4ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP4ui"
type FuntypeVertexAttribP4uiv =
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexAttribP4uiv :: FunPtr FuntypeVertexAttribP4uiv -> FuntypeVertexAttribP4uiv
glVertexAttribP4uiv ::
    GLuint ->
    GLenum ->
    GLboolean ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glVertexAttribP4uiv
    a0
    a1
    a2
    a3
    fgl = rglVertexAttribP4uiv fgl

    a0
    a1
    a2
    a3

nonexistentVertexAttribP4uiv :: FuntypeVertexAttribP4uiv
nonexistentVertexAttribP4uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexAttribP4uiv"

-- GL_ARB_texture_storage

type FuntypeTexStorage1D =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexStorage1D :: FunPtr FuntypeTexStorage1D -> FuntypeTexStorage1D
glTexStorage1D ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    FlextGL -> IO ( () )
glTexStorage1D
    a0
    a1
    a2
    a3
    fgl = rglTexStorage1D fgl

    a0
    a1
    a2
    a3

nonexistentTexStorage1D :: FuntypeTexStorage1D
nonexistentTexStorage1D
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexStorage1D"
type FuntypeTexStorage2D =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexStorage2D :: FunPtr FuntypeTexStorage2D -> FuntypeTexStorage2D
glTexStorage2D ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glTexStorage2D
    a0
    a1
    a2
    a3
    a4
    fgl = rglTexStorage2D fgl

    a0
    a1
    a2
    a3
    a4

nonexistentTexStorage2D :: FuntypeTexStorage2D
nonexistentTexStorage2D
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexStorage2D"
type FuntypeTexStorage3D =
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexStorage3D :: FunPtr FuntypeTexStorage3D -> FuntypeTexStorage3D
glTexStorage3D ::
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glTexStorage3D
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglTexStorage3D fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentTexStorage3D :: FuntypeTexStorage3D
nonexistentTexStorage3D
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexStorage3D"

-- GL_KHR_debug

type FuntypeDebugMessageControl =
    GLenum ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr (GLuint) ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageControl :: FunPtr FuntypeDebugMessageControl -> FuntypeDebugMessageControl
glDebugMessageControl ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr (GLuint) ->
    GLboolean ->
    FlextGL -> IO ( () )
glDebugMessageControl
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDebugMessageControl fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDebugMessageControl :: FuntypeDebugMessageControl
nonexistentDebugMessageControl
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageControl"
type FuntypeDebugMessageInsert =
    GLenum ->
    GLenum ->
    GLuint ->
    GLenum ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageInsert :: FunPtr FuntypeDebugMessageInsert -> FuntypeDebugMessageInsert
glDebugMessageInsert ::
    GLenum ->
    GLenum ->
    GLuint ->
    GLenum ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glDebugMessageInsert
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDebugMessageInsert fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDebugMessageInsert :: FuntypeDebugMessageInsert
nonexistentDebugMessageInsert
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageInsert"
type FuntypeDebugMessageCallback =
    GLDEBUGPROC ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageCallback :: FunPtr FuntypeDebugMessageCallback -> FuntypeDebugMessageCallback
glDebugMessageCallback ::
    GLDEBUGPROC ->
    Ptr () ->
    FlextGL -> IO ( () )
glDebugMessageCallback
    a0
    a1
    fgl = rglDebugMessageCallback fgl

    a0
    a1

nonexistentDebugMessageCallback :: FuntypeDebugMessageCallback
nonexistentDebugMessageCallback
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageCallback"
type FuntypeGetDebugMessageLog =
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    Ptr (GLenum) ->
    Ptr (GLuint) ->
    Ptr (GLenum) ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetDebugMessageLog :: FunPtr FuntypeGetDebugMessageLog -> FuntypeGetDebugMessageLog
glGetDebugMessageLog ::
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    Ptr (GLenum) ->
    Ptr (GLuint) ->
    Ptr (GLenum) ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLuint )
glGetDebugMessageLog
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglGetDebugMessageLog fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentGetDebugMessageLog :: FuntypeGetDebugMessageLog
nonexistentGetDebugMessageLog
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetDebugMessageLog"
type FuntypePushDebugGroup =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPushDebugGroup :: FunPtr FuntypePushDebugGroup -> FuntypePushDebugGroup
glPushDebugGroup ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glPushDebugGroup
    a0
    a1
    a2
    a3
    fgl = rglPushDebugGroup fgl

    a0
    a1
    a2
    a3

nonexistentPushDebugGroup :: FuntypePushDebugGroup
nonexistentPushDebugGroup
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPushDebugGroup"
type FuntypePopDebugGroup =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPopDebugGroup :: FunPtr FuntypePopDebugGroup -> FuntypePopDebugGroup
glPopDebugGroup ::
    FlextGL -> IO ( () )
glPopDebugGroup
    fgl = rglPopDebugGroup fgl


nonexistentPopDebugGroup :: FuntypePopDebugGroup
nonexistentPopDebugGroup
    = throwIO $ NonExistentOpenGLFunction "glPopDebugGroup"
type FuntypeObjectLabel =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynObjectLabel :: FunPtr FuntypeObjectLabel -> FuntypeObjectLabel
glObjectLabel ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glObjectLabel
    a0
    a1
    a2
    a3
    fgl = rglObjectLabel fgl

    a0
    a1
    a2
    a3

nonexistentObjectLabel :: FuntypeObjectLabel
nonexistentObjectLabel
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glObjectLabel"
type FuntypeGetObjectLabel =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetObjectLabel :: FunPtr FuntypeGetObjectLabel -> FuntypeGetObjectLabel
glGetObjectLabel ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetObjectLabel
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetObjectLabel fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetObjectLabel :: FuntypeGetObjectLabel
nonexistentGetObjectLabel
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetObjectLabel"
type FuntypeObjectPtrLabel =
    Ptr () ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynObjectPtrLabel :: FunPtr FuntypeObjectPtrLabel -> FuntypeObjectPtrLabel
glObjectPtrLabel ::
    Ptr () ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glObjectPtrLabel
    a0
    a1
    a2
    fgl = rglObjectPtrLabel fgl

    a0
    a1
    a2

nonexistentObjectPtrLabel :: FuntypeObjectPtrLabel
nonexistentObjectPtrLabel
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glObjectPtrLabel"
type FuntypeGetObjectPtrLabel =
    Ptr () ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetObjectPtrLabel :: FunPtr FuntypeGetObjectPtrLabel -> FuntypeGetObjectPtrLabel
glGetObjectPtrLabel ::
    Ptr () ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetObjectPtrLabel
    a0
    a1
    a2
    a3
    fgl = rglGetObjectPtrLabel fgl

    a0
    a1
    a2
    a3

nonexistentGetObjectPtrLabel :: FuntypeGetObjectPtrLabel
nonexistentGetObjectPtrLabel
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetObjectPtrLabel"
type FuntypeGetPointerv =
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetPointerv :: FunPtr FuntypeGetPointerv -> FuntypeGetPointerv
glGetPointerv ::
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetPointerv
    a0
    a1
    fgl = rglGetPointerv fgl

    a0
    a1

nonexistentGetPointerv :: FuntypeGetPointerv
nonexistentGetPointerv
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetPointerv"
type FuntypeDebugMessageControlKHR =
    GLenum ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr (GLuint) ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageControlKHR :: FunPtr FuntypeDebugMessageControlKHR -> FuntypeDebugMessageControlKHR
glDebugMessageControlKHR ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr (GLuint) ->
    GLboolean ->
    FlextGL -> IO ( () )
glDebugMessageControlKHR
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDebugMessageControlKHR fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDebugMessageControlKHR :: FuntypeDebugMessageControlKHR
nonexistentDebugMessageControlKHR
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageControlKHR"
type FuntypeDebugMessageInsertKHR =
    GLenum ->
    GLenum ->
    GLuint ->
    GLenum ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageInsertKHR :: FunPtr FuntypeDebugMessageInsertKHR -> FuntypeDebugMessageInsertKHR
glDebugMessageInsertKHR ::
    GLenum ->
    GLenum ->
    GLuint ->
    GLenum ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glDebugMessageInsertKHR
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglDebugMessageInsertKHR fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentDebugMessageInsertKHR :: FuntypeDebugMessageInsertKHR
nonexistentDebugMessageInsertKHR
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageInsertKHR"
type FuntypeDebugMessageCallbackKHR =
    GLDEBUGPROCKHR ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDebugMessageCallbackKHR :: FunPtr FuntypeDebugMessageCallbackKHR -> FuntypeDebugMessageCallbackKHR
glDebugMessageCallbackKHR ::
    GLDEBUGPROCKHR ->
    Ptr () ->
    FlextGL -> IO ( () )
glDebugMessageCallbackKHR
    a0
    a1
    fgl = rglDebugMessageCallbackKHR fgl

    a0
    a1

nonexistentDebugMessageCallbackKHR :: FuntypeDebugMessageCallbackKHR
nonexistentDebugMessageCallbackKHR
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDebugMessageCallbackKHR"
type FuntypeGetDebugMessageLogKHR =
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    Ptr (GLenum) ->
    Ptr (GLuint) ->
    Ptr (GLenum) ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetDebugMessageLogKHR :: FunPtr FuntypeGetDebugMessageLogKHR -> FuntypeGetDebugMessageLogKHR
glGetDebugMessageLogKHR ::
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    Ptr (GLenum) ->
    Ptr (GLuint) ->
    Ptr (GLenum) ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( GLuint )
glGetDebugMessageLogKHR
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglGetDebugMessageLogKHR fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentGetDebugMessageLogKHR :: FuntypeGetDebugMessageLogKHR
nonexistentGetDebugMessageLogKHR
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetDebugMessageLogKHR"
type FuntypePushDebugGroupKHR =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPushDebugGroupKHR :: FunPtr FuntypePushDebugGroupKHR -> FuntypePushDebugGroupKHR
glPushDebugGroupKHR ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glPushDebugGroupKHR
    a0
    a1
    a2
    a3
    fgl = rglPushDebugGroupKHR fgl

    a0
    a1
    a2
    a3

nonexistentPushDebugGroupKHR :: FuntypePushDebugGroupKHR
nonexistentPushDebugGroupKHR
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glPushDebugGroupKHR"
type FuntypePopDebugGroupKHR =
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPopDebugGroupKHR :: FunPtr FuntypePopDebugGroupKHR -> FuntypePopDebugGroupKHR
glPopDebugGroupKHR ::
    FlextGL -> IO ( () )
glPopDebugGroupKHR
    fgl = rglPopDebugGroupKHR fgl


nonexistentPopDebugGroupKHR :: FuntypePopDebugGroupKHR
nonexistentPopDebugGroupKHR
    = throwIO $ NonExistentOpenGLFunction "glPopDebugGroupKHR"
type FuntypeObjectLabelKHR =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynObjectLabelKHR :: FunPtr FuntypeObjectLabelKHR -> FuntypeObjectLabelKHR
glObjectLabelKHR ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glObjectLabelKHR
    a0
    a1
    a2
    a3
    fgl = rglObjectLabelKHR fgl

    a0
    a1
    a2
    a3

nonexistentObjectLabelKHR :: FuntypeObjectLabelKHR
nonexistentObjectLabelKHR
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glObjectLabelKHR"
type FuntypeGetObjectLabelKHR =
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetObjectLabelKHR :: FunPtr FuntypeGetObjectLabelKHR -> FuntypeGetObjectLabelKHR
glGetObjectLabelKHR ::
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetObjectLabelKHR
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetObjectLabelKHR fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetObjectLabelKHR :: FuntypeGetObjectLabelKHR
nonexistentGetObjectLabelKHR
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetObjectLabelKHR"
type FuntypeObjectPtrLabelKHR =
    Ptr () ->
    GLsizei ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynObjectPtrLabelKHR :: FunPtr FuntypeObjectPtrLabelKHR -> FuntypeObjectPtrLabelKHR
glObjectPtrLabelKHR ::
    Ptr () ->
    GLsizei ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glObjectPtrLabelKHR
    a0
    a1
    a2
    fgl = rglObjectPtrLabelKHR fgl

    a0
    a1
    a2

nonexistentObjectPtrLabelKHR :: FuntypeObjectPtrLabelKHR
nonexistentObjectPtrLabelKHR
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glObjectPtrLabelKHR"
type FuntypeGetObjectPtrLabelKHR =
    Ptr () ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetObjectPtrLabelKHR :: FunPtr FuntypeGetObjectPtrLabelKHR -> FuntypeGetObjectPtrLabelKHR
glGetObjectPtrLabelKHR ::
    Ptr () ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetObjectPtrLabelKHR
    a0
    a1
    a2
    a3
    fgl = rglGetObjectPtrLabelKHR fgl

    a0
    a1
    a2
    a3

nonexistentGetObjectPtrLabelKHR :: FuntypeGetObjectPtrLabelKHR
nonexistentGetObjectPtrLabelKHR
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetObjectPtrLabelKHR"
type FuntypeGetPointervKHR =
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetPointervKHR :: FunPtr FuntypeGetPointervKHR -> FuntypeGetPointervKHR
glGetPointervKHR ::
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetPointervKHR
    a0
    a1
    fgl = rglGetPointervKHR fgl

    a0
    a1

nonexistentGetPointervKHR :: FuntypeGetPointervKHR
nonexistentGetPointervKHR
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetPointervKHR"

-- GL_EXT_direct_state_access

type FuntypeMatrixLoadfEXT =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixLoadfEXT :: FunPtr FuntypeMatrixLoadfEXT -> FuntypeMatrixLoadfEXT
glMatrixLoadfEXT ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMatrixLoadfEXT
    a0
    a1
    fgl = rglMatrixLoadfEXT fgl

    a0
    a1

nonexistentMatrixLoadfEXT :: FuntypeMatrixLoadfEXT
nonexistentMatrixLoadfEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixLoadfEXT"
type FuntypeMatrixLoaddEXT =
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixLoaddEXT :: FunPtr FuntypeMatrixLoaddEXT -> FuntypeMatrixLoaddEXT
glMatrixLoaddEXT ::
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glMatrixLoaddEXT
    a0
    a1
    fgl = rglMatrixLoaddEXT fgl

    a0
    a1

nonexistentMatrixLoaddEXT :: FuntypeMatrixLoaddEXT
nonexistentMatrixLoaddEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixLoaddEXT"
type FuntypeMatrixMultfEXT =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixMultfEXT :: FunPtr FuntypeMatrixMultfEXT -> FuntypeMatrixMultfEXT
glMatrixMultfEXT ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMatrixMultfEXT
    a0
    a1
    fgl = rglMatrixMultfEXT fgl

    a0
    a1

nonexistentMatrixMultfEXT :: FuntypeMatrixMultfEXT
nonexistentMatrixMultfEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixMultfEXT"
type FuntypeMatrixMultdEXT =
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixMultdEXT :: FunPtr FuntypeMatrixMultdEXT -> FuntypeMatrixMultdEXT
glMatrixMultdEXT ::
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glMatrixMultdEXT
    a0
    a1
    fgl = rglMatrixMultdEXT fgl

    a0
    a1

nonexistentMatrixMultdEXT :: FuntypeMatrixMultdEXT
nonexistentMatrixMultdEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixMultdEXT"
type FuntypeMatrixLoadIdentityEXT =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixLoadIdentityEXT :: FunPtr FuntypeMatrixLoadIdentityEXT -> FuntypeMatrixLoadIdentityEXT
glMatrixLoadIdentityEXT ::
    GLenum ->
    FlextGL -> IO ( () )
glMatrixLoadIdentityEXT
    a0
    fgl = rglMatrixLoadIdentityEXT fgl

    a0

nonexistentMatrixLoadIdentityEXT :: FuntypeMatrixLoadIdentityEXT
nonexistentMatrixLoadIdentityEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixLoadIdentityEXT"
type FuntypeMatrixRotatefEXT =
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixRotatefEXT :: FunPtr FuntypeMatrixRotatefEXT -> FuntypeMatrixRotatefEXT
glMatrixRotatefEXT ::
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glMatrixRotatefEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglMatrixRotatefEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentMatrixRotatefEXT :: FuntypeMatrixRotatefEXT
nonexistentMatrixRotatefEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixRotatefEXT"
type FuntypeMatrixRotatedEXT =
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixRotatedEXT :: FunPtr FuntypeMatrixRotatedEXT -> FuntypeMatrixRotatedEXT
glMatrixRotatedEXT ::
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glMatrixRotatedEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglMatrixRotatedEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentMatrixRotatedEXT :: FuntypeMatrixRotatedEXT
nonexistentMatrixRotatedEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixRotatedEXT"
type FuntypeMatrixScalefEXT =
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixScalefEXT :: FunPtr FuntypeMatrixScalefEXT -> FuntypeMatrixScalefEXT
glMatrixScalefEXT ::
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glMatrixScalefEXT
    a0
    a1
    a2
    a3
    fgl = rglMatrixScalefEXT fgl

    a0
    a1
    a2
    a3

nonexistentMatrixScalefEXT :: FuntypeMatrixScalefEXT
nonexistentMatrixScalefEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixScalefEXT"
type FuntypeMatrixScaledEXT =
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixScaledEXT :: FunPtr FuntypeMatrixScaledEXT -> FuntypeMatrixScaledEXT
glMatrixScaledEXT ::
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glMatrixScaledEXT
    a0
    a1
    a2
    a3
    fgl = rglMatrixScaledEXT fgl

    a0
    a1
    a2
    a3

nonexistentMatrixScaledEXT :: FuntypeMatrixScaledEXT
nonexistentMatrixScaledEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixScaledEXT"
type FuntypeMatrixTranslatefEXT =
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixTranslatefEXT :: FunPtr FuntypeMatrixTranslatefEXT -> FuntypeMatrixTranslatefEXT
glMatrixTranslatefEXT ::
    GLenum ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glMatrixTranslatefEXT
    a0
    a1
    a2
    a3
    fgl = rglMatrixTranslatefEXT fgl

    a0
    a1
    a2
    a3

nonexistentMatrixTranslatefEXT :: FuntypeMatrixTranslatefEXT
nonexistentMatrixTranslatefEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixTranslatefEXT"
type FuntypeMatrixTranslatedEXT =
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixTranslatedEXT :: FunPtr FuntypeMatrixTranslatedEXT -> FuntypeMatrixTranslatedEXT
glMatrixTranslatedEXT ::
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glMatrixTranslatedEXT
    a0
    a1
    a2
    a3
    fgl = rglMatrixTranslatedEXT fgl

    a0
    a1
    a2
    a3

nonexistentMatrixTranslatedEXT :: FuntypeMatrixTranslatedEXT
nonexistentMatrixTranslatedEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixTranslatedEXT"
type FuntypeMatrixFrustumEXT =
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixFrustumEXT :: FunPtr FuntypeMatrixFrustumEXT -> FuntypeMatrixFrustumEXT
glMatrixFrustumEXT ::
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glMatrixFrustumEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglMatrixFrustumEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentMatrixFrustumEXT :: FuntypeMatrixFrustumEXT
nonexistentMatrixFrustumEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixFrustumEXT"
type FuntypeMatrixOrthoEXT =
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixOrthoEXT :: FunPtr FuntypeMatrixOrthoEXT -> FuntypeMatrixOrthoEXT
glMatrixOrthoEXT ::
    GLenum ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glMatrixOrthoEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglMatrixOrthoEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentMatrixOrthoEXT :: FuntypeMatrixOrthoEXT
nonexistentMatrixOrthoEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixOrthoEXT"
type FuntypeMatrixPopEXT =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixPopEXT :: FunPtr FuntypeMatrixPopEXT -> FuntypeMatrixPopEXT
glMatrixPopEXT ::
    GLenum ->
    FlextGL -> IO ( () )
glMatrixPopEXT
    a0
    fgl = rglMatrixPopEXT fgl

    a0

nonexistentMatrixPopEXT :: FuntypeMatrixPopEXT
nonexistentMatrixPopEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixPopEXT"
type FuntypeMatrixPushEXT =
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixPushEXT :: FunPtr FuntypeMatrixPushEXT -> FuntypeMatrixPushEXT
glMatrixPushEXT ::
    GLenum ->
    FlextGL -> IO ( () )
glMatrixPushEXT
    a0
    fgl = rglMatrixPushEXT fgl

    a0

nonexistentMatrixPushEXT :: FuntypeMatrixPushEXT
nonexistentMatrixPushEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixPushEXT"
type FuntypeClientAttribDefaultEXT =
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClientAttribDefaultEXT :: FunPtr FuntypeClientAttribDefaultEXT -> FuntypeClientAttribDefaultEXT
glClientAttribDefaultEXT ::
    GLbitfield ->
    FlextGL -> IO ( () )
glClientAttribDefaultEXT
    a0
    fgl = rglClientAttribDefaultEXT fgl

    a0

nonexistentClientAttribDefaultEXT :: FuntypeClientAttribDefaultEXT
nonexistentClientAttribDefaultEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glClientAttribDefaultEXT"
type FuntypePushClientAttribDefaultEXT =
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynPushClientAttribDefaultEXT :: FunPtr FuntypePushClientAttribDefaultEXT -> FuntypePushClientAttribDefaultEXT
glPushClientAttribDefaultEXT ::
    GLbitfield ->
    FlextGL -> IO ( () )
glPushClientAttribDefaultEXT
    a0
    fgl = rglPushClientAttribDefaultEXT fgl

    a0

nonexistentPushClientAttribDefaultEXT :: FuntypePushClientAttribDefaultEXT
nonexistentPushClientAttribDefaultEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glPushClientAttribDefaultEXT"
type FuntypeTextureParameterfEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameterfEXT :: FunPtr FuntypeTextureParameterfEXT -> FuntypeTextureParameterfEXT
glTextureParameterfEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glTextureParameterfEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameterfEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameterfEXT :: FuntypeTextureParameterfEXT
nonexistentTextureParameterfEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameterfEXT"
type FuntypeTextureParameterfvEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameterfvEXT :: FunPtr FuntypeTextureParameterfvEXT -> FuntypeTextureParameterfvEXT
glTextureParameterfvEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glTextureParameterfvEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameterfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameterfvEXT :: FuntypeTextureParameterfvEXT
nonexistentTextureParameterfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameterfvEXT"
type FuntypeTextureParameteriEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameteriEXT :: FunPtr FuntypeTextureParameteriEXT -> FuntypeTextureParameteriEXT
glTextureParameteriEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glTextureParameteriEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameteriEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameteriEXT :: FuntypeTextureParameteriEXT
nonexistentTextureParameteriEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameteriEXT"
type FuntypeTextureParameterivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameterivEXT :: FunPtr FuntypeTextureParameterivEXT -> FuntypeTextureParameterivEXT
glTextureParameterivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glTextureParameterivEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameterivEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameterivEXT :: FuntypeTextureParameterivEXT
nonexistentTextureParameterivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameterivEXT"
type FuntypeTextureImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureImage1DEXT :: FunPtr FuntypeTextureImage1DEXT -> FuntypeTextureImage1DEXT
glTextureImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglTextureImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentTextureImage1DEXT :: FuntypeTextureImage1DEXT
nonexistentTextureImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureImage1DEXT"
type FuntypeTextureImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureImage2DEXT :: FunPtr FuntypeTextureImage2DEXT -> FuntypeTextureImage2DEXT
glTextureImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglTextureImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentTextureImage2DEXT :: FuntypeTextureImage2DEXT
nonexistentTextureImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureImage2DEXT"
type FuntypeTextureSubImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureSubImage1DEXT :: FunPtr FuntypeTextureSubImage1DEXT -> FuntypeTextureSubImage1DEXT
glTextureSubImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglTextureSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentTextureSubImage1DEXT :: FuntypeTextureSubImage1DEXT
nonexistentTextureSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureSubImage1DEXT"
type FuntypeTextureSubImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureSubImage2DEXT :: FunPtr FuntypeTextureSubImage2DEXT -> FuntypeTextureSubImage2DEXT
glTextureSubImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglTextureSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentTextureSubImage2DEXT :: FuntypeTextureSubImage2DEXT
nonexistentTextureSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureSubImage2DEXT"
type FuntypeCopyTextureImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTextureImage1DEXT :: FunPtr FuntypeCopyTextureImage1DEXT -> FuntypeCopyTextureImage1DEXT
glCopyTextureImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyTextureImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCopyTextureImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCopyTextureImage1DEXT :: FuntypeCopyTextureImage1DEXT
nonexistentCopyTextureImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTextureImage1DEXT"
type FuntypeCopyTextureImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTextureImage2DEXT :: FunPtr FuntypeCopyTextureImage2DEXT -> FuntypeCopyTextureImage2DEXT
glCopyTextureImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyTextureImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCopyTextureImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCopyTextureImage2DEXT :: FuntypeCopyTextureImage2DEXT
nonexistentCopyTextureImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTextureImage2DEXT"
type FuntypeCopyTextureSubImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTextureSubImage1DEXT :: FunPtr FuntypeCopyTextureSubImage1DEXT -> FuntypeCopyTextureSubImage1DEXT
glCopyTextureSubImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTextureSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglCopyTextureSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentCopyTextureSubImage1DEXT :: FuntypeCopyTextureSubImage1DEXT
nonexistentCopyTextureSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTextureSubImage1DEXT"
type FuntypeCopyTextureSubImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTextureSubImage2DEXT :: FunPtr FuntypeCopyTextureSubImage2DEXT -> FuntypeCopyTextureSubImage2DEXT
glCopyTextureSubImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTextureSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCopyTextureSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCopyTextureSubImage2DEXT :: FuntypeCopyTextureSubImage2DEXT
nonexistentCopyTextureSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTextureSubImage2DEXT"
type FuntypeGetTextureImageEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureImageEXT :: FunPtr FuntypeGetTextureImageEXT -> FuntypeGetTextureImageEXT
glGetTextureImageEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetTextureImageEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglGetTextureImageEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentGetTextureImageEXT :: FuntypeGetTextureImageEXT
nonexistentGetTextureImageEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureImageEXT"
type FuntypeGetTextureParameterfvEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureParameterfvEXT :: FunPtr FuntypeGetTextureParameterfvEXT -> FuntypeGetTextureParameterfvEXT
glGetTextureParameterfvEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetTextureParameterfvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetTextureParameterfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetTextureParameterfvEXT :: FuntypeGetTextureParameterfvEXT
nonexistentGetTextureParameterfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureParameterfvEXT"
type FuntypeGetTextureParameterivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureParameterivEXT :: FunPtr FuntypeGetTextureParameterivEXT -> FuntypeGetTextureParameterivEXT
glGetTextureParameterivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTextureParameterivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetTextureParameterivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetTextureParameterivEXT :: FuntypeGetTextureParameterivEXT
nonexistentGetTextureParameterivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureParameterivEXT"
type FuntypeGetTextureLevelParameterfvEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureLevelParameterfvEXT :: FunPtr FuntypeGetTextureLevelParameterfvEXT -> FuntypeGetTextureLevelParameterfvEXT
glGetTextureLevelParameterfvEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetTextureLevelParameterfvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetTextureLevelParameterfvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetTextureLevelParameterfvEXT :: FuntypeGetTextureLevelParameterfvEXT
nonexistentGetTextureLevelParameterfvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureLevelParameterfvEXT"
type FuntypeGetTextureLevelParameterivEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureLevelParameterivEXT :: FunPtr FuntypeGetTextureLevelParameterivEXT -> FuntypeGetTextureLevelParameterivEXT
glGetTextureLevelParameterivEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTextureLevelParameterivEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetTextureLevelParameterivEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetTextureLevelParameterivEXT :: FuntypeGetTextureLevelParameterivEXT
nonexistentGetTextureLevelParameterivEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureLevelParameterivEXT"
type FuntypeTextureImage3DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureImage3DEXT :: FunPtr FuntypeTextureImage3DEXT -> FuntypeTextureImage3DEXT
glTextureImage3DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    fgl = rglTextureImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10

nonexistentTextureImage3DEXT :: FuntypeTextureImage3DEXT
nonexistentTextureImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureImage3DEXT"
type FuntypeTextureSubImage3DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureSubImage3DEXT :: FunPtr FuntypeTextureSubImage3DEXT -> FuntypeTextureSubImage3DEXT
glTextureSubImage3DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glTextureSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11
    fgl = rglTextureSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11

nonexistentTextureSubImage3DEXT :: FuntypeTextureSubImage3DEXT
nonexistentTextureSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureSubImage3DEXT"
type FuntypeCopyTextureSubImage3DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyTextureSubImage3DEXT :: FunPtr FuntypeCopyTextureSubImage3DEXT -> FuntypeCopyTextureSubImage3DEXT
glCopyTextureSubImage3DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyTextureSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCopyTextureSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCopyTextureSubImage3DEXT :: FuntypeCopyTextureSubImage3DEXT
nonexistentCopyTextureSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyTextureSubImage3DEXT"
type FuntypeBindMultiTextureEXT =
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindMultiTextureEXT :: FunPtr FuntypeBindMultiTextureEXT -> FuntypeBindMultiTextureEXT
glBindMultiTextureEXT ::
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glBindMultiTextureEXT
    a0
    a1
    a2
    fgl = rglBindMultiTextureEXT fgl

    a0
    a1
    a2

nonexistentBindMultiTextureEXT :: FuntypeBindMultiTextureEXT
nonexistentBindMultiTextureEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBindMultiTextureEXT"
type FuntypeMultiTexCoordPointerEXT =
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexCoordPointerEXT :: FunPtr FuntypeMultiTexCoordPointerEXT -> FuntypeMultiTexCoordPointerEXT
glMultiTexCoordPointerEXT ::
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexCoordPointerEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglMultiTexCoordPointerEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentMultiTexCoordPointerEXT :: FuntypeMultiTexCoordPointerEXT
nonexistentMultiTexCoordPointerEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexCoordPointerEXT"
type FuntypeMultiTexEnvfEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexEnvfEXT :: FunPtr FuntypeMultiTexEnvfEXT -> FuntypeMultiTexEnvfEXT
glMultiTexEnvfEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glMultiTexEnvfEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexEnvfEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexEnvfEXT :: FuntypeMultiTexEnvfEXT
nonexistentMultiTexEnvfEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexEnvfEXT"
type FuntypeMultiTexEnvfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexEnvfvEXT :: FunPtr FuntypeMultiTexEnvfvEXT -> FuntypeMultiTexEnvfvEXT
glMultiTexEnvfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMultiTexEnvfvEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexEnvfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexEnvfvEXT :: FuntypeMultiTexEnvfvEXT
nonexistentMultiTexEnvfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexEnvfvEXT"
type FuntypeMultiTexEnviEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexEnviEXT :: FunPtr FuntypeMultiTexEnviEXT -> FuntypeMultiTexEnviEXT
glMultiTexEnviEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glMultiTexEnviEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexEnviEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexEnviEXT :: FuntypeMultiTexEnviEXT
nonexistentMultiTexEnviEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexEnviEXT"
type FuntypeMultiTexEnvivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexEnvivEXT :: FunPtr FuntypeMultiTexEnvivEXT -> FuntypeMultiTexEnvivEXT
glMultiTexEnvivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glMultiTexEnvivEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexEnvivEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexEnvivEXT :: FuntypeMultiTexEnvivEXT
nonexistentMultiTexEnvivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexEnvivEXT"
type FuntypeMultiTexGendEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGendEXT :: FunPtr FuntypeMultiTexGendEXT -> FuntypeMultiTexGendEXT
glMultiTexGendEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLdouble ->
    FlextGL -> IO ( () )
glMultiTexGendEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGendEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGendEXT :: FuntypeMultiTexGendEXT
nonexistentMultiTexGendEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGendEXT"
type FuntypeMultiTexGendvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGendvEXT :: FunPtr FuntypeMultiTexGendvEXT -> FuntypeMultiTexGendvEXT
glMultiTexGendvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glMultiTexGendvEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGendvEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGendvEXT :: FuntypeMultiTexGendvEXT
nonexistentMultiTexGendvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGendvEXT"
type FuntypeMultiTexGenfEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGenfEXT :: FunPtr FuntypeMultiTexGenfEXT -> FuntypeMultiTexGenfEXT
glMultiTexGenfEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glMultiTexGenfEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGenfEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGenfEXT :: FuntypeMultiTexGenfEXT
nonexistentMultiTexGenfEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGenfEXT"
type FuntypeMultiTexGenfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGenfvEXT :: FunPtr FuntypeMultiTexGenfvEXT -> FuntypeMultiTexGenfvEXT
glMultiTexGenfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMultiTexGenfvEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGenfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGenfvEXT :: FuntypeMultiTexGenfvEXT
nonexistentMultiTexGenfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGenfvEXT"
type FuntypeMultiTexGeniEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGeniEXT :: FunPtr FuntypeMultiTexGeniEXT -> FuntypeMultiTexGeniEXT
glMultiTexGeniEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glMultiTexGeniEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGeniEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGeniEXT :: FuntypeMultiTexGeniEXT
nonexistentMultiTexGeniEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGeniEXT"
type FuntypeMultiTexGenivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexGenivEXT :: FunPtr FuntypeMultiTexGenivEXT -> FuntypeMultiTexGenivEXT
glMultiTexGenivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glMultiTexGenivEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexGenivEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexGenivEXT :: FuntypeMultiTexGenivEXT
nonexistentMultiTexGenivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexGenivEXT"
type FuntypeGetMultiTexEnvfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexEnvfvEXT :: FunPtr FuntypeGetMultiTexEnvfvEXT -> FuntypeGetMultiTexEnvfvEXT
glGetMultiTexEnvfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetMultiTexEnvfvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexEnvfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexEnvfvEXT :: FuntypeGetMultiTexEnvfvEXT
nonexistentGetMultiTexEnvfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexEnvfvEXT"
type FuntypeGetMultiTexEnvivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexEnvivEXT :: FunPtr FuntypeGetMultiTexEnvivEXT -> FuntypeGetMultiTexEnvivEXT
glGetMultiTexEnvivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetMultiTexEnvivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexEnvivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexEnvivEXT :: FuntypeGetMultiTexEnvivEXT
nonexistentGetMultiTexEnvivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexEnvivEXT"
type FuntypeGetMultiTexGendvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexGendvEXT :: FunPtr FuntypeGetMultiTexGendvEXT -> FuntypeGetMultiTexGendvEXT
glGetMultiTexGendvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetMultiTexGendvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexGendvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexGendvEXT :: FuntypeGetMultiTexGendvEXT
nonexistentGetMultiTexGendvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexGendvEXT"
type FuntypeGetMultiTexGenfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexGenfvEXT :: FunPtr FuntypeGetMultiTexGenfvEXT -> FuntypeGetMultiTexGenfvEXT
glGetMultiTexGenfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetMultiTexGenfvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexGenfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexGenfvEXT :: FuntypeGetMultiTexGenfvEXT
nonexistentGetMultiTexGenfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexGenfvEXT"
type FuntypeGetMultiTexGenivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexGenivEXT :: FunPtr FuntypeGetMultiTexGenivEXT -> FuntypeGetMultiTexGenivEXT
glGetMultiTexGenivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetMultiTexGenivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexGenivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexGenivEXT :: FuntypeGetMultiTexGenivEXT
nonexistentGetMultiTexGenivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexGenivEXT"
type FuntypeMultiTexParameteriEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameteriEXT :: FunPtr FuntypeMultiTexParameteriEXT -> FuntypeMultiTexParameteriEXT
glMultiTexParameteriEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glMultiTexParameteriEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameteriEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameteriEXT :: FuntypeMultiTexParameteriEXT
nonexistentMultiTexParameteriEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameteriEXT"
type FuntypeMultiTexParameterivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameterivEXT :: FunPtr FuntypeMultiTexParameterivEXT -> FuntypeMultiTexParameterivEXT
glMultiTexParameterivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glMultiTexParameterivEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameterivEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameterivEXT :: FuntypeMultiTexParameterivEXT
nonexistentMultiTexParameterivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameterivEXT"
type FuntypeMultiTexParameterfEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameterfEXT :: FunPtr FuntypeMultiTexParameterfEXT -> FuntypeMultiTexParameterfEXT
glMultiTexParameterfEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLfloat ->
    FlextGL -> IO ( () )
glMultiTexParameterfEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameterfEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameterfEXT :: FuntypeMultiTexParameterfEXT
nonexistentMultiTexParameterfEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameterfEXT"
type FuntypeMultiTexParameterfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameterfvEXT :: FunPtr FuntypeMultiTexParameterfvEXT -> FuntypeMultiTexParameterfvEXT
glMultiTexParameterfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMultiTexParameterfvEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameterfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameterfvEXT :: FuntypeMultiTexParameterfvEXT
nonexistentMultiTexParameterfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameterfvEXT"
type FuntypeMultiTexImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexImage1DEXT :: FunPtr FuntypeMultiTexImage1DEXT -> FuntypeMultiTexImage1DEXT
glMultiTexImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglMultiTexImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentMultiTexImage1DEXT :: FuntypeMultiTexImage1DEXT
nonexistentMultiTexImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexImage1DEXT"
type FuntypeMultiTexImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexImage2DEXT :: FunPtr FuntypeMultiTexImage2DEXT -> FuntypeMultiTexImage2DEXT
glMultiTexImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglMultiTexImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentMultiTexImage2DEXT :: FuntypeMultiTexImage2DEXT
nonexistentMultiTexImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexImage2DEXT"
type FuntypeMultiTexSubImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexSubImage1DEXT :: FunPtr FuntypeMultiTexSubImage1DEXT -> FuntypeMultiTexSubImage1DEXT
glMultiTexSubImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglMultiTexSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentMultiTexSubImage1DEXT :: FuntypeMultiTexSubImage1DEXT
nonexistentMultiTexSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexSubImage1DEXT"
type FuntypeMultiTexSubImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexSubImage2DEXT :: FunPtr FuntypeMultiTexSubImage2DEXT -> FuntypeMultiTexSubImage2DEXT
glMultiTexSubImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglMultiTexSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentMultiTexSubImage2DEXT :: FuntypeMultiTexSubImage2DEXT
nonexistentMultiTexSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexSubImage2DEXT"
type FuntypeCopyMultiTexImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyMultiTexImage1DEXT :: FunPtr FuntypeCopyMultiTexImage1DEXT -> FuntypeCopyMultiTexImage1DEXT
glCopyMultiTexImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyMultiTexImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCopyMultiTexImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCopyMultiTexImage1DEXT :: FuntypeCopyMultiTexImage1DEXT
nonexistentCopyMultiTexImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyMultiTexImage1DEXT"
type FuntypeCopyMultiTexImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyMultiTexImage2DEXT :: FunPtr FuntypeCopyMultiTexImage2DEXT -> FuntypeCopyMultiTexImage2DEXT
glCopyMultiTexImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLint ->
    FlextGL -> IO ( () )
glCopyMultiTexImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCopyMultiTexImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCopyMultiTexImage2DEXT :: FuntypeCopyMultiTexImage2DEXT
nonexistentCopyMultiTexImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyMultiTexImage2DEXT"
type FuntypeCopyMultiTexSubImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyMultiTexSubImage1DEXT :: FunPtr FuntypeCopyMultiTexSubImage1DEXT -> FuntypeCopyMultiTexSubImage1DEXT
glCopyMultiTexSubImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyMultiTexSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglCopyMultiTexSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentCopyMultiTexSubImage1DEXT :: FuntypeCopyMultiTexSubImage1DEXT
nonexistentCopyMultiTexSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyMultiTexSubImage1DEXT"
type FuntypeCopyMultiTexSubImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyMultiTexSubImage2DEXT :: FunPtr FuntypeCopyMultiTexSubImage2DEXT -> FuntypeCopyMultiTexSubImage2DEXT
glCopyMultiTexSubImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyMultiTexSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCopyMultiTexSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCopyMultiTexSubImage2DEXT :: FuntypeCopyMultiTexSubImage2DEXT
nonexistentCopyMultiTexSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyMultiTexSubImage2DEXT"
type FuntypeGetMultiTexImageEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexImageEXT :: FunPtr FuntypeGetMultiTexImageEXT -> FuntypeGetMultiTexImageEXT
glGetMultiTexImageEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetMultiTexImageEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglGetMultiTexImageEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentGetMultiTexImageEXT :: FuntypeGetMultiTexImageEXT
nonexistentGetMultiTexImageEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexImageEXT"
type FuntypeGetMultiTexParameterfvEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexParameterfvEXT :: FunPtr FuntypeGetMultiTexParameterfvEXT -> FuntypeGetMultiTexParameterfvEXT
glGetMultiTexParameterfvEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetMultiTexParameterfvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexParameterfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexParameterfvEXT :: FuntypeGetMultiTexParameterfvEXT
nonexistentGetMultiTexParameterfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexParameterfvEXT"
type FuntypeGetMultiTexParameterivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexParameterivEXT :: FunPtr FuntypeGetMultiTexParameterivEXT -> FuntypeGetMultiTexParameterivEXT
glGetMultiTexParameterivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetMultiTexParameterivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexParameterivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexParameterivEXT :: FuntypeGetMultiTexParameterivEXT
nonexistentGetMultiTexParameterivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexParameterivEXT"
type FuntypeGetMultiTexLevelParameterfvEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexLevelParameterfvEXT :: FunPtr FuntypeGetMultiTexLevelParameterfvEXT -> FuntypeGetMultiTexLevelParameterfvEXT
glGetMultiTexLevelParameterfvEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetMultiTexLevelParameterfvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetMultiTexLevelParameterfvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetMultiTexLevelParameterfvEXT :: FuntypeGetMultiTexLevelParameterfvEXT
nonexistentGetMultiTexLevelParameterfvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexLevelParameterfvEXT"
type FuntypeGetMultiTexLevelParameterivEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexLevelParameterivEXT :: FunPtr FuntypeGetMultiTexLevelParameterivEXT -> FuntypeGetMultiTexLevelParameterivEXT
glGetMultiTexLevelParameterivEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetMultiTexLevelParameterivEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglGetMultiTexLevelParameterivEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentGetMultiTexLevelParameterivEXT :: FuntypeGetMultiTexLevelParameterivEXT
nonexistentGetMultiTexLevelParameterivEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexLevelParameterivEXT"
type FuntypeMultiTexImage3DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexImage3DEXT :: FunPtr FuntypeMultiTexImage3DEXT -> FuntypeMultiTexImage3DEXT
glMultiTexImage3DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    fgl = rglMultiTexImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10

nonexistentMultiTexImage3DEXT :: FuntypeMultiTexImage3DEXT
nonexistentMultiTexImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexImage3DEXT"
type FuntypeMultiTexSubImage3DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexSubImage3DEXT :: FunPtr FuntypeMultiTexSubImage3DEXT -> FuntypeMultiTexSubImage3DEXT
glMultiTexSubImage3DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glMultiTexSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11
    fgl = rglMultiTexSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11

nonexistentMultiTexSubImage3DEXT :: FuntypeMultiTexSubImage3DEXT
nonexistentMultiTexSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexSubImage3DEXT"
type FuntypeCopyMultiTexSubImage3DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCopyMultiTexSubImage3DEXT :: FunPtr FuntypeCopyMultiTexSubImage3DEXT -> FuntypeCopyMultiTexSubImage3DEXT
glCopyMultiTexSubImage3DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glCopyMultiTexSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCopyMultiTexSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCopyMultiTexSubImage3DEXT :: FuntypeCopyMultiTexSubImage3DEXT
nonexistentCopyMultiTexSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCopyMultiTexSubImage3DEXT"
type FuntypeEnableClientStateIndexedEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableClientStateIndexedEXT :: FunPtr FuntypeEnableClientStateIndexedEXT -> FuntypeEnableClientStateIndexedEXT
glEnableClientStateIndexedEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glEnableClientStateIndexedEXT
    a0
    a1
    fgl = rglEnableClientStateIndexedEXT fgl

    a0
    a1

nonexistentEnableClientStateIndexedEXT :: FuntypeEnableClientStateIndexedEXT
nonexistentEnableClientStateIndexedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableClientStateIndexedEXT"
type FuntypeDisableClientStateIndexedEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableClientStateIndexedEXT :: FunPtr FuntypeDisableClientStateIndexedEXT -> FuntypeDisableClientStateIndexedEXT
glDisableClientStateIndexedEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glDisableClientStateIndexedEXT
    a0
    a1
    fgl = rglDisableClientStateIndexedEXT fgl

    a0
    a1

nonexistentDisableClientStateIndexedEXT :: FuntypeDisableClientStateIndexedEXT
nonexistentDisableClientStateIndexedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableClientStateIndexedEXT"
type FuntypeGetFloatIndexedvEXT =
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFloatIndexedvEXT :: FunPtr FuntypeGetFloatIndexedvEXT -> FuntypeGetFloatIndexedvEXT
glGetFloatIndexedvEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetFloatIndexedvEXT
    a0
    a1
    a2
    fgl = rglGetFloatIndexedvEXT fgl

    a0
    a1
    a2

nonexistentGetFloatIndexedvEXT :: FuntypeGetFloatIndexedvEXT
nonexistentGetFloatIndexedvEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFloatIndexedvEXT"
type FuntypeGetDoubleIndexedvEXT =
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetDoubleIndexedvEXT :: FunPtr FuntypeGetDoubleIndexedvEXT -> FuntypeGetDoubleIndexedvEXT
glGetDoubleIndexedvEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetDoubleIndexedvEXT
    a0
    a1
    a2
    fgl = rglGetDoubleIndexedvEXT fgl

    a0
    a1
    a2

nonexistentGetDoubleIndexedvEXT :: FuntypeGetDoubleIndexedvEXT
nonexistentGetDoubleIndexedvEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetDoubleIndexedvEXT"
type FuntypeGetPointerIndexedvEXT =
    GLenum ->
    GLuint ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetPointerIndexedvEXT :: FunPtr FuntypeGetPointerIndexedvEXT -> FuntypeGetPointerIndexedvEXT
glGetPointerIndexedvEXT ::
    GLenum ->
    GLuint ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetPointerIndexedvEXT
    a0
    a1
    a2
    fgl = rglGetPointerIndexedvEXT fgl

    a0
    a1
    a2

nonexistentGetPointerIndexedvEXT :: FuntypeGetPointerIndexedvEXT
nonexistentGetPointerIndexedvEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetPointerIndexedvEXT"
type FuntypeEnableIndexedEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableIndexedEXT :: FunPtr FuntypeEnableIndexedEXT -> FuntypeEnableIndexedEXT
glEnableIndexedEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glEnableIndexedEXT
    a0
    a1
    fgl = rglEnableIndexedEXT fgl

    a0
    a1

nonexistentEnableIndexedEXT :: FuntypeEnableIndexedEXT
nonexistentEnableIndexedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableIndexedEXT"
type FuntypeDisableIndexedEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableIndexedEXT :: FunPtr FuntypeDisableIndexedEXT -> FuntypeDisableIndexedEXT
glDisableIndexedEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glDisableIndexedEXT
    a0
    a1
    fgl = rglDisableIndexedEXT fgl

    a0
    a1

nonexistentDisableIndexedEXT :: FuntypeDisableIndexedEXT
nonexistentDisableIndexedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableIndexedEXT"
type FuntypeIsEnabledIndexedEXT =
    GLenum ->
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsEnabledIndexedEXT :: FunPtr FuntypeIsEnabledIndexedEXT -> FuntypeIsEnabledIndexedEXT
glIsEnabledIndexedEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsEnabledIndexedEXT
    a0
    a1
    fgl = rglIsEnabledIndexedEXT fgl

    a0
    a1

nonexistentIsEnabledIndexedEXT :: FuntypeIsEnabledIndexedEXT
nonexistentIsEnabledIndexedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glIsEnabledIndexedEXT"
type FuntypeGetIntegerIndexedvEXT =
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetIntegerIndexedvEXT :: FunPtr FuntypeGetIntegerIndexedvEXT -> FuntypeGetIntegerIndexedvEXT
glGetIntegerIndexedvEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetIntegerIndexedvEXT
    a0
    a1
    a2
    fgl = rglGetIntegerIndexedvEXT fgl

    a0
    a1
    a2

nonexistentGetIntegerIndexedvEXT :: FuntypeGetIntegerIndexedvEXT
nonexistentGetIntegerIndexedvEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetIntegerIndexedvEXT"
type FuntypeGetBooleanIndexedvEXT =
    GLenum ->
    GLuint ->
    Ptr (GLboolean) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetBooleanIndexedvEXT :: FunPtr FuntypeGetBooleanIndexedvEXT -> FuntypeGetBooleanIndexedvEXT
glGetBooleanIndexedvEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLboolean) ->
    FlextGL -> IO ( () )
glGetBooleanIndexedvEXT
    a0
    a1
    a2
    fgl = rglGetBooleanIndexedvEXT fgl

    a0
    a1
    a2

nonexistentGetBooleanIndexedvEXT :: FuntypeGetBooleanIndexedvEXT
nonexistentGetBooleanIndexedvEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetBooleanIndexedvEXT"
type FuntypeCompressedTextureImage3DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureImage3DEXT :: FunPtr FuntypeCompressedTextureImage3DEXT -> FuntypeCompressedTextureImage3DEXT
glCompressedTextureImage3DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCompressedTextureImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCompressedTextureImage3DEXT :: FuntypeCompressedTextureImage3DEXT
nonexistentCompressedTextureImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureImage3DEXT"
type FuntypeCompressedTextureImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureImage2DEXT :: FunPtr FuntypeCompressedTextureImage2DEXT -> FuntypeCompressedTextureImage2DEXT
glCompressedTextureImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCompressedTextureImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCompressedTextureImage2DEXT :: FuntypeCompressedTextureImage2DEXT
nonexistentCompressedTextureImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureImage2DEXT"
type FuntypeCompressedTextureImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureImage1DEXT :: FunPtr FuntypeCompressedTextureImage1DEXT -> FuntypeCompressedTextureImage1DEXT
glCompressedTextureImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCompressedTextureImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCompressedTextureImage1DEXT :: FuntypeCompressedTextureImage1DEXT
nonexistentCompressedTextureImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureImage1DEXT"
type FuntypeCompressedTextureSubImage3DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureSubImage3DEXT :: FunPtr FuntypeCompressedTextureSubImage3DEXT -> FuntypeCompressedTextureSubImage3DEXT
glCompressedTextureSubImage3DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11
    fgl = rglCompressedTextureSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11

nonexistentCompressedTextureSubImage3DEXT :: FuntypeCompressedTextureSubImage3DEXT
nonexistentCompressedTextureSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureSubImage3DEXT"
type FuntypeCompressedTextureSubImage2DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureSubImage2DEXT :: FunPtr FuntypeCompressedTextureSubImage2DEXT -> FuntypeCompressedTextureSubImage2DEXT
glCompressedTextureSubImage2DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCompressedTextureSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCompressedTextureSubImage2DEXT :: FuntypeCompressedTextureSubImage2DEXT
nonexistentCompressedTextureSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureSubImage2DEXT"
type FuntypeCompressedTextureSubImage1DEXT =
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedTextureSubImage1DEXT :: FunPtr FuntypeCompressedTextureSubImage1DEXT -> FuntypeCompressedTextureSubImage1DEXT
glCompressedTextureSubImage1DEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedTextureSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCompressedTextureSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCompressedTextureSubImage1DEXT :: FuntypeCompressedTextureSubImage1DEXT
nonexistentCompressedTextureSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedTextureSubImage1DEXT"
type FuntypeGetCompressedTextureImageEXT =
    GLuint ->
    GLenum ->
    GLint ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetCompressedTextureImageEXT :: FunPtr FuntypeGetCompressedTextureImageEXT -> FuntypeGetCompressedTextureImageEXT
glGetCompressedTextureImageEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetCompressedTextureImageEXT
    a0
    a1
    a2
    a3
    fgl = rglGetCompressedTextureImageEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetCompressedTextureImageEXT :: FuntypeGetCompressedTextureImageEXT
nonexistentGetCompressedTextureImageEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetCompressedTextureImageEXT"
type FuntypeCompressedMultiTexImage3DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexImage3DEXT :: FunPtr FuntypeCompressedMultiTexImage3DEXT -> FuntypeCompressedMultiTexImage3DEXT
glCompressedMultiTexImage3DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCompressedMultiTexImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCompressedMultiTexImage3DEXT :: FuntypeCompressedMultiTexImage3DEXT
nonexistentCompressedMultiTexImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexImage3DEXT"
type FuntypeCompressedMultiTexImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexImage2DEXT :: FunPtr FuntypeCompressedMultiTexImage2DEXT -> FuntypeCompressedMultiTexImage2DEXT
glCompressedMultiTexImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglCompressedMultiTexImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentCompressedMultiTexImage2DEXT :: FuntypeCompressedMultiTexImage2DEXT
nonexistentCompressedMultiTexImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexImage2DEXT"
type FuntypeCompressedMultiTexImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexImage1DEXT :: FunPtr FuntypeCompressedMultiTexImage1DEXT -> FuntypeCompressedMultiTexImage1DEXT
glCompressedMultiTexImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLint ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCompressedMultiTexImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCompressedMultiTexImage1DEXT :: FuntypeCompressedMultiTexImage1DEXT
nonexistentCompressedMultiTexImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexImage1DEXT"
type FuntypeCompressedMultiTexSubImage3DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexSubImage3DEXT :: FunPtr FuntypeCompressedMultiTexSubImage3DEXT -> FuntypeCompressedMultiTexSubImage3DEXT
glCompressedMultiTexSubImage3DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexSubImage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11
    fgl = rglCompressedMultiTexSubImage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    a10
    a11

nonexistentCompressedMultiTexSubImage3DEXT :: FuntypeCompressedMultiTexSubImage3DEXT
nonexistentCompressedMultiTexSubImage3DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexSubImage3DEXT"
type FuntypeCompressedMultiTexSubImage2DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexSubImage2DEXT :: FunPtr FuntypeCompressedMultiTexSubImage2DEXT -> FuntypeCompressedMultiTexSubImage2DEXT
glCompressedMultiTexSubImage2DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexSubImage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9
    fgl = rglCompressedMultiTexSubImage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    a9

nonexistentCompressedMultiTexSubImage2DEXT :: FuntypeCompressedMultiTexSubImage2DEXT
nonexistentCompressedMultiTexSubImage2DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexSubImage2DEXT"
type FuntypeCompressedMultiTexSubImage1DEXT =
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCompressedMultiTexSubImage1DEXT :: FunPtr FuntypeCompressedMultiTexSubImage1DEXT -> FuntypeCompressedMultiTexSubImage1DEXT
glCompressedMultiTexSubImage1DEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    GLint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glCompressedMultiTexSubImage1DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglCompressedMultiTexSubImage1DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentCompressedMultiTexSubImage1DEXT :: FuntypeCompressedMultiTexSubImage1DEXT
nonexistentCompressedMultiTexSubImage1DEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCompressedMultiTexSubImage1DEXT"
type FuntypeGetCompressedMultiTexImageEXT =
    GLenum ->
    GLenum ->
    GLint ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetCompressedMultiTexImageEXT :: FunPtr FuntypeGetCompressedMultiTexImageEXT -> FuntypeGetCompressedMultiTexImageEXT
glGetCompressedMultiTexImageEXT ::
    GLenum ->
    GLenum ->
    GLint ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetCompressedMultiTexImageEXT
    a0
    a1
    a2
    a3
    fgl = rglGetCompressedMultiTexImageEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetCompressedMultiTexImageEXT :: FuntypeGetCompressedMultiTexImageEXT
nonexistentGetCompressedMultiTexImageEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetCompressedMultiTexImageEXT"
type FuntypeMatrixLoadTransposefEXT =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixLoadTransposefEXT :: FunPtr FuntypeMatrixLoadTransposefEXT -> FuntypeMatrixLoadTransposefEXT
glMatrixLoadTransposefEXT ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMatrixLoadTransposefEXT
    a0
    a1
    fgl = rglMatrixLoadTransposefEXT fgl

    a0
    a1

nonexistentMatrixLoadTransposefEXT :: FuntypeMatrixLoadTransposefEXT
nonexistentMatrixLoadTransposefEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixLoadTransposefEXT"
type FuntypeMatrixLoadTransposedEXT =
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixLoadTransposedEXT :: FunPtr FuntypeMatrixLoadTransposedEXT -> FuntypeMatrixLoadTransposedEXT
glMatrixLoadTransposedEXT ::
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glMatrixLoadTransposedEXT
    a0
    a1
    fgl = rglMatrixLoadTransposedEXT fgl

    a0
    a1

nonexistentMatrixLoadTransposedEXT :: FuntypeMatrixLoadTransposedEXT
nonexistentMatrixLoadTransposedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixLoadTransposedEXT"
type FuntypeMatrixMultTransposefEXT =
    GLenum ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixMultTransposefEXT :: FunPtr FuntypeMatrixMultTransposefEXT -> FuntypeMatrixMultTransposefEXT
glMatrixMultTransposefEXT ::
    GLenum ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glMatrixMultTransposefEXT
    a0
    a1
    fgl = rglMatrixMultTransposefEXT fgl

    a0
    a1

nonexistentMatrixMultTransposefEXT :: FuntypeMatrixMultTransposefEXT
nonexistentMatrixMultTransposefEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixMultTransposefEXT"
type FuntypeMatrixMultTransposedEXT =
    GLenum ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMatrixMultTransposedEXT :: FunPtr FuntypeMatrixMultTransposedEXT -> FuntypeMatrixMultTransposedEXT
glMatrixMultTransposedEXT ::
    GLenum ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glMatrixMultTransposedEXT
    a0
    a1
    fgl = rglMatrixMultTransposedEXT fgl

    a0
    a1

nonexistentMatrixMultTransposedEXT :: FuntypeMatrixMultTransposedEXT
nonexistentMatrixMultTransposedEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMatrixMultTransposedEXT"
type FuntypeNamedBufferDataEXT =
    GLuint ->
    GLsizeiptr ->
    Ptr () ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedBufferDataEXT :: FunPtr FuntypeNamedBufferDataEXT -> FuntypeNamedBufferDataEXT
glNamedBufferDataEXT ::
    GLuint ->
    GLsizeiptr ->
    Ptr () ->
    GLenum ->
    FlextGL -> IO ( () )
glNamedBufferDataEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedBufferDataEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedBufferDataEXT :: FuntypeNamedBufferDataEXT
nonexistentNamedBufferDataEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedBufferDataEXT"
type FuntypeNamedBufferSubDataEXT =
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedBufferSubDataEXT :: FunPtr FuntypeNamedBufferSubDataEXT -> FuntypeNamedBufferSubDataEXT
glNamedBufferSubDataEXT ::
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    FlextGL -> IO ( () )
glNamedBufferSubDataEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedBufferSubDataEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedBufferSubDataEXT :: FuntypeNamedBufferSubDataEXT
nonexistentNamedBufferSubDataEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedBufferSubDataEXT"
type FuntypeMapNamedBufferEXT =
    GLuint ->
    GLenum ->
    IO ( Ptr () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMapNamedBufferEXT :: FunPtr FuntypeMapNamedBufferEXT -> FuntypeMapNamedBufferEXT
glMapNamedBufferEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( Ptr () )
glMapNamedBufferEXT
    a0
    a1
    fgl = rglMapNamedBufferEXT fgl

    a0
    a1

nonexistentMapNamedBufferEXT :: FuntypeMapNamedBufferEXT
nonexistentMapNamedBufferEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMapNamedBufferEXT"
type FuntypeUnmapNamedBufferEXT =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUnmapNamedBufferEXT :: FunPtr FuntypeUnmapNamedBufferEXT -> FuntypeUnmapNamedBufferEXT
glUnmapNamedBufferEXT ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glUnmapNamedBufferEXT
    a0
    fgl = rglUnmapNamedBufferEXT fgl

    a0

nonexistentUnmapNamedBufferEXT :: FuntypeUnmapNamedBufferEXT
nonexistentUnmapNamedBufferEXT
    _
    = throwIO $ NonExistentOpenGLFunction "glUnmapNamedBufferEXT"
type FuntypeGetNamedBufferParameterivEXT =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedBufferParameterivEXT :: FunPtr FuntypeGetNamedBufferParameterivEXT -> FuntypeGetNamedBufferParameterivEXT
glGetNamedBufferParameterivEXT ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedBufferParameterivEXT
    a0
    a1
    a2
    fgl = rglGetNamedBufferParameterivEXT fgl

    a0
    a1
    a2

nonexistentGetNamedBufferParameterivEXT :: FuntypeGetNamedBufferParameterivEXT
nonexistentGetNamedBufferParameterivEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedBufferParameterivEXT"
type FuntypeGetNamedBufferPointervEXT =
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedBufferPointervEXT :: FunPtr FuntypeGetNamedBufferPointervEXT -> FuntypeGetNamedBufferPointervEXT
glGetNamedBufferPointervEXT ::
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetNamedBufferPointervEXT
    a0
    a1
    a2
    fgl = rglGetNamedBufferPointervEXT fgl

    a0
    a1
    a2

nonexistentGetNamedBufferPointervEXT :: FuntypeGetNamedBufferPointervEXT
nonexistentGetNamedBufferPointervEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedBufferPointervEXT"
type FuntypeGetNamedBufferSubDataEXT =
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedBufferSubDataEXT :: FunPtr FuntypeGetNamedBufferSubDataEXT -> FuntypeGetNamedBufferSubDataEXT
glGetNamedBufferSubDataEXT ::
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetNamedBufferSubDataEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedBufferSubDataEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedBufferSubDataEXT :: FuntypeGetNamedBufferSubDataEXT
nonexistentGetNamedBufferSubDataEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedBufferSubDataEXT"
type FuntypeProgramUniform1fEXT =
    GLuint ->
    GLint ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1fEXT :: FunPtr FuntypeProgramUniform1fEXT -> FuntypeProgramUniform1fEXT
glProgramUniform1fEXT ::
    GLuint ->
    GLint ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform1fEXT
    a0
    a1
    a2
    fgl = rglProgramUniform1fEXT fgl

    a0
    a1
    a2

nonexistentProgramUniform1fEXT :: FuntypeProgramUniform1fEXT
nonexistentProgramUniform1fEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1fEXT"
type FuntypeProgramUniform2fEXT =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2fEXT :: FunPtr FuntypeProgramUniform2fEXT -> FuntypeProgramUniform2fEXT
glProgramUniform2fEXT ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform2fEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2fEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2fEXT :: FuntypeProgramUniform2fEXT
nonexistentProgramUniform2fEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2fEXT"
type FuntypeProgramUniform3fEXT =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3fEXT :: FunPtr FuntypeProgramUniform3fEXT -> FuntypeProgramUniform3fEXT
glProgramUniform3fEXT ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform3fEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3fEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3fEXT :: FuntypeProgramUniform3fEXT
nonexistentProgramUniform3fEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3fEXT"
type FuntypeProgramUniform4fEXT =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4fEXT :: FunPtr FuntypeProgramUniform4fEXT -> FuntypeProgramUniform4fEXT
glProgramUniform4fEXT ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform4fEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4fEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4fEXT :: FuntypeProgramUniform4fEXT
nonexistentProgramUniform4fEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4fEXT"
type FuntypeProgramUniform1iEXT =
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1iEXT :: FunPtr FuntypeProgramUniform1iEXT -> FuntypeProgramUniform1iEXT
glProgramUniform1iEXT ::
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform1iEXT
    a0
    a1
    a2
    fgl = rglProgramUniform1iEXT fgl

    a0
    a1
    a2

nonexistentProgramUniform1iEXT :: FuntypeProgramUniform1iEXT
nonexistentProgramUniform1iEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1iEXT"
type FuntypeProgramUniform2iEXT =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2iEXT :: FunPtr FuntypeProgramUniform2iEXT -> FuntypeProgramUniform2iEXT
glProgramUniform2iEXT ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform2iEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2iEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2iEXT :: FuntypeProgramUniform2iEXT
nonexistentProgramUniform2iEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2iEXT"
type FuntypeProgramUniform3iEXT =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3iEXT :: FunPtr FuntypeProgramUniform3iEXT -> FuntypeProgramUniform3iEXT
glProgramUniform3iEXT ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform3iEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3iEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3iEXT :: FuntypeProgramUniform3iEXT
nonexistentProgramUniform3iEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3iEXT"
type FuntypeProgramUniform4iEXT =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4iEXT :: FunPtr FuntypeProgramUniform4iEXT -> FuntypeProgramUniform4iEXT
glProgramUniform4iEXT ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform4iEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4iEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4iEXT :: FuntypeProgramUniform4iEXT
nonexistentProgramUniform4iEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4iEXT"
type FuntypeProgramUniform1fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1fvEXT :: FunPtr FuntypeProgramUniform1fvEXT -> FuntypeProgramUniform1fvEXT
glProgramUniform1fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform1fvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1fvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1fvEXT :: FuntypeProgramUniform1fvEXT
nonexistentProgramUniform1fvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1fvEXT"
type FuntypeProgramUniform2fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2fvEXT :: FunPtr FuntypeProgramUniform2fvEXT -> FuntypeProgramUniform2fvEXT
glProgramUniform2fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform2fvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2fvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2fvEXT :: FuntypeProgramUniform2fvEXT
nonexistentProgramUniform2fvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2fvEXT"
type FuntypeProgramUniform3fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3fvEXT :: FunPtr FuntypeProgramUniform3fvEXT -> FuntypeProgramUniform3fvEXT
glProgramUniform3fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform3fvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3fvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3fvEXT :: FuntypeProgramUniform3fvEXT
nonexistentProgramUniform3fvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3fvEXT"
type FuntypeProgramUniform4fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4fvEXT :: FunPtr FuntypeProgramUniform4fvEXT -> FuntypeProgramUniform4fvEXT
glProgramUniform4fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform4fvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4fvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4fvEXT :: FuntypeProgramUniform4fvEXT
nonexistentProgramUniform4fvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4fvEXT"
type FuntypeProgramUniform1ivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1ivEXT :: FunPtr FuntypeProgramUniform1ivEXT -> FuntypeProgramUniform1ivEXT
glProgramUniform1ivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform1ivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1ivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1ivEXT :: FuntypeProgramUniform1ivEXT
nonexistentProgramUniform1ivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1ivEXT"
type FuntypeProgramUniform2ivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2ivEXT :: FunPtr FuntypeProgramUniform2ivEXT -> FuntypeProgramUniform2ivEXT
glProgramUniform2ivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform2ivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2ivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2ivEXT :: FuntypeProgramUniform2ivEXT
nonexistentProgramUniform2ivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2ivEXT"
type FuntypeProgramUniform3ivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3ivEXT :: FunPtr FuntypeProgramUniform3ivEXT -> FuntypeProgramUniform3ivEXT
glProgramUniform3ivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform3ivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3ivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3ivEXT :: FuntypeProgramUniform3ivEXT
nonexistentProgramUniform3ivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3ivEXT"
type FuntypeProgramUniform4ivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4ivEXT :: FunPtr FuntypeProgramUniform4ivEXT -> FuntypeProgramUniform4ivEXT
glProgramUniform4ivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform4ivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4ivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4ivEXT :: FuntypeProgramUniform4ivEXT
nonexistentProgramUniform4ivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4ivEXT"
type FuntypeProgramUniformMatrix2fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2fvEXT :: FunPtr FuntypeProgramUniformMatrix2fvEXT -> FuntypeProgramUniformMatrix2fvEXT
glProgramUniformMatrix2fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2fvEXT :: FuntypeProgramUniformMatrix2fvEXT
nonexistentProgramUniformMatrix2fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2fvEXT"
type FuntypeProgramUniformMatrix3fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3fvEXT :: FunPtr FuntypeProgramUniformMatrix3fvEXT -> FuntypeProgramUniformMatrix3fvEXT
glProgramUniformMatrix3fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3fvEXT :: FuntypeProgramUniformMatrix3fvEXT
nonexistentProgramUniformMatrix3fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3fvEXT"
type FuntypeProgramUniformMatrix4fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4fvEXT :: FunPtr FuntypeProgramUniformMatrix4fvEXT -> FuntypeProgramUniformMatrix4fvEXT
glProgramUniformMatrix4fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4fvEXT :: FuntypeProgramUniformMatrix4fvEXT
nonexistentProgramUniformMatrix4fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4fvEXT"
type FuntypeProgramUniformMatrix2x3fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x3fvEXT :: FunPtr FuntypeProgramUniformMatrix2x3fvEXT -> FuntypeProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x3fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x3fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x3fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x3fvEXT :: FuntypeProgramUniformMatrix2x3fvEXT
nonexistentProgramUniformMatrix2x3fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x3fvEXT"
type FuntypeProgramUniformMatrix3x2fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x2fvEXT :: FunPtr FuntypeProgramUniformMatrix3x2fvEXT -> FuntypeProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x2fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x2fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x2fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x2fvEXT :: FuntypeProgramUniformMatrix3x2fvEXT
nonexistentProgramUniformMatrix3x2fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x2fvEXT"
type FuntypeProgramUniformMatrix2x4fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x4fvEXT :: FunPtr FuntypeProgramUniformMatrix2x4fvEXT -> FuntypeProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix2x4fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x4fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x4fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x4fvEXT :: FuntypeProgramUniformMatrix2x4fvEXT
nonexistentProgramUniformMatrix2x4fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x4fvEXT"
type FuntypeProgramUniformMatrix4x2fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x2fvEXT :: FunPtr FuntypeProgramUniformMatrix4x2fvEXT -> FuntypeProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x2fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x2fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x2fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x2fvEXT :: FuntypeProgramUniformMatrix4x2fvEXT
nonexistentProgramUniformMatrix4x2fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x2fvEXT"
type FuntypeProgramUniformMatrix3x4fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x4fvEXT :: FunPtr FuntypeProgramUniformMatrix3x4fvEXT -> FuntypeProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix3x4fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x4fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x4fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x4fvEXT :: FuntypeProgramUniformMatrix3x4fvEXT
nonexistentProgramUniformMatrix3x4fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x4fvEXT"
type FuntypeProgramUniformMatrix4x3fvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x3fvEXT :: FunPtr FuntypeProgramUniformMatrix4x3fvEXT -> FuntypeProgramUniformMatrix4x3fvEXT
glProgramUniformMatrix4x3fvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x3fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x3fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x3fvEXT :: FuntypeProgramUniformMatrix4x3fvEXT
nonexistentProgramUniformMatrix4x3fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x3fvEXT"
type FuntypeTextureBufferEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureBufferEXT :: FunPtr FuntypeTextureBufferEXT -> FuntypeTextureBufferEXT
glTextureBufferEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glTextureBufferEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureBufferEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureBufferEXT :: FuntypeTextureBufferEXT
nonexistentTextureBufferEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureBufferEXT"
type FuntypeMultiTexBufferEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexBufferEXT :: FunPtr FuntypeMultiTexBufferEXT -> FuntypeMultiTexBufferEXT
glMultiTexBufferEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glMultiTexBufferEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexBufferEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexBufferEXT :: FuntypeMultiTexBufferEXT
nonexistentMultiTexBufferEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexBufferEXT"
type FuntypeTextureParameterIivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameterIivEXT :: FunPtr FuntypeTextureParameterIivEXT -> FuntypeTextureParameterIivEXT
glTextureParameterIivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glTextureParameterIivEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameterIivEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameterIivEXT :: FuntypeTextureParameterIivEXT
nonexistentTextureParameterIivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameterIivEXT"
type FuntypeTextureParameterIuivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureParameterIuivEXT :: FunPtr FuntypeTextureParameterIuivEXT -> FuntypeTextureParameterIuivEXT
glTextureParameterIuivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glTextureParameterIuivEXT
    a0
    a1
    a2
    a3
    fgl = rglTextureParameterIuivEXT fgl

    a0
    a1
    a2
    a3

nonexistentTextureParameterIuivEXT :: FuntypeTextureParameterIuivEXT
nonexistentTextureParameterIuivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureParameterIuivEXT"
type FuntypeGetTextureParameterIivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureParameterIivEXT :: FunPtr FuntypeGetTextureParameterIivEXT -> FuntypeGetTextureParameterIivEXT
glGetTextureParameterIivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetTextureParameterIivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetTextureParameterIivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetTextureParameterIivEXT :: FuntypeGetTextureParameterIivEXT
nonexistentGetTextureParameterIivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureParameterIivEXT"
type FuntypeGetTextureParameterIuivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetTextureParameterIuivEXT :: FunPtr FuntypeGetTextureParameterIuivEXT -> FuntypeGetTextureParameterIuivEXT
glGetTextureParameterIuivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetTextureParameterIuivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetTextureParameterIuivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetTextureParameterIuivEXT :: FuntypeGetTextureParameterIuivEXT
nonexistentGetTextureParameterIuivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetTextureParameterIuivEXT"
type FuntypeMultiTexParameterIivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameterIivEXT :: FunPtr FuntypeMultiTexParameterIivEXT -> FuntypeMultiTexParameterIivEXT
glMultiTexParameterIivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glMultiTexParameterIivEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameterIivEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameterIivEXT :: FuntypeMultiTexParameterIivEXT
nonexistentMultiTexParameterIivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameterIivEXT"
type FuntypeMultiTexParameterIuivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexParameterIuivEXT :: FunPtr FuntypeMultiTexParameterIuivEXT -> FuntypeMultiTexParameterIuivEXT
glMultiTexParameterIuivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glMultiTexParameterIuivEXT
    a0
    a1
    a2
    a3
    fgl = rglMultiTexParameterIuivEXT fgl

    a0
    a1
    a2
    a3

nonexistentMultiTexParameterIuivEXT :: FuntypeMultiTexParameterIuivEXT
nonexistentMultiTexParameterIuivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexParameterIuivEXT"
type FuntypeGetMultiTexParameterIivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexParameterIivEXT :: FunPtr FuntypeGetMultiTexParameterIivEXT -> FuntypeGetMultiTexParameterIivEXT
glGetMultiTexParameterIivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetMultiTexParameterIivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexParameterIivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexParameterIivEXT :: FuntypeGetMultiTexParameterIivEXT
nonexistentGetMultiTexParameterIivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexParameterIivEXT"
type FuntypeGetMultiTexParameterIuivEXT =
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetMultiTexParameterIuivEXT :: FunPtr FuntypeGetMultiTexParameterIuivEXT -> FuntypeGetMultiTexParameterIuivEXT
glGetMultiTexParameterIuivEXT ::
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetMultiTexParameterIuivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetMultiTexParameterIuivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetMultiTexParameterIuivEXT :: FuntypeGetMultiTexParameterIuivEXT
nonexistentGetMultiTexParameterIuivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetMultiTexParameterIuivEXT"
type FuntypeProgramUniform1uiEXT =
    GLuint ->
    GLint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1uiEXT :: FunPtr FuntypeProgramUniform1uiEXT -> FuntypeProgramUniform1uiEXT
glProgramUniform1uiEXT ::
    GLuint ->
    GLint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform1uiEXT
    a0
    a1
    a2
    fgl = rglProgramUniform1uiEXT fgl

    a0
    a1
    a2

nonexistentProgramUniform1uiEXT :: FuntypeProgramUniform1uiEXT
nonexistentProgramUniform1uiEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1uiEXT"
type FuntypeProgramUniform2uiEXT =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2uiEXT :: FunPtr FuntypeProgramUniform2uiEXT -> FuntypeProgramUniform2uiEXT
glProgramUniform2uiEXT ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform2uiEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2uiEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2uiEXT :: FuntypeProgramUniform2uiEXT
nonexistentProgramUniform2uiEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2uiEXT"
type FuntypeProgramUniform3uiEXT =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3uiEXT :: FunPtr FuntypeProgramUniform3uiEXT -> FuntypeProgramUniform3uiEXT
glProgramUniform3uiEXT ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform3uiEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3uiEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3uiEXT :: FuntypeProgramUniform3uiEXT
nonexistentProgramUniform3uiEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3uiEXT"
type FuntypeProgramUniform4uiEXT =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4uiEXT :: FunPtr FuntypeProgramUniform4uiEXT -> FuntypeProgramUniform4uiEXT
glProgramUniform4uiEXT ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform4uiEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4uiEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4uiEXT :: FuntypeProgramUniform4uiEXT
nonexistentProgramUniform4uiEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4uiEXT"
type FuntypeProgramUniform1uivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1uivEXT :: FunPtr FuntypeProgramUniform1uivEXT -> FuntypeProgramUniform1uivEXT
glProgramUniform1uivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform1uivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1uivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1uivEXT :: FuntypeProgramUniform1uivEXT
nonexistentProgramUniform1uivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1uivEXT"
type FuntypeProgramUniform2uivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2uivEXT :: FunPtr FuntypeProgramUniform2uivEXT -> FuntypeProgramUniform2uivEXT
glProgramUniform2uivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform2uivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2uivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2uivEXT :: FuntypeProgramUniform2uivEXT
nonexistentProgramUniform2uivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2uivEXT"
type FuntypeProgramUniform3uivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3uivEXT :: FunPtr FuntypeProgramUniform3uivEXT -> FuntypeProgramUniform3uivEXT
glProgramUniform3uivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform3uivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3uivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3uivEXT :: FuntypeProgramUniform3uivEXT
nonexistentProgramUniform3uivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3uivEXT"
type FuntypeProgramUniform4uivEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4uivEXT :: FunPtr FuntypeProgramUniform4uivEXT -> FuntypeProgramUniform4uivEXT
glProgramUniform4uivEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform4uivEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4uivEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4uivEXT :: FuntypeProgramUniform4uivEXT
nonexistentProgramUniform4uivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4uivEXT"
type FuntypeNamedProgramLocalParameters4fvEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameters4fvEXT :: FunPtr FuntypeNamedProgramLocalParameters4fvEXT -> FuntypeNamedProgramLocalParameters4fvEXT
glNamedProgramLocalParameters4fvEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameters4fvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedProgramLocalParameters4fvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedProgramLocalParameters4fvEXT :: FuntypeNamedProgramLocalParameters4fvEXT
nonexistentNamedProgramLocalParameters4fvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameters4fvEXT"
type FuntypeNamedProgramLocalParameterI4iEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameterI4iEXT :: FunPtr FuntypeNamedProgramLocalParameterI4iEXT -> FuntypeNamedProgramLocalParameterI4iEXT
glNamedProgramLocalParameterI4iEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameterI4iEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglNamedProgramLocalParameterI4iEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentNamedProgramLocalParameterI4iEXT :: FuntypeNamedProgramLocalParameterI4iEXT
nonexistentNamedProgramLocalParameterI4iEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameterI4iEXT"
type FuntypeNamedProgramLocalParameterI4ivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameterI4ivEXT :: FunPtr FuntypeNamedProgramLocalParameterI4ivEXT -> FuntypeNamedProgramLocalParameterI4ivEXT
glNamedProgramLocalParameterI4ivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameterI4ivEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedProgramLocalParameterI4ivEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedProgramLocalParameterI4ivEXT :: FuntypeNamedProgramLocalParameterI4ivEXT
nonexistentNamedProgramLocalParameterI4ivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameterI4ivEXT"
type FuntypeNamedProgramLocalParametersI4ivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParametersI4ivEXT :: FunPtr FuntypeNamedProgramLocalParametersI4ivEXT -> FuntypeNamedProgramLocalParametersI4ivEXT
glNamedProgramLocalParametersI4ivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParametersI4ivEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedProgramLocalParametersI4ivEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedProgramLocalParametersI4ivEXT :: FuntypeNamedProgramLocalParametersI4ivEXT
nonexistentNamedProgramLocalParametersI4ivEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParametersI4ivEXT"
type FuntypeNamedProgramLocalParameterI4uiEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameterI4uiEXT :: FunPtr FuntypeNamedProgramLocalParameterI4uiEXT -> FuntypeNamedProgramLocalParameterI4uiEXT
glNamedProgramLocalParameterI4uiEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameterI4uiEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglNamedProgramLocalParameterI4uiEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentNamedProgramLocalParameterI4uiEXT :: FuntypeNamedProgramLocalParameterI4uiEXT
nonexistentNamedProgramLocalParameterI4uiEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameterI4uiEXT"
type FuntypeNamedProgramLocalParameterI4uivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameterI4uivEXT :: FunPtr FuntypeNamedProgramLocalParameterI4uivEXT -> FuntypeNamedProgramLocalParameterI4uivEXT
glNamedProgramLocalParameterI4uivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameterI4uivEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedProgramLocalParameterI4uivEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedProgramLocalParameterI4uivEXT :: FuntypeNamedProgramLocalParameterI4uivEXT
nonexistentNamedProgramLocalParameterI4uivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameterI4uivEXT"
type FuntypeNamedProgramLocalParametersI4uivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParametersI4uivEXT :: FunPtr FuntypeNamedProgramLocalParametersI4uivEXT -> FuntypeNamedProgramLocalParametersI4uivEXT
glNamedProgramLocalParametersI4uivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParametersI4uivEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedProgramLocalParametersI4uivEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedProgramLocalParametersI4uivEXT :: FuntypeNamedProgramLocalParametersI4uivEXT
nonexistentNamedProgramLocalParametersI4uivEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParametersI4uivEXT"
type FuntypeGetNamedProgramLocalParameterIivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramLocalParameterIivEXT :: FunPtr FuntypeGetNamedProgramLocalParameterIivEXT -> FuntypeGetNamedProgramLocalParameterIivEXT
glGetNamedProgramLocalParameterIivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedProgramLocalParameterIivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramLocalParameterIivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramLocalParameterIivEXT :: FuntypeGetNamedProgramLocalParameterIivEXT
nonexistentGetNamedProgramLocalParameterIivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramLocalParameterIivEXT"
type FuntypeGetNamedProgramLocalParameterIuivEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramLocalParameterIuivEXT :: FunPtr FuntypeGetNamedProgramLocalParameterIuivEXT -> FuntypeGetNamedProgramLocalParameterIuivEXT
glGetNamedProgramLocalParameterIuivEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGetNamedProgramLocalParameterIuivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramLocalParameterIuivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramLocalParameterIuivEXT :: FuntypeGetNamedProgramLocalParameterIuivEXT
nonexistentGetNamedProgramLocalParameterIuivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramLocalParameterIuivEXT"
type FuntypeEnableClientStateiEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableClientStateiEXT :: FunPtr FuntypeEnableClientStateiEXT -> FuntypeEnableClientStateiEXT
glEnableClientStateiEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glEnableClientStateiEXT
    a0
    a1
    fgl = rglEnableClientStateiEXT fgl

    a0
    a1

nonexistentEnableClientStateiEXT :: FuntypeEnableClientStateiEXT
nonexistentEnableClientStateiEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableClientStateiEXT"
type FuntypeDisableClientStateiEXT =
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableClientStateiEXT :: FunPtr FuntypeDisableClientStateiEXT -> FuntypeDisableClientStateiEXT
glDisableClientStateiEXT ::
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glDisableClientStateiEXT
    a0
    a1
    fgl = rglDisableClientStateiEXT fgl

    a0
    a1

nonexistentDisableClientStateiEXT :: FuntypeDisableClientStateiEXT
nonexistentDisableClientStateiEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableClientStateiEXT"
type FuntypeGetFloati_vEXT =
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFloati_vEXT :: FunPtr FuntypeGetFloati_vEXT -> FuntypeGetFloati_vEXT
glGetFloati_vEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetFloati_vEXT
    a0
    a1
    a2
    fgl = rglGetFloati_vEXT fgl

    a0
    a1
    a2

nonexistentGetFloati_vEXT :: FuntypeGetFloati_vEXT
nonexistentGetFloati_vEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFloati_vEXT"
type FuntypeGetDoublei_vEXT =
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetDoublei_vEXT :: FunPtr FuntypeGetDoublei_vEXT -> FuntypeGetDoublei_vEXT
glGetDoublei_vEXT ::
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetDoublei_vEXT
    a0
    a1
    a2
    fgl = rglGetDoublei_vEXT fgl

    a0
    a1
    a2

nonexistentGetDoublei_vEXT :: FuntypeGetDoublei_vEXT
nonexistentGetDoublei_vEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetDoublei_vEXT"
type FuntypeGetPointeri_vEXT =
    GLenum ->
    GLuint ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetPointeri_vEXT :: FunPtr FuntypeGetPointeri_vEXT -> FuntypeGetPointeri_vEXT
glGetPointeri_vEXT ::
    GLenum ->
    GLuint ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetPointeri_vEXT
    a0
    a1
    a2
    fgl = rglGetPointeri_vEXT fgl

    a0
    a1
    a2

nonexistentGetPointeri_vEXT :: FuntypeGetPointeri_vEXT
nonexistentGetPointeri_vEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetPointeri_vEXT"
type FuntypeNamedProgramStringEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramStringEXT :: FunPtr FuntypeNamedProgramStringEXT -> FuntypeNamedProgramStringEXT
glNamedProgramStringEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLsizei ->
    Ptr () ->
    FlextGL -> IO ( () )
glNamedProgramStringEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedProgramStringEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedProgramStringEXT :: FuntypeNamedProgramStringEXT
nonexistentNamedProgramStringEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramStringEXT"
type FuntypeNamedProgramLocalParameter4dEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameter4dEXT :: FunPtr FuntypeNamedProgramLocalParameter4dEXT -> FuntypeNamedProgramLocalParameter4dEXT
glNamedProgramLocalParameter4dEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameter4dEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglNamedProgramLocalParameter4dEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentNamedProgramLocalParameter4dEXT :: FuntypeNamedProgramLocalParameter4dEXT
nonexistentNamedProgramLocalParameter4dEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameter4dEXT"
type FuntypeNamedProgramLocalParameter4dvEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameter4dvEXT :: FunPtr FuntypeNamedProgramLocalParameter4dvEXT -> FuntypeNamedProgramLocalParameter4dvEXT
glNamedProgramLocalParameter4dvEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameter4dvEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedProgramLocalParameter4dvEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedProgramLocalParameter4dvEXT :: FuntypeNamedProgramLocalParameter4dvEXT
nonexistentNamedProgramLocalParameter4dvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameter4dvEXT"
type FuntypeNamedProgramLocalParameter4fEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameter4fEXT :: FunPtr FuntypeNamedProgramLocalParameter4fEXT -> FuntypeNamedProgramLocalParameter4fEXT
glNamedProgramLocalParameter4fEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameter4fEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglNamedProgramLocalParameter4fEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentNamedProgramLocalParameter4fEXT :: FuntypeNamedProgramLocalParameter4fEXT
nonexistentNamedProgramLocalParameter4fEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameter4fEXT"
type FuntypeNamedProgramLocalParameter4fvEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedProgramLocalParameter4fvEXT :: FunPtr FuntypeNamedProgramLocalParameter4fvEXT -> FuntypeNamedProgramLocalParameter4fvEXT
glNamedProgramLocalParameter4fvEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glNamedProgramLocalParameter4fvEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedProgramLocalParameter4fvEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedProgramLocalParameter4fvEXT :: FuntypeNamedProgramLocalParameter4fvEXT
nonexistentNamedProgramLocalParameter4fvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedProgramLocalParameter4fvEXT"
type FuntypeGetNamedProgramLocalParameterdvEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramLocalParameterdvEXT :: FunPtr FuntypeGetNamedProgramLocalParameterdvEXT -> FuntypeGetNamedProgramLocalParameterdvEXT
glGetNamedProgramLocalParameterdvEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glGetNamedProgramLocalParameterdvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramLocalParameterdvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramLocalParameterdvEXT :: FuntypeGetNamedProgramLocalParameterdvEXT
nonexistentGetNamedProgramLocalParameterdvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramLocalParameterdvEXT"
type FuntypeGetNamedProgramLocalParameterfvEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramLocalParameterfvEXT :: FunPtr FuntypeGetNamedProgramLocalParameterfvEXT -> FuntypeGetNamedProgramLocalParameterfvEXT
glGetNamedProgramLocalParameterfvEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glGetNamedProgramLocalParameterfvEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramLocalParameterfvEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramLocalParameterfvEXT :: FuntypeGetNamedProgramLocalParameterfvEXT
nonexistentGetNamedProgramLocalParameterfvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramLocalParameterfvEXT"
type FuntypeGetNamedProgramivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramivEXT :: FunPtr FuntypeGetNamedProgramivEXT -> FuntypeGetNamedProgramivEXT
glGetNamedProgramivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedProgramivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramivEXT :: FuntypeGetNamedProgramivEXT
nonexistentGetNamedProgramivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramivEXT"
type FuntypeGetNamedProgramStringEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedProgramStringEXT :: FunPtr FuntypeGetNamedProgramStringEXT -> FuntypeGetNamedProgramStringEXT
glGetNamedProgramStringEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glGetNamedProgramStringEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedProgramStringEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedProgramStringEXT :: FuntypeGetNamedProgramStringEXT
nonexistentGetNamedProgramStringEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedProgramStringEXT"
type FuntypeNamedRenderbufferStorageEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedRenderbufferStorageEXT :: FunPtr FuntypeNamedRenderbufferStorageEXT -> FuntypeNamedRenderbufferStorageEXT
glNamedRenderbufferStorageEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glNamedRenderbufferStorageEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedRenderbufferStorageEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedRenderbufferStorageEXT :: FuntypeNamedRenderbufferStorageEXT
nonexistentNamedRenderbufferStorageEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedRenderbufferStorageEXT"
type FuntypeGetNamedRenderbufferParameterivEXT =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedRenderbufferParameterivEXT :: FunPtr FuntypeGetNamedRenderbufferParameterivEXT -> FuntypeGetNamedRenderbufferParameterivEXT
glGetNamedRenderbufferParameterivEXT ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedRenderbufferParameterivEXT
    a0
    a1
    a2
    fgl = rglGetNamedRenderbufferParameterivEXT fgl

    a0
    a1
    a2

nonexistentGetNamedRenderbufferParameterivEXT :: FuntypeGetNamedRenderbufferParameterivEXT
nonexistentGetNamedRenderbufferParameterivEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedRenderbufferParameterivEXT"
type FuntypeNamedRenderbufferStorageMultisampleEXT =
    GLuint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedRenderbufferStorageMultisampleEXT :: FunPtr FuntypeNamedRenderbufferStorageMultisampleEXT -> FuntypeNamedRenderbufferStorageMultisampleEXT
glNamedRenderbufferStorageMultisampleEXT ::
    GLuint ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glNamedRenderbufferStorageMultisampleEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedRenderbufferStorageMultisampleEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedRenderbufferStorageMultisampleEXT :: FuntypeNamedRenderbufferStorageMultisampleEXT
nonexistentNamedRenderbufferStorageMultisampleEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedRenderbufferStorageMultisampleEXT"
type FuntypeNamedRenderbufferStorageMultisampleCoverageEXT =
    GLuint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedRenderbufferStorageMultisampleCoverageEXT :: FunPtr FuntypeNamedRenderbufferStorageMultisampleCoverageEXT -> FuntypeNamedRenderbufferStorageMultisampleCoverageEXT
glNamedRenderbufferStorageMultisampleCoverageEXT ::
    GLuint ->
    GLsizei ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glNamedRenderbufferStorageMultisampleCoverageEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglNamedRenderbufferStorageMultisampleCoverageEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentNamedRenderbufferStorageMultisampleCoverageEXT :: FuntypeNamedRenderbufferStorageMultisampleCoverageEXT
nonexistentNamedRenderbufferStorageMultisampleCoverageEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedRenderbufferStorageMultisampleCoverageEXT"
type FuntypeCheckNamedFramebufferStatusEXT =
    GLuint ->
    GLenum ->
    IO ( GLenum )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCheckNamedFramebufferStatusEXT :: FunPtr FuntypeCheckNamedFramebufferStatusEXT -> FuntypeCheckNamedFramebufferStatusEXT
glCheckNamedFramebufferStatusEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( GLenum )
glCheckNamedFramebufferStatusEXT
    a0
    a1
    fgl = rglCheckNamedFramebufferStatusEXT fgl

    a0
    a1

nonexistentCheckNamedFramebufferStatusEXT :: FuntypeCheckNamedFramebufferStatusEXT
nonexistentCheckNamedFramebufferStatusEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCheckNamedFramebufferStatusEXT"
type FuntypeNamedFramebufferTexture1DEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTexture1DEXT :: FunPtr FuntypeNamedFramebufferTexture1DEXT -> FuntypeNamedFramebufferTexture1DEXT
glNamedFramebufferTexture1DEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferTexture1DEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedFramebufferTexture1DEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedFramebufferTexture1DEXT :: FuntypeNamedFramebufferTexture1DEXT
nonexistentNamedFramebufferTexture1DEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTexture1DEXT"
type FuntypeNamedFramebufferTexture2DEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTexture2DEXT :: FunPtr FuntypeNamedFramebufferTexture2DEXT -> FuntypeNamedFramebufferTexture2DEXT
glNamedFramebufferTexture2DEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferTexture2DEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedFramebufferTexture2DEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedFramebufferTexture2DEXT :: FuntypeNamedFramebufferTexture2DEXT
nonexistentNamedFramebufferTexture2DEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTexture2DEXT"
type FuntypeNamedFramebufferTexture3DEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTexture3DEXT :: FunPtr FuntypeNamedFramebufferTexture3DEXT -> FuntypeNamedFramebufferTexture3DEXT
glNamedFramebufferTexture3DEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferTexture3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglNamedFramebufferTexture3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentNamedFramebufferTexture3DEXT :: FuntypeNamedFramebufferTexture3DEXT
nonexistentNamedFramebufferTexture3DEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTexture3DEXT"
type FuntypeNamedFramebufferRenderbufferEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferRenderbufferEXT :: FunPtr FuntypeNamedFramebufferRenderbufferEXT -> FuntypeNamedFramebufferRenderbufferEXT
glNamedFramebufferRenderbufferEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glNamedFramebufferRenderbufferEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedFramebufferRenderbufferEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedFramebufferRenderbufferEXT :: FuntypeNamedFramebufferRenderbufferEXT
nonexistentNamedFramebufferRenderbufferEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferRenderbufferEXT"
type FuntypeGetNamedFramebufferAttachmentParameterivEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedFramebufferAttachmentParameterivEXT :: FunPtr FuntypeGetNamedFramebufferAttachmentParameterivEXT -> FuntypeGetNamedFramebufferAttachmentParameterivEXT
glGetNamedFramebufferAttachmentParameterivEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedFramebufferAttachmentParameterivEXT
    a0
    a1
    a2
    a3
    fgl = rglGetNamedFramebufferAttachmentParameterivEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetNamedFramebufferAttachmentParameterivEXT :: FuntypeGetNamedFramebufferAttachmentParameterivEXT
nonexistentGetNamedFramebufferAttachmentParameterivEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedFramebufferAttachmentParameterivEXT"
type FuntypeGenerateTextureMipmapEXT =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenerateTextureMipmapEXT :: FunPtr FuntypeGenerateTextureMipmapEXT -> FuntypeGenerateTextureMipmapEXT
glGenerateTextureMipmapEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glGenerateTextureMipmapEXT
    a0
    a1
    fgl = rglGenerateTextureMipmapEXT fgl

    a0
    a1

nonexistentGenerateTextureMipmapEXT :: FuntypeGenerateTextureMipmapEXT
nonexistentGenerateTextureMipmapEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenerateTextureMipmapEXT"
type FuntypeGenerateMultiTexMipmapEXT =
    GLenum ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenerateMultiTexMipmapEXT :: FunPtr FuntypeGenerateMultiTexMipmapEXT -> FuntypeGenerateMultiTexMipmapEXT
glGenerateMultiTexMipmapEXT ::
    GLenum ->
    GLenum ->
    FlextGL -> IO ( () )
glGenerateMultiTexMipmapEXT
    a0
    a1
    fgl = rglGenerateMultiTexMipmapEXT fgl

    a0
    a1

nonexistentGenerateMultiTexMipmapEXT :: FuntypeGenerateMultiTexMipmapEXT
nonexistentGenerateMultiTexMipmapEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenerateMultiTexMipmapEXT"
type FuntypeFramebufferDrawBufferEXT =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferDrawBufferEXT :: FunPtr FuntypeFramebufferDrawBufferEXT -> FuntypeFramebufferDrawBufferEXT
glFramebufferDrawBufferEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glFramebufferDrawBufferEXT
    a0
    a1
    fgl = rglFramebufferDrawBufferEXT fgl

    a0
    a1

nonexistentFramebufferDrawBufferEXT :: FuntypeFramebufferDrawBufferEXT
nonexistentFramebufferDrawBufferEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferDrawBufferEXT"
type FuntypeFramebufferDrawBuffersEXT =
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferDrawBuffersEXT :: FunPtr FuntypeFramebufferDrawBuffersEXT -> FuntypeFramebufferDrawBuffersEXT
glFramebufferDrawBuffersEXT ::
    GLuint ->
    GLsizei ->
    Ptr (GLenum) ->
    FlextGL -> IO ( () )
glFramebufferDrawBuffersEXT
    a0
    a1
    a2
    fgl = rglFramebufferDrawBuffersEXT fgl

    a0
    a1
    a2

nonexistentFramebufferDrawBuffersEXT :: FuntypeFramebufferDrawBuffersEXT
nonexistentFramebufferDrawBuffersEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferDrawBuffersEXT"
type FuntypeFramebufferReadBufferEXT =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFramebufferReadBufferEXT :: FunPtr FuntypeFramebufferReadBufferEXT -> FuntypeFramebufferReadBufferEXT
glFramebufferReadBufferEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glFramebufferReadBufferEXT
    a0
    a1
    fgl = rglFramebufferReadBufferEXT fgl

    a0
    a1

nonexistentFramebufferReadBufferEXT :: FuntypeFramebufferReadBufferEXT
nonexistentFramebufferReadBufferEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFramebufferReadBufferEXT"
type FuntypeGetFramebufferParameterivEXT =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetFramebufferParameterivEXT :: FunPtr FuntypeGetFramebufferParameterivEXT -> FuntypeGetFramebufferParameterivEXT
glGetFramebufferParameterivEXT ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetFramebufferParameterivEXT
    a0
    a1
    a2
    fgl = rglGetFramebufferParameterivEXT fgl

    a0
    a1
    a2

nonexistentGetFramebufferParameterivEXT :: FuntypeGetFramebufferParameterivEXT
nonexistentGetFramebufferParameterivEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetFramebufferParameterivEXT"
type FuntypeNamedCopyBufferSubDataEXT =
    GLuint ->
    GLuint ->
    GLintptr ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedCopyBufferSubDataEXT :: FunPtr FuntypeNamedCopyBufferSubDataEXT -> FuntypeNamedCopyBufferSubDataEXT
glNamedCopyBufferSubDataEXT ::
    GLuint ->
    GLuint ->
    GLintptr ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glNamedCopyBufferSubDataEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedCopyBufferSubDataEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedCopyBufferSubDataEXT :: FuntypeNamedCopyBufferSubDataEXT
nonexistentNamedCopyBufferSubDataEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedCopyBufferSubDataEXT"
type FuntypeNamedFramebufferTextureEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTextureEXT :: FunPtr FuntypeNamedFramebufferTextureEXT -> FuntypeNamedFramebufferTextureEXT
glNamedFramebufferTextureEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferTextureEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedFramebufferTextureEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedFramebufferTextureEXT :: FuntypeNamedFramebufferTextureEXT
nonexistentNamedFramebufferTextureEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTextureEXT"
type FuntypeNamedFramebufferTextureLayerEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTextureLayerEXT :: FunPtr FuntypeNamedFramebufferTextureLayerEXT -> FuntypeNamedFramebufferTextureLayerEXT
glNamedFramebufferTextureLayerEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferTextureLayerEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedFramebufferTextureLayerEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedFramebufferTextureLayerEXT :: FuntypeNamedFramebufferTextureLayerEXT
nonexistentNamedFramebufferTextureLayerEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTextureLayerEXT"
type FuntypeNamedFramebufferTextureFaceEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferTextureFaceEXT :: FunPtr FuntypeNamedFramebufferTextureFaceEXT -> FuntypeNamedFramebufferTextureFaceEXT
glNamedFramebufferTextureFaceEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    GLint ->
    GLenum ->
    FlextGL -> IO ( () )
glNamedFramebufferTextureFaceEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglNamedFramebufferTextureFaceEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentNamedFramebufferTextureFaceEXT :: FuntypeNamedFramebufferTextureFaceEXT
nonexistentNamedFramebufferTextureFaceEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferTextureFaceEXT"
type FuntypeTextureRenderbufferEXT =
    GLuint ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureRenderbufferEXT :: FunPtr FuntypeTextureRenderbufferEXT -> FuntypeTextureRenderbufferEXT
glTextureRenderbufferEXT ::
    GLuint ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glTextureRenderbufferEXT
    a0
    a1
    a2
    fgl = rglTextureRenderbufferEXT fgl

    a0
    a1
    a2

nonexistentTextureRenderbufferEXT :: FuntypeTextureRenderbufferEXT
nonexistentTextureRenderbufferEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureRenderbufferEXT"
type FuntypeMultiTexRenderbufferEXT =
    GLenum ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMultiTexRenderbufferEXT :: FunPtr FuntypeMultiTexRenderbufferEXT -> FuntypeMultiTexRenderbufferEXT
glMultiTexRenderbufferEXT ::
    GLenum ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glMultiTexRenderbufferEXT
    a0
    a1
    a2
    fgl = rglMultiTexRenderbufferEXT fgl

    a0
    a1
    a2

nonexistentMultiTexRenderbufferEXT :: FuntypeMultiTexRenderbufferEXT
nonexistentMultiTexRenderbufferEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMultiTexRenderbufferEXT"
type FuntypeVertexArrayVertexOffsetEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexOffsetEXT :: FunPtr FuntypeVertexArrayVertexOffsetEXT -> FuntypeVertexArrayVertexOffsetEXT
glVertexArrayVertexOffsetEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayVertexOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexArrayVertexOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexArrayVertexOffsetEXT :: FuntypeVertexArrayVertexOffsetEXT
nonexistentVertexArrayVertexOffsetEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexOffsetEXT"
type FuntypeVertexArrayColorOffsetEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayColorOffsetEXT :: FunPtr FuntypeVertexArrayColorOffsetEXT -> FuntypeVertexArrayColorOffsetEXT
glVertexArrayColorOffsetEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayColorOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexArrayColorOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexArrayColorOffsetEXT :: FuntypeVertexArrayColorOffsetEXT
nonexistentVertexArrayColorOffsetEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayColorOffsetEXT"
type FuntypeVertexArrayEdgeFlagOffsetEXT =
    GLuint ->
    GLuint ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayEdgeFlagOffsetEXT :: FunPtr FuntypeVertexArrayEdgeFlagOffsetEXT -> FuntypeVertexArrayEdgeFlagOffsetEXT
glVertexArrayEdgeFlagOffsetEXT ::
    GLuint ->
    GLuint ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayEdgeFlagOffsetEXT
    a0
    a1
    a2
    a3
    fgl = rglVertexArrayEdgeFlagOffsetEXT fgl

    a0
    a1
    a2
    a3

nonexistentVertexArrayEdgeFlagOffsetEXT :: FuntypeVertexArrayEdgeFlagOffsetEXT
nonexistentVertexArrayEdgeFlagOffsetEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayEdgeFlagOffsetEXT"
type FuntypeVertexArrayIndexOffsetEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayIndexOffsetEXT :: FunPtr FuntypeVertexArrayIndexOffsetEXT -> FuntypeVertexArrayIndexOffsetEXT
glVertexArrayIndexOffsetEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayIndexOffsetEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayIndexOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayIndexOffsetEXT :: FuntypeVertexArrayIndexOffsetEXT
nonexistentVertexArrayIndexOffsetEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayIndexOffsetEXT"
type FuntypeVertexArrayNormalOffsetEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayNormalOffsetEXT :: FunPtr FuntypeVertexArrayNormalOffsetEXT -> FuntypeVertexArrayNormalOffsetEXT
glVertexArrayNormalOffsetEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayNormalOffsetEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayNormalOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayNormalOffsetEXT :: FuntypeVertexArrayNormalOffsetEXT
nonexistentVertexArrayNormalOffsetEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayNormalOffsetEXT"
type FuntypeVertexArrayTexCoordOffsetEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayTexCoordOffsetEXT :: FunPtr FuntypeVertexArrayTexCoordOffsetEXT -> FuntypeVertexArrayTexCoordOffsetEXT
glVertexArrayTexCoordOffsetEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayTexCoordOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexArrayTexCoordOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexArrayTexCoordOffsetEXT :: FuntypeVertexArrayTexCoordOffsetEXT
nonexistentVertexArrayTexCoordOffsetEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayTexCoordOffsetEXT"
type FuntypeVertexArrayMultiTexCoordOffsetEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayMultiTexCoordOffsetEXT :: FunPtr FuntypeVertexArrayMultiTexCoordOffsetEXT -> FuntypeVertexArrayMultiTexCoordOffsetEXT
glVertexArrayMultiTexCoordOffsetEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayMultiTexCoordOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglVertexArrayMultiTexCoordOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentVertexArrayMultiTexCoordOffsetEXT :: FuntypeVertexArrayMultiTexCoordOffsetEXT
nonexistentVertexArrayMultiTexCoordOffsetEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayMultiTexCoordOffsetEXT"
type FuntypeVertexArrayFogCoordOffsetEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayFogCoordOffsetEXT :: FunPtr FuntypeVertexArrayFogCoordOffsetEXT -> FuntypeVertexArrayFogCoordOffsetEXT
glVertexArrayFogCoordOffsetEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayFogCoordOffsetEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayFogCoordOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayFogCoordOffsetEXT :: FuntypeVertexArrayFogCoordOffsetEXT
nonexistentVertexArrayFogCoordOffsetEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayFogCoordOffsetEXT"
type FuntypeVertexArraySecondaryColorOffsetEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArraySecondaryColorOffsetEXT :: FunPtr FuntypeVertexArraySecondaryColorOffsetEXT -> FuntypeVertexArraySecondaryColorOffsetEXT
glVertexArraySecondaryColorOffsetEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArraySecondaryColorOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexArraySecondaryColorOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexArraySecondaryColorOffsetEXT :: FuntypeVertexArraySecondaryColorOffsetEXT
nonexistentVertexArraySecondaryColorOffsetEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArraySecondaryColorOffsetEXT"
type FuntypeVertexArrayVertexAttribOffsetEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribOffsetEXT :: FunPtr FuntypeVertexArrayVertexAttribOffsetEXT -> FuntypeVertexArrayVertexAttribOffsetEXT
glVertexArrayVertexAttribOffsetEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglVertexArrayVertexAttribOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentVertexArrayVertexAttribOffsetEXT :: FuntypeVertexArrayVertexAttribOffsetEXT
nonexistentVertexArrayVertexAttribOffsetEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribOffsetEXT"
type FuntypeVertexArrayVertexAttribIOffsetEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribIOffsetEXT :: FunPtr FuntypeVertexArrayVertexAttribIOffsetEXT -> FuntypeVertexArrayVertexAttribIOffsetEXT
glVertexArrayVertexAttribIOffsetEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribIOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglVertexArrayVertexAttribIOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentVertexArrayVertexAttribIOffsetEXT :: FuntypeVertexArrayVertexAttribIOffsetEXT
nonexistentVertexArrayVertexAttribIOffsetEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribIOffsetEXT"
type FuntypeEnableVertexArrayEXT =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableVertexArrayEXT :: FunPtr FuntypeEnableVertexArrayEXT -> FuntypeEnableVertexArrayEXT
glEnableVertexArrayEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glEnableVertexArrayEXT
    a0
    a1
    fgl = rglEnableVertexArrayEXT fgl

    a0
    a1

nonexistentEnableVertexArrayEXT :: FuntypeEnableVertexArrayEXT
nonexistentEnableVertexArrayEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableVertexArrayEXT"
type FuntypeDisableVertexArrayEXT =
    GLuint ->
    GLenum ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableVertexArrayEXT :: FunPtr FuntypeDisableVertexArrayEXT -> FuntypeDisableVertexArrayEXT
glDisableVertexArrayEXT ::
    GLuint ->
    GLenum ->
    FlextGL -> IO ( () )
glDisableVertexArrayEXT
    a0
    a1
    fgl = rglDisableVertexArrayEXT fgl

    a0
    a1

nonexistentDisableVertexArrayEXT :: FuntypeDisableVertexArrayEXT
nonexistentDisableVertexArrayEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableVertexArrayEXT"
type FuntypeEnableVertexArrayAttribEXT =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynEnableVertexArrayAttribEXT :: FunPtr FuntypeEnableVertexArrayAttribEXT -> FuntypeEnableVertexArrayAttribEXT
glEnableVertexArrayAttribEXT ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glEnableVertexArrayAttribEXT
    a0
    a1
    fgl = rglEnableVertexArrayAttribEXT fgl

    a0
    a1

nonexistentEnableVertexArrayAttribEXT :: FuntypeEnableVertexArrayAttribEXT
nonexistentEnableVertexArrayAttribEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glEnableVertexArrayAttribEXT"
type FuntypeDisableVertexArrayAttribEXT =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDisableVertexArrayAttribEXT :: FunPtr FuntypeDisableVertexArrayAttribEXT -> FuntypeDisableVertexArrayAttribEXT
glDisableVertexArrayAttribEXT ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glDisableVertexArrayAttribEXT
    a0
    a1
    fgl = rglDisableVertexArrayAttribEXT fgl

    a0
    a1

nonexistentDisableVertexArrayAttribEXT :: FuntypeDisableVertexArrayAttribEXT
nonexistentDisableVertexArrayAttribEXT
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDisableVertexArrayAttribEXT"
type FuntypeGetVertexArrayIntegervEXT =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexArrayIntegervEXT :: FunPtr FuntypeGetVertexArrayIntegervEXT -> FuntypeGetVertexArrayIntegervEXT
glGetVertexArrayIntegervEXT ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetVertexArrayIntegervEXT
    a0
    a1
    a2
    fgl = rglGetVertexArrayIntegervEXT fgl

    a0
    a1
    a2

nonexistentGetVertexArrayIntegervEXT :: FuntypeGetVertexArrayIntegervEXT
nonexistentGetVertexArrayIntegervEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexArrayIntegervEXT"
type FuntypeGetVertexArrayPointervEXT =
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexArrayPointervEXT :: FunPtr FuntypeGetVertexArrayPointervEXT -> FuntypeGetVertexArrayPointervEXT
glGetVertexArrayPointervEXT ::
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetVertexArrayPointervEXT
    a0
    a1
    a2
    fgl = rglGetVertexArrayPointervEXT fgl

    a0
    a1
    a2

nonexistentGetVertexArrayPointervEXT :: FuntypeGetVertexArrayPointervEXT
nonexistentGetVertexArrayPointervEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexArrayPointervEXT"
type FuntypeGetVertexArrayIntegeri_vEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexArrayIntegeri_vEXT :: FunPtr FuntypeGetVertexArrayIntegeri_vEXT -> FuntypeGetVertexArrayIntegeri_vEXT
glGetVertexArrayIntegeri_vEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetVertexArrayIntegeri_vEXT
    a0
    a1
    a2
    a3
    fgl = rglGetVertexArrayIntegeri_vEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetVertexArrayIntegeri_vEXT :: FuntypeGetVertexArrayIntegeri_vEXT
nonexistentGetVertexArrayIntegeri_vEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexArrayIntegeri_vEXT"
type FuntypeGetVertexArrayPointeri_vEXT =
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetVertexArrayPointeri_vEXT :: FunPtr FuntypeGetVertexArrayPointeri_vEXT -> FuntypeGetVertexArrayPointeri_vEXT
glGetVertexArrayPointeri_vEXT ::
    GLuint ->
    GLuint ->
    GLenum ->
    Ptr (Ptr ()) ->
    FlextGL -> IO ( () )
glGetVertexArrayPointeri_vEXT
    a0
    a1
    a2
    a3
    fgl = rglGetVertexArrayPointeri_vEXT fgl

    a0
    a1
    a2
    a3

nonexistentGetVertexArrayPointeri_vEXT :: FuntypeGetVertexArrayPointeri_vEXT
nonexistentGetVertexArrayPointeri_vEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetVertexArrayPointeri_vEXT"
type FuntypeMapNamedBufferRangeEXT =
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    GLbitfield ->
    IO ( Ptr () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynMapNamedBufferRangeEXT :: FunPtr FuntypeMapNamedBufferRangeEXT -> FuntypeMapNamedBufferRangeEXT
glMapNamedBufferRangeEXT ::
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    GLbitfield ->
    FlextGL -> IO ( Ptr () )
glMapNamedBufferRangeEXT
    a0
    a1
    a2
    a3
    fgl = rglMapNamedBufferRangeEXT fgl

    a0
    a1
    a2
    a3

nonexistentMapNamedBufferRangeEXT :: FuntypeMapNamedBufferRangeEXT
nonexistentMapNamedBufferRangeEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glMapNamedBufferRangeEXT"
type FuntypeFlushMappedNamedBufferRangeEXT =
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynFlushMappedNamedBufferRangeEXT :: FunPtr FuntypeFlushMappedNamedBufferRangeEXT -> FuntypeFlushMappedNamedBufferRangeEXT
glFlushMappedNamedBufferRangeEXT ::
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glFlushMappedNamedBufferRangeEXT
    a0
    a1
    a2
    fgl = rglFlushMappedNamedBufferRangeEXT fgl

    a0
    a1
    a2

nonexistentFlushMappedNamedBufferRangeEXT :: FuntypeFlushMappedNamedBufferRangeEXT
nonexistentFlushMappedNamedBufferRangeEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glFlushMappedNamedBufferRangeEXT"
type FuntypeNamedBufferStorageEXT =
    GLuint ->
    GLsizeiptr ->
    Ptr () ->
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedBufferStorageEXT :: FunPtr FuntypeNamedBufferStorageEXT -> FuntypeNamedBufferStorageEXT
glNamedBufferStorageEXT ::
    GLuint ->
    GLsizeiptr ->
    Ptr () ->
    GLbitfield ->
    FlextGL -> IO ( () )
glNamedBufferStorageEXT
    a0
    a1
    a2
    a3
    fgl = rglNamedBufferStorageEXT fgl

    a0
    a1
    a2
    a3

nonexistentNamedBufferStorageEXT :: FuntypeNamedBufferStorageEXT
nonexistentNamedBufferStorageEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedBufferStorageEXT"
type FuntypeClearNamedBufferDataEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearNamedBufferDataEXT :: FunPtr FuntypeClearNamedBufferDataEXT -> FuntypeClearNamedBufferDataEXT
glClearNamedBufferDataEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glClearNamedBufferDataEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglClearNamedBufferDataEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentClearNamedBufferDataEXT :: FuntypeClearNamedBufferDataEXT
nonexistentClearNamedBufferDataEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearNamedBufferDataEXT"
type FuntypeClearNamedBufferSubDataEXT =
    GLuint ->
    GLenum ->
    GLsizeiptr ->
    GLsizeiptr ->
    GLenum ->
    GLenum ->
    Ptr () ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynClearNamedBufferSubDataEXT :: FunPtr FuntypeClearNamedBufferSubDataEXT -> FuntypeClearNamedBufferSubDataEXT
glClearNamedBufferSubDataEXT ::
    GLuint ->
    GLenum ->
    GLsizeiptr ->
    GLsizeiptr ->
    GLenum ->
    GLenum ->
    Ptr () ->
    FlextGL -> IO ( () )
glClearNamedBufferSubDataEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglClearNamedBufferSubDataEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentClearNamedBufferSubDataEXT :: FuntypeClearNamedBufferSubDataEXT
nonexistentClearNamedBufferSubDataEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glClearNamedBufferSubDataEXT"
type FuntypeNamedFramebufferParameteriEXT =
    GLuint ->
    GLenum ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynNamedFramebufferParameteriEXT :: FunPtr FuntypeNamedFramebufferParameteriEXT -> FuntypeNamedFramebufferParameteriEXT
glNamedFramebufferParameteriEXT ::
    GLuint ->
    GLenum ->
    GLint ->
    FlextGL -> IO ( () )
glNamedFramebufferParameteriEXT
    a0
    a1
    a2
    fgl = rglNamedFramebufferParameteriEXT fgl

    a0
    a1
    a2

nonexistentNamedFramebufferParameteriEXT :: FuntypeNamedFramebufferParameteriEXT
nonexistentNamedFramebufferParameteriEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glNamedFramebufferParameteriEXT"
type FuntypeGetNamedFramebufferParameterivEXT =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetNamedFramebufferParameterivEXT :: FunPtr FuntypeGetNamedFramebufferParameterivEXT -> FuntypeGetNamedFramebufferParameterivEXT
glGetNamedFramebufferParameterivEXT ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetNamedFramebufferParameterivEXT
    a0
    a1
    a2
    fgl = rglGetNamedFramebufferParameterivEXT fgl

    a0
    a1
    a2

nonexistentGetNamedFramebufferParameterivEXT :: FuntypeGetNamedFramebufferParameterivEXT
nonexistentGetNamedFramebufferParameterivEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetNamedFramebufferParameterivEXT"
type FuntypeProgramUniform1dEXT =
    GLuint ->
    GLint ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1dEXT :: FunPtr FuntypeProgramUniform1dEXT -> FuntypeProgramUniform1dEXT
glProgramUniform1dEXT ::
    GLuint ->
    GLint ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform1dEXT
    a0
    a1
    a2
    fgl = rglProgramUniform1dEXT fgl

    a0
    a1
    a2

nonexistentProgramUniform1dEXT :: FuntypeProgramUniform1dEXT
nonexistentProgramUniform1dEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1dEXT"
type FuntypeProgramUniform2dEXT =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2dEXT :: FunPtr FuntypeProgramUniform2dEXT -> FuntypeProgramUniform2dEXT
glProgramUniform2dEXT ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform2dEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2dEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2dEXT :: FuntypeProgramUniform2dEXT
nonexistentProgramUniform2dEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2dEXT"
type FuntypeProgramUniform3dEXT =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3dEXT :: FunPtr FuntypeProgramUniform3dEXT -> FuntypeProgramUniform3dEXT
glProgramUniform3dEXT ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform3dEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3dEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3dEXT :: FuntypeProgramUniform3dEXT
nonexistentProgramUniform3dEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3dEXT"
type FuntypeProgramUniform4dEXT =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4dEXT :: FunPtr FuntypeProgramUniform4dEXT -> FuntypeProgramUniform4dEXT
glProgramUniform4dEXT ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform4dEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4dEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4dEXT :: FuntypeProgramUniform4dEXT
nonexistentProgramUniform4dEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4dEXT"
type FuntypeProgramUniform1dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1dvEXT :: FunPtr FuntypeProgramUniform1dvEXT -> FuntypeProgramUniform1dvEXT
glProgramUniform1dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform1dvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1dvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1dvEXT :: FuntypeProgramUniform1dvEXT
nonexistentProgramUniform1dvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1dvEXT"
type FuntypeProgramUniform2dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2dvEXT :: FunPtr FuntypeProgramUniform2dvEXT -> FuntypeProgramUniform2dvEXT
glProgramUniform2dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform2dvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2dvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2dvEXT :: FuntypeProgramUniform2dvEXT
nonexistentProgramUniform2dvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2dvEXT"
type FuntypeProgramUniform3dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3dvEXT :: FunPtr FuntypeProgramUniform3dvEXT -> FuntypeProgramUniform3dvEXT
glProgramUniform3dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform3dvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3dvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3dvEXT :: FuntypeProgramUniform3dvEXT
nonexistentProgramUniform3dvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3dvEXT"
type FuntypeProgramUniform4dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4dvEXT :: FunPtr FuntypeProgramUniform4dvEXT -> FuntypeProgramUniform4dvEXT
glProgramUniform4dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform4dvEXT
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4dvEXT fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4dvEXT :: FuntypeProgramUniform4dvEXT
nonexistentProgramUniform4dvEXT
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4dvEXT"
type FuntypeProgramUniformMatrix2dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2dvEXT :: FunPtr FuntypeProgramUniformMatrix2dvEXT -> FuntypeProgramUniformMatrix2dvEXT
glProgramUniformMatrix2dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2dvEXT :: FuntypeProgramUniformMatrix2dvEXT
nonexistentProgramUniformMatrix2dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2dvEXT"
type FuntypeProgramUniformMatrix3dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3dvEXT :: FunPtr FuntypeProgramUniformMatrix3dvEXT -> FuntypeProgramUniformMatrix3dvEXT
glProgramUniformMatrix3dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3dvEXT :: FuntypeProgramUniformMatrix3dvEXT
nonexistentProgramUniformMatrix3dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3dvEXT"
type FuntypeProgramUniformMatrix4dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4dvEXT :: FunPtr FuntypeProgramUniformMatrix4dvEXT -> FuntypeProgramUniformMatrix4dvEXT
glProgramUniformMatrix4dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4dvEXT :: FuntypeProgramUniformMatrix4dvEXT
nonexistentProgramUniformMatrix4dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4dvEXT"
type FuntypeProgramUniformMatrix2x3dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x3dvEXT :: FunPtr FuntypeProgramUniformMatrix2x3dvEXT -> FuntypeProgramUniformMatrix2x3dvEXT
glProgramUniformMatrix2x3dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x3dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x3dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x3dvEXT :: FuntypeProgramUniformMatrix2x3dvEXT
nonexistentProgramUniformMatrix2x3dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x3dvEXT"
type FuntypeProgramUniformMatrix2x4dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x4dvEXT :: FunPtr FuntypeProgramUniformMatrix2x4dvEXT -> FuntypeProgramUniformMatrix2x4dvEXT
glProgramUniformMatrix2x4dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x4dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x4dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x4dvEXT :: FuntypeProgramUniformMatrix2x4dvEXT
nonexistentProgramUniformMatrix2x4dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x4dvEXT"
type FuntypeProgramUniformMatrix3x2dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x2dvEXT :: FunPtr FuntypeProgramUniformMatrix3x2dvEXT -> FuntypeProgramUniformMatrix3x2dvEXT
glProgramUniformMatrix3x2dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x2dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x2dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x2dvEXT :: FuntypeProgramUniformMatrix3x2dvEXT
nonexistentProgramUniformMatrix3x2dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x2dvEXT"
type FuntypeProgramUniformMatrix3x4dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x4dvEXT :: FunPtr FuntypeProgramUniformMatrix3x4dvEXT -> FuntypeProgramUniformMatrix3x4dvEXT
glProgramUniformMatrix3x4dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x4dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x4dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x4dvEXT :: FuntypeProgramUniformMatrix3x4dvEXT
nonexistentProgramUniformMatrix3x4dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x4dvEXT"
type FuntypeProgramUniformMatrix4x2dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x2dvEXT :: FunPtr FuntypeProgramUniformMatrix4x2dvEXT -> FuntypeProgramUniformMatrix4x2dvEXT
glProgramUniformMatrix4x2dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x2dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x2dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x2dvEXT :: FuntypeProgramUniformMatrix4x2dvEXT
nonexistentProgramUniformMatrix4x2dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x2dvEXT"
type FuntypeProgramUniformMatrix4x3dvEXT =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x3dvEXT :: FunPtr FuntypeProgramUniformMatrix4x3dvEXT -> FuntypeProgramUniformMatrix4x3dvEXT
glProgramUniformMatrix4x3dvEXT ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x3dvEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x3dvEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x3dvEXT :: FuntypeProgramUniformMatrix4x3dvEXT
nonexistentProgramUniformMatrix4x3dvEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x3dvEXT"
type FuntypeTextureBufferRangeEXT =
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureBufferRangeEXT :: FunPtr FuntypeTextureBufferRangeEXT -> FuntypeTextureBufferRangeEXT
glTextureBufferRangeEXT ::
    GLuint ->
    GLenum ->
    GLenum ->
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glTextureBufferRangeEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglTextureBufferRangeEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentTextureBufferRangeEXT :: FuntypeTextureBufferRangeEXT
nonexistentTextureBufferRangeEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureBufferRangeEXT"
type FuntypeTextureStorage1DEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureStorage1DEXT :: FunPtr FuntypeTextureStorage1DEXT -> FuntypeTextureStorage1DEXT
glTextureStorage1DEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    FlextGL -> IO ( () )
glTextureStorage1DEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglTextureStorage1DEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentTextureStorage1DEXT :: FuntypeTextureStorage1DEXT
nonexistentTextureStorage1DEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureStorage1DEXT"
type FuntypeTextureStorage2DEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureStorage2DEXT :: FunPtr FuntypeTextureStorage2DEXT -> FuntypeTextureStorage2DEXT
glTextureStorage2DEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glTextureStorage2DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglTextureStorage2DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentTextureStorage2DEXT :: FuntypeTextureStorage2DEXT
nonexistentTextureStorage2DEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureStorage2DEXT"
type FuntypeTextureStorage3DEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureStorage3DEXT :: FunPtr FuntypeTextureStorage3DEXT -> FuntypeTextureStorage3DEXT
glTextureStorage3DEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glTextureStorage3DEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglTextureStorage3DEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentTextureStorage3DEXT :: FuntypeTextureStorage3DEXT
nonexistentTextureStorage3DEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureStorage3DEXT"
type FuntypeTextureStorage2DMultisampleEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureStorage2DMultisampleEXT :: FunPtr FuntypeTextureStorage2DMultisampleEXT -> FuntypeTextureStorage2DMultisampleEXT
glTextureStorage2DMultisampleEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    FlextGL -> IO ( () )
glTextureStorage2DMultisampleEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglTextureStorage2DMultisampleEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentTextureStorage2DMultisampleEXT :: FuntypeTextureStorage2DMultisampleEXT
nonexistentTextureStorage2DMultisampleEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureStorage2DMultisampleEXT"
type FuntypeTextureStorage3DMultisampleEXT =
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTextureStorage3DMultisampleEXT :: FunPtr FuntypeTextureStorage3DMultisampleEXT -> FuntypeTextureStorage3DMultisampleEXT
glTextureStorage3DMultisampleEXT ::
    GLuint ->
    GLenum ->
    GLsizei ->
    GLenum ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    FlextGL -> IO ( () )
glTextureStorage3DMultisampleEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglTextureStorage3DMultisampleEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentTextureStorage3DMultisampleEXT :: FuntypeTextureStorage3DMultisampleEXT
nonexistentTextureStorage3DMultisampleEXT
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTextureStorage3DMultisampleEXT"
type FuntypeVertexArrayBindVertexBufferEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    GLintptr ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayBindVertexBufferEXT :: FunPtr FuntypeVertexArrayBindVertexBufferEXT -> FuntypeVertexArrayBindVertexBufferEXT
glVertexArrayBindVertexBufferEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLintptr ->
    GLsizei ->
    FlextGL -> IO ( () )
glVertexArrayBindVertexBufferEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayBindVertexBufferEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayBindVertexBufferEXT :: FuntypeVertexArrayBindVertexBufferEXT
nonexistentVertexArrayBindVertexBufferEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayBindVertexBufferEXT"
type FuntypeVertexArrayVertexAttribFormatEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribFormatEXT :: FunPtr FuntypeVertexArrayVertexAttribFormatEXT -> FuntypeVertexArrayVertexAttribFormatEXT
glVertexArrayVertexAttribFormatEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLboolean ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribFormatEXT
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglVertexArrayVertexAttribFormatEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentVertexArrayVertexAttribFormatEXT :: FuntypeVertexArrayVertexAttribFormatEXT
nonexistentVertexArrayVertexAttribFormatEXT
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribFormatEXT"
type FuntypeVertexArrayVertexAttribIFormatEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribIFormatEXT :: FunPtr FuntypeVertexArrayVertexAttribIFormatEXT -> FuntypeVertexArrayVertexAttribIFormatEXT
glVertexArrayVertexAttribIFormatEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribIFormatEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayVertexAttribIFormatEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayVertexAttribIFormatEXT :: FuntypeVertexArrayVertexAttribIFormatEXT
nonexistentVertexArrayVertexAttribIFormatEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribIFormatEXT"
type FuntypeVertexArrayVertexAttribLFormatEXT =
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribLFormatEXT :: FunPtr FuntypeVertexArrayVertexAttribLFormatEXT -> FuntypeVertexArrayVertexAttribLFormatEXT
glVertexArrayVertexAttribLFormatEXT ::
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribLFormatEXT
    a0
    a1
    a2
    a3
    a4
    fgl = rglVertexArrayVertexAttribLFormatEXT fgl

    a0
    a1
    a2
    a3
    a4

nonexistentVertexArrayVertexAttribLFormatEXT :: FuntypeVertexArrayVertexAttribLFormatEXT
nonexistentVertexArrayVertexAttribLFormatEXT
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribLFormatEXT"
type FuntypeVertexArrayVertexAttribBindingEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribBindingEXT :: FunPtr FuntypeVertexArrayVertexAttribBindingEXT -> FuntypeVertexArrayVertexAttribBindingEXT
glVertexArrayVertexAttribBindingEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribBindingEXT
    a0
    a1
    a2
    fgl = rglVertexArrayVertexAttribBindingEXT fgl

    a0
    a1
    a2

nonexistentVertexArrayVertexAttribBindingEXT :: FuntypeVertexArrayVertexAttribBindingEXT
nonexistentVertexArrayVertexAttribBindingEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribBindingEXT"
type FuntypeVertexArrayVertexBindingDivisorEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexBindingDivisorEXT :: FunPtr FuntypeVertexArrayVertexBindingDivisorEXT -> FuntypeVertexArrayVertexBindingDivisorEXT
glVertexArrayVertexBindingDivisorEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexBindingDivisorEXT
    a0
    a1
    a2
    fgl = rglVertexArrayVertexBindingDivisorEXT fgl

    a0
    a1
    a2

nonexistentVertexArrayVertexBindingDivisorEXT :: FuntypeVertexArrayVertexBindingDivisorEXT
nonexistentVertexArrayVertexBindingDivisorEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexBindingDivisorEXT"
type FuntypeVertexArrayVertexAttribLOffsetEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribLOffsetEXT :: FunPtr FuntypeVertexArrayVertexAttribLOffsetEXT -> FuntypeVertexArrayVertexAttribLOffsetEXT
glVertexArrayVertexAttribLOffsetEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    GLint ->
    GLenum ->
    GLsizei ->
    GLintptr ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribLOffsetEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglVertexArrayVertexAttribLOffsetEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentVertexArrayVertexAttribLOffsetEXT :: FuntypeVertexArrayVertexAttribLOffsetEXT
nonexistentVertexArrayVertexAttribLOffsetEXT
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribLOffsetEXT"
type FuntypeTexturePageCommitmentEXT =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynTexturePageCommitmentEXT :: FunPtr FuntypeTexturePageCommitmentEXT -> FuntypeTexturePageCommitmentEXT
glTexturePageCommitmentEXT ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    GLboolean ->
    FlextGL -> IO ( () )
glTexturePageCommitmentEXT
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8
    fgl = rglTexturePageCommitmentEXT fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    a8

nonexistentTexturePageCommitmentEXT :: FuntypeTexturePageCommitmentEXT
nonexistentTexturePageCommitmentEXT
    _
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glTexturePageCommitmentEXT"
type FuntypeVertexArrayVertexAttribDivisorEXT =
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynVertexArrayVertexAttribDivisorEXT :: FunPtr FuntypeVertexArrayVertexAttribDivisorEXT -> FuntypeVertexArrayVertexAttribDivisorEXT
glVertexArrayVertexAttribDivisorEXT ::
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glVertexArrayVertexAttribDivisorEXT
    a0
    a1
    a2
    fgl = rglVertexArrayVertexAttribDivisorEXT fgl

    a0
    a1
    a2

nonexistentVertexArrayVertexAttribDivisorEXT :: FuntypeVertexArrayVertexAttribDivisorEXT
nonexistentVertexArrayVertexAttribDivisorEXT
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glVertexArrayVertexAttribDivisorEXT"

-- GL_ARB_buffer_storage

type FuntypeBufferStorage =
    GLenum ->
    GLsizeiptr ->
    Ptr () ->
    GLbitfield ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBufferStorage :: FunPtr FuntypeBufferStorage -> FuntypeBufferStorage
glBufferStorage ::
    GLenum ->
    GLsizeiptr ->
    Ptr () ->
    GLbitfield ->
    FlextGL -> IO ( () )
glBufferStorage
    a0
    a1
    a2
    a3
    fgl = rglBufferStorage fgl

    a0
    a1
    a2
    a3

nonexistentBufferStorage :: FuntypeBufferStorage
nonexistentBufferStorage
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glBufferStorage"

-- GL_ARB_separate_shader_objects

type FuntypeUseProgramStages =
    GLuint ->
    GLbitfield ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynUseProgramStages :: FunPtr FuntypeUseProgramStages -> FuntypeUseProgramStages
glUseProgramStages ::
    GLuint ->
    GLbitfield ->
    GLuint ->
    FlextGL -> IO ( () )
glUseProgramStages
    a0
    a1
    a2
    fgl = rglUseProgramStages fgl

    a0
    a1
    a2

nonexistentUseProgramStages :: FuntypeUseProgramStages
nonexistentUseProgramStages
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glUseProgramStages"
type FuntypeActiveShaderProgram =
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynActiveShaderProgram :: FunPtr FuntypeActiveShaderProgram -> FuntypeActiveShaderProgram
glActiveShaderProgram ::
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glActiveShaderProgram
    a0
    a1
    fgl = rglActiveShaderProgram fgl

    a0
    a1

nonexistentActiveShaderProgram :: FuntypeActiveShaderProgram
nonexistentActiveShaderProgram
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glActiveShaderProgram"
type FuntypeCreateShaderProgramv =
    GLenum ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    IO ( GLuint )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynCreateShaderProgramv :: FunPtr FuntypeCreateShaderProgramv -> FuntypeCreateShaderProgramv
glCreateShaderProgramv ::
    GLenum ->
    GLsizei ->
    Ptr (Ptr (GLchar)) ->
    FlextGL -> IO ( GLuint )
glCreateShaderProgramv
    a0
    a1
    a2
    fgl = rglCreateShaderProgramv fgl

    a0
    a1
    a2

nonexistentCreateShaderProgramv :: FuntypeCreateShaderProgramv
nonexistentCreateShaderProgramv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glCreateShaderProgramv"
type FuntypeBindProgramPipeline =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynBindProgramPipeline :: FunPtr FuntypeBindProgramPipeline -> FuntypeBindProgramPipeline
glBindProgramPipeline ::
    GLuint ->
    FlextGL -> IO ( () )
glBindProgramPipeline
    a0
    fgl = rglBindProgramPipeline fgl

    a0

nonexistentBindProgramPipeline :: FuntypeBindProgramPipeline
nonexistentBindProgramPipeline
    _
    = throwIO $ NonExistentOpenGLFunction "glBindProgramPipeline"
type FuntypeDeleteProgramPipelines =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynDeleteProgramPipelines :: FunPtr FuntypeDeleteProgramPipelines -> FuntypeDeleteProgramPipelines
glDeleteProgramPipelines ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glDeleteProgramPipelines
    a0
    a1
    fgl = rglDeleteProgramPipelines fgl

    a0
    a1

nonexistentDeleteProgramPipelines :: FuntypeDeleteProgramPipelines
nonexistentDeleteProgramPipelines
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glDeleteProgramPipelines"
type FuntypeGenProgramPipelines =
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGenProgramPipelines :: FunPtr FuntypeGenProgramPipelines -> FuntypeGenProgramPipelines
glGenProgramPipelines ::
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glGenProgramPipelines
    a0
    a1
    fgl = rglGenProgramPipelines fgl

    a0
    a1

nonexistentGenProgramPipelines :: FuntypeGenProgramPipelines
nonexistentGenProgramPipelines
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGenProgramPipelines"
type FuntypeIsProgramPipeline =
    GLuint ->
    IO ( GLboolean )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynIsProgramPipeline :: FunPtr FuntypeIsProgramPipeline -> FuntypeIsProgramPipeline
glIsProgramPipeline ::
    GLuint ->
    FlextGL -> IO ( GLboolean )
glIsProgramPipeline
    a0
    fgl = rglIsProgramPipeline fgl

    a0

nonexistentIsProgramPipeline :: FuntypeIsProgramPipeline
nonexistentIsProgramPipeline
    _
    = throwIO $ NonExistentOpenGLFunction "glIsProgramPipeline"
type FuntypeGetProgramPipelineiv =
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetProgramPipelineiv :: FunPtr FuntypeGetProgramPipelineiv -> FuntypeGetProgramPipelineiv
glGetProgramPipelineiv ::
    GLuint ->
    GLenum ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glGetProgramPipelineiv
    a0
    a1
    a2
    fgl = rglGetProgramPipelineiv fgl

    a0
    a1
    a2

nonexistentGetProgramPipelineiv :: FuntypeGetProgramPipelineiv
nonexistentGetProgramPipelineiv
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetProgramPipelineiv"
type FuntypeProgramUniform1i =
    GLuint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1i :: FunPtr FuntypeProgramUniform1i -> FuntypeProgramUniform1i
glProgramUniform1i ::
    GLuint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform1i
    a0
    a1
    a2
    fgl = rglProgramUniform1i fgl

    a0
    a1
    a2

nonexistentProgramUniform1i :: FuntypeProgramUniform1i
nonexistentProgramUniform1i
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1i"
type FuntypeProgramUniform1iv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1iv :: FunPtr FuntypeProgramUniform1iv -> FuntypeProgramUniform1iv
glProgramUniform1iv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform1iv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1iv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1iv :: FuntypeProgramUniform1iv
nonexistentProgramUniform1iv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1iv"
type FuntypeProgramUniform1f =
    GLuint ->
    GLint ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1f :: FunPtr FuntypeProgramUniform1f -> FuntypeProgramUniform1f
glProgramUniform1f ::
    GLuint ->
    GLint ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform1f
    a0
    a1
    a2
    fgl = rglProgramUniform1f fgl

    a0
    a1
    a2

nonexistentProgramUniform1f :: FuntypeProgramUniform1f
nonexistentProgramUniform1f
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1f"
type FuntypeProgramUniform1fv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1fv :: FunPtr FuntypeProgramUniform1fv -> FuntypeProgramUniform1fv
glProgramUniform1fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform1fv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1fv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1fv :: FuntypeProgramUniform1fv
nonexistentProgramUniform1fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1fv"
type FuntypeProgramUniform1d =
    GLuint ->
    GLint ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1d :: FunPtr FuntypeProgramUniform1d -> FuntypeProgramUniform1d
glProgramUniform1d ::
    GLuint ->
    GLint ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform1d
    a0
    a1
    a2
    fgl = rglProgramUniform1d fgl

    a0
    a1
    a2

nonexistentProgramUniform1d :: FuntypeProgramUniform1d
nonexistentProgramUniform1d
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1d"
type FuntypeProgramUniform1dv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1dv :: FunPtr FuntypeProgramUniform1dv -> FuntypeProgramUniform1dv
glProgramUniform1dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform1dv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1dv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1dv :: FuntypeProgramUniform1dv
nonexistentProgramUniform1dv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1dv"
type FuntypeProgramUniform1ui =
    GLuint ->
    GLint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1ui :: FunPtr FuntypeProgramUniform1ui -> FuntypeProgramUniform1ui
glProgramUniform1ui ::
    GLuint ->
    GLint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform1ui
    a0
    a1
    a2
    fgl = rglProgramUniform1ui fgl

    a0
    a1
    a2

nonexistentProgramUniform1ui :: FuntypeProgramUniform1ui
nonexistentProgramUniform1ui
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1ui"
type FuntypeProgramUniform1uiv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform1uiv :: FunPtr FuntypeProgramUniform1uiv -> FuntypeProgramUniform1uiv
glProgramUniform1uiv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform1uiv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform1uiv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform1uiv :: FuntypeProgramUniform1uiv
nonexistentProgramUniform1uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform1uiv"
type FuntypeProgramUniform2i =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2i :: FunPtr FuntypeProgramUniform2i -> FuntypeProgramUniform2i
glProgramUniform2i ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform2i
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2i fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2i :: FuntypeProgramUniform2i
nonexistentProgramUniform2i
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2i"
type FuntypeProgramUniform2iv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2iv :: FunPtr FuntypeProgramUniform2iv -> FuntypeProgramUniform2iv
glProgramUniform2iv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform2iv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2iv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2iv :: FuntypeProgramUniform2iv
nonexistentProgramUniform2iv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2iv"
type FuntypeProgramUniform2f =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2f :: FunPtr FuntypeProgramUniform2f -> FuntypeProgramUniform2f
glProgramUniform2f ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform2f
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2f fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2f :: FuntypeProgramUniform2f
nonexistentProgramUniform2f
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2f"
type FuntypeProgramUniform2fv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2fv :: FunPtr FuntypeProgramUniform2fv -> FuntypeProgramUniform2fv
glProgramUniform2fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform2fv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2fv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2fv :: FuntypeProgramUniform2fv
nonexistentProgramUniform2fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2fv"
type FuntypeProgramUniform2d =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2d :: FunPtr FuntypeProgramUniform2d -> FuntypeProgramUniform2d
glProgramUniform2d ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform2d
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2d fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2d :: FuntypeProgramUniform2d
nonexistentProgramUniform2d
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2d"
type FuntypeProgramUniform2dv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2dv :: FunPtr FuntypeProgramUniform2dv -> FuntypeProgramUniform2dv
glProgramUniform2dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform2dv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2dv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2dv :: FuntypeProgramUniform2dv
nonexistentProgramUniform2dv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2dv"
type FuntypeProgramUniform2ui =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2ui :: FunPtr FuntypeProgramUniform2ui -> FuntypeProgramUniform2ui
glProgramUniform2ui ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform2ui
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2ui fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2ui :: FuntypeProgramUniform2ui
nonexistentProgramUniform2ui
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2ui"
type FuntypeProgramUniform2uiv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform2uiv :: FunPtr FuntypeProgramUniform2uiv -> FuntypeProgramUniform2uiv
glProgramUniform2uiv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform2uiv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform2uiv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform2uiv :: FuntypeProgramUniform2uiv
nonexistentProgramUniform2uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform2uiv"
type FuntypeProgramUniform3i =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3i :: FunPtr FuntypeProgramUniform3i -> FuntypeProgramUniform3i
glProgramUniform3i ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform3i
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3i fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3i :: FuntypeProgramUniform3i
nonexistentProgramUniform3i
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3i"
type FuntypeProgramUniform3iv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3iv :: FunPtr FuntypeProgramUniform3iv -> FuntypeProgramUniform3iv
glProgramUniform3iv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform3iv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3iv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3iv :: FuntypeProgramUniform3iv
nonexistentProgramUniform3iv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3iv"
type FuntypeProgramUniform3f =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3f :: FunPtr FuntypeProgramUniform3f -> FuntypeProgramUniform3f
glProgramUniform3f ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform3f
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3f fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3f :: FuntypeProgramUniform3f
nonexistentProgramUniform3f
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3f"
type FuntypeProgramUniform3fv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3fv :: FunPtr FuntypeProgramUniform3fv -> FuntypeProgramUniform3fv
glProgramUniform3fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform3fv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3fv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3fv :: FuntypeProgramUniform3fv
nonexistentProgramUniform3fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3fv"
type FuntypeProgramUniform3d =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3d :: FunPtr FuntypeProgramUniform3d -> FuntypeProgramUniform3d
glProgramUniform3d ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform3d
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3d fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3d :: FuntypeProgramUniform3d
nonexistentProgramUniform3d
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3d"
type FuntypeProgramUniform3dv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3dv :: FunPtr FuntypeProgramUniform3dv -> FuntypeProgramUniform3dv
glProgramUniform3dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform3dv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3dv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3dv :: FuntypeProgramUniform3dv
nonexistentProgramUniform3dv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3dv"
type FuntypeProgramUniform3ui =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3ui :: FunPtr FuntypeProgramUniform3ui -> FuntypeProgramUniform3ui
glProgramUniform3ui ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform3ui
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniform3ui fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniform3ui :: FuntypeProgramUniform3ui
nonexistentProgramUniform3ui
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3ui"
type FuntypeProgramUniform3uiv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform3uiv :: FunPtr FuntypeProgramUniform3uiv -> FuntypeProgramUniform3uiv
glProgramUniform3uiv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform3uiv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform3uiv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform3uiv :: FuntypeProgramUniform3uiv
nonexistentProgramUniform3uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform3uiv"
type FuntypeProgramUniform4i =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4i :: FunPtr FuntypeProgramUniform4i -> FuntypeProgramUniform4i
glProgramUniform4i ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    FlextGL -> IO ( () )
glProgramUniform4i
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4i fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4i :: FuntypeProgramUniform4i
nonexistentProgramUniform4i
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4i"
type FuntypeProgramUniform4iv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4iv :: FunPtr FuntypeProgramUniform4iv -> FuntypeProgramUniform4iv
glProgramUniform4iv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLint) ->
    FlextGL -> IO ( () )
glProgramUniform4iv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4iv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4iv :: FuntypeProgramUniform4iv
nonexistentProgramUniform4iv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4iv"
type FuntypeProgramUniform4f =
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4f :: FunPtr FuntypeProgramUniform4f -> FuntypeProgramUniform4f
glProgramUniform4f ::
    GLuint ->
    GLint ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    GLfloat ->
    FlextGL -> IO ( () )
glProgramUniform4f
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4f fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4f :: FuntypeProgramUniform4f
nonexistentProgramUniform4f
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4f"
type FuntypeProgramUniform4fv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4fv :: FunPtr FuntypeProgramUniform4fv -> FuntypeProgramUniform4fv
glProgramUniform4fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniform4fv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4fv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4fv :: FuntypeProgramUniform4fv
nonexistentProgramUniform4fv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4fv"
type FuntypeProgramUniform4d =
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4d :: FunPtr FuntypeProgramUniform4d -> FuntypeProgramUniform4d
glProgramUniform4d ::
    GLuint ->
    GLint ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    GLdouble ->
    FlextGL -> IO ( () )
glProgramUniform4d
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4d fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4d :: FuntypeProgramUniform4d
nonexistentProgramUniform4d
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4d"
type FuntypeProgramUniform4dv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4dv :: FunPtr FuntypeProgramUniform4dv -> FuntypeProgramUniform4dv
glProgramUniform4dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniform4dv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4dv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4dv :: FuntypeProgramUniform4dv
nonexistentProgramUniform4dv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4dv"
type FuntypeProgramUniform4ui =
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4ui :: FunPtr FuntypeProgramUniform4ui -> FuntypeProgramUniform4ui
glProgramUniform4ui ::
    GLuint ->
    GLint ->
    GLuint ->
    GLuint ->
    GLuint ->
    GLuint ->
    FlextGL -> IO ( () )
glProgramUniform4ui
    a0
    a1
    a2
    a3
    a4
    a5
    fgl = rglProgramUniform4ui fgl

    a0
    a1
    a2
    a3
    a4
    a5

nonexistentProgramUniform4ui :: FuntypeProgramUniform4ui
nonexistentProgramUniform4ui
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4ui"
type FuntypeProgramUniform4uiv =
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniform4uiv :: FunPtr FuntypeProgramUniform4uiv -> FuntypeProgramUniform4uiv
glProgramUniform4uiv ::
    GLuint ->
    GLint ->
    GLsizei ->
    Ptr (GLuint) ->
    FlextGL -> IO ( () )
glProgramUniform4uiv
    a0
    a1
    a2
    a3
    fgl = rglProgramUniform4uiv fgl

    a0
    a1
    a2
    a3

nonexistentProgramUniform4uiv :: FuntypeProgramUniform4uiv
nonexistentProgramUniform4uiv
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniform4uiv"
type FuntypeProgramUniformMatrix2fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2fv :: FunPtr FuntypeProgramUniformMatrix2fv -> FuntypeProgramUniformMatrix2fv
glProgramUniformMatrix2fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2fv :: FuntypeProgramUniformMatrix2fv
nonexistentProgramUniformMatrix2fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2fv"
type FuntypeProgramUniformMatrix3fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3fv :: FunPtr FuntypeProgramUniformMatrix3fv -> FuntypeProgramUniformMatrix3fv
glProgramUniformMatrix3fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3fv :: FuntypeProgramUniformMatrix3fv
nonexistentProgramUniformMatrix3fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3fv"
type FuntypeProgramUniformMatrix4fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4fv :: FunPtr FuntypeProgramUniformMatrix4fv -> FuntypeProgramUniformMatrix4fv
glProgramUniformMatrix4fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4fv :: FuntypeProgramUniformMatrix4fv
nonexistentProgramUniformMatrix4fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4fv"
type FuntypeProgramUniformMatrix2dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2dv :: FunPtr FuntypeProgramUniformMatrix2dv -> FuntypeProgramUniformMatrix2dv
glProgramUniformMatrix2dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2dv :: FuntypeProgramUniformMatrix2dv
nonexistentProgramUniformMatrix2dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2dv"
type FuntypeProgramUniformMatrix3dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3dv :: FunPtr FuntypeProgramUniformMatrix3dv -> FuntypeProgramUniformMatrix3dv
glProgramUniformMatrix3dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3dv :: FuntypeProgramUniformMatrix3dv
nonexistentProgramUniformMatrix3dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3dv"
type FuntypeProgramUniformMatrix4dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4dv :: FunPtr FuntypeProgramUniformMatrix4dv -> FuntypeProgramUniformMatrix4dv
glProgramUniformMatrix4dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4dv :: FuntypeProgramUniformMatrix4dv
nonexistentProgramUniformMatrix4dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4dv"
type FuntypeProgramUniformMatrix2x3fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x3fv :: FunPtr FuntypeProgramUniformMatrix2x3fv -> FuntypeProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x3fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x3fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x3fv :: FuntypeProgramUniformMatrix2x3fv
nonexistentProgramUniformMatrix2x3fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x3fv"
type FuntypeProgramUniformMatrix3x2fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x2fv :: FunPtr FuntypeProgramUniformMatrix3x2fv -> FuntypeProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x2fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x2fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x2fv :: FuntypeProgramUniformMatrix3x2fv
nonexistentProgramUniformMatrix3x2fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x2fv"
type FuntypeProgramUniformMatrix2x4fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x4fv :: FunPtr FuntypeProgramUniformMatrix2x4fv -> FuntypeProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x4fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x4fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x4fv :: FuntypeProgramUniformMatrix2x4fv
nonexistentProgramUniformMatrix2x4fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x4fv"
type FuntypeProgramUniformMatrix4x2fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x2fv :: FunPtr FuntypeProgramUniformMatrix4x2fv -> FuntypeProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x2fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x2fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x2fv :: FuntypeProgramUniformMatrix4x2fv
nonexistentProgramUniformMatrix4x2fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x2fv"
type FuntypeProgramUniformMatrix3x4fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x4fv :: FunPtr FuntypeProgramUniformMatrix3x4fv -> FuntypeProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x4fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x4fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x4fv :: FuntypeProgramUniformMatrix3x4fv
nonexistentProgramUniformMatrix3x4fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x4fv"
type FuntypeProgramUniformMatrix4x3fv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x3fv :: FunPtr FuntypeProgramUniformMatrix4x3fv -> FuntypeProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLfloat) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x3fv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x3fv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x3fv :: FuntypeProgramUniformMatrix4x3fv
nonexistentProgramUniformMatrix4x3fv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x3fv"
type FuntypeProgramUniformMatrix2x3dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x3dv :: FunPtr FuntypeProgramUniformMatrix2x3dv -> FuntypeProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x3dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x3dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x3dv :: FuntypeProgramUniformMatrix2x3dv
nonexistentProgramUniformMatrix2x3dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x3dv"
type FuntypeProgramUniformMatrix3x2dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x2dv :: FunPtr FuntypeProgramUniformMatrix3x2dv -> FuntypeProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x2dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x2dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x2dv :: FuntypeProgramUniformMatrix3x2dv
nonexistentProgramUniformMatrix3x2dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x2dv"
type FuntypeProgramUniformMatrix2x4dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix2x4dv :: FunPtr FuntypeProgramUniformMatrix2x4dv -> FuntypeProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix2x4dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix2x4dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix2x4dv :: FuntypeProgramUniformMatrix2x4dv
nonexistentProgramUniformMatrix2x4dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix2x4dv"
type FuntypeProgramUniformMatrix4x2dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x2dv :: FunPtr FuntypeProgramUniformMatrix4x2dv -> FuntypeProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x2dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x2dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x2dv :: FuntypeProgramUniformMatrix4x2dv
nonexistentProgramUniformMatrix4x2dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x2dv"
type FuntypeProgramUniformMatrix3x4dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix3x4dv :: FunPtr FuntypeProgramUniformMatrix3x4dv -> FuntypeProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix3x4dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix3x4dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix3x4dv :: FuntypeProgramUniformMatrix3x4dv
nonexistentProgramUniformMatrix3x4dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix3x4dv"
type FuntypeProgramUniformMatrix4x3dv =
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynProgramUniformMatrix4x3dv :: FunPtr FuntypeProgramUniformMatrix4x3dv -> FuntypeProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3dv ::
    GLuint ->
    GLint ->
    GLsizei ->
    GLboolean ->
    Ptr (GLdouble) ->
    FlextGL -> IO ( () )
glProgramUniformMatrix4x3dv
    a0
    a1
    a2
    a3
    a4
    fgl = rglProgramUniformMatrix4x3dv fgl

    a0
    a1
    a2
    a3
    a4

nonexistentProgramUniformMatrix4x3dv :: FuntypeProgramUniformMatrix4x3dv
nonexistentProgramUniformMatrix4x3dv
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glProgramUniformMatrix4x3dv"
type FuntypeValidateProgramPipeline =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynValidateProgramPipeline :: FunPtr FuntypeValidateProgramPipeline -> FuntypeValidateProgramPipeline
glValidateProgramPipeline ::
    GLuint ->
    FlextGL -> IO ( () )
glValidateProgramPipeline
    a0
    fgl = rglValidateProgramPipeline fgl

    a0

nonexistentValidateProgramPipeline :: FuntypeValidateProgramPipeline
nonexistentValidateProgramPipeline
    _
    = throwIO $ NonExistentOpenGLFunction "glValidateProgramPipeline"
type FuntypeGetProgramPipelineInfoLog =
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynGetProgramPipelineInfoLog :: FunPtr FuntypeGetProgramPipelineInfoLog -> FuntypeGetProgramPipelineInfoLog
glGetProgramPipelineInfoLog ::
    GLuint ->
    GLsizei ->
    Ptr (GLsizei) ->
    Ptr (GLchar) ->
    FlextGL -> IO ( () )
glGetProgramPipelineInfoLog
    a0
    a1
    a2
    a3
    fgl = rglGetProgramPipelineInfoLog fgl

    a0
    a1
    a2
    a3

nonexistentGetProgramPipelineInfoLog :: FuntypeGetProgramPipelineInfoLog
nonexistentGetProgramPipelineInfoLog
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glGetProgramPipelineInfoLog"

-- GL_ATI_meminfo


-- GL_NVX_gpu_memory_info


-- GL_ARB_invalidate_subdata

type FuntypeInvalidateTexSubImage =
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateTexSubImage :: FunPtr FuntypeInvalidateTexSubImage -> FuntypeInvalidateTexSubImage
glInvalidateTexSubImage ::
    GLuint ->
    GLint ->
    GLint ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glInvalidateTexSubImage
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7
    fgl = rglInvalidateTexSubImage fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6
    a7

nonexistentInvalidateTexSubImage :: FuntypeInvalidateTexSubImage
nonexistentInvalidateTexSubImage
    _
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateTexSubImage"
type FuntypeInvalidateTexImage =
    GLuint ->
    GLint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateTexImage :: FunPtr FuntypeInvalidateTexImage -> FuntypeInvalidateTexImage
glInvalidateTexImage ::
    GLuint ->
    GLint ->
    FlextGL -> IO ( () )
glInvalidateTexImage
    a0
    a1
    fgl = rglInvalidateTexImage fgl

    a0
    a1

nonexistentInvalidateTexImage :: FuntypeInvalidateTexImage
nonexistentInvalidateTexImage
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateTexImage"
type FuntypeInvalidateBufferSubData =
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateBufferSubData :: FunPtr FuntypeInvalidateBufferSubData -> FuntypeInvalidateBufferSubData
glInvalidateBufferSubData ::
    GLuint ->
    GLintptr ->
    GLsizeiptr ->
    FlextGL -> IO ( () )
glInvalidateBufferSubData
    a0
    a1
    a2
    fgl = rglInvalidateBufferSubData fgl

    a0
    a1
    a2

nonexistentInvalidateBufferSubData :: FuntypeInvalidateBufferSubData
nonexistentInvalidateBufferSubData
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateBufferSubData"
type FuntypeInvalidateBufferData =
    GLuint ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateBufferData :: FunPtr FuntypeInvalidateBufferData -> FuntypeInvalidateBufferData
glInvalidateBufferData ::
    GLuint ->
    FlextGL -> IO ( () )
glInvalidateBufferData
    a0
    fgl = rglInvalidateBufferData fgl

    a0

nonexistentInvalidateBufferData :: FuntypeInvalidateBufferData
nonexistentInvalidateBufferData
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateBufferData"
type FuntypeInvalidateFramebuffer =
    GLenum ->
    GLsizei ->
    Ptr (GLenum) ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateFramebuffer :: FunPtr FuntypeInvalidateFramebuffer -> FuntypeInvalidateFramebuffer
glInvalidateFramebuffer ::
    GLenum ->
    GLsizei ->
    Ptr (GLenum) ->
    FlextGL -> IO ( () )
glInvalidateFramebuffer
    a0
    a1
    a2
    fgl = rglInvalidateFramebuffer fgl

    a0
    a1
    a2

nonexistentInvalidateFramebuffer :: FuntypeInvalidateFramebuffer
nonexistentInvalidateFramebuffer
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateFramebuffer"
type FuntypeInvalidateSubFramebuffer =
    GLenum ->
    GLsizei ->
    Ptr (GLenum) ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    IO ( () )
foreign import ccall APIENTRY unsafe "dynamic"
    gldynInvalidateSubFramebuffer :: FunPtr FuntypeInvalidateSubFramebuffer -> FuntypeInvalidateSubFramebuffer
glInvalidateSubFramebuffer ::
    GLenum ->
    GLsizei ->
    Ptr (GLenum) ->
    GLint ->
    GLint ->
    GLsizei ->
    GLsizei ->
    FlextGL -> IO ( () )
glInvalidateSubFramebuffer
    a0
    a1
    a2
    a3
    a4
    a5
    a6
    fgl = rglInvalidateSubFramebuffer fgl

    a0
    a1
    a2
    a3
    a4
    a5
    a6

nonexistentInvalidateSubFramebuffer :: FuntypeInvalidateSubFramebuffer
nonexistentInvalidateSubFramebuffer
    _
    _
    _
    _
    _
    _
    _
    = throwIO $ NonExistentOpenGLFunction "glInvalidateSubFramebuffer"

gl_R1UI_C4F_N3F_V3F_SUN :: GLenum
gl_R1UI_C4F_N3F_V3F_SUN = 0x85C8
gl_COLOR_TABLE_SGI :: GLenum
gl_COLOR_TABLE_SGI = 0x80D0
gl_EYE_DISTANCE_TO_POINT_SGIS :: GLenum
gl_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0
gl_FAILURE_NV :: GLenum
gl_FAILURE_NV = 0x9030
gl_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT :: GLenum
gl_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD
gl_CLIENT_MAPPED_BUFFER_BARRIER_BIT :: GLenum
gl_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000
gl_VERTEX_ATTRIB_ARRAY_STRIDE :: GLenum
gl_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624
gl_POINT_SIZE_MIN_ARB :: GLenum
gl_POINT_SIZE_MIN_ARB = 0x8126
gl_TEXTURE_BINDING_3D_OES :: GLenum
gl_TEXTURE_BINDING_3D_OES = 0x806A
gl_TRACE_PIXELS_BIT_MESA :: GLenum
gl_TRACE_PIXELS_BIT_MESA = 0x0010
gl_PROVOKING_VERTEX :: GLenum
gl_PROVOKING_VERTEX = 0x8E4F
gl_COMPRESSED_RGB_PVRTC_2BPPV1_IMG :: GLenum
gl_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01
gl_ARRAY_STRIDE :: GLenum
gl_ARRAY_STRIDE = 0x92FE
gl_UNIFORM_BUFFER_BINDING :: GLenum
gl_UNIFORM_BUFFER_BINDING = 0x8A28
gl_SHADE_MODEL :: GLenum
gl_SHADE_MODEL = 0x0B54
gl_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV :: GLenum
gl_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857
gl_PIXEL_TEX_GEN_Q_ROUND_SGIX :: GLenum
gl_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185
gl_TEXTURE24_ARB :: GLenum
gl_TEXTURE24_ARB = 0x84D8
gl_COMBINE_EXT :: GLenum
gl_COMBINE_EXT = 0x8570
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518
gl_MAX_TEXTURE_UNITS_ARB :: GLenum
gl_MAX_TEXTURE_UNITS_ARB = 0x84E2
gl_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT :: GLenum
gl_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72
gl_PREVIOUS_EXT :: GLenum
gl_PREVIOUS_EXT = 0x8578
gl_FLOAT_MAT3x2 :: GLenum
gl_FLOAT_MAT3x2 = 0x8B67
gl_TEXTURE_SWIZZLE_G_EXT :: GLenum
gl_TEXTURE_SWIZZLE_G_EXT = 0x8E43
gl_COLOR_ARRAY_SIZE :: GLenum
gl_COLOR_ARRAY_SIZE = 0x8081
gl_MIN_PROGRAM_TEXEL_OFFSET_EXT :: GLenum
gl_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904
gl_PROXY_TEXTURE_1D_ARRAY :: GLenum
gl_PROXY_TEXTURE_1D_ARRAY = 0x8C19
gl_BUMP_TEX_UNITS_ATI :: GLenum
gl_BUMP_TEX_UNITS_ATI = 0x8778
gl_INTENSITY :: GLenum
gl_INTENSITY = 0x8049
gl_MAX_COMPUTE_IMAGE_UNIFORMS :: GLenum
gl_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD
gl_DEPTH_BIAS :: GLenum
gl_DEPTH_BIAS = 0x0D1F
gl_VERSION_ES_CL_1_1 :: GLenum
gl_VERSION_ES_CL_1_1 = 1
gl_SMOOTH_QUADRATIC_CURVE_TO_NV :: GLenum
gl_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E
gl_SAMPLE_COVERAGE_INVERT_ARB :: GLenum
gl_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB
gl_DRAW_BUFFER13_NV :: GLenum
gl_DRAW_BUFFER13_NV = 0x8832
gl_VERTEX_ARRAY_TYPE_EXT :: GLenum
gl_VERTEX_ARRAY_TYPE_EXT = 0x807B
gl_RGBA16UI :: GLenum
gl_RGBA16UI = 0x8D76
gl_CLEAR_BUFFER :: GLenum
gl_CLEAR_BUFFER = 0x82B4
gl_RGB16UI :: GLenum
gl_RGB16UI = 0x8D77
gl_DUAL_INTENSITY4_SGIS :: GLenum
gl_DUAL_INTENSITY4_SGIS = 0x8118
gl_PROGRAM_INPUT :: GLenum
gl_PROGRAM_INPUT = 0x92E3
gl_ELEMENT_ARRAY_BARRIER_BIT_EXT :: GLenum
gl_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002
gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY :: GLenum
gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061
gl_VIEW_CLASS_64_BITS :: GLenum
gl_VIEW_CLASS_64_BITS = 0x82C6
gl_MAP1_TEXTURE_COORD_4 :: GLenum
gl_MAP1_TEXTURE_COORD_4 = 0x0D96
gl_VERTEX_ARRAY_STRIDE :: GLenum
gl_VERTEX_ARRAY_STRIDE = 0x807C
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB :: GLenum
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D
gl_TEXTURE_GREEN_TYPE_ARB :: GLenum
gl_TEXTURE_GREEN_TYPE_ARB = 0x8C11
gl_FRAMEBUFFER_SRGB_EXT :: GLenum
gl_FRAMEBUFFER_SRGB_EXT = 0x8DB9
gl_COLOR_ATTACHMENT9 :: GLenum
gl_COLOR_ATTACHMENT9 = 0x8CE9
gl_ACCUM_BUFFER_BIT :: GLenum
gl_ACCUM_BUFFER_BIT = 0x00000200
gl_DOT3_RGBA_IMG :: GLenum
gl_DOT3_RGBA_IMG = 0x86AF
gl_INT_IMAGE_2D_RECT_EXT :: GLenum
gl_INT_IMAGE_2D_RECT_EXT = 0x905A
gl_COLOR_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_COLOR_ARRAY_LIST_STRIDE_IBM = 103082
gl_SAMPLES_3DFX :: GLenum
gl_SAMPLES_3DFX = 0x86B4
gl_PACK_SKIP_ROWS :: GLenum
gl_PACK_SKIP_ROWS = 0x0D03
gl_STRICT_SCISSOR_HINT_PGI :: GLenum
gl_STRICT_SCISSOR_HINT_PGI = 0x1A218
gl_PATH_STROKE_COVER_MODE_NV :: GLenum
gl_PATH_STROKE_COVER_MODE_NV = 0x9083
gl_DEBUG_SEVERITY_MEDIUM :: GLenum
gl_DEBUG_SEVERITY_MEDIUM = 0x9147
gl_CONVOLUTION_BORDER_MODE_EXT :: GLenum
gl_CONVOLUTION_BORDER_MODE_EXT = 0x8013
gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9
gl_VIDEO_CAPTURE_FRAME_HEIGHT_NV :: GLenum
gl_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039
gl_TEXTURE_USAGE_ANGLE :: GLenum
gl_TEXTURE_USAGE_ANGLE = 0x93A2
gl_GEOMETRY_SUBROUTINE_UNIFORM :: GLenum
gl_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1
gl_FRAMEBUFFER :: GLenum
gl_FRAMEBUFFER = 0x8D40
gl_TEXTURE_APPLICATION_MODE_EXT :: GLenum
gl_TEXTURE_APPLICATION_MODE_EXT = 0x834F
gl_PACK_LSB_FIRST :: GLenum
gl_PACK_LSB_FIRST = 0x0D01
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES :: GLenum
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5B
gl_DECAL :: GLenum
gl_DECAL = 0x2101
gl_VERTEX_PROGRAM_CALLBACK_DATA_MESA :: GLenum
gl_VERTEX_PROGRAM_CALLBACK_DATA_MESA = 0x8BB7
gl_VERTEX_ATTRIB_MAP1_SIZE_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02
gl_PACK_SWAP_BYTES :: GLenum
gl_PACK_SWAP_BYTES = 0x0D00
gl_MAP_UNSYNCHRONIZED_BIT :: GLenum
gl_MAP_UNSYNCHRONIZED_BIT = 0x0020
gl_SAMPLE_BUFFERS_3DFX :: GLenum
gl_SAMPLE_BUFFERS_3DFX = 0x86B3
gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C
gl_T2F_IUI_N3F_V3F_EXT :: GLenum
gl_T2F_IUI_N3F_V3F_EXT = 0x81B4
gl_POSITION :: GLenum
gl_POSITION = 0x1203
gl_RENDERBUFFER_COVERAGE_SAMPLES_NV :: GLenum
gl_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB
gl_LINEAR_CLIPMAP_NEAREST_SGIX :: GLenum
gl_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F
gl_DEPTH_BUFFER_BIT5_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT5_QCOM = 0x00002000
gl_T2F_IUI_N3F_V2F_EXT :: GLenum
gl_T2F_IUI_N3F_V2F_EXT = 0x81B3
gl_VIDEO_BUFFER_PITCH_NV :: GLenum
gl_VIDEO_BUFFER_PITCH_NV = 0x9028
gl_UNSIGNED_INT64_AMD :: GLenum
gl_UNSIGNED_INT64_AMD = 0x8BC2
gl_PERFORMANCE_MONITOR_AMD :: GLenum
gl_PERFORMANCE_MONITOR_AMD = 0x9152
gl_LERP_ATI :: GLenum
gl_LERP_ATI = 0x8969
gl_GEOMETRY_SHADER :: GLenum
gl_GEOMETRY_SHADER = 0x8DD9
gl_TEXTURE_COLOR_SAMPLES_NV :: GLenum
gl_TEXTURE_COLOR_SAMPLES_NV = 0x9046
gl_RESAMPLE_DECIMATE_SGIX :: GLenum
gl_RESAMPLE_DECIMATE_SGIX = 0x8430
gl_PROGRAM_PIPELINE_OBJECT_EXT :: GLenum
gl_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F
gl_VECTOR_EXT :: GLenum
gl_VECTOR_EXT = 0x87BF
gl_OP_CLAMP_EXT :: GLenum
gl_OP_CLAMP_EXT = 0x878E
gl_SAMPLES_SGIS :: GLenum
gl_SAMPLES_SGIS = 0x80A9
gl_VERTEX_BINDING_BUFFER :: GLenum
gl_VERTEX_BINDING_BUFFER = 0x8F4F
gl_MAP2_TEXTURE_COORD_1 :: GLenum
gl_MAP2_TEXTURE_COORD_1 = 0x0DB3
gl_READ_PIXEL_DATA_RANGE_POINTER_NV :: GLenum
gl_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D
gl_SECONDARY_COLOR_ARRAY_TYPE :: GLenum
gl_SECONDARY_COLOR_ARRAY_TYPE = 0x845B
gl_TEXTURE_DEPTH_TYPE :: GLenum
gl_TEXTURE_DEPTH_TYPE = 0x8C16
gl_WRITE_DISCARD_NV :: GLenum
gl_WRITE_DISCARD_NV = 0x88BE
gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES :: GLenum
gl_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39
gl_TRACE_ERRORS_BIT_MESA :: GLenum
gl_TRACE_ERRORS_BIT_MESA = 0x0020
gl_TANGENT_ARRAY_EXT :: GLenum
gl_TANGENT_ARRAY_EXT = 0x8439
gl_MAX_DEEP_3D_TEXTURE_DEPTH_NV :: GLenum
gl_MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1
gl_TEXTURE_INDEX_SIZE_EXT :: GLenum
gl_TEXTURE_INDEX_SIZE_EXT = 0x80ED
gl_FRAGMENT_COLOR_MATERIAL_SGIX :: GLenum
gl_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB
gl_CONTEXT_RELEASE_BEHAVIOR :: GLenum
gl_CONTEXT_RELEASE_BEHAVIOR = 0x82FB
gl_MAX_VARYING_COMPONENTS_EXT :: GLenum
gl_MAX_VARYING_COMPONENTS_EXT = 0x8B4B
gl_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT :: GLenum
gl_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71
gl_IMAGE_3D_EXT :: GLenum
gl_IMAGE_3D_EXT = 0x904E
gl_MAX_PROGRAM_NATIVE_ATTRIBS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF
gl_CONTEXT_ROBUST_ACCESS :: GLenum
gl_CONTEXT_ROBUST_ACCESS = 0x90F3
gl_SHADER_STORAGE_BARRIER_BIT :: GLenum
gl_SHADER_STORAGE_BARRIER_BIT = 0x00002000
gl_UNPACK_ALIGNMENT :: GLenum
gl_UNPACK_ALIGNMENT = 0x0CF5
gl_SHADER_STORAGE_BUFFER_START :: GLenum
gl_SHADER_STORAGE_BUFFER_START = 0x90D4
gl_VERTEX_ARRAY_ADDRESS_NV :: GLenum
gl_VERTEX_ARRAY_ADDRESS_NV = 0x8F21
gl_TRANSFORM_FEEDBACK_OVERFLOW_ARB :: GLenum
gl_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC
gl_SWIZZLE_STQ_DQ_ATI :: GLenum
gl_SWIZZLE_STQ_DQ_ATI = 0x8979
gl_TEXTURE_COMPRESSED :: GLenum
gl_TEXTURE_COMPRESSED = 0x86A1
gl_TEXTURE_COLOR_TABLE_SGI :: GLenum
gl_TEXTURE_COLOR_TABLE_SGI = 0x80BC
gl_OBJECT_INFO_LOG_LENGTH_ARB :: GLenum
gl_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84
gl_POST_COLOR_MATRIX_BLUE_SCALE_SGI :: GLenum
gl_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6
gl_DRAW_BUFFER4 :: GLenum
gl_DRAW_BUFFER4 = 0x8829
gl_DUAL_LUMINANCE8_SGIS :: GLenum
gl_DUAL_LUMINANCE8_SGIS = 0x8115
gl_SAMPLER_CUBE_ARB :: GLenum
gl_SAMPLER_CUBE_ARB = 0x8B60
gl_COLOR_ATTACHMENT11_NV :: GLenum
gl_COLOR_ATTACHMENT11_NV = 0x8CEB
gl_ALPHA_MIN_SGIX :: GLenum
gl_ALPHA_MIN_SGIX = 0x8320
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB :: GLenum
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E
gl_BGR_INTEGER :: GLenum
gl_BGR_INTEGER = 0x8D9A
gl_WEIGHT_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E
gl_CON_14_ATI :: GLenum
gl_CON_14_ATI = 0x894F
gl_MAX_DUAL_SOURCE_DRAW_BUFFERS :: GLenum
gl_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC
gl_IS_ROW_MAJOR :: GLenum
gl_IS_ROW_MAJOR = 0x9300
gl_DEBUG_SOURCE_OTHER :: GLenum
gl_DEBUG_SOURCE_OTHER = 0x824B
gl_EVAL_2D_NV :: GLenum
gl_EVAL_2D_NV = 0x86C0
gl_BLUE :: GLenum
gl_BLUE = 0x1905
gl_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216
gl_SRC_COLOR :: GLenum
gl_SRC_COLOR = 0x0300
gl_MAX_GEOMETRY_ATOMIC_COUNTERS :: GLenum
gl_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5
gl_OPERAND0_ALPHA :: GLenum
gl_OPERAND0_ALPHA = 0x8598
gl_SAMPLE_ALPHA_TO_ONE :: GLenum
gl_SAMPLE_ALPHA_TO_ONE = 0x809F
gl_TEXTURE_RANGE_POINTER_APPLE :: GLenum
gl_TEXTURE_RANGE_POINTER_APPLE = 0x85B8
gl_RGB8_OES :: GLenum
gl_RGB8_OES = 0x8051
gl_MAP1_VERTEX_ATTRIB12_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C
gl_OUTPUT_COLOR1_EXT :: GLenum
gl_OUTPUT_COLOR1_EXT = 0x879C
gl_UNSIGNED_SHORT :: GLenum
gl_UNSIGNED_SHORT = 0x1403
gl_RGBA16_SNORM :: GLenum
gl_RGBA16_SNORM = 0x8F9B
gl_DS_BIAS_NV :: GLenum
gl_DS_BIAS_NV = 0x8716
gl_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215
gl_BACK_RIGHT :: GLenum
gl_BACK_RIGHT = 0x0403
gl_MAX_DRAW_BUFFERS_NV :: GLenum
gl_MAX_DRAW_BUFFERS_NV = 0x8824
gl_STENCIL_BACK_VALUE_MASK :: GLenum
gl_STENCIL_BACK_VALUE_MASK = 0x8CA4
gl_INVALID_ENUM :: GLenum
gl_INVALID_ENUM = 0x0500
gl_PRIMARY_COLOR :: GLenum
gl_PRIMARY_COLOR = 0x8577
gl_SRGB_ALPHA :: GLenum
gl_SRGB_ALPHA = 0x8C42
gl_TEXTURE_COMPARE_FAIL_VALUE_ARB :: GLenum
gl_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF
gl_INFO_LOG_LENGTH :: GLenum
gl_INFO_LOG_LENGTH = 0x8B84
gl_ALPHA16_SNORM :: GLenum
gl_ALPHA16_SNORM = 0x9018
gl_CLIP_DISTANCE7_APPLE :: GLenum
gl_CLIP_DISTANCE7_APPLE = 0x3007
gl_FOG_FUNC_POINTS_SGIS :: GLenum
gl_FOG_FUNC_POINTS_SGIS = 0x812B
gl_INVALID_FRAMEBUFFER_OPERATION_OES :: GLenum
gl_INVALID_FRAMEBUFFER_OPERATION_OES = 0x0506
gl_RGBA16F_ARB :: GLenum
gl_RGBA16F_ARB = 0x881A
gl_MAP2_VERTEX_ATTRIB15_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F
gl_DEPTH_BUFFER_BIT :: GLenum
gl_DEPTH_BUFFER_BIT = 0x00000100
gl_VARIABLE_F_NV :: GLenum
gl_VARIABLE_F_NV = 0x8528
gl_INT16_VEC3_NV :: GLenum
gl_INT16_VEC3_NV = 0x8FE6
gl_NORMALIZE :: GLenum
gl_NORMALIZE = 0x0BA1
gl_INDEX_SHIFT :: GLenum
gl_INDEX_SHIFT = 0x0D12
gl_WRITE_PIXEL_DATA_RANGE_LENGTH_NV :: GLenum
gl_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A
gl_CURRENT_RASTER_TEXTURE_COORDS :: GLenum
gl_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06
gl_OUTPUT_FOG_EXT :: GLenum
gl_OUTPUT_FOG_EXT = 0x87BD
gl_SAMPLER_CUBE :: GLenum
gl_SAMPLER_CUBE = 0x8B60
gl_STATIC_READ :: GLenum
gl_STATIC_READ = 0x88E5
gl_INT_VEC3_ARB :: GLenum
gl_INT_VEC3_ARB = 0x8B54
gl_TEXTURE17_ARB :: GLenum
gl_TEXTURE17_ARB = 0x84D1
gl_BLEND_ADVANCED_COHERENT_NV :: GLenum
gl_BLEND_ADVANCED_COHERENT_NV = 0x9285
gl_FRAGMENT_SHADER :: GLenum
gl_FRAGMENT_SHADER = 0x8B30
gl_TEXTURE_2D :: GLenum
gl_TEXTURE_2D = 0x0DE1
gl_STORAGE_CLIENT_APPLE :: GLenum
gl_STORAGE_CLIENT_APPLE = 0x85B4
gl_REPLACEMENT_CODE_ARRAY_POINTER_SUN :: GLenum
gl_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3
gl_POINT_DISTANCE_ATTENUATION :: GLenum
gl_POINT_DISTANCE_ATTENUATION = 0x8129
gl_OBJECT_TYPE :: GLenum
gl_OBJECT_TYPE = 0x9112
gl_T2F_IUI_V2F_EXT :: GLenum
gl_T2F_IUI_V2F_EXT = 0x81B1
gl_PIXEL_UNPACK_BUFFER_BINDING_ARB :: GLenum
gl_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF
gl_CURRENT_ATTRIB_NV :: GLenum
gl_CURRENT_ATTRIB_NV = 0x8626
gl_SAMPLES_ARB :: GLenum
gl_SAMPLES_ARB = 0x80A9
gl_MIRROR_CLAMP_EXT :: GLenum
gl_MIRROR_CLAMP_EXT = 0x8742
gl_PIXEL_UNPACK_BUFFER_BINDING_EXT :: GLenum
gl_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF
gl_INTENSITY12 :: GLenum
gl_INTENSITY12 = 0x804C
gl_DUAL_LUMINANCE16_SGIS :: GLenum
gl_DUAL_LUMINANCE16_SGIS = 0x8117
gl_SAMPLER_CUBE_SHADOW_NV :: GLenum
gl_SAMPLER_CUBE_SHADOW_NV = 0x8DC5
gl_CON_21_ATI :: GLenum
gl_CON_21_ATI = 0x8956
gl_FONT_HEIGHT_BIT_NV :: GLenum
gl_FONT_HEIGHT_BIT_NV = 0x00800000
gl_BLEND_EQUATION_ALPHA :: GLenum
gl_BLEND_EQUATION_ALPHA = 0x883D
gl_IMAGE_CLASS_10_10_10_2 :: GLenum
gl_IMAGE_CLASS_10_10_10_2 = 0x82C3
gl_NEGATIVE_ONE_EXT :: GLenum
gl_NEGATIVE_ONE_EXT = 0x87DF
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B
gl_TEXTURE_COORD_ARRAY_LIST_IBM :: GLenum
gl_TEXTURE_COORD_ARRAY_LIST_IBM = 103074
gl_MODELVIEW28_ARB :: GLenum
gl_MODELVIEW28_ARB = 0x873C
gl_TEXTURE_INTERNAL_FORMAT_QCOM :: GLenum
gl_TEXTURE_INTERNAL_FORMAT_QCOM = 0x8BD5
gl_COMBINER_AB_DOT_PRODUCT_NV :: GLenum
gl_COMBINER_AB_DOT_PRODUCT_NV = 0x8545
gl_COLOR_ATTACHMENT13_NV :: GLenum
gl_COLOR_ATTACHMENT13_NV = 0x8CED
gl_TEXTURE_BINDING_2D :: GLenum
gl_TEXTURE_BINDING_2D = 0x8069
gl_NONE :: GLenum
gl_NONE = 0
gl_HALF_FLOAT_NV :: GLenum
gl_HALF_FLOAT_NV = 0x140B
gl_MAX_TESS_PATCH_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_PATCH_COMPONENTS_EXT = 0x8E84
gl_DOUBLEBUFFER :: GLenum
gl_DOUBLEBUFFER = 0x0C32
gl_MAX_RECTANGLE_TEXTURE_SIZE :: GLenum
gl_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8
gl_R11F_G11F_B10F_APPLE :: GLenum
gl_R11F_G11F_B10F_APPLE = 0x8C3A
gl_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810
gl_OUTPUT_TEXTURE_COORD24_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5
gl_RGB565 :: GLenum
gl_RGB565 = 0x8D62
gl_COLOR_TABLE_BIAS :: GLenum
gl_COLOR_TABLE_BIAS = 0x80D7
gl_INTERNALFORMAT_DEPTH_SIZE :: GLenum
gl_INTERNALFORMAT_DEPTH_SIZE = 0x8275
gl_POINT_SIZE_ARRAY_STRIDE_OES :: GLenum
gl_POINT_SIZE_ARRAY_STRIDE_OES = 0x898B
gl_FRONT_LEFT :: GLenum
gl_FRONT_LEFT = 0x0400
gl_DOT3_RGBA :: GLenum
gl_DOT3_RGBA = 0x86AF
gl_COMBINER_MUX_SUM_NV :: GLenum
gl_COMBINER_MUX_SUM_NV = 0x8547
gl_LIGHT4 :: GLenum
gl_LIGHT4 = 0x4004
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9
gl_CON_5_ATI :: GLenum
gl_CON_5_ATI = 0x8946
gl_VIRTUAL_PAGE_SIZE_INDEX_ARB :: GLenum
gl_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7
gl_SCALED_RESOLVE_NICEST_EXT :: GLenum
gl_SCALED_RESOLVE_NICEST_EXT = 0x90BB
gl_DRAW_BUFFER10 :: GLenum
gl_DRAW_BUFFER10 = 0x882F
gl_EYE_PLANE_ABSOLUTE_NV :: GLenum
gl_EYE_PLANE_ABSOLUTE_NV = 0x855C
gl_TEXTURE_FREE_MEMORY_ATI :: GLenum
gl_TEXTURE_FREE_MEMORY_ATI = 0x87FC
gl_UNSIGNED_INT_24_8_EXT :: GLenum
gl_UNSIGNED_INT_24_8_EXT = 0x84FA
gl_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB :: GLenum
gl_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F
gl_RED_BITS :: GLenum
gl_RED_BITS = 0x0D52
gl_SCREEN_COORDINATES_REND :: GLenum
gl_SCREEN_COORDINATES_REND = 0x8490
gl_VERTEX_ARRAY_POINTER_EXT :: GLenum
gl_VERTEX_ARRAY_POINTER_EXT = 0x808E
gl_MAX_PROGRAM_PARAMETERS_ARB :: GLenum
gl_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9
gl_DSDT_NV :: GLenum
gl_DSDT_NV = 0x86F5
gl_INT_IMAGE_3D :: GLenum
gl_INT_IMAGE_3D = 0x9059
gl_RELATIVE_ROUNDED_RECT8_NV :: GLenum
gl_RELATIVE_ROUNDED_RECT8_NV = 0xEF
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8
gl_MAX_TEXTURE_MAX_ANISOTROPY_EXT :: GLenum
gl_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF
gl_OBJECT_POINT_SGIS :: GLenum
gl_OBJECT_POINT_SGIS = 0x81F5
gl_MAX_VERTEX_SHADER_LOCALS_EXT :: GLenum
gl_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9
gl_UNIFORM :: GLenum
gl_UNIFORM = 0x92E1
gl_SLUMINANCE8 :: GLenum
gl_SLUMINANCE8 = 0x8C47
gl_VERTEX_BINDING_DIVISOR :: GLenum
gl_VERTEX_BINDING_DIVISOR = 0x82D6
gl_TEXTURE_CUBE_MAP_POSITIVE_Z :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519
gl_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3
gl_TEXTURE18 :: GLenum
gl_TEXTURE18 = 0x84D2
gl_PERTURB_EXT :: GLenum
gl_PERTURB_EXT = 0x85AE
gl_POST_COLOR_MATRIX_GREEN_SCALE_SGI :: GLenum
gl_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5
gl_DEBUG_SOURCE_SHADER_COMPILER :: GLenum
gl_DEBUG_SOURCE_SHADER_COMPILER = 0x8248
gl_FRAMEBUFFER_DEFAULT_SAMPLES :: GLenum
gl_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313
gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: GLenum
gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C
gl_3D_COLOR_TEXTURE :: GLenum
gl_3D_COLOR_TEXTURE = 0x0603
gl_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD :: GLenum
gl_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160
gl_FUNC_ADD_OES :: GLenum
gl_FUNC_ADD_OES = 0x8006
gl_FRONT :: GLenum
gl_FRONT = 0x0404
gl_SAMPLE_MASK_VALUE_EXT :: GLenum
gl_SAMPLE_MASK_VALUE_EXT = 0x80AA
gl_IMAGE_2D :: GLenum
gl_IMAGE_2D = 0x904D
gl_VALIDATE_STATUS :: GLenum
gl_VALIDATE_STATUS = 0x8B83
gl_MAX_DEBUG_GROUP_STACK_DEPTH :: GLenum
gl_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C
gl_MAT_SHININESS_BIT_PGI :: GLenum
gl_MAT_SHININESS_BIT_PGI = 0x02000000
gl_FRONT_RIGHT :: GLenum
gl_FRONT_RIGHT = 0x0401
gl_TEXTURE_BLUE_SIZE_EXT :: GLenum
gl_TEXTURE_BLUE_SIZE_EXT = 0x805E
gl_VERTEX_ARRAY_OBJECT_EXT :: GLenum
gl_VERTEX_ARRAY_OBJECT_EXT = 0x9154
gl_PIXEL_TILE_WIDTH_SGIX :: GLenum
gl_PIXEL_TILE_WIDTH_SGIX = 0x8140
gl_ACCUM_RED_BITS :: GLenum
gl_ACCUM_RED_BITS = 0x0D58
gl_CONSTANT_COLOR_EXT :: GLenum
gl_CONSTANT_COLOR_EXT = 0x8001
gl_CIRCULAR_TANGENT_ARC_TO_NV :: GLenum
gl_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC
gl_COMBINE_ALPHA :: GLenum
gl_COMBINE_ALPHA = 0x8572
gl_FRAGMENT_COLOR_MATERIAL_FACE_SGIX :: GLenum
gl_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402
gl_INT_IMAGE_2D_MULTISAMPLE_EXT :: GLenum
gl_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060
gl_COLOR_ATTACHMENT11 :: GLenum
gl_COLOR_ATTACHMENT11 = 0x8CEB
gl_CONVEX_HULL_NV :: GLenum
gl_CONVEX_HULL_NV = 0x908B
gl_FONT_NUM_GLYPH_INDICES_BIT_NV :: GLenum
gl_FONT_NUM_GLYPH_INDICES_BIT_NV = 0x20000000
gl_TRIANGLE_STRIP_ADJACENCY_EXT :: GLenum
gl_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D
gl_COMPRESSED_SRGB_ALPHA :: GLenum
gl_COMPRESSED_SRGB_ALPHA = 0x8C49
gl_UNSIGNED_INT_2_10_10_10_REV_EXT :: GLenum
gl_UNSIGNED_INT_2_10_10_10_REV_EXT = 0x8368
gl_LUMINANCE_ALPHA32UI_EXT :: GLenum
gl_LUMINANCE_ALPHA32UI_EXT = 0x8D75
gl_BITMAP_TOKEN :: GLenum
gl_BITMAP_TOKEN = 0x0704
gl_NEAREST_CLIPMAP_NEAREST_SGIX :: GLenum
gl_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = 0x8D56
gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB :: GLenum
gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C
gl_OBJECT_BUFFER_USAGE_ATI :: GLenum
gl_OBJECT_BUFFER_USAGE_ATI = 0x8765
gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS :: GLenum
gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A
gl_POINT_SPRITE_ARB :: GLenum
gl_POINT_SPRITE_ARB = 0x8861
gl_MAP2_TEXTURE_COORD_4 :: GLenum
gl_MAP2_TEXTURE_COORD_4 = 0x0DB6
gl_FOG_COORDINATE_ARRAY :: GLenum
gl_FOG_COORDINATE_ARRAY = 0x8457
gl_ALPHA16_EXT :: GLenum
gl_ALPHA16_EXT = 0x803E
gl_MAX_VERTEX_BINDABLE_UNIFORMS_EXT :: GLenum
gl_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2
gl_GLOBAL_ALPHA_SUN :: GLenum
gl_GLOBAL_ALPHA_SUN = 0x81D9
gl_BUFFER_BINDING :: GLenum
gl_BUFFER_BINDING = 0x9302
gl_ACTIVE_UNIFORMS :: GLenum
gl_ACTIVE_UNIFORMS = 0x8B86
gl_DEBUG_SEVERITY_HIGH_KHR :: GLenum
gl_DEBUG_SEVERITY_HIGH_KHR = 0x9146
gl_LUMINANCE16_SNORM :: GLenum
gl_LUMINANCE16_SNORM = 0x9019
gl_LUMINANCE_ALPHA :: GLenum
gl_LUMINANCE_ALPHA = 0x190A
gl_DEPTH24_STENCIL8_EXT :: GLenum
gl_DEPTH24_STENCIL8_EXT = 0x88F0
gl_PACK_ALIGNMENT :: GLenum
gl_PACK_ALIGNMENT = 0x0D05
gl_T2F_C4UB_V3F :: GLenum
gl_T2F_C4UB_V3F = 0x2A29
gl_UNSIGNED_INT_VEC4 :: GLenum
gl_UNSIGNED_INT_VEC4 = 0x8DC8
gl_DELETE_STATUS :: GLenum
gl_DELETE_STATUS = 0x8B80
gl_SAMPLE_MASK_VALUE :: GLenum
gl_SAMPLE_MASK_VALUE = 0x8E52
gl_MAX_VERTEX_UNIFORM_COMPONENTS :: GLenum
gl_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A
gl_MAX_SAMPLES_ANGLE :: GLenum
gl_MAX_SAMPLES_ANGLE = 0x8D57
gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING :: GLenum
gl_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C
gl_EDGE_FLAG_ARRAY_STRIDE :: GLenum
gl_EDGE_FLAG_ARRAY_STRIDE = 0x808C
gl_COLOR_ATTACHMENT5_NV :: GLenum
gl_COLOR_ATTACHMENT5_NV = 0x8CE5
gl_DOUBLE_VEC4 :: GLenum
gl_DOUBLE_VEC4 = 0x8FFE
gl_LINES :: GLenum
gl_LINES = 0x0001
gl_COLOR_ATTACHMENT0 :: GLenum
gl_COLOR_ATTACHMENT0 = 0x8CE0
gl_DRAW_BUFFER8_ARB :: GLenum
gl_DRAW_BUFFER8_ARB = 0x882D
gl_PROJECTION_STACK_DEPTH :: GLenum
gl_PROJECTION_STACK_DEPTH = 0x0BA4
gl_OP_RECIP_EXT :: GLenum
gl_OP_RECIP_EXT = 0x8794
gl_ALL_SHADER_BITS_EXT :: GLenum
gl_ALL_SHADER_BITS_EXT = 0xFFFFFFFF
gl_OBJECT_LINE_SGIS :: GLenum
gl_OBJECT_LINE_SGIS = 0x81F7
gl_LIGHTING :: GLenum
gl_LIGHTING = 0x0B50
gl_COMPRESSED_LUMINANCE_LATC1_EXT :: GLenum
gl_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70
gl_TEXTURE_SWIZZLE_A_EXT :: GLenum
gl_TEXTURE_SWIZZLE_A_EXT = 0x8E45
gl_UNKNOWN_CONTEXT_RESET :: GLenum
gl_UNKNOWN_CONTEXT_RESET = 0x8255
gl_CON_3_ATI :: GLenum
gl_CON_3_ATI = 0x8944
gl_LUMINANCE8_ALPHA8 :: GLenum
gl_LUMINANCE8_ALPHA8 = 0x8045
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS :: GLenum
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF
gl_SOURCE2_RGB :: GLenum
gl_SOURCE2_RGB = 0x8582
gl_IGNORE_BORDER_HP :: GLenum
gl_IGNORE_BORDER_HP = 0x8150
gl_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX :: GLenum
gl_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048
gl_CLIP_DISTANCE4_APPLE :: GLenum
gl_CLIP_DISTANCE4_APPLE = 0x3004
gl_UNIFORM_BUFFER_UNIFIED_NV :: GLenum
gl_UNIFORM_BUFFER_UNIFIED_NV = 0x936E
gl_DRAW_BUFFER9 :: GLenum
gl_DRAW_BUFFER9 = 0x882E
gl_UNPACK_COLORSPACE_CONVERSION_WEBGL :: GLenum
gl_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243
gl_BLEND_OVERLAP_NV :: GLenum
gl_BLEND_OVERLAP_NV = 0x9281
gl_OPERAND2_RGB_ARB :: GLenum
gl_OPERAND2_RGB_ARB = 0x8592
gl_TEXTURE_CUBE_MAP_POSITIVE_X_OES :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_X_OES = 0x8515
gl_TEXTURE_SRGB_DECODE_EXT :: GLenum
gl_TEXTURE_SRGB_DECODE_EXT = 0x8A48
gl_SOURCE2_ALPHA_ARB :: GLenum
gl_SOURCE2_ALPHA_ARB = 0x858A
gl_DOUBLE_VEC3 :: GLenum
gl_DOUBLE_VEC3 = 0x8FFD
gl_MATRIX6_ARB :: GLenum
gl_MATRIX6_ARB = 0x88C6
gl_SAMPLER_BUFFER_EXT :: GLenum
gl_SAMPLER_BUFFER_EXT = 0x8DC2
gl_COLOR_ATTACHMENT2_NV :: GLenum
gl_COLOR_ATTACHMENT2_NV = 0x8CE2
gl_ARRAY_ELEMENT_LOCK_COUNT_EXT :: GLenum
gl_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9
gl_FULL_STIPPLE_HINT_PGI :: GLenum
gl_FULL_STIPPLE_HINT_PGI = 0x1A219
gl_LUMINANCE_ALPHA_FLOAT16_ATI :: GLenum
gl_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F
gl_REG_0_ATI :: GLenum
gl_REG_0_ATI = 0x8921
gl_IMAGE_PIXEL_TYPE :: GLenum
gl_IMAGE_PIXEL_TYPE = 0x82AA
gl_MANUAL_GENERATE_MIPMAP :: GLenum
gl_MANUAL_GENERATE_MIPMAP = 0x8294
gl_IMAGE_BINDING_NAME_EXT :: GLenum
gl_IMAGE_BINDING_NAME_EXT = 0x8F3A
gl_HISTOGRAM_BLUE_SIZE :: GLenum
gl_HISTOGRAM_BLUE_SIZE = 0x802A
gl_COPY_READ_BUFFER :: GLenum
gl_COPY_READ_BUFFER = 0x8F36
gl_INVERT_OVG_NV :: GLenum
gl_INVERT_OVG_NV = 0x92B4
gl_BLEND_DST_ALPHA_EXT :: GLenum
gl_BLEND_DST_ALPHA_EXT = 0x80CA
gl_UNPACK_SUBSAMPLE_RATE_SGIX :: GLenum
gl_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1
gl_TRANSFORM_BIT :: GLenum
gl_TRANSFORM_BIT = 0x00001000
gl_DSDT8_MAG8_NV :: GLenum
gl_DSDT8_MAG8_NV = 0x870A
gl_MAP_READ_BIT_EXT :: GLenum
gl_MAP_READ_BIT_EXT = 0x0001
gl_COMBINER6_NV :: GLenum
gl_COMBINER6_NV = 0x8556
gl_RESET_NOTIFICATION_STRATEGY :: GLenum
gl_RESET_NOTIFICATION_STRATEGY = 0x8256
gl_MODELVIEW10_ARB :: GLenum
gl_MODELVIEW10_ARB = 0x872A
gl_ACTIVE_TEXTURE :: GLenum
gl_ACTIVE_TEXTURE = 0x84E0
gl_FLOAT_VEC3_ARB :: GLenum
gl_FLOAT_VEC3_ARB = 0x8B51
gl_SUBPIXEL_BITS :: GLenum
gl_SUBPIXEL_BITS = 0x0D50
gl_RELATIVE_ARC_TO_NV :: GLenum
gl_RELATIVE_ARC_TO_NV = 0xFF
gl_COLOR_ATTACHMENT15_NV :: GLenum
gl_COLOR_ATTACHMENT15_NV = 0x8CEF
gl_SAMPLE_ALPHA_TO_COVERAGE :: GLenum
gl_SAMPLE_ALPHA_TO_COVERAGE = 0x809E
gl_INT_SAMPLER_2D :: GLenum
gl_INT_SAMPLER_2D = 0x8DCA
gl_BUFFER_DATA_SIZE :: GLenum
gl_BUFFER_DATA_SIZE = 0x9303
gl_VERTEX_ATTRIB_ARRAY_DIVISOR :: GLenum
gl_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE
gl_DEBUG_ASSERT_MESA :: GLenum
gl_DEBUG_ASSERT_MESA = 0x875B
gl_TRANSFORM_FEEDBACK_BUFFER_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E
gl_MAP2_VERTEX_ATTRIB14_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E
gl_IS_PER_PATCH :: GLenum
gl_IS_PER_PATCH = 0x92E7
gl_STENCIL_CLEAR_TAG_VALUE_EXT :: GLenum
gl_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3
gl_TEXTURE_COMPARE_FUNC :: GLenum
gl_TEXTURE_COMPARE_FUNC = 0x884D
gl_FLOAT_R_NV :: GLenum
gl_FLOAT_R_NV = 0x8880
gl_QUAD_ALPHA8_SGIS :: GLenum
gl_QUAD_ALPHA8_SGIS = 0x811F
gl_REPLACEMENT_CODE_ARRAY_STRIDE_SUN :: GLenum
gl_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2
gl_TEXTURE1 :: GLenum
gl_TEXTURE1 = 0x84C1
gl_NORMAL_ARRAY_STRIDE_EXT :: GLenum
gl_NORMAL_ARRAY_STRIDE_EXT = 0x807F
gl_PRIMITIVES_GENERATED :: GLenum
gl_PRIMITIVES_GENERATED = 0x8C87
gl_UNSIGNED_INT16_NV :: GLenum
gl_UNSIGNED_INT16_NV = 0x8FF0
gl_TEXTURE_FILTER_CONTROL_EXT :: GLenum
gl_TEXTURE_FILTER_CONTROL_EXT = 0x8500
gl_AND_REVERSE :: GLenum
gl_AND_REVERSE = 0x1502
gl_INTERNALFORMAT_RED_TYPE :: GLenum
gl_INTERNALFORMAT_RED_TYPE = 0x8278
gl_VERTEX_BINDING_STRIDE :: GLenum
gl_VERTEX_BINDING_STRIDE = 0x82D8
gl_RENDERBUFFER_EXT :: GLenum
gl_RENDERBUFFER_EXT = 0x8D41
gl_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT :: GLenum
gl_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001
gl_DEBUG_SOURCE_API_KHR :: GLenum
gl_DEBUG_SOURCE_API_KHR = 0x8246
gl_INTENSITY_FLOAT16_APPLE :: GLenum
gl_INTENSITY_FLOAT16_APPLE = 0x881D
gl_INDEX :: GLenum
gl_INDEX = 0x8222
gl_REG_9_ATI :: GLenum
gl_REG_9_ATI = 0x892A
gl_PINLIGHT_NV :: GLenum
gl_PINLIGHT_NV = 0x92A8
gl_FRACTIONAL_EVEN :: GLenum
gl_FRACTIONAL_EVEN = 0x8E7C
gl_PROJECTION_MATRIX :: GLenum
gl_PROJECTION_MATRIX = 0x0BA7
gl_TEXTURE_STACK_DEPTH :: GLenum
gl_TEXTURE_STACK_DEPTH = 0x0BA5
gl_REG_19_ATI :: GLenum
gl_REG_19_ATI = 0x8934
gl_UNPACK_CLIENT_STORAGE_APPLE :: GLenum
gl_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2
gl_COMPRESSED_RGBA_ASTC_6x6_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4
gl_COMPRESSED_RGB8_ETC2_OES :: GLenum
gl_COMPRESSED_RGB8_ETC2_OES = 0x9274
gl_FLOAT16_VEC4_NV :: GLenum
gl_FLOAT16_VEC4_NV = 0x8FFB
gl_OPERAND0_ALPHA_ARB :: GLenum
gl_OPERAND0_ALPHA_ARB = 0x8598
gl_TIMESTAMP_EXT :: GLenum
gl_TIMESTAMP_EXT = 0x8E28
gl_VERTEX_SHADER :: GLenum
gl_VERTEX_SHADER = 0x8B31
gl_RGB16_EXT :: GLenum
gl_RGB16_EXT = 0x8054
gl_STENCIL :: GLenum
gl_STENCIL = 0x1802
gl_CONTEXT_FLAG_DEBUG_BIT_KHR :: GLenum
gl_CONTEXT_FLAG_DEBUG_BIT_KHR = 0x00000002
gl_TRIANGULAR_NV :: GLenum
gl_TRIANGULAR_NV = 0x90A5
gl_DYNAMIC_READ_ARB :: GLenum
gl_DYNAMIC_READ_ARB = 0x88E9
gl_TESS_EVALUATION_PROGRAM_NV :: GLenum
gl_TESS_EVALUATION_PROGRAM_NV = 0x891F
gl_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV :: GLenum
gl_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520
gl_FRAGMENTS_INSTRUMENT_MAX_SGIX :: GLenum
gl_FRAGMENTS_INSTRUMENT_MAX_SGIX = 0x8315
gl_DEBUG_SEVERITY_MEDIUM_KHR :: GLenum
gl_DEBUG_SEVERITY_MEDIUM_KHR = 0x9147
gl_MAX_PROGRAM_TEXEL_OFFSET :: GLenum
gl_MAX_PROGRAM_TEXEL_OFFSET = 0x8905
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = 0x900A
gl_COLOR_ATTACHMENT3 :: GLenum
gl_COLOR_ATTACHMENT3 = 0x8CE3
gl_INT_IMAGE_1D :: GLenum
gl_INT_IMAGE_1D = 0x9057
gl_OP_INDEX_EXT :: GLenum
gl_OP_INDEX_EXT = 0x8782
gl_RGB8I_EXT :: GLenum
gl_RGB8I_EXT = 0x8D8F
gl_FLOAT_RG32_NV :: GLenum
gl_FLOAT_RG32_NV = 0x8887
gl_VIDEO_COLOR_CONVERSION_MAX_NV :: GLenum
gl_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A
gl_COLOR_TABLE_GREEN_SIZE_SGI :: GLenum
gl_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB
gl_PIXEL_TILE_GRID_WIDTH_SGIX :: GLenum
gl_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142
gl_TEXTURE_COMPARE_MODE :: GLenum
gl_TEXTURE_COMPARE_MODE = 0x884C
gl_VERTEX_ARRAY_BINDING_OES :: GLenum
gl_VERTEX_ARRAY_BINDING_OES = 0x85B5
gl_TEXTURE_2D_STACK_MESAX :: GLenum
gl_TEXTURE_2D_STACK_MESAX = 0x875A
gl_RGB5_EXT :: GLenum
gl_RGB5_EXT = 0x8050
gl_EVAL_VERTEX_ATTRIB11_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB11_NV = 0x86D1
gl_DEBUG_SOURCE_API :: GLenum
gl_DEBUG_SOURCE_API = 0x8246
gl_PATH_GEN_COLOR_FORMAT_NV :: GLenum
gl_PATH_GEN_COLOR_FORMAT_NV = 0x90B2
gl_ACTIVE_UNIFORM_MAX_LENGTH :: GLenum
gl_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87
gl_LUMINANCE_FLOAT16_ATI :: GLenum
gl_LUMINANCE_FLOAT16_ATI = 0x881E
gl_ROUNDED_RECT4_NV :: GLenum
gl_ROUNDED_RECT4_NV = 0xEC
gl_INTERNALFORMAT_BLUE_SIZE :: GLenum
gl_INTERNALFORMAT_BLUE_SIZE = 0x8273
gl_GEOMETRY_SHADER_ARB :: GLenum
gl_GEOMETRY_SHADER_ARB = 0x8DD9
gl_LIGHT_MODEL_LOCAL_VIEWER :: GLenum
gl_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51
gl_ATC_RGBA_INTERPOLATED_ALPHA_AMD :: GLenum
gl_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 0x87EE
gl_DOUBLE_MAT2x3_EXT :: GLenum
gl_DOUBLE_MAT2x3_EXT = 0x8F49
gl_MAX_SAMPLES_APPLE :: GLenum
gl_MAX_SAMPLES_APPLE = 0x8D57
gl_TEXTURE17 :: GLenum
gl_TEXTURE17 = 0x84D1
gl_TEXTURE_2D_MULTISAMPLE_ARRAY :: GLenum
gl_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102
gl_RENDERBUFFER_RED_SIZE_EXT :: GLenum
gl_RENDERBUFFER_RED_SIZE_EXT = 0x8D50
gl_TEXTURE_CUBE_MAP_POSITIVE_X_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515
gl_PATCH_DEFAULT_OUTER_LEVEL :: GLenum
gl_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74
gl_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT :: GLenum
gl_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D
gl_RGB16I_EXT :: GLenum
gl_RGB16I_EXT = 0x8D89
gl_MATRIX_INDEX_ARRAY_STRIDE_ARB :: GLenum
gl_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848
gl_MATRIX2_ARB :: GLenum
gl_MATRIX2_ARB = 0x88C2
gl_EYE_LINEAR :: GLenum
gl_EYE_LINEAR = 0x2400
gl_COLOR_ATTACHMENT3_EXT :: GLenum
gl_COLOR_ATTACHMENT3_EXT = 0x8CE3
gl_IMAGE_2D_ARRAY :: GLenum
gl_IMAGE_2D_ARRAY = 0x9053
gl_TEXTURE_MAX_LOD_SGIS :: GLenum
gl_TEXTURE_MAX_LOD_SGIS = 0x813B
gl_INDEX_TEST_FUNC_EXT :: GLenum
gl_INDEX_TEST_FUNC_EXT = 0x81B6
gl_INDEX_CLEAR_VALUE :: GLenum
gl_INDEX_CLEAR_VALUE = 0x0C20
gl_SOURCE1_ALPHA :: GLenum
gl_SOURCE1_ALPHA = 0x8589
gl_DEBUG_GROUP_STACK_DEPTH :: GLenum
gl_DEBUG_GROUP_STACK_DEPTH = 0x826D
gl_MULTISAMPLE_EXT :: GLenum
gl_MULTISAMPLE_EXT = 0x809D
gl_COMPRESSED_RGBA_BPTC_UNORM_ARB :: GLenum
gl_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C
gl_MAX_TESS_GEN_LEVEL :: GLenum
gl_MAX_TESS_GEN_LEVEL = 0x8E7E
gl_BINORMAL_ARRAY_STRIDE_EXT :: GLenum
gl_BINORMAL_ARRAY_STRIDE_EXT = 0x8441
gl_LUMINANCE12_ALPHA12_EXT :: GLenum
gl_LUMINANCE12_ALPHA12_EXT = 0x8047
gl_CONVOLUTION_1D_EXT :: GLenum
gl_CONVOLUTION_1D_EXT = 0x8010
gl_CLIP_DISTANCE4 :: GLenum
gl_CLIP_DISTANCE4 = 0x3004
gl_S :: GLenum
gl_S = 0x2000
gl_PROXY_TEXTURE_2D_MULTISAMPLE :: GLenum
gl_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101
gl_MIN_EXT :: GLenum
gl_MIN_EXT = 0x8007
gl_SOURCE1_RGB :: GLenum
gl_SOURCE1_RGB = 0x8581
gl_PROGRAM_LENGTH_NV :: GLenum
gl_PROGRAM_LENGTH_NV = 0x8627
gl_RGB16I :: GLenum
gl_RGB16I = 0x8D89
gl_SAMPLER_2D_SHADOW_EXT :: GLenum
gl_SAMPLER_2D_SHADOW_EXT = 0x8B62
gl_MAX :: GLenum
gl_MAX = 0x8008
gl_COLOR_TABLE_ALPHA_SIZE_SGI :: GLenum
gl_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD
gl_UNSIGNED_INT_10F_11F_11F_REV_APPLE :: GLenum
gl_UNSIGNED_INT_10F_11F_11F_REV_APPLE = 0x8C3B
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D
gl_CONVOLUTION_FILTER_SCALE :: GLenum
gl_CONVOLUTION_FILTER_SCALE = 0x8014
gl_PROGRAM_PARAMETERS_ARB :: GLenum
gl_PROGRAM_PARAMETERS_ARB = 0x88A8
gl_RGB9_E5 :: GLenum
gl_RGB9_E5 = 0x8C3D
gl_SAMPLER_1D_ARRAY_EXT :: GLenum
gl_SAMPLER_1D_ARRAY_EXT = 0x8DC0
gl_REPLACE_MIDDLE_SUN :: GLenum
gl_REPLACE_MIDDLE_SUN = 0x0002
gl_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4
gl_UNSIGNED_INT_SAMPLER_3D :: GLenum
gl_UNSIGNED_INT_SAMPLER_3D = 0x8DD3
gl_ALPHA12_EXT :: GLenum
gl_ALPHA12_EXT = 0x803D
gl_FRAMEBUFFER_ATTACHMENT_ANGLE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_ANGLE = 0x93A3
gl_SEPARATE_ATTRIBS_EXT :: GLenum
gl_SEPARATE_ATTRIBS_EXT = 0x8C8D
gl_CURRENT_TEXTURE_COORDS :: GLenum
gl_CURRENT_TEXTURE_COORDS = 0x0B03
gl_MAX_NAME_LENGTH :: GLenum
gl_MAX_NAME_LENGTH = 0x92F6
gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: GLenum
gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105
gl_TEXTURE_LUMINANCE_TYPE :: GLenum
gl_TEXTURE_LUMINANCE_TYPE = 0x8C14
gl_CON_30_ATI :: GLenum
gl_CON_30_ATI = 0x895F
gl_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP :: GLenum
gl_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162
gl_IMAGE_BINDING_LAYERED_EXT :: GLenum
gl_IMAGE_BINDING_LAYERED_EXT = 0x8F3C
gl_STACK_OVERFLOW_KHR :: GLenum
gl_STACK_OVERFLOW_KHR = 0x0503
gl_DRAW_BUFFER14_NV :: GLenum
gl_DRAW_BUFFER14_NV = 0x8833
gl_VERTEX_STREAM2_ATI :: GLenum
gl_VERTEX_STREAM2_ATI = 0x876E
gl_QUAD_MESH_SUN :: GLenum
gl_QUAD_MESH_SUN = 0x8614
gl_COMPRESSED_RG_RGTC2 :: GLenum
gl_COMPRESSED_RG_RGTC2 = 0x8DBD
gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC
gl_INVARIANT_DATATYPE_EXT :: GLenum
gl_INVARIANT_DATATYPE_EXT = 0x87EB
gl_VERTEX_STREAM0_ATI :: GLenum
gl_VERTEX_STREAM0_ATI = 0x876C
gl_MAX_CUBE_MAP_TEXTURE_SIZE_EXT :: GLenum
gl_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C
gl_RGBA32UI :: GLenum
gl_RGBA32UI = 0x8D70
gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS :: GLenum
gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83
gl_INT8_VEC2_NV :: GLenum
gl_INT8_VEC2_NV = 0x8FE1
gl_COMPRESSED_SIGNED_RED_RGTC1_EXT :: GLenum
gl_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC
gl_EDGE_FLAG :: GLenum
gl_EDGE_FLAG = 0x0B43
gl_MAX_PROGRAM_LOOP_DEPTH_NV :: GLenum
gl_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7
gl_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI :: GLenum
gl_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000
gl_LUMINANCE16_ALPHA16_EXT :: GLenum
gl_LUMINANCE16_ALPHA16_EXT = 0x8048
gl_MAX_SHADER_BUFFER_ADDRESS_NV :: GLenum
gl_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35
gl_POINT_SIZE_RANGE :: GLenum
gl_POINT_SIZE_RANGE = 0x0B12
gl_COMBINER_CD_OUTPUT_NV :: GLenum
gl_COMBINER_CD_OUTPUT_NV = 0x854B
gl_COMPATIBLE_SUBROUTINES :: GLenum
gl_COMPATIBLE_SUBROUTINES = 0x8E4B
gl_CLIPPING_INPUT_PRIMITIVES_ARB :: GLenum
gl_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6
gl_SIGNED_HILO8_NV :: GLenum
gl_SIGNED_HILO8_NV = 0x885F
gl_NOOP :: GLenum
gl_NOOP = 0x1505
gl_GEOMETRY_OUTPUT_TYPE :: GLenum
gl_GEOMETRY_OUTPUT_TYPE = 0x8918
gl_LUMINANCE8_ALPHA8_EXT :: GLenum
gl_LUMINANCE8_ALPHA8_EXT = 0x8045
gl_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV :: GLenum
gl_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033
gl_VERTEX_WEIGHT_ARRAY_SIZE_EXT :: GLenum
gl_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D
gl_SYNC_FLAGS_APPLE :: GLenum
gl_SYNC_FLAGS_APPLE = 0x9115
gl_UNPACK_SKIP_ROWS_EXT :: GLenum
gl_UNPACK_SKIP_ROWS_EXT = 0x0CF3
gl_ALPHA_INTEGER_EXT :: GLenum
gl_ALPHA_INTEGER_EXT = 0x8D97
gl_QUERY_KHR :: GLenum
gl_QUERY_KHR = 0x82E3
gl_PIXEL_TILE_GRID_HEIGHT_SGIX :: GLenum
gl_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143
gl_BLEND_EQUATION_ALPHA_EXT :: GLenum
gl_BLEND_EQUATION_ALPHA_EXT = 0x883D
gl_PERCENTAGE_AMD :: GLenum
gl_PERCENTAGE_AMD = 0x8BC3
gl_SMOOTH_POINT_SIZE_RANGE :: GLenum
gl_SMOOTH_POINT_SIZE_RANGE = 0x0B12
gl_QUERY_RESULT_AVAILABLE_ARB :: GLenum
gl_QUERY_RESULT_AVAILABLE_ARB = 0x8867
gl_MAP1_NORMAL :: GLenum
gl_MAP1_NORMAL = 0x0D92
gl_MULT :: GLenum
gl_MULT = 0x0103
gl_HISTOGRAM_GREEN_SIZE_EXT :: GLenum
gl_HISTOGRAM_GREEN_SIZE_EXT = 0x8029
gl_CLIP_DISTANCE6 :: GLenum
gl_CLIP_DISTANCE6 = 0x3006
gl_TEXTURE_4DSIZE_SGIS :: GLenum
gl_TEXTURE_4DSIZE_SGIS = 0x8136
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A
gl_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7
gl_COMPUTE_SUBROUTINE_UNIFORM :: GLenum
gl_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3
gl_PIXEL_TILE_CACHE_INCREMENT_SGIX :: GLenum
gl_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F
gl_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV :: GLenum
gl_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034
gl_COORD_REPLACE_OES :: GLenum
gl_COORD_REPLACE_OES = 0x8862
gl_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX :: GLenum
gl_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = 0x8314
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C
gl_INDEX_ARRAY_POINTER_EXT :: GLenum
gl_INDEX_ARRAY_POINTER_EXT = 0x8091
gl_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB :: GLenum
gl_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B
gl_TEXTURE_BINDING_3D :: GLenum
gl_TEXTURE_BINDING_3D = 0x806A
gl_DRAW_BUFFER12_ARB :: GLenum
gl_DRAW_BUFFER12_ARB = 0x8831
gl_INTENSITY32UI_EXT :: GLenum
gl_INTENSITY32UI_EXT = 0x8D73
gl_TRANSFORM_FEEDBACK_VARYINGS_NV :: GLenum
gl_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83
gl_SIGNED_LUMINANCE8_NV :: GLenum
gl_SIGNED_LUMINANCE8_NV = 0x8702
gl_ALL_BARRIER_BITS :: GLenum
gl_ALL_BARRIER_BITS = 0xFFFFFFFF
gl_MAX_TEXTURE_BUFFER_SIZE_EXT :: GLenum
gl_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B
gl_YCBAYCR8A_4224_NV :: GLenum
gl_YCBAYCR8A_4224_NV = 0x9032
gl_UNIFORM_BLOCK_INDEX :: GLenum
gl_UNIFORM_BLOCK_INDEX = 0x8A3A
gl_TESS_GEN_SPACING :: GLenum
gl_TESS_GEN_SPACING = 0x8E77
gl_PIXEL_MAP_I_TO_G :: GLenum
gl_PIXEL_MAP_I_TO_G = 0x0C73
gl_TEXTURE_CONSTANT_DATA_SUNX :: GLenum
gl_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6
gl_TEXTURE_RED_SIZE_EXT :: GLenum
gl_TEXTURE_RED_SIZE_EXT = 0x805C
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS :: GLenum
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1
gl_MODELVIEW30_ARB :: GLenum
gl_MODELVIEW30_ARB = 0x873E
gl_WEIGHT_ARRAY_STRIDE_OES :: GLenum
gl_WEIGHT_ARRAY_STRIDE_OES = 0x86AA
gl_EVAL_BIT :: GLenum
gl_EVAL_BIT = 0x00010000
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85
gl_COMPRESSED_SRGB8_ETC2 :: GLenum
gl_COMPRESSED_SRGB8_ETC2 = 0x9275
gl_VERTEX_SHADER_VARIANTS_EXT :: GLenum
gl_VERTEX_SHADER_VARIANTS_EXT = 0x87D0
gl_IMAGE_PIXEL_FORMAT :: GLenum
gl_IMAGE_PIXEL_FORMAT = 0x82A9
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80
gl_TRANSFORM_FEEDBACK_VARYING :: GLenum
gl_TRANSFORM_FEEDBACK_VARYING = 0x92F4
gl_BLUE_MAX_CLAMP_INGR :: GLenum
gl_BLUE_MAX_CLAMP_INGR = 0x8566
gl_LUMINANCE_ALPHA_FLOAT32_APPLE :: GLenum
gl_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819
gl_VERTEX_ATTRIB_ARRAY11_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY11_NV = 0x865B
gl_ALPHA8UI_EXT :: GLenum
gl_ALPHA8UI_EXT = 0x8D7E
gl_MAX_VERTEX_ATOMIC_COUNTERS :: GLenum
gl_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2
gl_TEXTURE_BUFFER_BINDING :: GLenum
gl_TEXTURE_BUFFER_BINDING = 0x8C2A
gl_DEBUG_SOURCE_SHADER_COMPILER_ARB :: GLenum
gl_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248
gl_COLOR_ATTACHMENT7_EXT :: GLenum
gl_COLOR_ATTACHMENT7_EXT = 0x8CE7
gl_DECR :: GLenum
gl_DECR = 0x1E03
gl_ACTIVE_VARIABLES :: GLenum
gl_ACTIVE_VARIABLES = 0x9305
gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = 0x8E86
gl_ALPHA16F_EXT :: GLenum
gl_ALPHA16F_EXT = 0x881C
gl_SAMPLES_EXT :: GLenum
gl_SAMPLES_EXT = 0x80A9
gl_GPU_OPTIMIZED_QCOM :: GLenum
gl_GPU_OPTIMIZED_QCOM = 0x8FB2
gl_RGB2_EXT :: GLenum
gl_RGB2_EXT = 0x804E
gl_TEXTURE_BINDING_2D_MULTISAMPLE :: GLenum
gl_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104
gl_NO_RESET_NOTIFICATION_ARB :: GLenum
gl_NO_RESET_NOTIFICATION_ARB = 0x8261
gl_UNSIGNALED :: GLenum
gl_UNSIGNALED = 0x9118
gl_RGB9_E5_APPLE :: GLenum
gl_RGB9_E5_APPLE = 0x8C3D
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB :: GLenum
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF
gl_NEGATIVE_ONE_TO_ONE :: GLenum
gl_NEGATIVE_ONE_TO_ONE = 0x935E
gl_DRAW_BUFFER5_ARB :: GLenum
gl_DRAW_BUFFER5_ARB = 0x882A
gl_RGBA16F :: GLenum
gl_RGBA16F = 0x881A
gl_EYE_RADIAL_NV :: GLenum
gl_EYE_RADIAL_NV = 0x855B
gl_LINE_WIDTH_GRANULARITY :: GLenum
gl_LINE_WIDTH_GRANULARITY = 0x0B23
gl_GLYPH_HAS_KERNING_BIT_NV :: GLenum
gl_GLYPH_HAS_KERNING_BIT_NV = 0x100
gl_COMPARE_REF_TO_TEXTURE :: GLenum
gl_COMPARE_REF_TO_TEXTURE = 0x884E
gl_COMPRESSED_RGBA_ASTC_5x5x4_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_5x5x4_OES = 0x93C5
gl_BLOCK_INDEX :: GLenum
gl_BLOCK_INDEX = 0x92FD
gl_PRIMITIVE_RESTART_INDEX_NV :: GLenum
gl_PRIMITIVE_RESTART_INDEX_NV = 0x8559
gl_BLEND :: GLenum
gl_BLEND = 0x0BE2
gl_TEXTURE_DEPTH :: GLenum
gl_TEXTURE_DEPTH = 0x8071
gl_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV :: GLenum
gl_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE
gl_RENDERBUFFER_HEIGHT :: GLenum
gl_RENDERBUFFER_HEIGHT = 0x8D43
gl_SLUMINANCE8_NV :: GLenum
gl_SLUMINANCE8_NV = 0x8C47
gl_ALPHA8_OES :: GLenum
gl_ALPHA8_OES = 0x803C
gl_R16F :: GLenum
gl_R16F = 0x822D
gl_OBJECT_DISTANCE_TO_POINT_SGIS :: GLenum
gl_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1
gl_TEXTURE_STENCIL_SIZE_EXT :: GLenum
gl_TEXTURE_STENCIL_SIZE_EXT = 0x88F1
gl_INDEX_ARRAY_STRIDE :: GLenum
gl_INDEX_ARRAY_STRIDE = 0x8086
gl_RENDERBUFFER_BINDING_ANGLE :: GLenum
gl_RENDERBUFFER_BINDING_ANGLE = 0x8CA7
gl_SMOOTH :: GLenum
gl_SMOOTH = 0x1D01
gl_VERTEX_BINDING_OFFSET :: GLenum
gl_VERTEX_BINDING_OFFSET = 0x82D7
gl_ONE_MINUS_SRC_ALPHA :: GLenum
gl_ONE_MINUS_SRC_ALPHA = 0x0303
gl_DEBUG_TYPE_OTHER_KHR :: GLenum
gl_DEBUG_TYPE_OTHER_KHR = 0x8251
gl_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV :: GLenum
gl_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868
gl_PACK_SKIP_VOLUMES_SGIS :: GLenum
gl_PACK_SKIP_VOLUMES_SGIS = 0x8130
gl_SKIP_COMPONENTS3_NV :: GLenum
gl_SKIP_COMPONENTS3_NV = -4
gl_COLOR_ARRAY_TYPE :: GLenum
gl_COLOR_ARRAY_TYPE = 0x8082
gl_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV :: GLenum
gl_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD
gl_PRIMITIVE_BOUNDING_BOX_EXT :: GLenum
gl_PRIMITIVE_BOUNDING_BOX_EXT = 0x92BE
gl_CON_15_ATI :: GLenum
gl_CON_15_ATI = 0x8950
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV :: GLenum
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C
gl_ADD_SIGNED :: GLenum
gl_ADD_SIGNED = 0x8574
gl_OUTPUT_TEXTURE_COORD8_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5
gl_COLOR_ATTACHMENT4 :: GLenum
gl_COLOR_ATTACHMENT4 = 0x8CE4
gl_SAMPLE_ALPHA_TO_MASK_SGIS :: GLenum
gl_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E
gl_ONE_MINUS_CONSTANT_ALPHA_EXT :: GLenum
gl_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004
gl_ACTIVE_SUBROUTINE_UNIFORMS :: GLenum
gl_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6
gl_MAP1_VERTEX_4 :: GLenum
gl_MAP1_VERTEX_4 = 0x0D98
gl_DEPTH_BOUNDS_EXT :: GLenum
gl_DEPTH_BOUNDS_EXT = 0x8891
gl_OUTPUT_TEXTURE_COORD29_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA
gl_FONT_UNAVAILABLE_NV :: GLenum
gl_FONT_UNAVAILABLE_NV = 0x936A
gl_MATRIX0_NV :: GLenum
gl_MATRIX0_NV = 0x8630
gl_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX :: GLenum
gl_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = 0x8187
gl_COMBINER3_NV :: GLenum
gl_COMBINER3_NV = 0x8553
gl_SAMPLER_2D_ARRAY_EXT :: GLenum
gl_SAMPLER_2D_ARRAY_EXT = 0x8DC1
gl_MAP2_TEXTURE_COORD_3 :: GLenum
gl_MAP2_TEXTURE_COORD_3 = 0x0DB5
gl_DST_ATOP_NV :: GLenum
gl_DST_ATOP_NV = 0x928F
gl_TEXTURE_GEQUAL_R_SGIX :: GLenum
gl_TEXTURE_GEQUAL_R_SGIX = 0x819D
gl_TEXTURE20_ARB :: GLenum
gl_TEXTURE20_ARB = 0x84D4
gl_COMBINER_SCALE_NV :: GLenum
gl_COMBINER_SCALE_NV = 0x8548
gl_ACTIVE_PROGRAM :: GLenum
gl_ACTIVE_PROGRAM = 0x8259
gl_PATH_MAX_MODELVIEW_STACK_DEPTH_NV :: GLenum
gl_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET :: GLenum
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = 0x93E8
gl_WRITE_ONLY_OES :: GLenum
gl_WRITE_ONLY_OES = 0x88B9
gl_ALLOW_DRAW_OBJ_HINT_PGI :: GLenum
gl_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E
gl_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP :: GLenum
gl_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163
gl_MAX_VERTEX_VARYING_COMPONENTS_EXT :: GLenum
gl_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE
gl_VERTEX_ARRAY :: GLenum
gl_VERTEX_ARRAY = 0x8074
gl_CON_0_ATI :: GLenum
gl_CON_0_ATI = 0x8941
gl_UNPACK_ROW_BYTES_APPLE :: GLenum
gl_UNPACK_ROW_BYTES_APPLE = 0x8A16
gl_COLOR_ARRAY_POINTER :: GLenum
gl_COLOR_ARRAY_POINTER = 0x8090
gl_OPERAND1_RGB :: GLenum
gl_OPERAND1_RGB = 0x8591
gl_CURRENT_QUERY :: GLenum
gl_CURRENT_QUERY = 0x8865
gl_RELATIVE_LARGE_CW_ARC_TO_NV :: GLenum
gl_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19
gl_MAP2_TANGENT_EXT :: GLenum
gl_MAP2_TANGENT_EXT = 0x8445
gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7
gl_STREAM_DRAW :: GLenum
gl_STREAM_DRAW = 0x88E0
gl_QUAD_LUMINANCE8_SGIS :: GLenum
gl_QUAD_LUMINANCE8_SGIS = 0x8121
gl_MULTISAMPLE_BUFFER_BIT5_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT5_QCOM = 0x20000000
gl_GREEN :: GLenum
gl_GREEN = 0x1904
gl_COLOR_INDEX4_EXT :: GLenum
gl_COLOR_INDEX4_EXT = 0x80E4
gl_CND0_ATI :: GLenum
gl_CND0_ATI = 0x896B
gl_EQUIV :: GLenum
gl_EQUIV = 0x1509
gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS :: GLenum
gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89
gl_GEOMETRY_SHADER_BIT_EXT :: GLenum
gl_GEOMETRY_SHADER_BIT_EXT = 0x00000004
gl_REPLACEMENT_CODE_ARRAY_TYPE_SUN :: GLenum
gl_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1
gl_PACK_SKIP_IMAGES_EXT :: GLenum
gl_PACK_SKIP_IMAGES_EXT = 0x806B
gl_IMAGE_CLASS_11_11_10 :: GLenum
gl_IMAGE_CLASS_11_11_10 = 0x82C2
gl_2PASS_1_EXT :: GLenum
gl_2PASS_1_EXT = 0x80A3
gl_AND_INVERTED :: GLenum
gl_AND_INVERTED = 0x1504
gl_NOR :: GLenum
gl_NOR = 0x1508
gl_SAMPLE_COVERAGE_INVERT :: GLenum
gl_SAMPLE_COVERAGE_INVERT = 0x80AB
gl_FONT_X_MAX_BOUNDS_BIT_NV :: GLenum
gl_FONT_X_MAX_BOUNDS_BIT_NV = 0x00040000
gl_MAX_PROGRAM_PATCH_ATTRIBS_NV :: GLenum
gl_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8
gl_DOUBLE_MAT3x2_EXT :: GLenum
gl_DOUBLE_MAT3x2_EXT = 0x8F4B
gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A
gl_DOT2_ADD_ATI :: GLenum
gl_DOT2_ADD_ATI = 0x896C
gl_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX :: GLenum
gl_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409
gl_WEIGHT_SUM_UNITY_ARB :: GLenum
gl_WEIGHT_SUM_UNITY_ARB = 0x86A6
gl_TESS_CONTROL_OUTPUT_VERTICES_EXT :: GLenum
gl_TESS_CONTROL_OUTPUT_VERTICES_EXT = 0x8E75
gl_EVAL_VERTEX_ATTRIB9_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB9_NV = 0x86CF
gl_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA
gl_DEPTH_TEXTURE_MODE_ARB :: GLenum
gl_DEPTH_TEXTURE_MODE_ARB = 0x884B
gl_TEXTURE_BINDING_1D :: GLenum
gl_TEXTURE_BINDING_1D = 0x8068
gl_MAP_WRITE_BIT_EXT :: GLenum
gl_MAP_WRITE_BIT_EXT = 0x0002
gl_LINE_STIPPLE :: GLenum
gl_LINE_STIPPLE = 0x0B24
gl_RGB32UI_EXT :: GLenum
gl_RGB32UI_EXT = 0x8D71
gl_OP_DOT3_EXT :: GLenum
gl_OP_DOT3_EXT = 0x8784
gl_DEPTH_SCALE :: GLenum
gl_DEPTH_SCALE = 0x0D1E
gl_FRAGMENT_INTERPOLATION_OFFSET_BITS :: GLenum
gl_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D
gl_LINE_LOOP :: GLenum
gl_LINE_LOOP = 0x0002
gl_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI :: GLenum
gl_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973
gl_QUERY_BY_REGION_NO_WAIT_NV :: GLenum
gl_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16
gl_INDEX_MATERIAL_EXT :: GLenum
gl_INDEX_MATERIAL_EXT = 0x81B8
gl_TEXTURE_BORDER_COLOR :: GLenum
gl_TEXTURE_BORDER_COLOR = 0x1004
gl_UNPACK_RESAMPLE_OML :: GLenum
gl_UNPACK_RESAMPLE_OML = 0x8985
gl_ARRAY_BUFFER :: GLenum
gl_ARRAY_BUFFER = 0x8892
gl_VIRTUAL_PAGE_SIZE_X_ARB :: GLenum
gl_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195
gl_MAX_DEPTH_TEXTURE_SAMPLES :: GLenum
gl_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F
gl_MAP1_TEXTURE_COORD_3 :: GLenum
gl_MAP1_TEXTURE_COORD_3 = 0x0D95
gl_TEXTURE_COLOR_WRITEMASK_SGIS :: GLenum
gl_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF
gl_COMPRESSED_RGBA_ASTC_4x4x3_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_4x4x3_OES = 0x93C2
gl_FIXED :: GLenum
gl_FIXED = 0x140C
gl_COLOR_TABLE_INTENSITY_SIZE :: GLenum
gl_COLOR_TABLE_INTENSITY_SIZE = 0x80DF
gl_UNIFORM_BLOCK_BINDING :: GLenum
gl_UNIFORM_BLOCK_BINDING = 0x8A3F
gl_SHADER_STORAGE_BUFFER :: GLenum
gl_SHADER_STORAGE_BUFFER = 0x90D2
gl_DEBUG_CATEGORY_API_ERROR_AMD :: GLenum
gl_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149
gl_COMPRESSED_SRGB_S3TC_DXT1_NV :: GLenum
gl_COMPRESSED_SRGB_S3TC_DXT1_NV = 0x8C4C
gl_TEXTURE_CROP_RECT_OES :: GLenum
gl_TEXTURE_CROP_RECT_OES = 0x8B9D
gl_UNSIGNED_INT64_VEC2_NV :: GLenum
gl_UNSIGNED_INT64_VEC2_NV = 0x8FF5
gl_SOURCE2_RGB_EXT :: GLenum
gl_SOURCE2_RGB_EXT = 0x8582
gl_COVERAGE_MODULATION_TABLE_NV :: GLenum
gl_COVERAGE_MODULATION_TABLE_NV = 0x9331
gl_TEXTURE_WRAP_T :: GLenum
gl_TEXTURE_WRAP_T = 0x2803
gl_GENERATE_MIPMAP :: GLenum
gl_GENERATE_MIPMAP = 0x8191
gl_RENDERBUFFER_COLOR_SAMPLES_NV :: GLenum
gl_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10
gl_PIXEL_PACK_BUFFER_EXT :: GLenum
gl_PIXEL_PACK_BUFFER_EXT = 0x88EB
gl_R8 :: GLenum
gl_R8 = 0x8229
gl_UNIFORM_BLOCK :: GLenum
gl_UNIFORM_BLOCK = 0x92E2
gl_VERTEX_ATTRIB_ARRAY9_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY9_NV = 0x8659
gl_REFLECTION_MAP_NV :: GLenum
gl_REFLECTION_MAP_NV = 0x8512
gl_CONSTANT_EXT :: GLenum
gl_CONSTANT_EXT = 0x8576
gl_DUP_FIRST_CUBIC_CURVE_TO_NV :: GLenum
gl_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2
gl_RGBA_INTEGER :: GLenum
gl_RGBA_INTEGER = 0x8D99
gl_GEOMETRY_OUTPUT_TYPE_EXT :: GLenum
gl_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC
gl_RGBA_INTEGER_MODE_EXT :: GLenum
gl_RGBA_INTEGER_MODE_EXT = 0x8D9E
gl_PLUS_CLAMPED_NV :: GLenum
gl_PLUS_CLAMPED_NV = 0x92B1
gl_IMAGE_TRANSLATE_Y_HP :: GLenum
gl_IMAGE_TRANSLATE_Y_HP = 0x8158
gl_COPY_INVERTED :: GLenum
gl_COPY_INVERTED = 0x150C
gl_DOT_PRODUCT_TEXTURE_RECTANGLE_NV :: GLenum
gl_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E
gl_TRANSFORM_FEEDBACK_BARRIER_BIT :: GLenum
gl_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800
gl_POST_COLOR_MATRIX_GREEN_SCALE :: GLenum
gl_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5
gl_UNSIGNED_INT_SAMPLER_1D_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1
gl_TEXTURE_1D_BINDING_EXT :: GLenum
gl_TEXTURE_1D_BINDING_EXT = 0x8068
gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: GLenum
gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277
gl_READ_BUFFER_NV :: GLenum
gl_READ_BUFFER_NV = 0x0C02
gl_DEPTH_STENCIL_ATTACHMENT :: GLenum
gl_DEPTH_STENCIL_ATTACHMENT = 0x821A
gl_PROGRAM_MATRIX_STACK_DEPTH_EXT :: GLenum
gl_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F
gl_COMBINER1_NV :: GLenum
gl_COMBINER1_NV = 0x8551
gl_BEVEL_NV :: GLenum
gl_BEVEL_NV = 0x90A6
gl_DUP_LAST_CUBIC_CURVE_TO_NV :: GLenum
gl_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4
gl_FACTOR_ALPHA_MODULATE_IMG :: GLenum
gl_FACTOR_ALPHA_MODULATE_IMG = 0x8C07
gl_NATIVE_GRAPHICS_HANDLE_PGI :: GLenum
gl_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202
gl_NEXT_BUFFER_NV :: GLenum
gl_NEXT_BUFFER_NV = -2
gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24
gl_STENCIL_BUFFER_BIT6_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT6_QCOM = 0x00400000
gl_TEXTURE :: GLenum
gl_TEXTURE = 0x1702
gl_DRAW_FRAMEBUFFER :: GLenum
gl_DRAW_FRAMEBUFFER = 0x8CA9
gl_BLEND_SRC_RGB_EXT :: GLenum
gl_BLEND_SRC_RGB_EXT = 0x80C9
gl_RED_INTEGER :: GLenum
gl_RED_INTEGER = 0x8D94
gl_SLUMINANCE8_ALPHA8_EXT :: GLenum
gl_SLUMINANCE8_ALPHA8_EXT = 0x8C45
gl_COMPILE_AND_EXECUTE :: GLenum
gl_COMPILE_AND_EXECUTE = 0x1301
gl_MIN_SAMPLE_SHADING_VALUE_ARB :: GLenum
gl_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37
gl_PACK_COMPRESSED_BLOCK_WIDTH :: GLenum
gl_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B
gl_DEPTH_STENCIL_TO_BGRA_NV :: GLenum
gl_DEPTH_STENCIL_TO_BGRA_NV = 0x886F
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1
gl_PARAMETER_BUFFER_BINDING_ARB :: GLenum
gl_PARAMETER_BUFFER_BINDING_ARB = 0x80EF
gl_TEXTURE_RECTANGLE_ARB :: GLenum
gl_TEXTURE_RECTANGLE_ARB = 0x84F5
gl_TESS_EVALUATION_SUBROUTINE_UNIFORM :: GLenum
gl_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0
gl_ROUNDED_RECT2_NV :: GLenum
gl_ROUNDED_RECT2_NV = 0xEA
gl_CULL_FACE_MODE :: GLenum
gl_CULL_FACE_MODE = 0x0B45
gl_REFERENCED_BY_GEOMETRY_SHADER :: GLenum
gl_REFERENCED_BY_GEOMETRY_SHADER = 0x9309
gl_VIEW_CLASS_128_BITS :: GLenum
gl_VIEW_CLASS_128_BITS = 0x82C4
gl_LINEAR_CLIPMAP_LINEAR_SGIX :: GLenum
gl_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170
gl_PROJECTION :: GLenum
gl_PROJECTION = 0x1701
gl_LUMINANCE_ALPHA32I_EXT :: GLenum
gl_LUMINANCE_ALPHA32I_EXT = 0x8D87
gl_NORMAL_ARRAY_LENGTH_NV :: GLenum
gl_NORMAL_ARRAY_LENGTH_NV = 0x8F2C
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 0x8CD2
gl_PATH_TRANSPOSE_PROJECTION_MATRIX_NV :: GLenum
gl_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4
gl_MAP2_BINORMAL_EXT :: GLenum
gl_MAP2_BINORMAL_EXT = 0x8447
gl_STENCIL_INDEX1_EXT :: GLenum
gl_STENCIL_INDEX1_EXT = 0x8D46
gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT :: GLenum
gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F
gl_RGB32UI :: GLenum
gl_RGB32UI = 0x8D71
gl_GEOMETRY_DEFORMATION_BIT_SGIX :: GLenum
gl_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002
gl_FRAMEBUFFER_OES :: GLenum
gl_FRAMEBUFFER_OES = 0x8D40
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT :: GLenum
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = 0x88FE
gl_MAX_ATTRIB_STACK_DEPTH :: GLenum
gl_MAX_ATTRIB_STACK_DEPTH = 0x0D35
gl_LUMINANCE_INTEGER_EXT :: GLenum
gl_LUMINANCE_INTEGER_EXT = 0x8D9C
gl_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7
gl_DISTANCE_ATTENUATION_SGIS :: GLenum
gl_DISTANCE_ATTENUATION_SGIS = 0x8129
gl_SELECTION_BUFFER_SIZE :: GLenum
gl_SELECTION_BUFFER_SIZE = 0x0DF4
gl_SRC1_RGB :: GLenum
gl_SRC1_RGB = 0x8581
gl_FETCH_PER_SAMPLE_ARM :: GLenum
gl_FETCH_PER_SAMPLE_ARM = 0x8F65
gl_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY :: GLenum
gl_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103
gl_LUMINANCE8_OES :: GLenum
gl_LUMINANCE8_OES = 0x8040
gl_SRGB_READ :: GLenum
gl_SRGB_READ = 0x8297
gl_SKIP_COMPONENTS1_NV :: GLenum
gl_SKIP_COMPONENTS1_NV = -6
gl_PIXEL_COUNT_AVAILABLE_NV :: GLenum
gl_PIXEL_COUNT_AVAILABLE_NV = 0x8867
gl_TEXTURE_CLIPMAP_FRAME_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC
gl_MAX_PROGRAM_LOCAL_PARAMETERS_ARB :: GLenum
gl_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4
gl_QUAD_LUMINANCE4_SGIS :: GLenum
gl_QUAD_LUMINANCE4_SGIS = 0x8120
gl_VERTEX_ATTRIB_MAP2_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01
gl_VIEW_CLASS_32_BITS :: GLenum
gl_VIEW_CLASS_32_BITS = 0x82C8
gl_SLIM12S_SGIX :: GLenum
gl_SLIM12S_SGIX = 0x831F
gl_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV :: GLenum
gl_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = 0x9348
gl_FRAMEBUFFER_DEFAULT :: GLenum
gl_FRAMEBUFFER_DEFAULT = 0x8218
gl_FLOAT_MAT2x3_NV :: GLenum
gl_FLOAT_MAT2x3_NV = 0x8B65
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0
gl_ZERO :: GLenum
gl_ZERO = 0
gl_INVERSE_NV :: GLenum
gl_INVERSE_NV = 0x862B
gl_ONE_MINUS_DST_ALPHA :: GLenum
gl_ONE_MINUS_DST_ALPHA = 0x0305
gl_MOVE_TO_NV :: GLenum
gl_MOVE_TO_NV = 0x02
gl_CLIP_DISTANCE_NV :: GLenum
gl_CLIP_DISTANCE_NV = 0x8C7A
gl_DEPTH_COMPONENT32_OES :: GLenum
gl_DEPTH_COMPONENT32_OES = 0x81A7
gl_OPERAND3_RGB_NV :: GLenum
gl_OPERAND3_RGB_NV = 0x8593
gl_PIXEL_MAP_I_TO_R :: GLenum
gl_PIXEL_MAP_I_TO_R = 0x0C72
gl_RGBA16_EXT :: GLenum
gl_RGBA16_EXT = 0x805B
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF
gl_TEXTURE_FILTER_CONTROL :: GLenum
gl_TEXTURE_FILTER_CONTROL = 0x8500
gl_LIGHTING_BIT :: GLenum
gl_LIGHTING_BIT = 0x00000040
gl_TEXTURE_RANGE_LENGTH_APPLE :: GLenum
gl_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7
gl_UNSIGNED_INT_24_8 :: GLenum
gl_UNSIGNED_INT_24_8 = 0x84FA
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = 0x8D6C
gl_ELEMENT_ARRAY_POINTER_ATI :: GLenum
gl_ELEMENT_ARRAY_POINTER_ATI = 0x876A
gl_LARGE_CW_ARC_TO_NV :: GLenum
gl_LARGE_CW_ARC_TO_NV = 0x18
gl_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT :: GLenum
gl_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE
gl_MAX_ASYNC_DRAW_PIXELS_SGIX :: GLenum
gl_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360
gl_BUFFER_MAPPED :: GLenum
gl_BUFFER_MAPPED = 0x88BC
gl_PRIMITIVE_RESTART_FIXED_INDEX :: GLenum
gl_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69
gl_VIEW_CLASS_BPTC_FLOAT :: GLenum
gl_VIEW_CLASS_BPTC_FLOAT = 0x82D3
gl_FOG_COORDINATE_ARRAY_EXT :: GLenum
gl_FOG_COORDINATE_ARRAY_EXT = 0x8457
gl_VERTEX_ARRAY_LIST_IBM :: GLenum
gl_VERTEX_ARRAY_LIST_IBM = 103070
gl_SPARE0_NV :: GLenum
gl_SPARE0_NV = 0x852E
gl_TEXTURE_LOD_BIAS :: GLenum
gl_TEXTURE_LOD_BIAS = 0x8501
gl_DRAW_BUFFER0_ATI :: GLenum
gl_DRAW_BUFFER0_ATI = 0x8825
gl_TEXTURE_ALPHA_SIZE :: GLenum
gl_TEXTURE_ALPHA_SIZE = 0x805F
gl_PATH_MODELVIEW_MATRIX_NV :: GLenum
gl_PATH_MODELVIEW_MATRIX_NV = 0x0BA6
gl_SAMPLES_PASSED :: GLenum
gl_SAMPLES_PASSED = 0x8914
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: GLenum
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243
gl_SMALL_CCW_ARC_TO_NV :: GLenum
gl_SMALL_CCW_ARC_TO_NV = 0x12
gl_SURFACE_REGISTERED_NV :: GLenum
gl_SURFACE_REGISTERED_NV = 0x86FD
gl_IMAGE_2D_MULTISAMPLE_ARRAY :: GLenum
gl_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056
gl_BOLD_BIT_NV :: GLenum
gl_BOLD_BIT_NV = 0x01
gl_SAMPLER_1D_ARRAY_SHADOW :: GLenum
gl_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3
gl_COMPRESSED_RGBA_ASTC_5x5x5_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_5x5x5_OES = 0x93C6
gl_SAMPLE_SHADING_ARB :: GLenum
gl_SAMPLE_SHADING_ARB = 0x8C36
gl_INTERNALFORMAT_BLUE_TYPE :: GLenum
gl_INTERNALFORMAT_BLUE_TYPE = 0x827A
gl_FRAMEBUFFER_BINDING_OES :: GLenum
gl_FRAMEBUFFER_BINDING_OES = 0x8CA6
gl_ALLOW_DRAW_WIN_HINT_PGI :: GLenum
gl_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F
gl_QUERY_BY_REGION_WAIT_INVERTED :: GLenum
gl_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19
gl_X_EXT :: GLenum
gl_X_EXT = 0x87D5
gl_COVERAGE_BUFFER_BIT_NV :: GLenum
gl_COVERAGE_BUFFER_BIT_NV = 0x00008000
gl_SMOOTH_CUBIC_CURVE_TO_NV :: GLenum
gl_SMOOTH_CUBIC_CURVE_TO_NV = 0x10
gl_IMAGE_CLASS_2_X_8 :: GLenum
gl_IMAGE_CLASS_2_X_8 = 0x82C0
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A
gl_SAMPLER_1D_SHADOW :: GLenum
gl_SAMPLER_1D_SHADOW = 0x8B61
gl_W_EXT :: GLenum
gl_W_EXT = 0x87D8
gl_DRAW_BUFFER4_EXT :: GLenum
gl_DRAW_BUFFER4_EXT = 0x8829
gl_OP_NEGATE_EXT :: GLenum
gl_OP_NEGATE_EXT = 0x8783
gl_MAX_IMAGE_UNITS :: GLenum
gl_MAX_IMAGE_UNITS = 0x8F38
gl_RENDERER :: GLenum
gl_RENDERER = 0x1F01
gl_COMPUTE_PROGRAM_NV :: GLenum
gl_COMPUTE_PROGRAM_NV = 0x90FB
gl_OBJECT_DELETE_STATUS_ARB :: GLenum
gl_OBJECT_DELETE_STATUS_ARB = 0x8B80
gl_PACK_RESAMPLE_SGIX :: GLenum
gl_PACK_RESAMPLE_SGIX = 0x842C
gl_DRAW_BUFFER4_NV :: GLenum
gl_DRAW_BUFFER4_NV = 0x8829
gl_VERTEX_SHADER_BIT_EXT :: GLenum
gl_VERTEX_SHADER_BIT_EXT = 0x00000001
gl_FIELD_LOWER_NV :: GLenum
gl_FIELD_LOWER_NV = 0x9023
gl_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV :: GLenum
gl_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1
gl_UNSIGNED_INT_SAMPLER_BUFFER_AMD :: GLenum
gl_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003
gl_CURRENT_VERTEX_ATTRIB :: GLenum
gl_CURRENT_VERTEX_ATTRIB = 0x8626
gl_INTERLEAVED_ATTRIBS_NV :: GLenum
gl_INTERLEAVED_ATTRIBS_NV = 0x8C8C
gl_ROUNDED_RECT8_NV :: GLenum
gl_ROUNDED_RECT8_NV = 0xEE
gl_PERFMON_RESULT_AVAILABLE_AMD :: GLenum
gl_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4
gl_INDEX_ARRAY_COUNT_EXT :: GLenum
gl_INDEX_ARRAY_COUNT_EXT = 0x8087
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = 0x93E4
gl_NAME_LENGTH :: GLenum
gl_NAME_LENGTH = 0x92F9
gl_STATIC_COPY :: GLenum
gl_STATIC_COPY = 0x88E6
gl_CLIP_DISTANCE2 :: GLenum
gl_CLIP_DISTANCE2 = 0x3002
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29
gl_CURRENT_FOG_COORDINATE_EXT :: GLenum
gl_CURRENT_FOG_COORDINATE_EXT = 0x8453
gl_DRAW_FRAMEBUFFER_BINDING_APPLE :: GLenum
gl_DRAW_FRAMEBUFFER_BINDING_APPLE = 0x8CA6
gl_DETAIL_TEXTURE_LEVEL_SGIS :: GLenum
gl_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A
gl_POST_CONVOLUTION_ALPHA_BIAS :: GLenum
gl_POST_CONVOLUTION_ALPHA_BIAS = 0x8023
gl_MAP2_VERTEX_ATTRIB8_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678
gl_TEXTURE_RED_TYPE_ARB :: GLenum
gl_TEXTURE_RED_TYPE_ARB = 0x8C10
gl_INTERNALFORMAT_ALPHA_TYPE :: GLenum
gl_INTERNALFORMAT_ALPHA_TYPE = 0x827B
gl_DISTANCE_ATTENUATION_EXT :: GLenum
gl_DISTANCE_ATTENUATION_EXT = 0x8129
gl_HALF_BIAS_NEGATE_NV :: GLenum
gl_HALF_BIAS_NEGATE_NV = 0x853B
gl_COLOR_INDEXES :: GLenum
gl_COLOR_INDEXES = 0x1603
gl_DRAW_BUFFER8_NV :: GLenum
gl_DRAW_BUFFER8_NV = 0x882D
gl_OUTPUT_TEXTURE_COORD5_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2
gl_MAP2_GRID_SEGMENTS :: GLenum
gl_MAP2_GRID_SEGMENTS = 0x0DD3
gl_LIGHT1 :: GLenum
gl_LIGHT1 = 0x4001
gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT :: GLenum
gl_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = 0x919F
gl_POINT_SPRITE :: GLenum
gl_POINT_SPRITE = 0x8861
gl_RENDERBUFFER_ALPHA_SIZE_OES :: GLenum
gl_RENDERBUFFER_ALPHA_SIZE_OES = 0x8D53
gl_CURRENT_QUERY_ARB :: GLenum
gl_CURRENT_QUERY_ARB = 0x8865
gl_SCALED_RESOLVE_FASTEST_EXT :: GLenum
gl_SCALED_RESOLVE_FASTEST_EXT = 0x90BA
gl_INT_SAMPLER_1D_ARRAY :: GLenum
gl_INT_SAMPLER_1D_ARRAY = 0x8DCE
gl_DEPTH_RENDERABLE :: GLenum
gl_DEPTH_RENDERABLE = 0x8287
gl_MINUS_CLAMPED_NV :: GLenum
gl_MINUS_CLAMPED_NV = 0x92B3
gl_DARKEN_KHR :: GLenum
gl_DARKEN_KHR = 0x9297
gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB :: GLenum
gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D
gl_PATCH_VERTICES :: GLenum
gl_PATCH_VERTICES = 0x8E72
gl_TEXTURE_FILTER4_SIZE_SGIS :: GLenum
gl_TEXTURE_FILTER4_SIZE_SGIS = 0x8147
gl_VERTEX_ATTRIB_ARRAY6_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY6_NV = 0x8656
gl_UNSIGNED_INT64_VEC4_NV :: GLenum
gl_UNSIGNED_INT64_VEC4_NV = 0x8FF7
gl_READ_WRITE_ARB :: GLenum
gl_READ_WRITE_ARB = 0x88BA
gl_CONVOLUTION_FORMAT :: GLenum
gl_CONVOLUTION_FORMAT = 0x8017
gl_POST_COLOR_MATRIX_COLOR_TABLE_SGI :: GLenum
gl_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV :: GLenum
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88
gl_R1UI_T2F_V3F_SUN :: GLenum
gl_R1UI_T2F_V3F_SUN = 0x85C9
gl_UNSIGNED_INT_VEC2_EXT :: GLenum
gl_UNSIGNED_INT_VEC2_EXT = 0x8DC6
gl_MAX_DEPTH :: GLenum
gl_MAX_DEPTH = 0x8280
gl_UNSIGNED_INT_10F_11F_11F_REV :: GLenum
gl_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B
gl_MULTISAMPLE_BUFFER_BIT6_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT6_QCOM = 0x40000000
gl_INT_IMAGE_CUBE_MAP_ARRAY_EXT :: GLenum
gl_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F
gl_CONSTANT_ALPHA :: GLenum
gl_CONSTANT_ALPHA = 0x8003
gl_PIXEL_MAG_FILTER_EXT :: GLenum
gl_PIXEL_MAG_FILTER_EXT = 0x8331
gl_BUFFER_ACCESS :: GLenum
gl_BUFFER_ACCESS = 0x88BB
gl_OBJECT_SHADER_SOURCE_LENGTH_ARB :: GLenum
gl_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88
gl_SIGNED_ALPHA_NV :: GLenum
gl_SIGNED_ALPHA_NV = 0x8705
gl_BUFFER_SIZE_ARB :: GLenum
gl_BUFFER_SIZE_ARB = 0x8764
gl_LAST_VIDEO_CAPTURE_STATUS_NV :: GLenum
gl_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027
gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS :: GLenum
gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D
gl_TEXTURE_FETCH_BARRIER_BIT_EXT :: GLenum
gl_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008
gl_UNSIGNED_BYTE_2_3_3_REV :: GLenum
gl_UNSIGNED_BYTE_2_3_3_REV = 0x8362
gl_MAX_COMBINED_IMAGE_UNIFORMS :: GLenum
gl_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF
gl_WEIGHT_ARRAY_BUFFER_BINDING_OES :: GLenum
gl_WEIGHT_ARRAY_BUFFER_BINDING_OES = 0x889E
gl_DEBUG_OBJECT_MESA :: GLenum
gl_DEBUG_OBJECT_MESA = 0x8759
gl_PROXY_TEXTURE_2D :: GLenum
gl_PROXY_TEXTURE_2D = 0x8064
gl_COLOR_TABLE_BLUE_SIZE_SGI :: GLenum
gl_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC
gl_ALPHA_FLOAT32_ATI :: GLenum
gl_ALPHA_FLOAT32_ATI = 0x8816
gl_TEXTURE_LUMINANCE_SIZE_EXT :: GLenum
gl_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060
gl_EXCLUSION_KHR :: GLenum
gl_EXCLUSION_KHR = 0x92A0
gl_ATOMIC_COUNTER_BUFFER_SIZE :: GLenum
gl_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3
gl_PROXY_TEXTURE_1D_STACK_MESAX :: GLenum
gl_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B
gl_MATRIX30_ARB :: GLenum
gl_MATRIX30_ARB = 0x88DE
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6
gl_TESS_CONTROL_TEXTURE :: GLenum
gl_TESS_CONTROL_TEXTURE = 0x829C
gl_VERTEX_ATTRIB_ARRAY_ENABLED :: GLenum
gl_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622
gl_RGB32I_EXT :: GLenum
gl_RGB32I_EXT = 0x8D83
gl_CON_23_ATI :: GLenum
gl_CON_23_ATI = 0x8958
gl_MAX_GEOMETRY_OUTPUT_COMPONENTS :: GLenum
gl_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124
gl_DEPTH_BUFFER_BIT0_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT0_QCOM = 0x00000100
gl_COLOR_TABLE_WIDTH_SGI :: GLenum
gl_COLOR_TABLE_WIDTH_SGI = 0x80D9
gl_UNSIGNED_INT_10_10_10_2_EXT :: GLenum
gl_UNSIGNED_INT_10_10_10_2_EXT = 0x8036
gl_PN_TRIANGLES_POINT_MODE_ATI :: GLenum
gl_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2
gl_COMPRESSED_RGBA_ASTC_12x12_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD
gl_STENCIL_VALUE_MASK :: GLenum
gl_STENCIL_VALUE_MASK = 0x0B93
gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F
gl_CONVOLUTION_1D :: GLenum
gl_CONVOLUTION_1D = 0x8010
gl_DEPTH_COMPONENT24_OES :: GLenum
gl_DEPTH_COMPONENT24_OES = 0x81A6
gl_FLOAT_RGBA_NV :: GLenum
gl_FLOAT_RGBA_NV = 0x8883
gl_UNPACK_COMPRESSED_BLOCK_SIZE :: GLenum
gl_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A
gl_COMPRESSED_RGBA_FXT1_3DFX :: GLenum
gl_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1
gl_FOG_COORDINATE_ARRAY_TYPE :: GLenum
gl_FOG_COORDINATE_ARRAY_TYPE = 0x8454
gl_CLIENT_PIXEL_STORE_BIT :: GLenum
gl_CLIENT_PIXEL_STORE_BIT = 0x00000001
gl_TEXCOORD2_BIT_PGI :: GLenum
gl_TEXCOORD2_BIT_PGI = 0x20000000
gl_COMPRESSED_RED_RGTC1 :: GLenum
gl_COMPRESSED_RED_RGTC1 = 0x8DBB
gl_SEPARABLE_2D_EXT :: GLenum
gl_SEPARABLE_2D_EXT = 0x8012
gl_COLOR3_BIT_PGI :: GLenum
gl_COLOR3_BIT_PGI = 0x00010000
gl_MULTISAMPLE_BIT_3DFX :: GLenum
gl_MULTISAMPLE_BIT_3DFX = 0x20000000
gl_DEPTH_SAMPLES_NV :: GLenum
gl_DEPTH_SAMPLES_NV = 0x932D
gl_MAX_RASTER_SAMPLES_EXT :: GLenum
gl_MAX_RASTER_SAMPLES_EXT = 0x9329
gl_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV :: GLenum
gl_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D
gl_BUFFER_VARIABLE :: GLenum
gl_BUFFER_VARIABLE = 0x92E5
gl_SAMPLER_2D_ARB :: GLenum
gl_SAMPLER_2D_ARB = 0x8B5E
gl_TEXTURE_COMPARE_FUNC_ARB :: GLenum
gl_TEXTURE_COMPARE_FUNC_ARB = 0x884D
gl_MIRRORED_REPEAT :: GLenum
gl_MIRRORED_REPEAT = 0x8370
gl_DEBUG_CALLBACK_USER_PARAM_KHR :: GLenum
gl_DEBUG_CALLBACK_USER_PARAM_KHR = 0x8245
gl_TRIANGLES_ADJACENCY_ARB :: GLenum
gl_TRIANGLES_ADJACENCY_ARB = 0x000C
gl_DEPTH_COMPONENT24_ARB :: GLenum
gl_DEPTH_COMPONENT24_ARB = 0x81A6
gl_FASTEST :: GLenum
gl_FASTEST = 0x1101
gl_BLUE_SCALE :: GLenum
gl_BLUE_SCALE = 0x0D1A
gl_TEXTURE_BLUE_TYPE_ARB :: GLenum
gl_TEXTURE_BLUE_TYPE_ARB = 0x8C12
gl_RGB10 :: GLenum
gl_RGB10 = 0x8052
gl_STENCIL_WRITEMASK :: GLenum
gl_STENCIL_WRITEMASK = 0x0B98
gl_STENCIL_EXT :: GLenum
gl_STENCIL_EXT = 0x1802
gl_PACK_IMAGE_DEPTH_SGIS :: GLenum
gl_PACK_IMAGE_DEPTH_SGIS = 0x8131
gl_CONTEXT_LOST_KHR :: GLenum
gl_CONTEXT_LOST_KHR = 0x0507
gl_FONT_MAX_ADVANCE_WIDTH_BIT_NV :: GLenum
gl_FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x01000000
gl_COLOR_CLEAR_UNCLAMPED_VALUE_ATI :: GLenum
gl_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835
gl_OUTPUT_TEXTURE_COORD27_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8
gl_UNSIGNED_INT_SAMPLER_CUBE :: GLenum
gl_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4
gl_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084
gl_DISJOINT_NV :: GLenum
gl_DISJOINT_NV = 0x9283
gl_DEBUG_CALLBACK_FUNCTION :: GLenum
gl_DEBUG_CALLBACK_FUNCTION = 0x8244
gl_VERTEX_ARRAY_EXT :: GLenum
gl_VERTEX_ARRAY_EXT = 0x8074
gl_DRAW_BUFFER0 :: GLenum
gl_DRAW_BUFFER0 = 0x8825
gl_ALPHA_SNORM :: GLenum
gl_ALPHA_SNORM = 0x9010
gl_MULTISAMPLE_BUFFER_BIT1_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT1_QCOM = 0x02000000
gl_TRANSPOSE_PROJECTION_MATRIX :: GLenum
gl_TRANSPOSE_PROJECTION_MATRIX = 0x84E4
gl_POST_COLOR_MATRIX_BLUE_BIAS :: GLenum
gl_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA
gl_TEXTURE_MULTI_BUFFER_HINT_SGIX :: GLenum
gl_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E
gl_PACK_COMPRESSED_SIZE_SGIX :: GLenum
gl_PACK_COMPRESSED_SIZE_SGIX = 0x831C
gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9
gl_TANGENT_ARRAY_STRIDE_EXT :: GLenum
gl_TANGENT_ARRAY_STRIDE_EXT = 0x843F
gl_TEXTURE_LOD_BIAS_EXT :: GLenum
gl_TEXTURE_LOD_BIAS_EXT = 0x8501
gl_UNSIGNED_INT8_VEC3_NV :: GLenum
gl_UNSIGNED_INT8_VEC3_NV = 0x8FEE
gl_IMAGE_CLASS_4_X_32 :: GLenum
gl_IMAGE_CLASS_4_X_32 = 0x82B9
gl_IMAGE_CLASS_1_X_8 :: GLenum
gl_IMAGE_CLASS_1_X_8 = 0x82C1
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9
gl_STENCIL_COMPONENTS :: GLenum
gl_STENCIL_COMPONENTS = 0x8285
gl_TEXTURE_RED_SIZE :: GLenum
gl_TEXTURE_RED_SIZE = 0x805C
gl_ACTIVE_VERTEX_UNITS_ARB :: GLenum
gl_ACTIVE_VERTEX_UNITS_ARB = 0x86A5
gl_RGBA32UI_EXT :: GLenum
gl_RGBA32UI_EXT = 0x8D70
gl_MAP1_VERTEX_ATTRIB15_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F
gl_DRAW_FRAMEBUFFER_APPLE :: GLenum
gl_DRAW_FRAMEBUFFER_APPLE = 0x8CA9
gl_MAX_TEXTURE_BUFFER_SIZE_ARB :: GLenum
gl_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B
gl_MATRIX_INDEX_ARRAY_ARB :: GLenum
gl_MATRIX_INDEX_ARRAY_ARB = 0x8844
gl_LUMINANCE6_ALPHA2 :: GLenum
gl_LUMINANCE6_ALPHA2 = 0x8044
gl_PROGRAM_NATIVE_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2
gl_LINEAR_DETAIL_SGIS :: GLenum
gl_LINEAR_DETAIL_SGIS = 0x8097
gl_INT_SAMPLER_BUFFER_EXT :: GLenum
gl_INT_SAMPLER_BUFFER_EXT = 0x8DD0
gl_ALLOW_DRAW_FRG_HINT_PGI :: GLenum
gl_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210
gl_BOUNDING_BOX_NV :: GLenum
gl_BOUNDING_BOX_NV = 0x908D
gl_CURRENT_TANGENT_EXT :: GLenum
gl_CURRENT_TANGENT_EXT = 0x843B
gl_HISTOGRAM_FORMAT_EXT :: GLenum
gl_HISTOGRAM_FORMAT_EXT = 0x8027
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = 0x8CD4
gl_FLOAT_MAT2x4_NV :: GLenum
gl_FLOAT_MAT2x4_NV = 0x8B66
gl_WEIGHT_ARRAY_SIZE_ARB :: GLenum
gl_WEIGHT_ARRAY_SIZE_ARB = 0x86AB
gl_SAMPLER_BUFFER :: GLenum
gl_SAMPLER_BUFFER = 0x8DC2
gl_OPERAND1_ALPHA_EXT :: GLenum
gl_OPERAND1_ALPHA_EXT = 0x8599
gl_DYNAMIC_COPY_ARB :: GLenum
gl_DYNAMIC_COPY_ARB = 0x88EA
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR :: GLenum
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D
gl_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV :: GLenum
gl_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010
gl_NUM_SPARSE_LEVELS_ARB :: GLenum
gl_NUM_SPARSE_LEVELS_ARB = 0x91AA
gl_NEAREST_MIPMAP_LINEAR :: GLenum
gl_NEAREST_MIPMAP_LINEAR = 0x2702
gl_RENDERBUFFER_SAMPLES_NV :: GLenum
gl_RENDERBUFFER_SAMPLES_NV = 0x8CAB
gl_HALF_APPLE :: GLenum
gl_HALF_APPLE = 0x140B
gl_CURRENT_MATRIX_NV :: GLenum
gl_CURRENT_MATRIX_NV = 0x8641
gl_INCR :: GLenum
gl_INCR = 0x1E02
gl_TEXTURE_CUBE_MAP :: GLenum
gl_TEXTURE_CUBE_MAP = 0x8513
gl_RGB32F_ARB :: GLenum
gl_RGB32F_ARB = 0x8815
gl_SUPERSAMPLE_SCALE_X_NV :: GLenum
gl_SUPERSAMPLE_SCALE_X_NV = 0x9372
gl_MAP1_VERTEX_ATTRIB0_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660
gl_TRANSPOSE_MODELVIEW_MATRIX_ARB :: GLenum
gl_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3
gl_FRAMEBUFFER_UNSUPPORTED_EXT :: GLenum
gl_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD
gl_DOT4_ATI :: GLenum
gl_DOT4_ATI = 0x8967
gl_MAP1_TANGENT_EXT :: GLenum
gl_MAP1_TANGENT_EXT = 0x8444
gl_INTERNALFORMAT_STENCIL_SIZE :: GLenum
gl_INTERNALFORMAT_STENCIL_SIZE = 0x8276
gl_SHADER_IMAGE_STORE :: GLenum
gl_SHADER_IMAGE_STORE = 0x82A5
gl_TEXTURE15_ARB :: GLenum
gl_TEXTURE15_ARB = 0x84CF
gl_MAX_SAMPLES_EXT :: GLenum
gl_MAX_SAMPLES_EXT = 0x8D57
gl_STENCIL_INDEX16 :: GLenum
gl_STENCIL_INDEX16 = 0x8D49
gl_SAMPLER_BUFFER_AMD :: GLenum
gl_SAMPLER_BUFFER_AMD = 0x9001
gl_TESS_CONTROL_SUBROUTINE :: GLenum
gl_TESS_CONTROL_SUBROUTINE = 0x92E9
gl_TIMESTAMP :: GLenum
gl_TIMESTAMP = 0x8E28
gl_RG32I :: GLenum
gl_RG32I = 0x823B
gl_PROXY_TEXTURE_CUBE_MAP_EXT :: GLenum
gl_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B
gl_SHADOW_ATTENUATION_EXT :: GLenum
gl_SHADOW_ATTENUATION_EXT = 0x834E
gl_ARRAY_OBJECT_OFFSET_ATI :: GLenum
gl_ARRAY_OBJECT_OFFSET_ATI = 0x8767
gl_PIXEL_MAP_I_TO_R_SIZE :: GLenum
gl_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2
gl_NORMAL_ARRAY_LIST_IBM :: GLenum
gl_NORMAL_ARRAY_LIST_IBM = 103071
gl_ETC1_SRGB8_NV :: GLenum
gl_ETC1_SRGB8_NV = 0x88EE
gl_IMAGE_2D_RECT :: GLenum
gl_IMAGE_2D_RECT = 0x904F
gl_DRAW_BUFFER5_ATI :: GLenum
gl_DRAW_BUFFER5_ATI = 0x882A
gl_LO_SCALE_NV :: GLenum
gl_LO_SCALE_NV = 0x870F
gl_OBJECT_SUBTYPE_ARB :: GLenum
gl_OBJECT_SUBTYPE_ARB = 0x8B4F
gl_RENDERBUFFER_DEPTH_SIZE_OES :: GLenum
gl_RENDERBUFFER_DEPTH_SIZE_OES = 0x8D54
gl_POST_COLOR_MATRIX_BLUE_BIAS_SGI :: GLenum
gl_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA
gl_LINE_SMOOTH_HINT :: GLenum
gl_LINE_SMOOTH_HINT = 0x0C52
gl_PROGRAM_OBJECT_ARB :: GLenum
gl_PROGRAM_OBJECT_ARB = 0x8B40
gl_RGBA16 :: GLenum
gl_RGBA16 = 0x805B
gl_PERFMON_RESULT_SIZE_AMD :: GLenum
gl_PERFMON_RESULT_SIZE_AMD = 0x8BC5
gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET :: GLenum
gl_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9
gl_NICEST :: GLenum
gl_NICEST = 0x1102
gl_ORDER :: GLenum
gl_ORDER = 0x0A01
gl_COLOR_BUFFER_BIT2_QCOM :: GLenum
gl_COLOR_BUFFER_BIT2_QCOM = 0x00000004
gl_DRAW_BUFFER15 :: GLenum
gl_DRAW_BUFFER15 = 0x8834
gl_MAX_ELEMENT_INDEX :: GLenum
gl_MAX_ELEMENT_INDEX = 0x8D6B
gl_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B
gl_COLOR_ATTACHMENT5 :: GLenum
gl_COLOR_ATTACHMENT5 = 0x8CE5
gl_CLAMP_VERTEX_COLOR_ARB :: GLenum
gl_CLAMP_VERTEX_COLOR_ARB = 0x891A
gl_QUAD_INTENSITY8_SGIS :: GLenum
gl_QUAD_INTENSITY8_SGIS = 0x8123
gl_4PASS_0_SGIS :: GLenum
gl_4PASS_0_SGIS = 0x80A4
gl_PIXEL_SUBSAMPLE_2424_SGIX :: GLenum
gl_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3
gl_DIFFERENCE_NV :: GLenum
gl_DIFFERENCE_NV = 0x929E
gl_PROGRAM_UNDER_NATIVE_LIMITS_ARB :: GLenum
gl_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6
gl_FULL_RANGE_EXT :: GLenum
gl_FULL_RANGE_EXT = 0x87E1
gl_CURRENT_RASTER_DISTANCE :: GLenum
gl_CURRENT_RASTER_DISTANCE = 0x0B09
gl_MULTISAMPLE_BIT_EXT :: GLenum
gl_MULTISAMPLE_BIT_EXT = 0x20000000
gl_TEXTURE_MATERIAL_PARAMETER_EXT :: GLenum
gl_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352
gl_CLAMP_FRAGMENT_COLOR :: GLenum
gl_CLAMP_FRAGMENT_COLOR = 0x891B
gl_GREEN_SCALE :: GLenum
gl_GREEN_SCALE = 0x0D18
gl_MAX_FRAGMENT_UNIFORM_VECTORS :: GLenum
gl_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD
gl_QUADRATIC_ATTENUATION :: GLenum
gl_QUADRATIC_ATTENUATION = 0x1209
gl_FEEDBACK :: GLenum
gl_FEEDBACK = 0x1C01
gl_MUL_ATI :: GLenum
gl_MUL_ATI = 0x8964
gl_OP_ADD_EXT :: GLenum
gl_OP_ADD_EXT = 0x8787
gl_NO_RESET_NOTIFICATION_EXT :: GLenum
gl_NO_RESET_NOTIFICATION_EXT = 0x8261
gl_FLOAT_32_UNSIGNED_INT_24_8_REV :: GLenum
gl_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE
gl_REDUCE_EXT :: GLenum
gl_REDUCE_EXT = 0x8016
gl_UNIFORM_BUFFER_SIZE :: GLenum
gl_UNIFORM_BUFFER_SIZE = 0x8A2A
gl_UNSIGNED_INT_IMAGE_2D_RECT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065
gl_DYNAMIC_DRAW :: GLenum
gl_DYNAMIC_DRAW = 0x88E8
gl_REG_24_ATI :: GLenum
gl_REG_24_ATI = 0x8939
gl_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74
gl_MAX_COLOR_ATTACHMENTS :: GLenum
gl_MAX_COLOR_ATTACHMENTS = 0x8CDF
gl_NORMALIZED_RANGE_EXT :: GLenum
gl_NORMALIZED_RANGE_EXT = 0x87E0
gl_OPERAND0_RGB :: GLenum
gl_OPERAND0_RGB = 0x8590
gl_NUM_LOOPBACK_COMPONENTS_ATI :: GLenum
gl_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974
gl_COLOR_ATTACHMENT4_NV :: GLenum
gl_COLOR_ATTACHMENT4_NV = 0x8CE4
gl_COMPRESSED_RGBA_ASTC_6x6x6_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_6x6x6_OES = 0x93C9
gl_BLUE_BIT_ATI :: GLenum
gl_BLUE_BIT_ATI = 0x00000004
gl_CONDITION_SATISFIED :: GLenum
gl_CONDITION_SATISFIED = 0x911C
gl_PATH_CLIENT_LENGTH_NV :: GLenum
gl_PATH_CLIENT_LENGTH_NV = 0x907F
gl_TRANSPOSE_PROJECTION_MATRIX_ARB :: GLenum
gl_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4
gl_TRANSFORM_FEEDBACK_ACTIVE :: GLenum
gl_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24
gl_DOT_PRODUCT_TEXTURE_2D_NV :: GLenum
gl_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE
gl_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087
gl_COLOR_ATTACHMENT15 :: GLenum
gl_COLOR_ATTACHMENT15 = 0x8CEF
gl_MAX_COMBINED_ATOMIC_COUNTERS :: GLenum
gl_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7
gl_DRAW_INDIRECT_ADDRESS_NV :: GLenum
gl_DRAW_INDIRECT_ADDRESS_NV = 0x8F41
gl_PROXY_HISTOGRAM :: GLenum
gl_PROXY_HISTOGRAM = 0x8025
gl_DECR_WRAP :: GLenum
gl_DECR_WRAP = 0x8508
gl_OP_FRAC_EXT :: GLenum
gl_OP_FRAC_EXT = 0x8789
gl_FLAT :: GLenum
gl_FLAT = 0x1D00
gl_SHADER_IMAGE_ACCESS_BARRIER_BIT :: GLenum
gl_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020
gl_RGBA4 :: GLenum
gl_RGBA4 = 0x8056
gl_COLOR_ATTACHMENT1_NV :: GLenum
gl_COLOR_ATTACHMENT1_NV = 0x8CE1
gl_SLUMINANCE_NV :: GLenum
gl_SLUMINANCE_NV = 0x8C46
gl_IUI_N3F_V3F_EXT :: GLenum
gl_IUI_N3F_V3F_EXT = 0x81B0
gl_SCALE_BY_TWO_NV :: GLenum
gl_SCALE_BY_TWO_NV = 0x853E
gl_SAMPLE_MASK_INVERT_EXT :: GLenum
gl_SAMPLE_MASK_INVERT_EXT = 0x80AB
gl_MAX_DRAW_BUFFERS :: GLenum
gl_MAX_DRAW_BUFFERS = 0x8824
gl_ATTRIB_ARRAY_TYPE_NV :: GLenum
gl_ATTRIB_ARRAY_TYPE_NV = 0x8625
gl_OPERAND0_RGB_EXT :: GLenum
gl_OPERAND0_RGB_EXT = 0x8590
gl_CURRENT_INDEX :: GLenum
gl_CURRENT_INDEX = 0x0B01
gl_MODELVIEW27_ARB :: GLenum
gl_MODELVIEW27_ARB = 0x873B
gl_PALETTE4_RGBA4_OES :: GLenum
gl_PALETTE4_RGBA4_OES = 0x8B93
gl_DEBUG_TYPE_ERROR_ARB :: GLenum
gl_DEBUG_TYPE_ERROR_ARB = 0x824C
gl_INT_IMAGE_2D_ARRAY_EXT :: GLenum
gl_INT_IMAGE_2D_ARRAY_EXT = 0x905E
gl_DRAW_BUFFER7 :: GLenum
gl_DRAW_BUFFER7 = 0x882C
gl_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES :: GLenum
gl_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898E
gl_TIMEOUT_IGNORED :: GLenum
gl_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF
gl_EVAL_VERTEX_ATTRIB5_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB5_NV = 0x86CB
gl_RGBA32I_EXT :: GLenum
gl_RGBA32I_EXT = 0x8D82
gl_BLEND_DST_ALPHA_OES :: GLenum
gl_BLEND_DST_ALPHA_OES = 0x80CA
gl_GREEN_INTEGER :: GLenum
gl_GREEN_INTEGER = 0x8D95
gl_STENCIL_INDEX16_EXT :: GLenum
gl_STENCIL_INDEX16_EXT = 0x8D49
gl_3D_COLOR :: GLenum
gl_3D_COLOR = 0x0602
gl_VERTEX_ATTRIB_ARRAY_TYPE_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625
gl_TEXTURE_GEN_S :: GLenum
gl_TEXTURE_GEN_S = 0x0C60
gl_LAYER_PROVOKING_VERTEX :: GLenum
gl_LAYER_PROVOKING_VERTEX = 0x825E
gl_INT_SAMPLER_3D :: GLenum
gl_INT_SAMPLER_3D = 0x8DCB
gl_OPERAND1_RGB_EXT :: GLenum
gl_OPERAND1_RGB_EXT = 0x8591
gl_COLOR_TABLE_SCALE :: GLenum
gl_COLOR_TABLE_SCALE = 0x80D6
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56
gl_MAX_DRAW_BUFFERS_EXT :: GLenum
gl_MAX_DRAW_BUFFERS_EXT = 0x8824
gl_LUMINANCE_ALPHA_SNORM :: GLenum
gl_LUMINANCE_ALPHA_SNORM = 0x9012
gl_SAMPLER_1D_ARRAY_SHADOW_EXT :: GLenum
gl_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3
gl_PIXEL_BUFFER_BARRIER_BIT :: GLenum
gl_PIXEL_BUFFER_BARRIER_BIT = 0x00000080
gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F
gl_RENDERBUFFER :: GLenum
gl_RENDERBUFFER = 0x8D41
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F
gl_SPARE1_NV :: GLenum
gl_SPARE1_NV = 0x852F
gl_RGBA8_EXT :: GLenum
gl_RGBA8_EXT = 0x8058
gl_RESAMPLE_AVERAGE_OML :: GLenum
gl_RESAMPLE_AVERAGE_OML = 0x8988
gl_PIXEL_TEX_GEN_Q_CEILING_SGIX :: GLenum
gl_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184
gl_CUBIC_EXT :: GLenum
gl_CUBIC_EXT = 0x8334
gl_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV :: GLenum
gl_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58
gl_STANDARD_FONT_NAME_NV :: GLenum
gl_STANDARD_FONT_NAME_NV = 0x9072
gl_CLIP_DISTANCE5 :: GLenum
gl_CLIP_DISTANCE5 = 0x3005
gl_SLUMINANCE8_ALPHA8_NV :: GLenum
gl_SLUMINANCE8_ALPHA8_NV = 0x8C45
gl_MAP_FLUSH_EXPLICIT_BIT_EXT :: GLenum
gl_MAP_FLUSH_EXPLICIT_BIT_EXT = 0x0010
gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB :: GLenum
gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F
gl_OBJECT_LINEAR_NV :: GLenum
gl_OBJECT_LINEAR_NV = 0x2401
gl_RGBA16UI_EXT :: GLenum
gl_RGBA16UI_EXT = 0x8D76
gl_STATIC_VERTEX_ARRAY_IBM :: GLenum
gl_STATIC_VERTEX_ARRAY_IBM = 103061
gl_COVERAGE_MODULATION_NV :: GLenum
gl_COVERAGE_MODULATION_NV = 0x9332
gl_MAP1_VERTEX_ATTRIB6_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666
gl_SIGNED_RGB_NV :: GLenum
gl_SIGNED_RGB_NV = 0x86FE
gl_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086
gl_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT :: GLenum
gl_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA
gl_OUTPUT_TEXTURE_COORD21_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2
gl_HISTOGRAM_LUMINANCE_SIZE_EXT :: GLenum
gl_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C
gl_RGB16 :: GLenum
gl_RGB16 = 0x8054
gl_LINEAR_ATTENUATION :: GLenum
gl_LINEAR_ATTENUATION = 0x1208
gl_PACK_ROW_LENGTH :: GLenum
gl_PACK_ROW_LENGTH = 0x0D02
gl_TESS_CONTROL_SHADER :: GLenum
gl_TESS_CONTROL_SHADER = 0x8E88
gl_TRANSPOSE_COLOR_MATRIX :: GLenum
gl_TRANSPOSE_COLOR_MATRIX = 0x84E6
gl_ETC1_RGB8_OES :: GLenum
gl_ETC1_RGB8_OES = 0x8D64
gl_CONVOLUTION_BORDER_MODE :: GLenum
gl_CONVOLUTION_BORDER_MODE = 0x8013
gl_FRAGMENT_LIGHT4_SGIX :: GLenum
gl_FRAGMENT_LIGHT4_SGIX = 0x8410
gl_LOGIC_OP_MODE :: GLenum
gl_LOGIC_OP_MODE = 0x0BF0
gl_DEBUG_SEVERITY_LOW_ARB :: GLenum
gl_DEBUG_SEVERITY_LOW_ARB = 0x9148
gl_EVAL_VERTEX_ATTRIB14_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB14_NV = 0x86D4
gl_TEXTURE19_ARB :: GLenum
gl_TEXTURE19_ARB = 0x84D3
gl_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV :: GLenum
gl_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44
gl_CURRENT_VERTEX_ATTRIB_ARB :: GLenum
gl_CURRENT_VERTEX_ATTRIB_ARB = 0x8626
gl_SHADER_CONSISTENT_NV :: GLenum
gl_SHADER_CONSISTENT_NV = 0x86DD
gl_COMBINE :: GLenum
gl_COMBINE = 0x8570
gl_OFFSET_PROJECTIVE_TEXTURE_2D_NV :: GLenum
gl_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850
gl_DEPTH_CLAMP_NV :: GLenum
gl_DEPTH_CLAMP_NV = 0x864F
gl_TRANSFORM_FEEDBACK_BUFFER_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E
gl_BOOL :: GLenum
gl_BOOL = 0x8B56
gl_SAMPLER_RENDERBUFFER_NV :: GLenum
gl_SAMPLER_RENDERBUFFER_NV = 0x8E56
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV :: GLenum
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E
gl_BUFFER_GPU_ADDRESS_NV :: GLenum
gl_BUFFER_GPU_ADDRESS_NV = 0x8F1D
gl_SPRITE_AXIAL_SGIX :: GLenum
gl_SPRITE_AXIAL_SGIX = 0x814C
gl_SRGB8_NV :: GLenum
gl_SRGB8_NV = 0x8C41
gl_COLOR_MATRIX_STACK_DEPTH_SGI :: GLenum
gl_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2
gl_MAX_FRAMEBUFFER_LAYERS_EXT :: GLenum
gl_MAX_FRAMEBUFFER_LAYERS_EXT = 0x9317
gl_GEOMETRY_VERTICES_OUT_EXT :: GLenum
gl_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA
gl_PATH_DASH_OFFSET_NV :: GLenum
gl_PATH_DASH_OFFSET_NV = 0x907E
gl_MAP1_TEXTURE_COORD_2 :: GLenum
gl_MAP1_TEXTURE_COORD_2 = 0x0D94
gl_MAP2_VERTEX_ATTRIB9_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679
gl_INTERNALFORMAT_PREFERRED :: GLenum
gl_INTERNALFORMAT_PREFERRED = 0x8270
gl_ALREADY_SIGNALED :: GLenum
gl_ALREADY_SIGNALED = 0x911A
gl_TIMEOUT_IGNORED_APPLE :: GLenum
gl_TIMEOUT_IGNORED_APPLE = 0xFFFFFFFFFFFFFFFF
gl_HISTOGRAM :: GLenum
gl_HISTOGRAM = 0x8024
gl_UNSIGNED_INT_SAMPLER_2D_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2
gl_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV :: GLenum
gl_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A
gl_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI :: GLenum
gl_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = 0x8837
gl_SRC_OVER_NV :: GLenum
gl_SRC_OVER_NV = 0x9288
gl_DS_SCALE_NV :: GLenum
gl_DS_SCALE_NV = 0x8710
gl_MATRIX19_ARB :: GLenum
gl_MATRIX19_ARB = 0x88D3
gl_TEXTURE_VIEW :: GLenum
gl_TEXTURE_VIEW = 0x82B5
gl_ALPHA8_EXT :: GLenum
gl_ALPHA8_EXT = 0x803C
gl_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES :: GLenum
gl_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = 0x8E5D
gl_WRITE_ONLY_ARB :: GLenum
gl_WRITE_ONLY_ARB = 0x88B9
gl_POINT_SPRITE_OES :: GLenum
gl_POINT_SPRITE_OES = 0x8861
gl_T :: GLenum
gl_T = 0x2001
gl_STORAGE_SHARED_APPLE :: GLenum
gl_STORAGE_SHARED_APPLE = 0x85BF
gl_NONE_OES :: GLenum
gl_NONE_OES = 0
gl_DEBUG_SEVERITY_HIGH_ARB :: GLenum
gl_DEBUG_SEVERITY_HIGH_ARB = 0x9146
gl_OFFSET :: GLenum
gl_OFFSET = 0x92FC
gl_POINT_SPRITE_COORD_ORIGIN :: GLenum
gl_POINT_SPRITE_COORD_ORIGIN = 0x8CA0
gl_TEXTURE7_ARB :: GLenum
gl_TEXTURE7_ARB = 0x84C7
gl_PROXY_TEXTURE_RECTANGLE :: GLenum
gl_PROXY_TEXTURE_RECTANGLE = 0x84F7
gl_MAP_INVALIDATE_RANGE_BIT :: GLenum
gl_MAP_INVALIDATE_RANGE_BIT = 0x0004
gl_DST_IN_NV :: GLenum
gl_DST_IN_NV = 0x928B
gl_IMPLEMENTATION_COLOR_READ_FORMAT_OES :: GLenum
gl_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B
gl_LOSE_CONTEXT_ON_RESET_EXT :: GLenum
gl_LOSE_CONTEXT_ON_RESET_EXT = 0x8252
gl_RIGHT :: GLenum
gl_RIGHT = 0x0407
gl_TRANSLATE_3D_NV :: GLenum
gl_TRANSLATE_3D_NV = 0x9091
gl_DEPTH32F_STENCIL8 :: GLenum
gl_DEPTH32F_STENCIL8 = 0x8CAD
gl_INTERLACE_SGIX :: GLenum
gl_INTERLACE_SGIX = 0x8094
gl_GREEN_INTEGER_EXT :: GLenum
gl_GREEN_INTEGER_EXT = 0x8D95
gl_MAX_PIXEL_MAP_TABLE :: GLenum
gl_MAX_PIXEL_MAP_TABLE = 0x0D34
gl_OUTPUT_TEXTURE_COORD3_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0
gl_FLOAT_MAT2x4 :: GLenum
gl_FLOAT_MAT2x4 = 0x8B66
gl_ONE_MINUS_CONSTANT_ALPHA :: GLenum
gl_ONE_MINUS_CONSTANT_ALPHA = 0x8004
gl_HSL_HUE_NV :: GLenum
gl_HSL_HUE_NV = 0x92AD
gl_COLOR_ATTACHMENT14 :: GLenum
gl_COLOR_ATTACHMENT14 = 0x8CEE
gl_COLOR_LOGIC_OP :: GLenum
gl_COLOR_LOGIC_OP = 0x0BF2
gl_TEXTURE_TYPE_QCOM :: GLenum
gl_TEXTURE_TYPE_QCOM = 0x8BD7
gl_COLOR_MATRIX_STACK_DEPTH :: GLenum
gl_COLOR_MATRIX_STACK_DEPTH = 0x80B2
gl_OFFSET_TEXTURE_RECTANGLE_NV :: GLenum
gl_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C
gl_NEAREST_MIPMAP_NEAREST :: GLenum
gl_NEAREST_MIPMAP_NEAREST = 0x2700
gl_FENCE_STATUS_NV :: GLenum
gl_FENCE_STATUS_NV = 0x84F3
gl_TEXTURE_BINDING_1D_ARRAY :: GLenum
gl_TEXTURE_BINDING_1D_ARRAY = 0x8C1C
gl_MAX_FRAGMENT_LIGHTS_SGIX :: GLenum
gl_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404
gl_SRC2_RGB :: GLenum
gl_SRC2_RGB = 0x8582
gl_FLOAT_32_UNSIGNED_INT_24_8_REV_NV :: GLenum
gl_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD
gl_AUX0 :: GLenum
gl_AUX0 = 0x0409
gl_FRAGMENT_PROGRAM_ARB :: GLenum
gl_FRAGMENT_PROGRAM_ARB = 0x8804
gl_INNOCENT_CONTEXT_RESET :: GLenum
gl_INNOCENT_CONTEXT_RESET = 0x8254
gl_DEBUG_PRINT_MESA :: GLenum
gl_DEBUG_PRINT_MESA = 0x875A
gl_FLOAT_MAT4 :: GLenum
gl_FLOAT_MAT4 = 0x8B5C
gl_PIXEL_MAP_A_TO_A :: GLenum
gl_PIXEL_MAP_A_TO_A = 0x0C79
gl_SCISSOR_BIT :: GLenum
gl_SCISSOR_BIT = 0x00080000
gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT :: GLenum
gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = 0x8F67
gl_SKIP_COMPONENTS4_NV :: GLenum
gl_SKIP_COMPONENTS4_NV = -3
gl_OPERAND2_ALPHA :: GLenum
gl_OPERAND2_ALPHA = 0x859A
gl_FENCE_APPLE :: GLenum
gl_FENCE_APPLE = 0x8A0B
gl_CLIP_DISTANCE2_APPLE :: GLenum
gl_CLIP_DISTANCE2_APPLE = 0x3002
gl_INVERT_RGB_NV :: GLenum
gl_INVERT_RGB_NV = 0x92A3
gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279
gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS :: GLenum
gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 0x8CD0
gl_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT :: GLenum
gl_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = 0x9308
gl_INVERTED_SCREEN_W_REND :: GLenum
gl_INVERTED_SCREEN_W_REND = 0x8491
gl_SIGNALED :: GLenum
gl_SIGNALED = 0x9119
gl_COLOR_ATTACHMENT6_EXT :: GLenum
gl_COLOR_ATTACHMENT6_EXT = 0x8CE6
gl_MAX_FRAGMENT_UNIFORM_BLOCKS :: GLenum
gl_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D
gl_DRAW_BUFFER12_NV :: GLenum
gl_DRAW_BUFFER12_NV = 0x8831
gl_READ_PIXELS :: GLenum
gl_READ_PIXELS = 0x828C
gl_TEXTURE_COMPARE_FUNC_EXT :: GLenum
gl_TEXTURE_COMPARE_FUNC_EXT = 0x884D
gl_DEBUG_TYPE_PORTABILITY :: GLenum
gl_DEBUG_TYPE_PORTABILITY = 0x824F
gl_MODELVIEW1_STACK_DEPTH_EXT :: GLenum
gl_MODELVIEW1_STACK_DEPTH_EXT = 0x8502
gl_AVERAGE_EXT :: GLenum
gl_AVERAGE_EXT = 0x8335
gl_CURRENT_TIME_NV :: GLenum
gl_CURRENT_TIME_NV = 0x8E28
gl_ALPHA16 :: GLenum
gl_ALPHA16 = 0x803E
gl_MULTISAMPLE_ARB :: GLenum
gl_MULTISAMPLE_ARB = 0x809D
gl_INT_VEC2 :: GLenum
gl_INT_VEC2 = 0x8B53
gl_FRAGMENT_LIGHT5_SGIX :: GLenum
gl_FRAGMENT_LIGHT5_SGIX = 0x8411
gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT :: GLenum
gl_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F
gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT :: GLenum
gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = 0x90CB
gl_MAX_MODELVIEW_STACK_DEPTH :: GLenum
gl_MAX_MODELVIEW_STACK_DEPTH = 0x0D36
gl_OBJECT_VALIDATE_STATUS_ARB :: GLenum
gl_OBJECT_VALIDATE_STATUS_ARB = 0x8B83
gl_TEXTURE_BINDING_CUBE_MAP_EXT :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514
gl_MAX_CONVOLUTION_WIDTH_EXT :: GLenum
gl_MAX_CONVOLUTION_WIDTH_EXT = 0x801A
gl_LUMINANCE16F_EXT :: GLenum
gl_LUMINANCE16F_EXT = 0x881E
gl_FUNC_SUBTRACT :: GLenum
gl_FUNC_SUBTRACT = 0x800A
gl_CONSTANT_COLOR :: GLenum
gl_CONSTANT_COLOR = 0x8001
gl_MODELVIEW25_ARB :: GLenum
gl_MODELVIEW25_ARB = 0x8739
gl_ENABLE_BIT :: GLenum
gl_ENABLE_BIT = 0x00002000
gl_FLOAT_VEC4 :: GLenum
gl_FLOAT_VEC4 = 0x8B52
gl_FONT_ASCENDER_BIT_NV :: GLenum
gl_FONT_ASCENDER_BIT_NV = 0x00200000
gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT :: GLenum
gl_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = 0x90D7
gl_TEXTURE_WRAP_S :: GLenum
gl_TEXTURE_WRAP_S = 0x2802
gl_STENCIL_BACK_FAIL_ATI :: GLenum
gl_STENCIL_BACK_FAIL_ATI = 0x8801
gl_FILE_NAME_NV :: GLenum
gl_FILE_NAME_NV = 0x9074
gl_POLYGON_OFFSET_BIAS_EXT :: GLenum
gl_POLYGON_OFFSET_BIAS_EXT = 0x8039
gl_DRAW_BUFFER2_EXT :: GLenum
gl_DRAW_BUFFER2_EXT = 0x8827
gl_DISPATCH_INDIRECT_BUFFER_BINDING :: GLenum
gl_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF
gl_IMAGE_CUBE_EXT :: GLenum
gl_IMAGE_CUBE_EXT = 0x9050
gl_COMMAND_BARRIER_BIT :: GLenum
gl_COMMAND_BARRIER_BIT = 0x00000040
gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT :: GLenum
gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = 0x92D3
gl_COLOR_ATTACHMENT6 :: GLenum
gl_COLOR_ATTACHMENT6 = 0x8CE6
gl_ATTRIB_ARRAY_STRIDE_NV :: GLenum
gl_ATTRIB_ARRAY_STRIDE_NV = 0x8624
gl_COLOR_INDEX16_EXT :: GLenum
gl_COLOR_INDEX16_EXT = 0x80E7
gl_VERTEX_ATTRIB_ARRAY_ENABLED_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622
gl_VERTEX_ARRAY_STRIDE_EXT :: GLenum
gl_VERTEX_ARRAY_STRIDE_EXT = 0x807C
gl_STENCIL_ATTACHMENT :: GLenum
gl_STENCIL_ATTACHMENT = 0x8D20
gl_EYE_LINEAR_NV :: GLenum
gl_EYE_LINEAR_NV = 0x2400
gl_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB :: GLenum
gl_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345
gl_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB :: GLenum
gl_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED
gl_TESS_CONTROL_SHADER_PATCHES_ARB :: GLenum
gl_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1
gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING :: GLenum
gl_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F
gl_2PASS_0_EXT :: GLenum
gl_2PASS_0_EXT = 0x80A2
gl_TEXTURE2_ARB :: GLenum
gl_TEXTURE2_ARB = 0x84C2
gl_DISPATCH_INDIRECT_BUFFER :: GLenum
gl_DISPATCH_INDIRECT_BUFFER = 0x90EE
gl_REPEAT :: GLenum
gl_REPEAT = 0x2901
gl_TEXTURE_3D_BINDING_EXT :: GLenum
gl_TEXTURE_3D_BINDING_EXT = 0x806A
gl_SIGNED_LUMINANCE_NV :: GLenum
gl_SIGNED_LUMINANCE_NV = 0x8701
gl_REFLECTION_MAP_ARB :: GLenum
gl_REFLECTION_MAP_ARB = 0x8512
gl_MAX_COMPUTE_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263
gl_DRAW_BUFFER5 :: GLenum
gl_DRAW_BUFFER5 = 0x882A
gl_UNSIGNED_NORMALIZED_EXT :: GLenum
gl_UNSIGNED_NORMALIZED_EXT = 0x8C17
gl_INTENSITY8_SNORM :: GLenum
gl_INTENSITY8_SNORM = 0x9017
gl_LO_BIAS_NV :: GLenum
gl_LO_BIAS_NV = 0x8715
gl_QUERY_RESULT :: GLenum
gl_QUERY_RESULT = 0x8866
gl_DEBUG_SOURCE_WINDOW_SYSTEM_KHR :: GLenum
gl_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = 0x8247
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A
gl_INTERPOLATE_EXT :: GLenum
gl_INTERPOLATE_EXT = 0x8575
gl_IMAGE_BUFFER_EXT :: GLenum
gl_IMAGE_BUFFER_EXT = 0x9051
gl_COPY_READ_BUFFER_NV :: GLenum
gl_COPY_READ_BUFFER_NV = 0x8F36
gl_BOOL_ARB :: GLenum
gl_BOOL_ARB = 0x8B56
gl_SAMPLER_BINDING :: GLenum
gl_SAMPLER_BINDING = 0x8919
gl_PERFQUERY_DONOT_FLUSH_INTEL :: GLenum
gl_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9
gl_UNSIGNED_BYTE_3_3_2 :: GLenum
gl_UNSIGNED_BYTE_3_3_2 = 0x8032
gl_STENCIL_BUFFER_BIT7_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT7_QCOM = 0x00800000
gl_EVAL_VERTEX_ATTRIB7_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB7_NV = 0x86CD
gl_INVERT :: GLenum
gl_INVERT = 0x150A
gl_FONT_DESCENDER_BIT_NV :: GLenum
gl_FONT_DESCENDER_BIT_NV = 0x00400000
gl_ARRAY_BUFFER_BINDING :: GLenum
gl_ARRAY_BUFFER_BINDING = 0x8894
gl_INDEX_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_INDEX_ARRAY_LIST_STRIDE_IBM = 103083
gl_MATRIX6_NV :: GLenum
gl_MATRIX6_NV = 0x8636
gl_COLOR_EXT :: GLenum
gl_COLOR_EXT = 0x1800
gl_BLEND_EQUATION_RGB_OES :: GLenum
gl_BLEND_EQUATION_RGB_OES = 0x8009
gl_MIXED_DEPTH_SAMPLES_SUPPORTED_NV :: GLenum
gl_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = 0x932F
gl_STENCIL_BACK_OP_VALUE_AMD :: GLenum
gl_STENCIL_BACK_OP_VALUE_AMD = 0x874D
gl_TEXTURE_PRIORITY :: GLenum
gl_TEXTURE_PRIORITY = 0x8066
gl_DRAW_BUFFER10_EXT :: GLenum
gl_DRAW_BUFFER10_EXT = 0x882F
gl_MAX_VERTEX_ATTRIB_BINDINGS :: GLenum
gl_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA
gl_TESS_CONTROL_SHADER_BIT_EXT :: GLenum
gl_TESS_CONTROL_SHADER_BIT_EXT = 0x00000008
gl_LUMINANCE4 :: GLenum
gl_LUMINANCE4 = 0x803F
gl_SAMPLE_MASK_SGIS :: GLenum
gl_SAMPLE_MASK_SGIS = 0x80A0
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = 0x851A
gl_CON_22_ATI :: GLenum
gl_CON_22_ATI = 0x8957
gl_VERTEX_ARRAY_LENGTH_NV :: GLenum
gl_VERTEX_ARRAY_LENGTH_NV = 0x8F2B
gl_BOOL_VEC2 :: GLenum
gl_BOOL_VEC2 = 0x8B57
gl_FONT_MAX_ADVANCE_HEIGHT_BIT_NV :: GLenum
gl_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x02000000
gl_RGBA_MODE :: GLenum
gl_RGBA_MODE = 0x0C31
gl_ALPHA16I_EXT :: GLenum
gl_ALPHA16I_EXT = 0x8D8A
gl_COMPRESSED_RG11_EAC :: GLenum
gl_COMPRESSED_RG11_EAC = 0x9272
gl_MAX_GEOMETRY_VARYING_COMPONENTS_EXT :: GLenum
gl_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD
gl_2PASS_1_SGIS :: GLenum
gl_2PASS_1_SGIS = 0x80A3
gl_UNSIGNED_SHORT_4_4_4_4 :: GLenum
gl_UNSIGNED_SHORT_4_4_4_4 = 0x8033
gl_MAX_ASYNC_READ_PIXELS_SGIX :: GLenum
gl_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361
gl_COMPRESSED_SRGB_EXT :: GLenum
gl_COMPRESSED_SRGB_EXT = 0x8C48
gl_STORAGE_PRIVATE_APPLE :: GLenum
gl_STORAGE_PRIVATE_APPLE = 0x85BD
gl_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB :: GLenum
gl_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D
gl_TEXTURE12 :: GLenum
gl_TEXTURE12 = 0x84CC
gl_RELATIVE_SMALL_CCW_ARC_TO_NV :: GLenum
gl_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13
gl_TEXTURE_DEPTH_EXT :: GLenum
gl_TEXTURE_DEPTH_EXT = 0x8071
gl_MAX_ELEMENTS_VERTICES :: GLenum
gl_MAX_ELEMENTS_VERTICES = 0x80E8
gl_COLOR_BUFFER_BIT :: GLenum
gl_COLOR_BUFFER_BIT = 0x00004000
gl_VERTEX_SHADER_INVARIANTS_EXT :: GLenum
gl_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1
gl_BLEND_COLOR :: GLenum
gl_BLEND_COLOR = 0x8005
gl_REPLICATE_BORDER :: GLenum
gl_REPLICATE_BORDER = 0x8153
gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT :: GLenum
gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = 0x8E81
gl_MAX_COLOR_ATTACHMENTS_NV :: GLenum
gl_MAX_COLOR_ATTACHMENTS_NV = 0x8CDF
gl_INT_SAMPLER_2D_MULTISAMPLE :: GLenum
gl_INT_SAMPLER_2D_MULTISAMPLE = 0x9109
gl_FILL :: GLenum
gl_FILL = 0x1B02
gl_TEXTURE_IMMUTABLE_FORMAT :: GLenum
gl_TEXTURE_IMMUTABLE_FORMAT = 0x912F
gl_ALPHA8 :: GLenum
gl_ALPHA8 = 0x803C
gl_INSTRUMENT_BUFFER_POINTER_SGIX :: GLenum
gl_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180
gl_LINE_BIT :: GLenum
gl_LINE_BIT = 0x00000004
gl_INT_SAMPLER_2D_ARRAY_EXT :: GLenum
gl_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF
gl_COMBINER2_NV :: GLenum
gl_COMBINER2_NV = 0x8552
gl_SLUMINANCE8_ALPHA8 :: GLenum
gl_SLUMINANCE8_ALPHA8 = 0x8C45
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9
gl_VERTEX_PROGRAM_POSITION_MESA :: GLenum
gl_VERTEX_PROGRAM_POSITION_MESA = 0x8BB4
gl_PATH_END_CAPS_NV :: GLenum
gl_PATH_END_CAPS_NV = 0x9076
gl_UNPACK_IMAGE_HEIGHT_EXT :: GLenum
gl_UNPACK_IMAGE_HEIGHT_EXT = 0x806E
gl_ALIASED_POINT_SIZE_RANGE :: GLenum
gl_ALIASED_POINT_SIZE_RANGE = 0x846D
gl_DEPTH_CLEAR_VALUE :: GLenum
gl_DEPTH_CLEAR_VALUE = 0x0B73
gl_DEPTH_TEST :: GLenum
gl_DEPTH_TEST = 0x0B71
gl_SPRITE_TRANSLATION_SGIX :: GLenum
gl_SPRITE_TRANSLATION_SGIX = 0x814B
gl_SYNC_CL_EVENT_ARB :: GLenum
gl_SYNC_CL_EVENT_ARB = 0x8240
gl_GUILTY_CONTEXT_RESET_ARB :: GLenum
gl_GUILTY_CONTEXT_RESET_ARB = 0x8253
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B
gl_T2F_V3F :: GLenum
gl_T2F_V3F = 0x2A27
gl_POST_COLOR_MATRIX_BLUE_SCALE :: GLenum
gl_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6
gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC
gl_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV :: GLenum
gl_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B
gl_POLYGON_OFFSET_FILL :: GLenum
gl_POLYGON_OFFSET_FILL = 0x8037
gl_BOOL_VEC2_ARB :: GLenum
gl_BOOL_VEC2_ARB = 0x8B57
gl_R8I :: GLenum
gl_R8I = 0x8231
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT :: GLenum
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29
gl_FILTER :: GLenum
gl_FILTER = 0x829A
gl_ACTIVE_TEXTURE_ARB :: GLenum
gl_ACTIVE_TEXTURE_ARB = 0x84E0
gl_INVALID_INDEX :: GLenum
gl_INVALID_INDEX = 0xFFFFFFFF
gl_RENDERBUFFER_WIDTH_OES :: GLenum
gl_RENDERBUFFER_WIDTH_OES = 0x8D42
gl_VIEW_CLASS_RGTC1_RED :: GLenum
gl_VIEW_CLASS_RGTC1_RED = 0x82D0
gl_SAMPLER_2D_ARRAY_SHADOW :: GLenum
gl_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB :: GLenum
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E
gl_UNSIGNED_INT_VEC3_EXT :: GLenum
gl_UNSIGNED_INT_VEC3_EXT = 0x8DC7
gl_PROXY_TEXTURE_2D_ARRAY :: GLenum
gl_PROXY_TEXTURE_2D_ARRAY = 0x8C1B
gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = 0x8E82
gl_TEXTURE_VIEW_NUM_LAYERS :: GLenum
gl_TEXTURE_VIEW_NUM_LAYERS = 0x82DE
gl_ARRAY_ELEMENT_LOCK_FIRST_EXT :: GLenum
gl_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8
gl_LINEAR_DETAIL_ALPHA_SGIS :: GLenum
gl_LINEAR_DETAIL_ALPHA_SGIS = 0x8098
gl_CURRENT_MATRIX_INDEX_ARB :: GLenum
gl_CURRENT_MATRIX_INDEX_ARB = 0x8845
gl_4PASS_0_EXT :: GLenum
gl_4PASS_0_EXT = 0x80A4
gl_DEBUG_TYPE_PUSH_GROUP_KHR :: GLenum
gl_DEBUG_TYPE_PUSH_GROUP_KHR = 0x8269
gl_MAX_SPARSE_TEXTURE_SIZE_ARB :: GLenum
gl_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198
gl_POINT_SIZE_MAX :: GLenum
gl_POINT_SIZE_MAX = 0x8127
gl_MAP1_VERTEX_ATTRIB5_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665
gl_TEXTURE_MAX_CLAMP_R_SGIX :: GLenum
gl_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B
gl_TEXTURE_HEIGHT_QCOM :: GLenum
gl_TEXTURE_HEIGHT_QCOM = 0x8BD3
gl_MAX_PROGRAM_TEX_INDIRECTIONS_ARB :: GLenum
gl_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D
gl_VERTEX_PROGRAM_CALLBACK_FUNC_MESA :: GLenum
gl_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB6
gl_NAMED_STRING_TYPE_ARB :: GLenum
gl_NAMED_STRING_TYPE_ARB = 0x8DEA
gl_FLOAT16_VEC3_NV :: GLenum
gl_FLOAT16_VEC3_NV = 0x8FFA
gl_SPOT_DIRECTION :: GLenum
gl_SPOT_DIRECTION = 0x1204
gl_INT_VEC2_ARB :: GLenum
gl_INT_VEC2_ARB = 0x8B53
gl_SRGB_EXT :: GLenum
gl_SRGB_EXT = 0x8C40
gl_DEBUG_SEVERITY_HIGH :: GLenum
gl_DEBUG_SEVERITY_HIGH = 0x9146
gl_PALETTE4_R5_G6_B5_OES :: GLenum
gl_PALETTE4_R5_G6_B5_OES = 0x8B92
gl_TRANSFORM_FEEDBACK_VARYINGS :: GLenum
gl_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83
gl_MIN_LOD_WARNING_AMD :: GLenum
gl_MIN_LOD_WARNING_AMD = 0x919C
gl_EQUAL :: GLenum
gl_EQUAL = 0x0202
gl_SRC_OUT_NV :: GLenum
gl_SRC_OUT_NV = 0x928C
gl_DRAW_BUFFER0_EXT :: GLenum
gl_DRAW_BUFFER0_EXT = 0x8825
gl_COMBINER_CD_DOT_PRODUCT_NV :: GLenum
gl_COMBINER_CD_DOT_PRODUCT_NV = 0x8546
gl_MAX_RECTANGLE_TEXTURE_SIZE_NV :: GLenum
gl_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8
gl_RGBA_FLOAT_MODE_ATI :: GLenum
gl_RGBA_FLOAT_MODE_ATI = 0x8820
gl_LAYOUT_LINEAR_INTEL :: GLenum
gl_LAYOUT_LINEAR_INTEL = 1
gl_TEXTURE1_ARB :: GLenum
gl_TEXTURE1_ARB = 0x84C1
gl_3DC_XY_AMD :: GLenum
gl_3DC_XY_AMD = 0x87FA
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A
gl_FLOAT_MAT4x2_NV :: GLenum
gl_FLOAT_MAT4x2_NV = 0x8B69
gl_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV :: GLenum
gl_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A
gl_TEXTURE26_ARB :: GLenum
gl_TEXTURE26_ARB = 0x84DA
gl_SCREEN_NV :: GLenum
gl_SCREEN_NV = 0x9295
gl_SAMPLER_3D :: GLenum
gl_SAMPLER_3D = 0x8B5F
gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE :: GLenum
gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5
gl_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV :: GLenum
gl_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9
gl_3_BYTES :: GLenum
gl_3_BYTES = 0x1408
gl_TEXTURE_RESIDENT :: GLenum
gl_TEXTURE_RESIDENT = 0x8067
gl_TEXTURE_BUFFER_BINDING_EXT :: GLenum
gl_TEXTURE_BUFFER_BINDING_EXT = 0x8C2A
gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA
gl_DRAW_BUFFER13 :: GLenum
gl_DRAW_BUFFER13 = 0x8832
gl_VARIANT_EXT :: GLenum
gl_VARIANT_EXT = 0x87C1
gl_OBJECT_LINK_STATUS_ARB :: GLenum
gl_OBJECT_LINK_STATUS_ARB = 0x8B82
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D
gl_COLOR_MATERIAL_PARAMETER :: GLenum
gl_COLOR_MATERIAL_PARAMETER = 0x0B56
gl_INTENSITY16UI_EXT :: GLenum
gl_INTENSITY16UI_EXT = 0x8D79
gl_WRITE_PIXEL_DATA_RANGE_NV :: GLenum
gl_WRITE_PIXEL_DATA_RANGE_NV = 0x8878
gl_ALPHA16F_ARB :: GLenum
gl_ALPHA16F_ARB = 0x881C
gl_OFFSET_TEXTURE_MATRIX_NV :: GLenum
gl_OFFSET_TEXTURE_MATRIX_NV = 0x86E1
gl_STREAM_READ_ARB :: GLenum
gl_STREAM_READ_ARB = 0x88E1
gl_VIDEO_CAPTURE_SURFACE_ORIGIN_NV :: GLenum
gl_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C
gl_INCR_WRAP_EXT :: GLenum
gl_INCR_WRAP_EXT = 0x8507
gl_TEXTURE_INTENSITY_SIZE_EXT :: GLenum
gl_TEXTURE_INTENSITY_SIZE_EXT = 0x8061
gl_MAX_CONVOLUTION_WIDTH :: GLenum
gl_MAX_CONVOLUTION_WIDTH = 0x801A
gl_SINGLE_COLOR_EXT :: GLenum
gl_SINGLE_COLOR_EXT = 0x81F9
gl_PASS_THROUGH_NV :: GLenum
gl_PASS_THROUGH_NV = 0x86E6
gl_VERTEX_ATTRIB_ARRAY12_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY12_NV = 0x865C
gl_MAX_TEXTURE_STACK_DEPTH :: GLenum
gl_MAX_TEXTURE_STACK_DEPTH = 0x0D39
gl_SOURCE0_ALPHA :: GLenum
gl_SOURCE0_ALPHA = 0x8588
gl_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31
gl_READ_FRAMEBUFFER_BINDING_NV :: GLenum
gl_READ_FRAMEBUFFER_BINDING_NV = 0x8CAA
gl_MAX_GEOMETRY_VARYING_COMPONENTS_ARB :: GLenum
gl_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD
gl_TEXTURE_CUBE_MAP_OES :: GLenum
gl_TEXTURE_CUBE_MAP_OES = 0x8513
gl_POINT_SPRITE_R_MODE_NV :: GLenum
gl_POINT_SPRITE_R_MODE_NV = 0x8863
gl_IS_PER_PATCH_EXT :: GLenum
gl_IS_PER_PATCH_EXT = 0x92E7
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT :: GLenum
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1
gl_TEXTURE23_ARB :: GLenum
gl_TEXTURE23_ARB = 0x84D7
gl_NUM_ACTIVE_VARIABLES :: GLenum
gl_NUM_ACTIVE_VARIABLES = 0x9304
gl_COLOR_ATTACHMENT4_EXT :: GLenum
gl_COLOR_ATTACHMENT4_EXT = 0x8CE4
gl_SRGB :: GLenum
gl_SRGB = 0x8C40
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A
gl_STENCIL_INDEX_OES :: GLenum
gl_STENCIL_INDEX_OES = 0x1901
gl_QUERY_STENCIL_FAIL_EVENT_BIT_AMD :: GLenum
gl_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004
gl_FLOAT_MAT2_ARB :: GLenum
gl_FLOAT_MAT2_ARB = 0x8B5A
gl_FRAMEBUFFER_DEFAULT_HEIGHT :: GLenum
gl_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311
gl_MAX_DRAW_BUFFERS_ATI :: GLenum
gl_MAX_DRAW_BUFFERS_ATI = 0x8824
gl_QUERY_WAIT_INVERTED :: GLenum
gl_QUERY_WAIT_INVERTED = 0x8E17
gl_PROXY_TEXTURE_3D_EXT :: GLenum
gl_PROXY_TEXTURE_3D_EXT = 0x8070
gl_MAX_GEOMETRY_IMAGE_UNIFORMS :: GLenum
gl_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD
gl_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX :: GLenum
gl_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178
gl_Z_EXT :: GLenum
gl_Z_EXT = 0x87D7
gl_TEXTURE_INTENSITY_TYPE :: GLenum
gl_TEXTURE_INTENSITY_TYPE = 0x8C15
gl_MODELVIEW29_ARB :: GLenum
gl_MODELVIEW29_ARB = 0x873D
gl_MAX_GEOMETRY_OUTPUT_VERTICES :: GLenum
gl_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0
gl_PROGRAM_ATTRIBS_ARB :: GLenum
gl_PROGRAM_ATTRIBS_ARB = 0x88AC
gl_MULTISAMPLE_BUFFER_BIT2_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT2_QCOM = 0x04000000
gl_PROGRAM_SEPARABLE_EXT :: GLenum
gl_PROGRAM_SEPARABLE_EXT = 0x8258
gl_CLEAR_TEXTURE :: GLenum
gl_CLEAR_TEXTURE = 0x9365
gl_PURGEABLE_APPLE :: GLenum
gl_PURGEABLE_APPLE = 0x8A1D
gl_ACTIVE_RESOURCES :: GLenum
gl_ACTIVE_RESOURCES = 0x92F5
gl_AMBIENT :: GLenum
gl_AMBIENT = 0x1200
gl_COLOR_ATTACHMENT7 :: GLenum
gl_COLOR_ATTACHMENT7 = 0x8CE7
gl_MAX_RENDERBUFFER_SIZE_EXT :: GLenum
gl_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8
gl_OCCLUSION_QUERY_EVENT_MASK_AMD :: GLenum
gl_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F
gl_R32I :: GLenum
gl_R32I = 0x8235
gl_UNSIGNED_INT64_NV :: GLenum
gl_UNSIGNED_INT64_NV = 0x140F
gl_ACCUM_BLUE_BITS :: GLenum
gl_ACCUM_BLUE_BITS = 0x0D5A
gl_SYNC_OBJECT_APPLE :: GLenum
gl_SYNC_OBJECT_APPLE = 0x8A53
gl_RGBA_SIGNED_COMPONENTS_EXT :: GLenum
gl_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C
gl_LINE_STRIP :: GLenum
gl_LINE_STRIP = 0x0003
gl_DEBUG_LOGGED_MESSAGES_KHR :: GLenum
gl_DEBUG_LOGGED_MESSAGES_KHR = 0x9145
gl_ROUND_NV :: GLenum
gl_ROUND_NV = 0x90A4
gl_CLIP_DISTANCE5_APPLE :: GLenum
gl_CLIP_DISTANCE5_APPLE = 0x3005
gl_TEXTURE_FORMAT_QCOM :: GLenum
gl_TEXTURE_FORMAT_QCOM = 0x8BD6
gl_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV :: GLenum
gl_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28
gl_TESSELLATION_MODE_AMD :: GLenum
gl_TESSELLATION_MODE_AMD = 0x9004
gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9
gl_ATTRIB_ARRAY_SIZE_NV :: GLenum
gl_ATTRIB_ARRAY_SIZE_NV = 0x8623
gl_PIXEL_UNPACK_BUFFER_EXT :: GLenum
gl_PIXEL_UNPACK_BUFFER_EXT = 0x88EC
gl_UNSIGNED_INT_IMAGE_1D_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062
gl_FUNC_ADD_EXT :: GLenum
gl_FUNC_ADD_EXT = 0x8006
gl_TEXTURE_GATHER_SHADOW :: GLenum
gl_TEXTURE_GATHER_SHADOW = 0x82A3
gl_UNSIGNED_INT_5_9_9_9_REV_EXT :: GLenum
gl_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E
gl_TEXTURE_WRAP_R_EXT :: GLenum
gl_TEXTURE_WRAP_R_EXT = 0x8072
gl_VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: GLenum
gl_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2
gl_TEXTURE_BINDING_1D_ARRAY_EXT :: GLenum
gl_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C
gl_COLOR_ATTACHMENT12 :: GLenum
gl_COLOR_ATTACHMENT12 = 0x8CEC
gl_TEXTURE_CLIPMAP_DEPTH_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176
gl_TIMEOUT_EXPIRED_APPLE :: GLenum
gl_TIMEOUT_EXPIRED_APPLE = 0x911B
gl_DRAW_BUFFER9_ATI :: GLenum
gl_DRAW_BUFFER9_ATI = 0x882E
gl_PIXEL_TEXTURE_SGIS :: GLenum
gl_PIXEL_TEXTURE_SGIS = 0x8353
gl_TESS_EVALUATION_SUBROUTINE :: GLenum
gl_TESS_EVALUATION_SUBROUTINE = 0x92EA
gl_TEXTURE_STORAGE_SPARSE_BIT_AMD :: GLenum
gl_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001
gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT :: GLenum
gl_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = 0x8E89
gl_COMPRESSED_LUMINANCE_ALPHA_ARB :: GLenum
gl_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB
gl_EDGEFLAG_BIT_PGI :: GLenum
gl_EDGEFLAG_BIT_PGI = 0x00040000
gl_OR :: GLenum
gl_OR = 0x1507
gl_TEXTURE_4D_BINDING_SGIS :: GLenum
gl_TEXTURE_4D_BINDING_SGIS = 0x814F
gl_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT :: GLenum
gl_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = 0x90CD
gl_STENCIL_BACK_PASS_DEPTH_FAIL :: GLenum
gl_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802
gl_MAX_PROGRAM_SUBROUTINE_NUM_NV :: GLenum
gl_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45
gl_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL :: GLenum
gl_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500
gl_BUMP_ENVMAP_ATI :: GLenum
gl_BUMP_ENVMAP_ATI = 0x877B
gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81
gl_COMPRESSED_RGB_PVRTC_4BPPV1_IMG :: GLenum
gl_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00
gl_SOURCE0_RGB_ARB :: GLenum
gl_SOURCE0_RGB_ARB = 0x8580
gl_FOG_INDEX :: GLenum
gl_FOG_INDEX = 0x0B61
gl_OPERAND1_RGB_ARB :: GLenum
gl_OPERAND1_RGB_ARB = 0x8591
gl_MATRIX_INDEX_ARRAY_SIZE_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_SIZE_OES = 0x8846
gl_DRAW_BUFFER15_ARB :: GLenum
gl_DRAW_BUFFER15_ARB = 0x8834
gl_INT_10_10_10_2_OES :: GLenum
gl_INT_10_10_10_2_OES = 0x8DF7
gl_NORMAL_MAP_ARB :: GLenum
gl_NORMAL_MAP_ARB = 0x8511
gl_FLOAT_MAT3x4_NV :: GLenum
gl_FLOAT_MAT3x4_NV = 0x8B68
gl_YCRCB_444_SGIX :: GLenum
gl_YCRCB_444_SGIX = 0x81BC
gl_STENCIL_PASS_DEPTH_FAIL :: GLenum
gl_STENCIL_PASS_DEPTH_FAIL = 0x0B95
gl_RENDERBUFFER_SAMPLES_EXT :: GLenum
gl_RENDERBUFFER_SAMPLES_EXT = 0x8CAB
gl_REG_29_ATI :: GLenum
gl_REG_29_ATI = 0x893E
gl_COLOR_SUM_ARB :: GLenum
gl_COLOR_SUM_ARB = 0x8458
gl_COVERAGE_SAMPLES_NV :: GLenum
gl_COVERAGE_SAMPLES_NV = 0x8ED4
gl_QUAD_ALPHA4_SGIS :: GLenum
gl_QUAD_ALPHA4_SGIS = 0x811E
gl_TEXTURE9 :: GLenum
gl_TEXTURE9 = 0x84C9
gl_FRAME_NV :: GLenum
gl_FRAME_NV = 0x8E26
gl_SYNC_FENCE :: GLenum
gl_SYNC_FENCE = 0x9116
gl_TEXTURE_COMPRESSED_BLOCK_SIZE :: GLenum
gl_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3
gl_PROGRAM_STRING_ARB :: GLenum
gl_PROGRAM_STRING_ARB = 0x8628
gl_T2F_N3F_V3F :: GLenum
gl_T2F_N3F_V3F = 0x2A2B
gl_MODELVIEW0_STACK_DEPTH_EXT :: GLenum
gl_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3
gl_INDEX_WRITEMASK :: GLenum
gl_INDEX_WRITEMASK = 0x0C21
gl_INDEX_ARRAY :: GLenum
gl_INDEX_ARRAY = 0x8077
gl_LOCAL_CONSTANT_VALUE_EXT :: GLenum
gl_LOCAL_CONSTANT_VALUE_EXT = 0x87EC
gl_CURRENT_PALETTE_MATRIX_ARB :: GLenum
gl_CURRENT_PALETTE_MATRIX_ARB = 0x8843
gl_1PASS_EXT :: GLenum
gl_1PASS_EXT = 0x80A1
gl_MAX_PROGRAM_TEMPORARIES_ARB :: GLenum
gl_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5
gl_TEXTURE_PRIORITY_EXT :: GLenum
gl_TEXTURE_PRIORITY_EXT = 0x8066
gl_SCALE_BY_FOUR_NV :: GLenum
gl_SCALE_BY_FOUR_NV = 0x853F
gl_TEXTURE_BINDING_EXTERNAL_OES :: GLenum
gl_TEXTURE_BINDING_EXTERNAL_OES = 0x8D67
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E
gl_LUMINANCE_ALPHA_FLOAT16_APPLE :: GLenum
gl_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F
gl_RENDERBUFFER_HEIGHT_EXT :: GLenum
gl_RENDERBUFFER_HEIGHT_EXT = 0x8D43
gl_SIGNED_RGBA8_NV :: GLenum
gl_SIGNED_RGBA8_NV = 0x86FC
gl_MATRIX_INDEX_ARRAY_POINTER_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_POINTER_OES = 0x8849
gl_VIEW_CLASS_24_BITS :: GLenum
gl_VIEW_CLASS_24_BITS = 0x82C9
gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS :: GLenum
gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39
gl_GEOMETRY_INPUT_TYPE :: GLenum
gl_GEOMETRY_INPUT_TYPE = 0x8917
gl_POINT_SIZE_MAX_ARB :: GLenum
gl_POINT_SIZE_MAX_ARB = 0x8127
gl_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV :: GLenum
gl_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3
gl_CLIP_PLANE4 :: GLenum
gl_CLIP_PLANE4 = 0x3004
gl_COLOR_ARRAY_PARALLEL_POINTERS_INTEL :: GLenum
gl_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7
gl_PIXEL_GROUP_COLOR_SGIS :: GLenum
gl_PIXEL_GROUP_COLOR_SGIS = 0x8356
gl_DRAW_BUFFER5_NV :: GLenum
gl_DRAW_BUFFER5_NV = 0x882A
gl_MAP2_VERTEX_ATTRIB0_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670
gl_SRGB8_EXT :: GLenum
gl_SRGB8_EXT = 0x8C41
gl_MAX_SAMPLES_IMG :: GLenum
gl_MAX_SAMPLES_IMG = 0x9135
gl_PIXEL_MAP_I_TO_I :: GLenum
gl_PIXEL_MAP_I_TO_I = 0x0C70
gl_TEXTURE_SWIZZLE_A :: GLenum
gl_TEXTURE_SWIZZLE_A = 0x8E45
gl_ACTIVE_PROGRAM_EXT :: GLenum
gl_ACTIVE_PROGRAM_EXT = 0x8B8D
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519
gl_INT64_VEC3_NV :: GLenum
gl_INT64_VEC3_NV = 0x8FEA
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518
gl_POINTS :: GLenum
gl_POINTS = 0x0000
gl_PRIMITIVES_GENERATED_EXT :: GLenum
gl_PRIMITIVES_GENERATED_EXT = 0x8C87
gl_RGBA16I_EXT :: GLenum
gl_RGBA16I_EXT = 0x8D88
gl_PROGRAM_OUTPUT :: GLenum
gl_PROGRAM_OUTPUT = 0x92E4
gl_BLEND_EQUATION :: GLenum
gl_BLEND_EQUATION = 0x8009
gl_SAMPLE_ALPHA_TO_ONE_EXT :: GLenum
gl_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F
gl_UNSIGNED_SHORT_1_15_REV_MESA :: GLenum
gl_UNSIGNED_SHORT_1_15_REV_MESA = 0x8754
gl_QUERY_DEPTH_PASS_EVENT_BIT_AMD :: GLenum
gl_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001
gl_E_TIMES_F_NV :: GLenum
gl_E_TIMES_F_NV = 0x8531
gl_SOURCE2_ALPHA_EXT :: GLenum
gl_SOURCE2_ALPHA_EXT = 0x858A
gl_RGB_SNORM :: GLenum
gl_RGB_SNORM = 0x8F92
gl_MAX_PROGRAM_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1
gl_PACK_CMYK_HINT_EXT :: GLenum
gl_PACK_CMYK_HINT_EXT = 0x800E
gl_RENDERBUFFER_SAMPLES_IMG :: GLenum
gl_RENDERBUFFER_SAMPLES_IMG = 0x9133
gl_IMAGE_SCALE_X_HP :: GLenum
gl_IMAGE_SCALE_X_HP = 0x8155
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = 0x8D56
gl_SHADER_STORAGE_BUFFER_SIZE :: GLenum
gl_SHADER_STORAGE_BUFFER_SIZE = 0x90D5
gl_UNIFORM_NAME_LENGTH :: GLenum
gl_UNIFORM_NAME_LENGTH = 0x8A39
gl_DYNAMIC_ATI :: GLenum
gl_DYNAMIC_ATI = 0x8761
gl_FORMAT_SUBSAMPLE_24_24_OML :: GLenum
gl_FORMAT_SUBSAMPLE_24_24_OML = 0x8982
gl_UNSIGNED_INT :: GLenum
gl_UNSIGNED_INT = 0x1405
gl_LAYOUT_DEFAULT_INTEL :: GLenum
gl_LAYOUT_DEFAULT_INTEL = 0
gl_REG_12_ATI :: GLenum
gl_REG_12_ATI = 0x892D
gl_QUAD_STRIP :: GLenum
gl_QUAD_STRIP = 0x0008
gl_COLOR_SUM :: GLenum
gl_COLOR_SUM = 0x8458
gl_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0
gl_TEXTURE_GEN_Q :: GLenum
gl_TEXTURE_GEN_Q = 0x0C63
gl_UNPACK_COMPRESSED_BLOCK_DEPTH :: GLenum
gl_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129
gl_TEXTURE_VIEW_MIN_LEVEL :: GLenum
gl_TEXTURE_VIEW_MIN_LEVEL = 0x82DB
gl_STATIC_DRAW_ARB :: GLenum
gl_STATIC_DRAW_ARB = 0x88E4
gl_DEPTH_ATTACHMENT :: GLenum
gl_DEPTH_ATTACHMENT = 0x8D00
gl_INVALID_FRAMEBUFFER_OPERATION :: GLenum
gl_INVALID_FRAMEBUFFER_OPERATION = 0x0506
gl_MODELVIEW7_ARB :: GLenum
gl_MODELVIEW7_ARB = 0x8727
gl_TEXTURE_SWIZZLE_G :: GLenum
gl_TEXTURE_SWIZZLE_G = 0x8E43
gl_REG_22_ATI :: GLenum
gl_REG_22_ATI = 0x8937
gl_VERTEX_PRECLIP_SGIX :: GLenum
gl_VERTEX_PRECLIP_SGIX = 0x83EE
gl_POINT_TOKEN :: GLenum
gl_POINT_TOKEN = 0x0701
gl_SECONDARY_COLOR_ARRAY_LIST_IBM :: GLenum
gl_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077
gl_CON_9_ATI :: GLenum
gl_CON_9_ATI = 0x894A
gl_MODELVIEW31_ARB :: GLenum
gl_MODELVIEW31_ARB = 0x873F
gl_PACK_SKIP_PIXELS :: GLenum
gl_PACK_SKIP_PIXELS = 0x0D04
gl_FOG_COORDINATE_EXT :: GLenum
gl_FOG_COORDINATE_EXT = 0x8451
gl_R16I :: GLenum
gl_R16I = 0x8233
gl_MULTIPLY_NV :: GLenum
gl_MULTIPLY_NV = 0x9294
gl_VERTEX_ARRAY_RANGE_NV :: GLenum
gl_VERTEX_ARRAY_RANGE_NV = 0x851D
gl_TEXTURE_STORAGE_HINT_APPLE :: GLenum
gl_TEXTURE_STORAGE_HINT_APPLE = 0x85BC
gl_PATH_DASH_CAPS_NV :: GLenum
gl_PATH_DASH_CAPS_NV = 0x907B
gl_PROGRAM_LENGTH_ARB :: GLenum
gl_PROGRAM_LENGTH_ARB = 0x8627
gl_STENCIL_BUFFER_BIT1_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT1_QCOM = 0x00020000
gl_RGB_FLOAT16_APPLE :: GLenum
gl_RGB_FLOAT16_APPLE = 0x881B
gl_ELEMENT_ARRAY_TYPE_ATI :: GLenum
gl_ELEMENT_ARRAY_TYPE_ATI = 0x8769
gl_PATH_OBJECT_BOUNDING_BOX_NV :: GLenum
gl_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A
gl_MAX_COMPUTE_UNIFORM_BLOCKS :: GLenum
gl_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB
gl_MAP1_VERTEX_3 :: GLenum
gl_MAP1_VERTEX_3 = 0x0D97
gl_GEOMETRY_VERTICES_OUT :: GLenum
gl_GEOMETRY_VERTICES_OUT = 0x8916
gl_PIXEL_MAP_G_TO_G :: GLenum
gl_PIXEL_MAP_G_TO_G = 0x0C77
gl_MAX_IMAGE_UNITS_EXT :: GLenum
gl_MAX_IMAGE_UNITS_EXT = 0x8F38
gl_CLAMP_READ_COLOR_ARB :: GLenum
gl_CLAMP_READ_COLOR_ARB = 0x891C
gl_UNSIGNED_INT_IMAGE_CUBE :: GLenum
gl_UNSIGNED_INT_IMAGE_CUBE = 0x9066
gl_TRANSFORM_HINT_APPLE :: GLenum
gl_TRANSFORM_HINT_APPLE = 0x85B1
gl_TRACE_ARRAYS_BIT_MESA :: GLenum
gl_TRACE_ARRAYS_BIT_MESA = 0x0004
gl_MAP_FLUSH_EXPLICIT_BIT :: GLenum
gl_MAP_FLUSH_EXPLICIT_BIT = 0x0010
gl_IMAGE_CUBE :: GLenum
gl_IMAGE_CUBE = 0x9050
gl_MINMAX_SINK :: GLenum
gl_MINMAX_SINK = 0x8030
gl_VERTEX_ATTRIB_MAP1_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00
gl_TABLE_TOO_LARGE_EXT :: GLenum
gl_TABLE_TOO_LARGE_EXT = 0x8031
gl_POST_CONVOLUTION_GREEN_BIAS :: GLenum
gl_POST_CONVOLUTION_GREEN_BIAS = 0x8021
gl_POST_COLOR_MATRIX_RED_SCALE_SGI :: GLenum
gl_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4
gl_SOFTLIGHT_NV :: GLenum
gl_SOFTLIGHT_NV = 0x929C
gl_MAP2_VERTEX_ATTRIB5_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675
gl_RENDERBUFFER_STENCIL_SIZE_OES :: GLenum
gl_RENDERBUFFER_STENCIL_SIZE_OES = 0x8D55
gl_QUERY_NO_WAIT :: GLenum
gl_QUERY_NO_WAIT = 0x8E14
gl_VERTEX_SHADER_INSTRUCTIONS_EXT :: GLenum
gl_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF
gl_UNSIGNED_BYTE_3_3_2_EXT :: GLenum
gl_UNSIGNED_BYTE_3_3_2_EXT = 0x8032
gl_MAX_TEXTURE_LOD_BIAS :: GLenum
gl_MAX_TEXTURE_LOD_BIAS = 0x84FD
gl_RGB_S3TC :: GLenum
gl_RGB_S3TC = 0x83A0
gl_COLOR_ARRAY_LIST_IBM :: GLenum
gl_COLOR_ARRAY_LIST_IBM = 103072
gl_TEXTURE31 :: GLenum
gl_TEXTURE31 = 0x84DF
gl_BITMAP :: GLenum
gl_BITMAP = 0x1A00
gl_VERTEX_ARRAY_SIZE :: GLenum
gl_VERTEX_ARRAY_SIZE = 0x807A
gl_PATH_GEN_COEFF_NV :: GLenum
gl_PATH_GEN_COEFF_NV = 0x90B1
gl_UNPACK_ROW_LENGTH :: GLenum
gl_UNPACK_ROW_LENGTH = 0x0CF2
gl_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT :: GLenum
gl_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52
gl_BUFFER_MAP_POINTER :: GLenum
gl_BUFFER_MAP_POINTER = 0x88BD
gl_2PASS_0_SGIS :: GLenum
gl_2PASS_0_SGIS = 0x80A2
gl_TEXTURE9_ARB :: GLenum
gl_TEXTURE9_ARB = 0x84C9
gl_ELEMENT_ARRAY_BUFFER_BINDING :: GLenum
gl_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895
gl_VERTEX_ATTRIB_ARRAY_INTEGER_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD
gl_CURRENT_RASTER_INDEX :: GLenum
gl_CURRENT_RASTER_INDEX = 0x0B05
gl_TEXTURE12_ARB :: GLenum
gl_TEXTURE12_ARB = 0x84CC
gl_BGRA_INTEGER_EXT :: GLenum
gl_BGRA_INTEGER_EXT = 0x8D9B
gl_PERFQUERY_COUNTER_DATA_BOOL32_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC
gl_DOUBLE_MAT4x3_EXT :: GLenum
gl_DOUBLE_MAT4x3_EXT = 0x8F4E
gl_FOG_START :: GLenum
gl_FOG_START = 0x0B63
gl_TEXTURE_1D_ARRAY :: GLenum
gl_TEXTURE_1D_ARRAY = 0x8C18
gl_SIGNED_ALPHA8_NV :: GLenum
gl_SIGNED_ALPHA8_NV = 0x8706
gl_DIFFERENCE_KHR :: GLenum
gl_DIFFERENCE_KHR = 0x929E
gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT :: GLenum
gl_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = 0x8F63
gl_VIDEO_BUFFER_NV :: GLenum
gl_VIDEO_BUFFER_NV = 0x9020
gl_BUFFER_MAPPED_OES :: GLenum
gl_BUFFER_MAPPED_OES = 0x88BC
gl_TEXTURE_COMPARE_OPERATOR_SGIX :: GLenum
gl_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B
gl_VERTEX_WEIGHT_ARRAY_TYPE_EXT :: GLenum
gl_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E
gl_OUTPUT_TEXTURE_COORD9_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6
gl_FRAGMENT_COVERAGE_TO_COLOR_NV :: GLenum
gl_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD
gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY :: GLenum
gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A
gl_MAX_DRAW_BUFFERS_ARB :: GLenum
gl_MAX_DRAW_BUFFERS_ARB = 0x8824
gl_DOT3_ATI :: GLenum
gl_DOT3_ATI = 0x8966
gl_TEXTURE_LOD_BIAS_T_SGIX :: GLenum
gl_TEXTURE_LOD_BIAS_T_SGIX = 0x818F
gl_BINORMAL_ARRAY_EXT :: GLenum
gl_BINORMAL_ARRAY_EXT = 0x843A
gl_UNSIGNED_INT_10F_11F_11F_REV_EXT :: GLenum
gl_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B
gl_SAMPLE_PATTERN_SGIS :: GLenum
gl_SAMPLE_PATTERN_SGIS = 0x80AC
gl_MAX_COLOR_MATRIX_STACK_DEPTH_SGI :: GLenum
gl_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3
gl_PHONG_HINT_WIN :: GLenum
gl_PHONG_HINT_WIN = 0x80EB
gl_MAX_LABEL_LENGTH :: GLenum
gl_MAX_LABEL_LENGTH = 0x82E8
gl_TEXTURE_CLIPMAP_OFFSET_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173
gl_ALPHA_MIN_CLAMP_INGR :: GLenum
gl_ALPHA_MIN_CLAMP_INGR = 0x8563
gl_LAYER_PROVOKING_VERTEX_EXT :: GLenum
gl_LAYER_PROVOKING_VERTEX_EXT = 0x825E
gl_DEBUG_GROUP_STACK_DEPTH_KHR :: GLenum
gl_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826D
gl_DEBUG_SOURCE_API_ARB :: GLenum
gl_DEBUG_SOURCE_API_ARB = 0x8246
gl_HI_BIAS_NV :: GLenum
gl_HI_BIAS_NV = 0x8714
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7
gl_TEXTURE_TARGET_QCOM :: GLenum
gl_TEXTURE_TARGET_QCOM = 0x8BDA
gl_MODELVIEW20_ARB :: GLenum
gl_MODELVIEW20_ARB = 0x8734
gl_TEXTURE22 :: GLenum
gl_TEXTURE22 = 0x84D6
gl_DRAW_BUFFER10_ARB :: GLenum
gl_DRAW_BUFFER10_ARB = 0x882F
gl_DARKEN_NV :: GLenum
gl_DARKEN_NV = 0x9297
gl_BUFFER_USAGE_ARB :: GLenum
gl_BUFFER_USAGE_ARB = 0x8765
gl_RGB16F_EXT :: GLenum
gl_RGB16F_EXT = 0x881B
gl_SYNC_STATUS_APPLE :: GLenum
gl_SYNC_STATUS_APPLE = 0x9114
gl_ALPHA32F_ARB :: GLenum
gl_ALPHA32F_ARB = 0x8816
gl_CONST_EYE_NV :: GLenum
gl_CONST_EYE_NV = 0x86E5
gl_OBJECT_LINEAR :: GLenum
gl_OBJECT_LINEAR = 0x2401
gl_TRUE :: GLenum
gl_TRUE = 1
gl_VERTEX_ATTRIB_ARRAY_ADDRESS_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20
gl_TEXTURE_MIN_FILTER :: GLenum
gl_TEXTURE_MIN_FILTER = 0x2801
gl_TEXTURE_COMPRESSED_BLOCK_WIDTH :: GLenum
gl_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1
gl_SWIZZLE_STR_ATI :: GLenum
gl_SWIZZLE_STR_ATI = 0x8976
gl_TEXTURE7 :: GLenum
gl_TEXTURE7 = 0x84C7
gl_MATRIX29_ARB :: GLenum
gl_MATRIX29_ARB = 0x88DD
gl_FRAMEBUFFER_DEFAULT_LAYERS_EXT :: GLenum
gl_FRAMEBUFFER_DEFAULT_LAYERS_EXT = 0x9312
gl_REPLACE :: GLenum
gl_REPLACE = 0x1E01
gl_COMBINE_RGB_ARB :: GLenum
gl_COMBINE_RGB_ARB = 0x8571
gl_GREEN_BITS :: GLenum
gl_GREEN_BITS = 0x0D53
gl_LUMINANCE16UI_EXT :: GLenum
gl_LUMINANCE16UI_EXT = 0x8D7A
gl_TEXTURE14_ARB :: GLenum
gl_TEXTURE14_ARB = 0x84CE
gl_INT_SAMPLER_1D :: GLenum
gl_INT_SAMPLER_1D = 0x8DC9
gl_MAX_ACTIVE_LIGHTS_SGIX :: GLenum
gl_MAX_ACTIVE_LIGHTS_SGIX = 0x8405
gl_COMBINE_ALPHA_ARB :: GLenum
gl_COMBINE_ALPHA_ARB = 0x8572
gl_VERTEX_SHADER_LOCALS_EXT :: GLenum
gl_VERTEX_SHADER_LOCALS_EXT = 0x87D3
gl_POLYGON_SMOOTH :: GLenum
gl_POLYGON_SMOOTH = 0x0B41
gl_PERFQUERY_COUNTER_EVENT_INTEL :: GLenum
gl_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0
gl_EVAL_VERTEX_ATTRIB6_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB6_NV = 0x86CC
gl_VIEWPORT :: GLenum
gl_VIEWPORT = 0x0BA2
gl_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV :: GLenum
gl_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F
gl_BUFFER_STORAGE_FLAGS :: GLenum
gl_BUFFER_STORAGE_FLAGS = 0x8220
gl_COMPRESSED_RED :: GLenum
gl_COMPRESSED_RED = 0x8225
gl_INDEX_ARRAY_EXT :: GLenum
gl_INDEX_ARRAY_EXT = 0x8077
gl_COLOR_TABLE_SCALE_SGI :: GLenum
gl_COLOR_TABLE_SCALE_SGI = 0x80D6
gl_MAX_VARYING_FLOATS_ARB :: GLenum
gl_MAX_VARYING_FLOATS_ARB = 0x8B4B
gl_COMPRESSED_RED_GREEN_RGTC2_EXT :: GLenum
gl_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD
gl_DRAW_BUFFER4_ATI :: GLenum
gl_DRAW_BUFFER4_ATI = 0x8829
gl_QUERY_BY_REGION_NO_WAIT :: GLenum
gl_QUERY_BY_REGION_NO_WAIT = 0x8E16
gl_SAMPLE_BUFFERS_EXT :: GLenum
gl_SAMPLE_BUFFERS_EXT = 0x80A8
gl_MODELVIEW :: GLenum
gl_MODELVIEW = 0x1700
gl_IMAGE_FORMAT_COMPATIBILITY_TYPE :: GLenum
gl_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7
gl_SAMPLER_2D_MULTISAMPLE :: GLenum
gl_SAMPLER_2D_MULTISAMPLE = 0x9108
gl_LOGIC_OP :: GLenum
gl_LOGIC_OP = 0x0BF1
gl_MAX_ARRAY_TEXTURE_LAYERS_EXT :: GLenum
gl_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF
gl_COMBINE4_NV :: GLenum
gl_COMBINE4_NV = 0x8503
gl_DEBUG_CALLBACK_FUNCTION_ARB :: GLenum
gl_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244
gl_SYNC_STATUS :: GLenum
gl_SYNC_STATUS = 0x9114
gl_CLIP_DISTANCE1_APPLE :: GLenum
gl_CLIP_DISTANCE1_APPLE = 0x3001
gl_MAX_SAMPLE_MASK_WORDS_NV :: GLenum
gl_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59
gl_UNIFORM_BLOCK_ACTIVE_UNIFORMS :: GLenum
gl_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42
gl_SOURCE1_ALPHA_ARB :: GLenum
gl_SOURCE1_ALPHA_ARB = 0x8589
gl_CUBIC_CURVE_TO_NV :: GLenum
gl_CUBIC_CURVE_TO_NV = 0x0C
gl_GEOMETRY_PROGRAM_NV :: GLenum
gl_GEOMETRY_PROGRAM_NV = 0x8C26
gl_UNSIGNED_INT_8_8_S8_S8_REV_NV :: GLenum
gl_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB
gl_COMPRESSED_R11_EAC_OES :: GLenum
gl_COMPRESSED_R11_EAC_OES = 0x9270
gl_TESS_EVALUATION_SHADER_BIT :: GLenum
gl_TESS_EVALUATION_SHADER_BIT = 0x00000010
gl_ALL_ATTRIB_BITS :: GLenum
gl_ALL_ATTRIB_BITS = 0xFFFFFFFF
gl_DOUBLE_MAT3x2 :: GLenum
gl_DOUBLE_MAT3x2 = 0x8F4B
gl_PIXEL_MAP_I_TO_A :: GLenum
gl_PIXEL_MAP_I_TO_A = 0x0C75
gl_INDEX_ARRAY_BUFFER_BINDING :: GLenum
gl_INDEX_ARRAY_BUFFER_BINDING = 0x8899
gl_PROGRAM_MATRIX_EXT :: GLenum
gl_PROGRAM_MATRIX_EXT = 0x8E2D
gl_INT_IMAGE_2D_EXT :: GLenum
gl_INT_IMAGE_2D_EXT = 0x9058
gl_RENDERBUFFER_DEPTH_SIZE :: GLenum
gl_RENDERBUFFER_DEPTH_SIZE = 0x8D54
gl_QUERY_COUNTER_BITS_ARB :: GLenum
gl_QUERY_COUNTER_BITS_ARB = 0x8864
gl_HISTOGRAM_RED_SIZE_EXT :: GLenum
gl_HISTOGRAM_RED_SIZE_EXT = 0x8028
gl_FOG_BIT :: GLenum
gl_FOG_BIT = 0x00000080
gl_TRANSPOSE_PROGRAM_MATRIX_EXT :: GLenum
gl_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E
gl_ADD_SIGNED_ARB :: GLenum
gl_ADD_SIGNED_ARB = 0x8574
gl_STENCIL_FUNC :: GLenum
gl_STENCIL_FUNC = 0x0B92
gl_TEXTURE21_ARB :: GLenum
gl_TEXTURE21_ARB = 0x84D5
gl_MAX_3D_TEXTURE_SIZE :: GLenum
gl_MAX_3D_TEXTURE_SIZE = 0x8073
gl_NORMAL_ARRAY_TYPE_EXT :: GLenum
gl_NORMAL_ARRAY_TYPE_EXT = 0x807E
gl_MINMAX_FORMAT_EXT :: GLenum
gl_MINMAX_FORMAT_EXT = 0x802F
gl_FRAMEBUFFER_BINDING_ANGLE :: GLenum
gl_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6
gl_ASYNC_TEX_IMAGE_SGIX :: GLenum
gl_ASYNC_TEX_IMAGE_SGIX = 0x835C
gl_TRANSFORM_FEEDBACK_VARYINGS_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83
gl_OBJECT_BUFFER_SIZE_ATI :: GLenum
gl_OBJECT_BUFFER_SIZE_ATI = 0x8764
gl_RENDERBUFFER_RED_SIZE_OES :: GLenum
gl_RENDERBUFFER_RED_SIZE_OES = 0x8D50
gl_PERFQUERY_COUNTER_DURATION_NORM_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1
gl_VERTEX_ID_SWIZZLE_AMD :: GLenum
gl_VERTEX_ID_SWIZZLE_AMD = 0x91A5
gl_MATRIX22_ARB :: GLenum
gl_MATRIX22_ARB = 0x88D6
gl_DYNAMIC_COPY :: GLenum
gl_DYNAMIC_COPY = 0x88EA
gl_BLUE_BIAS :: GLenum
gl_BLUE_BIAS = 0x0D1B
gl_CON_20_ATI :: GLenum
gl_CON_20_ATI = 0x8955
gl_RGBA_S3TC :: GLenum
gl_RGBA_S3TC = 0x83A2
gl_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213
gl_DEBUG_CATEGORY_APPLICATION_AMD :: GLenum
gl_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F
gl_FRAGMENT_SHADER_INVOCATIONS_ARB :: GLenum
gl_FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4
gl_2D :: GLenum
gl_2D = 0x0600
gl_SIGNALED_APPLE :: GLenum
gl_SIGNALED_APPLE = 0x9119
gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT :: GLenum
gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = 0x90D8
gl_DEPTH_STENCIL_OES :: GLenum
gl_DEPTH_STENCIL_OES = 0x84F9
gl_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33
gl_VARIABLE_B_NV :: GLenum
gl_VARIABLE_B_NV = 0x8524
gl_SOURCE2_RGB_ARB :: GLenum
gl_SOURCE2_RGB_ARB = 0x8582
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516
gl_VERTEX_PROGRAM_POINT_SIZE :: GLenum
gl_VERTEX_PROGRAM_POINT_SIZE = 0x8642
gl_RESTART_SUN :: GLenum
gl_RESTART_SUN = 0x0001
gl_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI :: GLenum
gl_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4
gl_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A
gl_FRAMEBUFFER_BARRIER_BIT_EXT :: GLenum
gl_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400
gl_R32F_EXT :: GLenum
gl_R32F_EXT = 0x822E
gl_COLOR_ATTACHMENT5_EXT :: GLenum
gl_COLOR_ATTACHMENT5_EXT = 0x8CE5
gl_STENCIL_TEST_TWO_SIDE_EXT :: GLenum
gl_STENCIL_TEST_TWO_SIDE_EXT = 0x8910
gl_OPERAND2_ALPHA_EXT :: GLenum
gl_OPERAND2_ALPHA_EXT = 0x859A
gl_EDGE_FLAG_ARRAY_STRIDE_EXT :: GLenum
gl_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C
gl_CONJOINT_NV :: GLenum
gl_CONJOINT_NV = 0x9284
gl_VERTEX_ATTRIB_MAP2_COEFF_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07
gl_POINT_FADE_THRESHOLD_SIZE_ARB :: GLenum
gl_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9
gl_NEGATIVE_Z_EXT :: GLenum
gl_NEGATIVE_Z_EXT = 0x87DB
gl_DST_OUT_NV :: GLenum
gl_DST_OUT_NV = 0x928D
gl_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT :: GLenum
gl_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET :: GLenum
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C
gl_HILO16_NV :: GLenum
gl_HILO16_NV = 0x86F8
gl_READ_FRAMEBUFFER_BINDING_EXT :: GLenum
gl_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA
gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = 0x9279
gl_UNSIGNED_INT_IMAGE_2D_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063
gl_REFERENCED_BY_TESS_CONTROL_SHADER :: GLenum
gl_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307
gl_RGB10_A2_EXT :: GLenum
gl_RGB10_A2_EXT = 0x8059
gl_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC
gl_REQUIRED_TEXTURE_IMAGE_UNITS_OES :: GLenum
gl_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 0x8D68
gl_CLAMP_TO_BORDER :: GLenum
gl_CLAMP_TO_BORDER = 0x812D
gl_SPRITE_MODE_SGIX :: GLenum
gl_SPRITE_MODE_SGIX = 0x8149
gl_CLOSE_PATH_NV :: GLenum
gl_CLOSE_PATH_NV = 0x00
gl_RGB_FLOAT32_APPLE :: GLenum
gl_RGB_FLOAT32_APPLE = 0x8815
gl_FUNC_SUBTRACT_OES :: GLenum
gl_FUNC_SUBTRACT_OES = 0x800A
gl_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR :: GLenum
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = 0x824E
gl_OUTPUT_COLOR0_EXT :: GLenum
gl_OUTPUT_COLOR0_EXT = 0x879B
gl_FALSE :: GLenum
gl_FALSE = 0
gl_STENCIL_SAMPLES_NV :: GLenum
gl_STENCIL_SAMPLES_NV = 0x932E
gl_TRACK_MATRIX_NV :: GLenum
gl_TRACK_MATRIX_NV = 0x8648
gl_RELEASED_APPLE :: GLenum
gl_RELEASED_APPLE = 0x8A19
gl_DOUBLE_MAT2x4 :: GLenum
gl_DOUBLE_MAT2x4 = 0x8F4A
gl_MAX_CUBE_MAP_TEXTURE_SIZE_ARB :: GLenum
gl_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C
gl_EDGE_FLAG_ARRAY_LENGTH_NV :: GLenum
gl_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30
gl_DRAW_BUFFER14 :: GLenum
gl_DRAW_BUFFER14 = 0x8833
gl_VERTEX_ARRAY_BUFFER_BINDING :: GLenum
gl_VERTEX_ARRAY_BUFFER_BINDING = 0x8896
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = 0x8D56
gl_CONSERVE_MEMORY_HINT_PGI :: GLenum
gl_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD
gl_INCR_WRAP :: GLenum
gl_INCR_WRAP = 0x8507
gl_PROGRAM_PIPELINE :: GLenum
gl_PROGRAM_PIPELINE = 0x82E4
gl_DISCARD_ATI :: GLenum
gl_DISCARD_ATI = 0x8763
gl_RG8_SNORM :: GLenum
gl_RG8_SNORM = 0x8F95
gl_MAP2_TEXTURE_COORD_2 :: GLenum
gl_MAP2_TEXTURE_COORD_2 = 0x0DB4
gl_QUERY_BUFFER_BINDING_AMD :: GLenum
gl_QUERY_BUFFER_BINDING_AMD = 0x9193
gl_SHARED_TEXTURE_PALETTE_EXT :: GLenum
gl_SHARED_TEXTURE_PALETTE_EXT = 0x81FB
gl_MAP2_VERTEX_ATTRIB13_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D
gl_DRAW_BUFFER13_ARB :: GLenum
gl_DRAW_BUFFER13_ARB = 0x8832
gl_SPECULAR :: GLenum
gl_SPECULAR = 0x1202
gl_LINE :: GLenum
gl_LINE = 0x1B01
gl_INT64_VEC4_NV :: GLenum
gl_INT64_VEC4_NV = 0x8FEB
gl_TESS_GEN_VERTEX_ORDER :: GLenum
gl_TESS_GEN_VERTEX_ORDER = 0x8E78
gl_TEXTURE_CUBE_MAP_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_EXT = 0x8513
gl_DEPTH_BUFFER_BIT2_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT2_QCOM = 0x00000400
gl_ANY_SAMPLES_PASSED_CONSERVATIVE :: GLenum
gl_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A
gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266
gl_DYNAMIC_STORAGE_BIT :: GLenum
gl_DYNAMIC_STORAGE_BIT = 0x0100
gl_PN_TRIANGLES_NORMAL_MODE_ATI :: GLenum
gl_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3
gl_VARIABLE_E_NV :: GLenum
gl_VARIABLE_E_NV = 0x8527
gl_PIXEL_MAP_I_TO_G_SIZE :: GLenum
gl_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3
gl_TEXTURE_GEN_STR_OES :: GLenum
gl_TEXTURE_GEN_STR_OES = 0x8D60
gl_UNSIGNED_SHORT_5_6_5_REV :: GLenum
gl_UNSIGNED_SHORT_5_6_5_REV = 0x8364
gl_TEXTURE_CUBE_MAP_ARRAY :: GLenum
gl_TEXTURE_CUBE_MAP_ARRAY = 0x9009
gl_YCBCR_422_APPLE :: GLenum
gl_YCBCR_422_APPLE = 0x85B9
gl_TEXTURE_BASE_LEVEL_SGIS :: GLenum
gl_TEXTURE_BASE_LEVEL_SGIS = 0x813C
gl_INDEX_ARRAY_POINTER :: GLenum
gl_INDEX_ARRAY_POINTER = 0x8091
gl_UNSIGNALED_APPLE :: GLenum
gl_UNSIGNALED_APPLE = 0x9118
gl_DEBUG_TYPE_OTHER_ARB :: GLenum
gl_DEBUG_TYPE_OTHER_ARB = 0x8251
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A
gl_EXP :: GLenum
gl_EXP = 0x0800
gl_TESSELLATION_FACTOR_AMD :: GLenum
gl_TESSELLATION_FACTOR_AMD = 0x9005
gl_TEXTURE_DEFORMATION_SGIX :: GLenum
gl_TEXTURE_DEFORMATION_SGIX = 0x8195
gl_BGR_INTEGER_EXT :: GLenum
gl_BGR_INTEGER_EXT = 0x8D9A
gl_POLYGON_STIPPLE :: GLenum
gl_POLYGON_STIPPLE = 0x0B42
gl_BLEND_DST_RGB_OES :: GLenum
gl_BLEND_DST_RGB_OES = 0x80C8
gl_VERTEX_STREAM4_ATI :: GLenum
gl_VERTEX_STREAM4_ATI = 0x8770
gl_TEXTURE_BLUE_TYPE :: GLenum
gl_TEXTURE_BLUE_TYPE = 0x8C12
gl_VERTEX_PROGRAM_NV :: GLenum
gl_VERTEX_PROGRAM_NV = 0x8620
gl_COLOR_ATTACHMENT9_EXT :: GLenum
gl_COLOR_ATTACHMENT9_EXT = 0x8CE9
gl_IMAGE_2D_RECT_EXT :: GLenum
gl_IMAGE_2D_RECT_EXT = 0x904F
gl_INTERLACE_OML :: GLenum
gl_INTERLACE_OML = 0x8980
gl_CON_29_ATI :: GLenum
gl_CON_29_ATI = 0x895E
gl_NUM_PASSES_ATI :: GLenum
gl_NUM_PASSES_ATI = 0x8970
gl_UNSIGNED_IDENTITY_NV :: GLenum
gl_UNSIGNED_IDENTITY_NV = 0x8536
gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = 0x8E8A
gl_BLUE_INTEGER_EXT :: GLenum
gl_BLUE_INTEGER_EXT = 0x8D96
gl_MATRIX11_ARB :: GLenum
gl_MATRIX11_ARB = 0x88CB
gl_NUM_COMPATIBLE_SUBROUTINES :: GLenum
gl_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A
gl_LIGHT_MODEL_COLOR_CONTROL_EXT :: GLenum
gl_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8
gl_VERTEX_ATTRIB_ARRAY_NORMALIZED :: GLenum
gl_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A
gl_HIGH_INT :: GLenum
gl_HIGH_INT = 0x8DF5
gl_FRAGMENT_SHADER_ATI :: GLenum
gl_FRAGMENT_SHADER_ATI = 0x8920
gl_BUFFER_MAP_LENGTH :: GLenum
gl_BUFFER_MAP_LENGTH = 0x9120
gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT :: GLenum
gl_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2
gl_ACTIVE_VARYINGS_NV :: GLenum
gl_ACTIVE_VARYINGS_NV = 0x8C81
gl_UNIFORM_BARRIER_BIT_EXT :: GLenum
gl_UNIFORM_BARRIER_BIT_EXT = 0x00000004
gl_FRAGMENT_PROGRAM_POSITION_MESA :: GLenum
gl_FRAGMENT_PROGRAM_POSITION_MESA = 0x8BB0
gl_TEXTURE18_ARB :: GLenum
gl_TEXTURE18_ARB = 0x84D2
gl_SYNC_FLAGS :: GLenum
gl_SYNC_FLAGS = 0x9115
gl_COMPRESSED_RGBA :: GLenum
gl_COMPRESSED_RGBA = 0x84EE
gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS :: GLenum
gl_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3
gl_FENCE_CONDITION_NV :: GLenum
gl_FENCE_CONDITION_NV = 0x84F4
gl_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA :: GLenum
gl_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = 0x8BB3
gl_UNPACK_FLIP_Y_WEBGL :: GLenum
gl_UNPACK_FLIP_Y_WEBGL = 0x9240
gl_422_REV_EXT :: GLenum
gl_422_REV_EXT = 0x80CD
gl_PIXEL_UNPACK_BUFFER_ARB :: GLenum
gl_PIXEL_UNPACK_BUFFER_ARB = 0x88EC
gl_FONT_UNITS_PER_EM_BIT_NV :: GLenum
gl_FONT_UNITS_PER_EM_BIT_NV = 0x00100000
gl_PLUS_DARKER_NV :: GLenum
gl_PLUS_DARKER_NV = 0x9292
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = 0x8C4E
gl_MAX_PROGRAM_NATIVE_PARAMETERS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB
gl_MULTISAMPLE_SGIS :: GLenum
gl_MULTISAMPLE_SGIS = 0x809D
gl_MIXED_STENCIL_SAMPLES_SUPPORTED_NV :: GLenum
gl_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = 0x9330
gl_DRAW_BUFFER14_ATI :: GLenum
gl_DRAW_BUFFER14_ATI = 0x8833
gl_COLOR_TABLE_LUMINANCE_SIZE_SGI :: GLenum
gl_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE
gl_CURRENT_MATRIX_ARB :: GLenum
gl_CURRENT_MATRIX_ARB = 0x8641
gl_TEXTURE_SWIZZLE_R :: GLenum
gl_TEXTURE_SWIZZLE_R = 0x8E42
gl_FRAGMENT_SHADER_ARB :: GLenum
gl_FRAGMENT_SHADER_ARB = 0x8B30
gl_PIXEL_TEX_GEN_ALPHA_LS_SGIX :: GLenum
gl_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189
gl_PROGRAM_BINARY_RETRIEVABLE_HINT :: GLenum
gl_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257
gl_MAX_UNIFORM_BUFFER_BINDINGS :: GLenum
gl_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F
gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS :: GLenum
gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80
gl_MAX_PROGRAM_GENERIC_RESULTS_NV :: GLenum
gl_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D
gl_RGB10_A2UI :: GLenum
gl_RGB10_A2UI = 0x906F
gl_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES :: GLenum
gl_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898D
gl_STATIC_ATI :: GLenum
gl_STATIC_ATI = 0x8760
gl_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT :: GLenum
gl_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5
gl_SLIM8U_SGIX :: GLenum
gl_SLIM8U_SGIX = 0x831D
gl_CONVOLUTION_HINT_SGIX :: GLenum
gl_CONVOLUTION_HINT_SGIX = 0x8316
gl_REG_8_ATI :: GLenum
gl_REG_8_ATI = 0x8929
gl_INT_IMAGE_3D_EXT :: GLenum
gl_INT_IMAGE_3D_EXT = 0x9059
gl_MAX_EVAL_ORDER :: GLenum
gl_MAX_EVAL_ORDER = 0x0D30
gl_3_BYTES_NV :: GLenum
gl_3_BYTES_NV = 0x1408
gl_R11F_G11F_B10F :: GLenum
gl_R11F_G11F_B10F = 0x8C3A
gl_YCRCB_SGIX :: GLenum
gl_YCRCB_SGIX = 0x8318
gl_R8UI :: GLenum
gl_R8UI = 0x8232
gl_CURRENT_VERTEX_WEIGHT_EXT :: GLenum
gl_CURRENT_VERTEX_WEIGHT_EXT = 0x850B
gl_HISTOGRAM_ALPHA_SIZE :: GLenum
gl_HISTOGRAM_ALPHA_SIZE = 0x802B
gl_CLIP_PLANE0_IMG :: GLenum
gl_CLIP_PLANE0_IMG = 0x3000
gl_MODELVIEW16_ARB :: GLenum
gl_MODELVIEW16_ARB = 0x8730
gl_REFERENCED_BY_TESS_EVALUATION_SHADER :: GLenum
gl_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308
gl_RENDERBUFFER_DEPTH_SIZE_EXT :: GLenum
gl_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54
gl_COMPRESSED_RGBA_ASTC_8x5_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5
gl_MAX_RENDERBUFFER_SIZE_OES :: GLenum
gl_MAX_RENDERBUFFER_SIZE_OES = 0x84E8
gl_OFFSET_HILO_TEXTURE_RECTANGLE_NV :: GLenum
gl_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855
gl_INSTRUMENT_MEASUREMENTS_SGIX :: GLenum
gl_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2
gl_IMAGE_BINDING_NAME :: GLenum
gl_IMAGE_BINDING_NAME = 0x8F3A
gl_EXPAND_NORMAL_NV :: GLenum
gl_EXPAND_NORMAL_NV = 0x8538
gl_SIGNED_IDENTITY_NV :: GLenum
gl_SIGNED_IDENTITY_NV = 0x853C
gl_GEOMETRY_SHADER_INVOCATIONS :: GLenum
gl_GEOMETRY_SHADER_INVOCATIONS = 0x887F
gl_COVERAGE_ALL_FRAGMENTS_NV :: GLenum
gl_COVERAGE_ALL_FRAGMENTS_NV = 0x8ED5
gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E1E
gl_LOW_FLOAT :: GLenum
gl_LOW_FLOAT = 0x8DF0
gl_MAX_VERTEX_OUTPUT_COMPONENTS :: GLenum
gl_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122
gl_CURRENT_RASTER_POSITION :: GLenum
gl_CURRENT_RASTER_POSITION = 0x0B07
gl_MODELVIEW0_MATRIX_EXT :: GLenum
gl_MODELVIEW0_MATRIX_EXT = 0x0BA6
gl_RG32UI :: GLenum
gl_RG32UI = 0x823C
gl_VERTEX_ATTRIB_ARRAY_LENGTH_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_OES :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = 0x8517
gl_INTENSITY_EXT :: GLenum
gl_INTENSITY_EXT = 0x8049
gl_VARIANT_ARRAY_EXT :: GLenum
gl_VARIANT_ARRAY_EXT = 0x87E8
gl_COMPRESSED_RGBA_ASTC_8x6_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6
gl_GREEN_NV :: GLenum
gl_GREEN_NV = 0x1904
gl_DYNAMIC_DRAW_ARB :: GLenum
gl_DYNAMIC_DRAW_ARB = 0x88E8
gl_WEIGHT_ARRAY_SIZE_OES :: GLenum
gl_WEIGHT_ARRAY_SIZE_OES = 0x86AB
gl_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB :: GLenum
gl_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A
gl_IMAGE_ROTATE_ANGLE_HP :: GLenum
gl_IMAGE_ROTATE_ANGLE_HP = 0x8159
gl_COLOR_ARRAY_STRIDE :: GLenum
gl_COLOR_ARRAY_STRIDE = 0x8083
gl_VERTEX_ARRAY_RANGE_VALID_NV :: GLenum
gl_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F
gl_TEXTURE27 :: GLenum
gl_TEXTURE27 = 0x84DB
gl_COMPRESSED_RGBA_ASTC_4x4_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0
gl_MAP1_VERTEX_ATTRIB7_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667
gl_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174
gl_COLOR_TABLE :: GLenum
gl_COLOR_TABLE = 0x80D0
gl_LUMINANCE32I_EXT :: GLenum
gl_LUMINANCE32I_EXT = 0x8D86
gl_INTERNALFORMAT_RED_SIZE :: GLenum
gl_INTERNALFORMAT_RED_SIZE = 0x8271
gl_RASTERIZER_DISCARD_NV :: GLenum
gl_RASTERIZER_DISCARD_NV = 0x8C89
gl_MAX_TEXTURE_UNITS :: GLenum
gl_MAX_TEXTURE_UNITS = 0x84E2
gl_DUAL_INTENSITY8_SGIS :: GLenum
gl_DUAL_INTENSITY8_SGIS = 0x8119
gl_RELATIVE_RECT_NV :: GLenum
gl_RELATIVE_RECT_NV = 0xF7
gl_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX :: GLenum
gl_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA
gl_SAMPLES :: GLenum
gl_SAMPLES = 0x80A9
gl_CURRENT_RASTER_SECONDARY_COLOR :: GLenum
gl_CURRENT_RASTER_SECONDARY_COLOR = 0x845F
gl_RGB8 :: GLenum
gl_RGB8 = 0x8051
gl_FACTOR_MIN_AMD :: GLenum
gl_FACTOR_MIN_AMD = 0x901C
gl_VERTEX_ATTRIB_ARRAY_STRIDE_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624
gl_NORMAL_MAP_OES :: GLenum
gl_NORMAL_MAP_OES = 0x8511
gl_PATH_STROKE_BOUNDING_BOX_NV :: GLenum
gl_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2
gl_COMPRESSED_SIGNED_RG11_EAC :: GLenum
gl_COMPRESSED_SIGNED_RG11_EAC = 0x9273
gl_LUMINANCE_ALPHA16UI_EXT :: GLenum
gl_LUMINANCE_ALPHA16UI_EXT = 0x8D7B
gl_MAX_GENERAL_COMBINERS_NV :: GLenum
gl_MAX_GENERAL_COMBINERS_NV = 0x854D
gl_LEQUAL :: GLenum
gl_LEQUAL = 0x0203
gl_MAP2_VERTEX_ATTRIB10_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A
gl_MAX_VARYING_VECTORS :: GLenum
gl_MAX_VARYING_VECTORS = 0x8DFC
gl_GEOMETRY_SHADER_EXT :: GLenum
gl_GEOMETRY_SHADER_EXT = 0x8DD9
gl_IMAGE_BINDING_LAYER_EXT :: GLenum
gl_IMAGE_BINDING_LAYER_EXT = 0x8F3D
gl_DEPTH_STENCIL_EXT :: GLenum
gl_DEPTH_STENCIL_EXT = 0x84F9
gl_PALETTE8_RGBA4_OES :: GLenum
gl_PALETTE8_RGBA4_OES = 0x8B98
gl_MAX_COLOR_TEXTURE_SAMPLES :: GLenum
gl_MAX_COLOR_TEXTURE_SAMPLES = 0x910E
gl_MAP_PERSISTENT_BIT :: GLenum
gl_MAP_PERSISTENT_BIT = 0x0040
gl_ATC_RGB_AMD :: GLenum
gl_ATC_RGB_AMD = 0x8C92
gl_FOG_COORD_ARRAY_LENGTH_NV :: GLenum
gl_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32
gl_MAX_TRACK_MATRICES_NV :: GLenum
gl_MAX_TRACK_MATRICES_NV = 0x862F
gl_INVALID_FRAMEBUFFER_OPERATION_EXT :: GLenum
gl_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506
gl_COMPRESSED_SRGB_S3TC_DXT1_EXT :: GLenum
gl_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B
gl_COLOR_INDEX8_EXT :: GLenum
gl_COLOR_INDEX8_EXT = 0x80E5
gl_RED_MAX_CLAMP_INGR :: GLenum
gl_RED_MAX_CLAMP_INGR = 0x8564
gl_TEXTURE_DEPTH_SIZE :: GLenum
gl_TEXTURE_DEPTH_SIZE = 0x884A
gl_DEPENDENT_AR_TEXTURE_2D_NV :: GLenum
gl_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9
gl_OPERAND2_RGB_EXT :: GLenum
gl_OPERAND2_RGB_EXT = 0x8592
gl_BOOL_VEC4 :: GLenum
gl_BOOL_VEC4 = 0x8B59
gl_LAYER_NV :: GLenum
gl_LAYER_NV = 0x8DAA
gl_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM :: GLenum
gl_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = 0x8F66
gl_MAX_FRAGMENT_IMAGE_UNIFORMS :: GLenum
gl_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE
gl_DETAIL_TEXTURE_FUNC_POINTS_SGIS :: GLenum
gl_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C
gl_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB :: GLenum
gl_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3
gl_UNCORRELATED_NV :: GLenum
gl_UNCORRELATED_NV = 0x9282
gl_MAX_MAP_TESSELLATION_NV :: GLenum
gl_MAX_MAP_TESSELLATION_NV = 0x86D6
gl_POINT_SMOOTH_HINT :: GLenum
gl_POINT_SMOOTH_HINT = 0x0C51
gl_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV :: GLenum
gl_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10
gl_FRAMEBUFFER_DEFAULT_WIDTH :: GLenum
gl_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310
gl_UNSIGNED_INT16_VEC2_NV :: GLenum
gl_UNSIGNED_INT16_VEC2_NV = 0x8FF1
gl_MIN :: GLenum
gl_MIN = 0x8007
gl_PROXY_COLOR_TABLE_SGI :: GLenum
gl_PROXY_COLOR_TABLE_SGI = 0x80D3
gl_DEPTH_COMPONENT16 :: GLenum
gl_DEPTH_COMPONENT16 = 0x81A5
gl_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV :: GLenum
gl_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1
gl_VERTEX_ATTRIB_ARRAY_POINTER :: GLenum
gl_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645
gl_DEBUG_TYPE_ERROR :: GLenum
gl_DEBUG_TYPE_ERROR = 0x824C
gl_EVAL_VERTEX_ATTRIB0_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB0_NV = 0x86C6
gl_DEPTH_STENCIL_TO_RGBA_NV :: GLenum
gl_DEPTH_STENCIL_TO_RGBA_NV = 0x886E
gl_MAP1_GRID_SEGMENTS :: GLenum
gl_MAP1_GRID_SEGMENTS = 0x0DD1
gl_TIME_ELAPSED_EXT :: GLenum
gl_TIME_ELAPSED_EXT = 0x88BF
gl_ADD_ATI :: GLenum
gl_ADD_ATI = 0x8963
gl_DEPTH_STENCIL :: GLenum
gl_DEPTH_STENCIL = 0x84F9
gl_SYSTEM_FONT_NAME_NV :: GLenum
gl_SYSTEM_FONT_NAME_NV = 0x9073
gl_CURRENT_RASTER_NORMAL_SGIX :: GLenum
gl_CURRENT_RASTER_NORMAL_SGIX = 0x8406
gl_SWIZZLE_STRQ_DQ_ATI :: GLenum
gl_SWIZZLE_STRQ_DQ_ATI = 0x897B
gl_EXCLUSION_NV :: GLenum
gl_EXCLUSION_NV = 0x92A0
gl_COLOR_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898
gl_STENCIL_BITS :: GLenum
gl_STENCIL_BITS = 0x0D57
gl_COMPRESSED_ALPHA :: GLenum
gl_COMPRESSED_ALPHA = 0x84E9
gl_DEBUG_OUTPUT_SYNCHRONOUS :: GLenum
gl_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242
gl_PROGRAM_BINDING_ARB :: GLenum
gl_PROGRAM_BINDING_ARB = 0x8677
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV :: GLenum
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F
gl_CLIENT_ACTIVE_TEXTURE :: GLenum
gl_CLIENT_ACTIVE_TEXTURE = 0x84E1
gl_OP_SET_GE_EXT :: GLenum
gl_OP_SET_GE_EXT = 0x878C
gl_INTENSITY_FLOAT32_APPLE :: GLenum
gl_INTENSITY_FLOAT32_APPLE = 0x8817
gl_RGB_FLOAT16_ATI :: GLenum
gl_RGB_FLOAT16_ATI = 0x881B
gl_COLOR_ATTACHMENT1 :: GLenum
gl_COLOR_ATTACHMENT1 = 0x8CE1
gl_MAX_TESS_PATCH_COMPONENTS :: GLenum
gl_MAX_TESS_PATCH_COMPONENTS = 0x8E84
gl_GREEN_MIN_CLAMP_INGR :: GLenum
gl_GREEN_MIN_CLAMP_INGR = 0x8561
gl_ELEMENT_ARRAY_ADDRESS_NV :: GLenum
gl_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29
gl_SHORT :: GLenum
gl_SHORT = 0x1402
gl_FRAMEBUFFER_COMPLETE_OES :: GLenum
gl_FRAMEBUFFER_COMPLETE_OES = 0x8CD5
gl_READ_FRAMEBUFFER_ANGLE :: GLenum
gl_READ_FRAMEBUFFER_ANGLE = 0x8CA8
gl_INT_IMAGE_CUBE :: GLenum
gl_INT_IMAGE_CUBE = 0x905B
gl_PIXEL_MAP_G_TO_G_SIZE :: GLenum
gl_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7
gl_SIGNED_HILO16_NV :: GLenum
gl_SIGNED_HILO16_NV = 0x86FA
gl_REPLACE_VALUE_AMD :: GLenum
gl_REPLACE_VALUE_AMD = 0x874B
gl_FRAGMENT_LIGHTING_SGIX :: GLenum
gl_FRAGMENT_LIGHTING_SGIX = 0x8400
gl_CONTEXT_RELEASE_BEHAVIOR_KHR :: GLenum
gl_CONTEXT_RELEASE_BEHAVIOR_KHR = 0x82FB
gl_VERTICES_SUBMITTED_ARB :: GLenum
gl_VERTICES_SUBMITTED_ARB = 0x82EE
gl_VERTEX_STREAM1_ATI :: GLenum
gl_VERTEX_STREAM1_ATI = 0x876D
gl_DEPTH_PASS_INSTRUMENT_MAX_SGIX :: GLenum
gl_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312
gl_OP_FLOOR_EXT :: GLenum
gl_OP_FLOOR_EXT = 0x878F
gl_TESS_CONTROL_SHADER_BIT :: GLenum
gl_TESS_CONTROL_SHADER_BIT = 0x00000008
gl_TEXTURE_4D_SGIS :: GLenum
gl_TEXTURE_4D_SGIS = 0x8134
gl_VERTEX_ARRAY_POINTER :: GLenum
gl_VERTEX_ARRAY_POINTER = 0x808E
gl_ACTIVE_SUBROUTINE_MAX_LENGTH :: GLenum
gl_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48
gl_COLOR_TABLE_FORMAT :: GLenum
gl_COLOR_TABLE_FORMAT = 0x80D8
gl_FOG_SPECULAR_TEXTURE_WIN :: GLenum
gl_FOG_SPECULAR_TEXTURE_WIN = 0x80EC
gl_FILL_RECTANGLE_NV :: GLenum
gl_FILL_RECTANGLE_NV = 0x933C
gl_RED_SCALE :: GLenum
gl_RED_SCALE = 0x0D14
gl_SHADER_OPERATION_NV :: GLenum
gl_SHADER_OPERATION_NV = 0x86DF
gl_XOR :: GLenum
gl_XOR = 0x1506
gl_LUMINANCE_ALPHA32F_ARB :: GLenum
gl_LUMINANCE_ALPHA32F_ARB = 0x8819
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 0x8CD9
gl_BINNING_CONTROL_HINT_QCOM :: GLenum
gl_BINNING_CONTROL_HINT_QCOM = 0x8FB0
gl_UNKNOWN_CONTEXT_RESET_KHR :: GLenum
gl_UNKNOWN_CONTEXT_RESET_KHR = 0x8255
gl_TEXTURE3_ARB :: GLenum
gl_TEXTURE3_ARB = 0x84C3
gl_POST_COLOR_MATRIX_RED_SCALE :: GLenum
gl_POST_COLOR_MATRIX_RED_SCALE = 0x80B4
gl_MAX_HEIGHT :: GLenum
gl_MAX_HEIGHT = 0x827F
gl_BGRA :: GLenum
gl_BGRA = 0x80E1
gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS :: GLenum
gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F
gl_R1UI_V3F_SUN :: GLenum
gl_R1UI_V3F_SUN = 0x85C4
gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32
gl_PROGRAM_TEX_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806
gl_OP_LOG_BASE_2_EXT :: GLenum
gl_OP_LOG_BASE_2_EXT = 0x8792
gl_IMAGE_2D_MULTISAMPLE :: GLenum
gl_IMAGE_2D_MULTISAMPLE = 0x9055
gl_SAMPLE_POSITION_NV :: GLenum
gl_SAMPLE_POSITION_NV = 0x8E50
gl_EIGHTH_BIT_ATI :: GLenum
gl_EIGHTH_BIT_ATI = 0x00000020
gl_POINT_BIT :: GLenum
gl_POINT_BIT = 0x00000002
gl_INT_IMAGE_2D_ARRAY :: GLenum
gl_INT_IMAGE_2D_ARRAY = 0x905E
gl_ALPHA_BIAS :: GLenum
gl_ALPHA_BIAS = 0x0D1D
gl_PROGRAM_FORMAT_ASCII_ARB :: GLenum
gl_PROGRAM_FORMAT_ASCII_ARB = 0x8875
gl_TESS_CONTROL_OUTPUT_VERTICES :: GLenum
gl_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75
gl_RELATIVE_LARGE_CCW_ARC_TO_NV :: GLenum
gl_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17
gl_DETAIL_TEXTURE_MODE_SGIS :: GLenum
gl_DETAIL_TEXTURE_MODE_SGIS = 0x809B
gl_TEXTURE_GEN_T :: GLenum
gl_TEXTURE_GEN_T = 0x0C61
gl_FRAMEBUFFER_ATTACHMENT_LAYERED :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7
gl_RETURN :: GLenum
gl_RETURN = 0x0102
gl_COLOR_MATRIX :: GLenum
gl_COLOR_MATRIX = 0x80B1
gl_PROGRAM_RESULT_COMPONENTS_NV :: GLenum
gl_PROGRAM_RESULT_COMPONENTS_NV = 0x8907
gl_TEXTURE_VIEW_MIN_LAYER_EXT :: GLenum
gl_TEXTURE_VIEW_MIN_LAYER_EXT = 0x82DD
gl_PROGRAM :: GLenum
gl_PROGRAM = 0x82E2
gl_COLOR_ARRAY_POINTER_EXT :: GLenum
gl_COLOR_ARRAY_POINTER_EXT = 0x8090
gl_SHARED_EDGE_NV :: GLenum
gl_SHARED_EDGE_NV = 0xC0
gl_INDEX_ARRAY_ADDRESS_NV :: GLenum
gl_INDEX_ARRAY_ADDRESS_NV = 0x8F24
gl_MAD_ATI :: GLenum
gl_MAD_ATI = 0x8968
gl_TEXTURE_MAX_ANISOTROPY_EXT :: GLenum
gl_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE
gl_POINT_SIZE_MIN_EXT :: GLenum
gl_POINT_SIZE_MIN_EXT = 0x8126
gl_FRAGMENT_LIGHT0_SGIX :: GLenum
gl_FRAGMENT_LIGHT0_SGIX = 0x840C
gl_COLOR_ATTACHMENT8_EXT :: GLenum
gl_COLOR_ATTACHMENT8_EXT = 0x8CE8
gl_TEXTURE_DEPTH_SIZE_ARB :: GLenum
gl_TEXTURE_DEPTH_SIZE_ARB = 0x884A
gl_INTERLACE_READ_INGR :: GLenum
gl_INTERLACE_READ_INGR = 0x8568
gl_AVERAGE_HP :: GLenum
gl_AVERAGE_HP = 0x8160
gl_CPU_OPTIMIZED_QCOM :: GLenum
gl_CPU_OPTIMIZED_QCOM = 0x8FB1
gl_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV :: GLenum
gl_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D
gl_TESS_EVALUATION_TEXTURE :: GLenum
gl_TESS_EVALUATION_TEXTURE = 0x829D
gl_POST_CONVOLUTION_RED_SCALE :: GLenum
gl_POST_CONVOLUTION_RED_SCALE = 0x801C
gl_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV :: GLenum
gl_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0
gl_VERTEX_ATTRIB_ARRAY13_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY13_NV = 0x865D
gl_COMBINER4_NV :: GLenum
gl_COMBINER4_NV = 0x8554
gl_MAX_IMAGE_SAMPLES_EXT :: GLenum
gl_MAX_IMAGE_SAMPLES_EXT = 0x906D
gl_PIXEL_TILE_GRID_DEPTH_SGIX :: GLenum
gl_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144
gl_QUERY_RESULT_ARB :: GLenum
gl_QUERY_RESULT_ARB = 0x8866
gl_PERFQUERY_SINGLE_CONTEXT_INTEL :: GLenum
gl_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000
gl_LUMINANCE :: GLenum
gl_LUMINANCE = 0x1909
gl_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6
gl_COMBINER5_NV :: GLenum
gl_COMBINER5_NV = 0x8555
gl_DOUBLE_MAT4 :: GLenum
gl_DOUBLE_MAT4 = 0x8F48
gl_TEXTURE_RENDERBUFFER_NV :: GLenum
gl_TEXTURE_RENDERBUFFER_NV = 0x8E55
gl_OBJECT_COMPILE_STATUS_ARB :: GLenum
gl_OBJECT_COMPILE_STATUS_ARB = 0x8B81
gl_BLEND_SRC_ALPHA_OES :: GLenum
gl_BLEND_SRC_ALPHA_OES = 0x80CB
gl_MAX_CLIP_DISTANCES_APPLE :: GLenum
gl_MAX_CLIP_DISTANCES_APPLE = 0x0D32
gl_TRACE_NAME_MESA :: GLenum
gl_TRACE_NAME_MESA = 0x8756
gl_MODELVIEW9_ARB :: GLenum
gl_MODELVIEW9_ARB = 0x8729
gl_PATH_STENCIL_VALUE_MASK_NV :: GLenum
gl_PATH_STENCIL_VALUE_MASK_NV = 0x90B9
gl_PERFQUERY_WAIT_INTEL :: GLenum
gl_PERFQUERY_WAIT_INTEL = 0x83FB
gl_HISTOGRAM_LUMINANCE_SIZE :: GLenum
gl_HISTOGRAM_LUMINANCE_SIZE = 0x802C
gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT :: GLenum
gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001
gl_CON_28_ATI :: GLenum
gl_CON_28_ATI = 0x895D
gl_MIRROR_CLAMP_TO_EDGE :: GLenum
gl_MIRROR_CLAMP_TO_EDGE = 0x8743
gl_INT16_NV :: GLenum
gl_INT16_NV = 0x8FE4
gl_NEGATIVE_Y_EXT :: GLenum
gl_NEGATIVE_Y_EXT = 0x87DA
gl_SELECT :: GLenum
gl_SELECT = 0x1C02
gl_CULL_FACE :: GLenum
gl_CULL_FACE = 0x0B44
gl_BOOL_VEC3_ARB :: GLenum
gl_BOOL_VEC3_ARB = 0x8B58
gl_COMPRESSED_LUMINANCE_ARB :: GLenum
gl_COMPRESSED_LUMINANCE_ARB = 0x84EA
gl_HSL_SATURATION_NV :: GLenum
gl_HSL_SATURATION_NV = 0x92AE
gl_RGB32F_EXT :: GLenum
gl_RGB32F_EXT = 0x8815
gl_SUB_ATI :: GLenum
gl_SUB_ATI = 0x8965
gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING :: GLenum
gl_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A
gl_CON_27_ATI :: GLenum
gl_CON_27_ATI = 0x895C
gl_DECR_WRAP_EXT :: GLenum
gl_DECR_WRAP_EXT = 0x8508
gl_DEBUG_TYPE_POP_GROUP :: GLenum
gl_DEBUG_TYPE_POP_GROUP = 0x826A
gl_OUTPUT_TEXTURE_COORD22_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3
gl_DRAW_BUFFER2_ATI :: GLenum
gl_DRAW_BUFFER2_ATI = 0x8827
gl_RGB8UI :: GLenum
gl_RGB8UI = 0x8D7D
gl_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV :: GLenum
gl_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = 0x933F
gl_TEXTURE_VIEW_NUM_LAYERS_EXT :: GLenum
gl_TEXTURE_VIEW_NUM_LAYERS_EXT = 0x82DE
gl_TEXTURE_BUFFER_DATA_STORE_BINDING :: GLenum
gl_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D
gl_R1UI_C4UB_V3F_SUN :: GLenum
gl_R1UI_C4UB_V3F_SUN = 0x85C5
gl_PACK_INVERT_MESA :: GLenum
gl_PACK_INVERT_MESA = 0x8758
gl_ATOMIC_COUNTER_BUFFER_DATA_SIZE :: GLenum
gl_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4
gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV :: GLenum
gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853
gl_COLOR_RENDERABLE :: GLenum
gl_COLOR_RENDERABLE = 0x8286
gl_CLIP_PLANE1_IMG :: GLenum
gl_CLIP_PLANE1_IMG = 0x3001
gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76
gl_LINE_WIDTH :: GLenum
gl_LINE_WIDTH = 0x0B21
gl_RGB_INTEGER :: GLenum
gl_RGB_INTEGER = 0x8D98
gl_MAP_ATTRIB_U_ORDER_NV :: GLenum
gl_MAP_ATTRIB_U_ORDER_NV = 0x86C3
gl_TEXTURE_ALPHA_MODULATE_IMG :: GLenum
gl_TEXTURE_ALPHA_MODULATE_IMG = 0x8C06
gl_COMPRESSED_R11_EAC :: GLenum
gl_COMPRESSED_R11_EAC = 0x9270
gl_SIGNED_RGBA_NV :: GLenum
gl_SIGNED_RGBA_NV = 0x86FB
gl_TEXTURE_CUBE_MAP_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_ARB = 0x8513
gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: GLenum
gl_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910C
gl_PROXY_TEXTURE_4D_SGIS :: GLenum
gl_PROXY_TEXTURE_4D_SGIS = 0x8135
gl_PIXEL_MAP_I_TO_I_SIZE :: GLenum
gl_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0
gl_INT_SAMPLER_2D_ARRAY :: GLenum
gl_INT_SAMPLER_2D_ARRAY = 0x8DCF
gl_HALF_FLOAT :: GLenum
gl_HALF_FLOAT = 0x140B
gl_PIXEL_COUNTER_BITS_NV :: GLenum
gl_PIXEL_COUNTER_BITS_NV = 0x8864
gl_MAX_PROGRAM_IF_DEPTH_NV :: GLenum
gl_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6
gl_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS :: GLenum
gl_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355
gl_STENCIL_BUFFER_BIT3_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT3_QCOM = 0x00080000
gl_UNSIGNED_INT_IMAGE_2D_ARRAY :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518
gl_CURRENT_RASTER_POSITION_VALID :: GLenum
gl_CURRENT_RASTER_POSITION_VALID = 0x0B08
gl_VERTEX_PROGRAM_POINT_SIZE_ARB :: GLenum
gl_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642
gl_INT_SAMPLER_BUFFER_AMD :: GLenum
gl_INT_SAMPLER_BUFFER_AMD = 0x9002
gl_VERTEX_ATTRIB_ARRAY7_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY7_NV = 0x8657
gl_DEBUG_TYPE_MARKER :: GLenum
gl_DEBUG_TYPE_MARKER = 0x8268
gl_DEPTH32F_STENCIL8_NV :: GLenum
gl_DEPTH32F_STENCIL8_NV = 0x8DAC
gl_KEEP :: GLenum
gl_KEEP = 0x1E00
gl_INT_SAMPLER_CUBE_MAP_ARRAY :: GLenum
gl_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E
gl_VERTEX_ARRAY_OBJECT_AMD :: GLenum
gl_VERTEX_ARRAY_OBJECT_AMD = 0x9154
gl_NUM_INSTRUCTIONS_TOTAL_ATI :: GLenum
gl_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972
gl_ALPHA_TEST_REF :: GLenum
gl_ALPHA_TEST_REF = 0x0BC2
gl_QUAD_TEXTURE_SELECT_SGIS :: GLenum
gl_QUAD_TEXTURE_SELECT_SGIS = 0x8125
gl_INTENSITY_SNORM :: GLenum
gl_INTENSITY_SNORM = 0x9013
gl_TEXTURE_ENV_BIAS_SGIX :: GLenum
gl_TEXTURE_ENV_BIAS_SGIX = 0x80BE
gl_MVP_MATRIX_EXT :: GLenum
gl_MVP_MATRIX_EXT = 0x87E3
gl_DEPTH_STENCIL_TEXTURE_MODE :: GLenum
gl_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA
gl_TEXTURE_COORD_ARRAY_TYPE_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089
gl_FOG_FUNC_SGIS :: GLenum
gl_FOG_FUNC_SGIS = 0x812A
gl_VARIABLE_D_NV :: GLenum
gl_VARIABLE_D_NV = 0x8526
gl_PACK_RESAMPLE_OML :: GLenum
gl_PACK_RESAMPLE_OML = 0x8984
gl_BLEND_EQUATION_OES :: GLenum
gl_BLEND_EQUATION_OES = 0x8009
gl_CLIP_PLANE5_IMG :: GLenum
gl_CLIP_PLANE5_IMG = 0x3005
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CE
gl_TEXTURE_INTENSITY_TYPE_ARB :: GLenum
gl_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15
gl_RESAMPLE_DECIMATE_OML :: GLenum
gl_RESAMPLE_DECIMATE_OML = 0x8989
gl_READ_FRAMEBUFFER_BINDING_APPLE :: GLenum
gl_READ_FRAMEBUFFER_BINDING_APPLE = 0x8CAA
gl_POST_CONVOLUTION_COLOR_TABLE :: GLenum
gl_POST_CONVOLUTION_COLOR_TABLE = 0x80D1
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2
gl_MULTIVIEW_EXT :: GLenum
gl_MULTIVIEW_EXT = 0x90F1
gl_TRACE_OPERATIONS_BIT_MESA :: GLenum
gl_TRACE_OPERATIONS_BIT_MESA = 0x0001
gl_INTERLEAVED_ATTRIBS_EXT :: GLenum
gl_INTERLEAVED_ATTRIBS_EXT = 0x8C8C
gl_RGBA8UI_EXT :: GLenum
gl_RGBA8UI_EXT = 0x8D7C
gl_BLEND_EQUATION_RGB :: GLenum
gl_BLEND_EQUATION_RGB = 0x8009
gl_QUERY :: GLenum
gl_QUERY = 0x82E3
gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8
gl_GENERIC_ATTRIB_NV :: GLenum
gl_GENERIC_ATTRIB_NV = 0x8C7D
gl_CLIP_PLANE2_IMG :: GLenum
gl_CLIP_PLANE2_IMG = 0x3002
gl_RG16 :: GLenum
gl_RG16 = 0x822C
gl_PATH_TERMINAL_END_CAP_NV :: GLenum
gl_PATH_TERMINAL_END_CAP_NV = 0x9078
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1
gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES :: GLenum
gl_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9277
gl_CURRENT_OCCLUSION_QUERY_ID_NV :: GLenum
gl_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865
gl_CLIP_PLANE5 :: GLenum
gl_CLIP_PLANE5 = 0x3005
gl_VERTEX_STREAM5_ATI :: GLenum
gl_VERTEX_STREAM5_ATI = 0x8771
gl_WRAP_BORDER_SUN :: GLenum
gl_WRAP_BORDER_SUN = 0x81D4
gl_LUMINANCE_ALPHA16F_EXT :: GLenum
gl_LUMINANCE_ALPHA16F_EXT = 0x881F
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = 0x8CDC
gl_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED :: GLenum
gl_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221
gl_ACTIVE_UNIFORM_BLOCKS :: GLenum
gl_ACTIVE_UNIFORM_BLOCKS = 0x8A36
gl_AUX3 :: GLenum
gl_AUX3 = 0x040C
gl_COLOR_ATTACHMENT2_EXT :: GLenum
gl_COLOR_ATTACHMENT2_EXT = 0x8CE2
gl_MAX_FRAMEZOOM_FACTOR_SGIX :: GLenum
gl_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D
gl_CLAMP_TO_BORDER_NV :: GLenum
gl_CLAMP_TO_BORDER_NV = 0x812D
gl_HALF_BIAS_NORMAL_NV :: GLenum
gl_HALF_BIAS_NORMAL_NV = 0x853A
gl_OBJECT_ACTIVE_ATTRIBUTES_ARB :: GLenum
gl_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89
gl_UNSIGNED_INT_8_24_REV_MESA :: GLenum
gl_UNSIGNED_INT_8_24_REV_MESA = 0x8752
gl_SAMPLE_LOCATION_SUBPIXEL_BITS_NV :: GLenum
gl_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = 0x933D
gl_FIELD_UPPER_NV :: GLenum
gl_FIELD_UPPER_NV = 0x9022
gl_RGB4_S3TC :: GLenum
gl_RGB4_S3TC = 0x83A1
gl_COMPUTE_WORK_GROUP_SIZE :: GLenum
gl_COMPUTE_WORK_GROUP_SIZE = 0x8267
gl_RGBA8_OES :: GLenum
gl_RGBA8_OES = 0x8058
gl_RGB565_OES :: GLenum
gl_RGB565_OES = 0x8D62
gl_SATURATE_BIT_ATI :: GLenum
gl_SATURATE_BIT_ATI = 0x00000040
gl_TEXTURE_FIXED_SAMPLE_LOCATIONS :: GLenum
gl_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107
gl_ALLOW_DRAW_MEM_HINT_PGI :: GLenum
gl_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211
gl_SAMPLE_LOCATION_NV :: GLenum
gl_SAMPLE_LOCATION_NV = 0x8E50
gl_DEPTH_COMPONENT16_NONLINEAR_NV :: GLenum
gl_DEPTH_COMPONENT16_NONLINEAR_NV = 0x8E2C
gl_TRANSFORM_FEEDBACK_ATTRIBS_NV :: GLenum
gl_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E
gl_TEXTURE_RECTANGLE_NV :: GLenum
gl_TEXTURE_RECTANGLE_NV = 0x84F5
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3
gl_ZERO_EXT :: GLenum
gl_ZERO_EXT = 0x87DD
gl_VERTEX_ARRAY_BINDING_APPLE :: GLenum
gl_VERTEX_ARRAY_BINDING_APPLE = 0x85B5
gl_CONVOLUTION_2D :: GLenum
gl_CONVOLUTION_2D = 0x8011
gl_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT :: GLenum
gl_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020
gl_MAX_VERTEX_SHADER_VARIANTS_EXT :: GLenum
gl_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6
gl_VERTEX_SHADER_ARB :: GLenum
gl_VERTEX_SHADER_ARB = 0x8B31
gl_UNSIGNED_INT16_VEC3_NV :: GLenum
gl_UNSIGNED_INT16_VEC3_NV = 0x8FF2
gl_TEXTURE_COORD_ARRAY_ADDRESS_NV :: GLenum
gl_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25
gl_FRAMEBUFFER_COMPLETE :: GLenum
gl_FRAMEBUFFER_COMPLETE = 0x8CD5
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = 0x93E2
gl_FRAMEBUFFER_RENDERABLE :: GLenum
gl_FRAMEBUFFER_RENDERABLE = 0x8289
gl_VERTEX_WEIGHTING_EXT :: GLenum
gl_VERTEX_WEIGHTING_EXT = 0x8509
gl_IMAGE_3D :: GLenum
gl_IMAGE_3D = 0x904E
gl_SPHERE_MAP :: GLenum
gl_SPHERE_MAP = 0x2402
gl_PROGRAM_TEMPORARIES_ARB :: GLenum
gl_PROGRAM_TEMPORARIES_ARB = 0x88A4
gl_FLOAT_RGB16_NV :: GLenum
gl_FLOAT_RGB16_NV = 0x8888
gl_CON_11_ATI :: GLenum
gl_CON_11_ATI = 0x894C
gl_DEBUG_LOGGED_MESSAGES_ARB :: GLenum
gl_DEBUG_LOGGED_MESSAGES_ARB = 0x9145
gl_TRANSPOSE_MODELVIEW_MATRIX :: GLenum
gl_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3
gl_PROXY_TEXTURE_CUBE_MAP_ARRAY :: GLenum
gl_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B
gl_DOUBLE_MAT4x3 :: GLenum
gl_DOUBLE_MAT4x3 = 0x8F4E
gl_DETAIL_TEXTURE_2D_BINDING_SGIS :: GLenum
gl_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096
gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E7F
gl_QUERY_WAIT :: GLenum
gl_QUERY_WAIT = 0x8E13
gl_PERFQUERY_COUNTER_DATA_UINT64_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9
gl_REFERENCED_BY_GEOMETRY_SHADER_EXT :: GLenum
gl_REFERENCED_BY_GEOMETRY_SHADER_EXT = 0x9309
gl_LUMINANCE4_ALPHA4_EXT :: GLenum
gl_LUMINANCE4_ALPHA4_EXT = 0x8043
gl_MAT_SPECULAR_BIT_PGI :: GLenum
gl_MAT_SPECULAR_BIT_PGI = 0x04000000
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D
gl_TESS_GEN_MODE :: GLenum
gl_TESS_GEN_MODE = 0x8E76
gl_VERTEX_WEIGHT_ARRAY_EXT :: GLenum
gl_VERTEX_WEIGHT_ARRAY_EXT = 0x850C
gl_DOUBLE_VEC2 :: GLenum
gl_DOUBLE_VEC2 = 0x8FFC
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB
gl_VERTEX_ATTRIB_ARRAY2_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY2_NV = 0x8652
gl_FIRST_TO_REST_NV :: GLenum
gl_FIRST_TO_REST_NV = 0x90AF
gl_CONTEXT_ROBUST_ACCESS_KHR :: GLenum
gl_CONTEXT_ROBUST_ACCESS_KHR = 0x90F3
gl_VERSION_ES_CL_1_0 :: GLenum
gl_VERSION_ES_CL_1_0 = 1
gl_MAP1_VERTEX_ATTRIB9_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669
gl_VIBRANCE_SCALE_NV :: GLenum
gl_VIBRANCE_SCALE_NV = 0x8713
gl_MAX_LIGHTS :: GLenum
gl_MAX_LIGHTS = 0x0D31
gl_LUMINANCE8_EXT :: GLenum
gl_LUMINANCE8_EXT = 0x8040
gl_GEOMETRY_TEXTURE :: GLenum
gl_GEOMETRY_TEXTURE = 0x829E
gl_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV :: GLenum
gl_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0
gl_STENCIL_ATTACHMENT_OES :: GLenum
gl_STENCIL_ATTACHMENT_OES = 0x8D20
gl_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX :: GLenum
gl_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B
gl_VERTEX_STREAM7_ATI :: GLenum
gl_VERTEX_STREAM7_ATI = 0x8773
gl_CONVOLUTION_FILTER_BIAS_EXT :: GLenum
gl_CONVOLUTION_FILTER_BIAS_EXT = 0x8015
gl_TRANSLATE_2D_NV :: GLenum
gl_TRANSLATE_2D_NV = 0x9090
gl_VIEWPORT_BOUNDS_RANGE :: GLenum
gl_VIEWPORT_BOUNDS_RANGE = 0x825D
gl_ELEMENT_ARRAY_BARRIER_BIT :: GLenum
gl_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002
gl_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 0x8B9E
gl_BLEND_PREMULTIPLIED_SRC_NV :: GLenum
gl_BLEND_PREMULTIPLIED_SRC_NV = 0x9280
gl_CLAMP_TO_EDGE :: GLenum
gl_CLAMP_TO_EDGE = 0x812F
gl_LOCAL_CONSTANT_EXT :: GLenum
gl_LOCAL_CONSTANT_EXT = 0x87C3
gl_OFFSET_TEXTURE_2D_NV :: GLenum
gl_OFFSET_TEXTURE_2D_NV = 0x86E8
gl_MODELVIEW26_ARB :: GLenum
gl_MODELVIEW26_ARB = 0x873A
gl_GET_TEXTURE_IMAGE_TYPE :: GLenum
gl_GET_TEXTURE_IMAGE_TYPE = 0x8292
gl_LOSE_CONTEXT_ON_RESET :: GLenum
gl_LOSE_CONTEXT_ON_RESET = 0x8252
gl_COMPRESSED_RGB_FXT1_3DFX :: GLenum
gl_COMPRESSED_RGB_FXT1_3DFX = 0x86B0
gl_DRAW_BUFFER9_NV :: GLenum
gl_DRAW_BUFFER9_NV = 0x882E
gl_OP_MOV_EXT :: GLenum
gl_OP_MOV_EXT = 0x8799
gl_DU8DV8_ATI :: GLenum
gl_DU8DV8_ATI = 0x877A
gl_CULL_FRAGMENT_NV :: GLenum
gl_CULL_FRAGMENT_NV = 0x86E7
gl_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX :: GLenum
gl_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403
gl_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX :: GLenum
gl_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408
gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES :: GLenum
gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9276
gl_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV :: GLenum
gl_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = 0x9340
gl_MAP1_VERTEX_ATTRIB14_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E
gl_TEXTURE_GREEN_SIZE :: GLenum
gl_TEXTURE_GREEN_SIZE = 0x805D
gl_MAX_VERTEX_STREAMS_ATI :: GLenum
gl_MAX_VERTEX_STREAMS_ATI = 0x876B
gl_TRANSFORM_FEEDBACK_RECORD_NV :: GLenum
gl_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86
gl_VERTEX_ARRAY_RANGE_APPLE :: GLenum
gl_VERTEX_ARRAY_RANGE_APPLE = 0x851D
gl_TEXTURE4_ARB :: GLenum
gl_TEXTURE4_ARB = 0x84C4
gl_DECR_WRAP_OES :: GLenum
gl_DECR_WRAP_OES = 0x8508
gl_UNSIGNED_SHORT_5_6_5_REV_EXT :: GLenum
gl_UNSIGNED_SHORT_5_6_5_REV_EXT = 0x8364
gl_SECONDARY_COLOR_ARRAY_ADDRESS_NV :: GLenum
gl_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27
gl_FRAGMENT_SHADER_DERIVATIVE_HINT_OES :: GLenum
gl_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B
gl_NUM_SHADER_BINARY_FORMATS :: GLenum
gl_NUM_SHADER_BINARY_FORMATS = 0x8DF9
gl_PROGRAM_PIPELINE_BINDING_EXT :: GLenum
gl_PROGRAM_PIPELINE_BINDING_EXT = 0x825A
gl_BLEND_SRC_ALPHA :: GLenum
gl_BLEND_SRC_ALPHA = 0x80CB
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F
gl_COMPRESSED_SLUMINANCE_EXT :: GLenum
gl_COMPRESSED_SLUMINANCE_EXT = 0x8C4A
gl_OUTPUT_TEXTURE_COORD19_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0
gl_CURRENT_MATRIX_STACK_DEPTH_ARB :: GLenum
gl_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640
gl_DRAW_FRAMEBUFFER_ANGLE :: GLenum
gl_DRAW_FRAMEBUFFER_ANGLE = 0x8CA9
gl_NATIVE_GRAPHICS_END_HINT_PGI :: GLenum
gl_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204
gl_ONE_MINUS_SRC_COLOR :: GLenum
gl_ONE_MINUS_SRC_COLOR = 0x0301
gl_TESS_EVALUATION_SHADER :: GLenum
gl_TESS_EVALUATION_SHADER = 0x8E87
gl_LINEAR_MIPMAP_NEAREST :: GLenum
gl_LINEAR_MIPMAP_NEAREST = 0x2701
gl_UNSIGNED_INT16_VEC4_NV :: GLenum
gl_UNSIGNED_INT16_VEC4_NV = 0x8FF3
gl_PACK_COMPRESSED_BLOCK_HEIGHT :: GLenum
gl_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C
gl_TEXTURE_TOO_LARGE_EXT :: GLenum
gl_TEXTURE_TOO_LARGE_EXT = 0x8065
gl_SYNC_FLUSH_COMMANDS_BIT_APPLE :: GLenum
gl_SYNC_FLUSH_COMMANDS_BIT_APPLE = 0x00000001
gl_PARTIAL_SUCCESS_NV :: GLenum
gl_PARTIAL_SUCCESS_NV = 0x902E
gl_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL :: GLenum
gl_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE
gl_NORMAL_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897
gl_T4F_V4F :: GLenum
gl_T4F_V4F = 0x2A28
gl_COMPARE_REF_DEPTH_TO_TEXTURE_EXT :: GLenum
gl_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E
gl_UNSIGNED_INT_24_8_NV :: GLenum
gl_UNSIGNED_INT_24_8_NV = 0x84FA
gl_LAYOUT_LINEAR_CPU_CACHED_INTEL :: GLenum
gl_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2
gl_TEXTURE_BASE_LEVEL :: GLenum
gl_TEXTURE_BASE_LEVEL = 0x813C
gl_MODELVIEW5_ARB :: GLenum
gl_MODELVIEW5_ARB = 0x8725
gl_AUTO_NORMAL :: GLenum
gl_AUTO_NORMAL = 0x0D80
gl_MODELVIEW14_ARB :: GLenum
gl_MODELVIEW14_ARB = 0x872E
gl_PLUS_CLAMPED_ALPHA_NV :: GLenum
gl_PLUS_CLAMPED_ALPHA_NV = 0x92B2
gl_POST_CONVOLUTION_COLOR_TABLE_SGI :: GLenum
gl_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1
gl_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175
gl_UNSIGNED_INT_SAMPLER_2D_ARRAY :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7
gl_BYTE :: GLenum
gl_BYTE = 0x1400
gl_ALPHA_SCALE :: GLenum
gl_ALPHA_SCALE = 0x0D1C
gl_TEXTURE_BORDER_VALUES_NV :: GLenum
gl_TEXTURE_BORDER_VALUES_NV = 0x871A
gl_VIRTUAL_PAGE_SIZE_Y_ARB :: GLenum
gl_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196
gl_PREFER_DOUBLEBUFFER_HINT_PGI :: GLenum
gl_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8
gl_MAX_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_TEXTURE_IMAGE_UNITS = 0x8872
gl_UNSIGNED_SHORT_5_6_5 :: GLenum
gl_UNSIGNED_SHORT_5_6_5 = 0x8363
gl_GREEN_BIAS :: GLenum
gl_GREEN_BIAS = 0x0D19
gl_COMPRESSED_RGBA_BPTC_UNORM :: GLenum
gl_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C
gl_3D :: GLenum
gl_3D = 0x0601
gl_LINE_STRIP_ADJACENCY_EXT :: GLenum
gl_LINE_STRIP_ADJACENCY_EXT = 0x000B
gl_MAX_DEFORMATION_ORDER_SGIX :: GLenum
gl_MAX_DEFORMATION_ORDER_SGIX = 0x8197
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80
gl_BLEND_SRC_RGB_OES :: GLenum
gl_BLEND_SRC_RGB_OES = 0x80C9
gl_TEXTURE_BINDING_RECTANGLE_NV :: GLenum
gl_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6
gl_MAP1_VERTEX_ATTRIB2_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662
gl_DOUBLE_MAT4x2_EXT :: GLenum
gl_DOUBLE_MAT4x2_EXT = 0x8F4D
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = 0x900D
gl_PACK_SKIP_IMAGES :: GLenum
gl_PACK_SKIP_IMAGES = 0x806B
gl_CONSERVATIVE_RASTERIZATION_NV :: GLenum
gl_CONSERVATIVE_RASTERIZATION_NV = 0x9346
gl_CURRENT_BIT :: GLenum
gl_CURRENT_BIT = 0x00000001
gl_EVAL_VERTEX_ATTRIB3_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB3_NV = 0x86C9
gl_CONTEXT_LOST :: GLenum
gl_CONTEXT_LOST = 0x0507
gl_IUI_V3F_EXT :: GLenum
gl_IUI_V3F_EXT = 0x81AE
gl_COLOR_ATTACHMENT12_EXT :: GLenum
gl_COLOR_ATTACHMENT12_EXT = 0x8CEC
gl_DST_OVER_NV :: GLenum
gl_DST_OVER_NV = 0x9289
gl_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45
gl_BUFFER_UPDATE_BARRIER_BIT_EXT :: GLenum
gl_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200
gl_PROGRAM_NATIVE_TEMPORARIES_ARB :: GLenum
gl_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6
gl_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES :: GLenum
gl_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43
gl_REFLECTION_MAP :: GLenum
gl_REFLECTION_MAP = 0x8512
gl_IMPLEMENTATION_COLOR_READ_FORMAT :: GLenum
gl_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B
gl_DEBUG_OUTPUT_SYNCHRONOUS_ARB :: GLenum
gl_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242
gl_QUADRATIC_CURVE_TO_NV :: GLenum
gl_QUADRATIC_CURVE_TO_NV = 0x0A
gl_RGBA8 :: GLenum
gl_RGBA8 = 0x8058
gl_LOSE_CONTEXT_ON_RESET_ARB :: GLenum
gl_LOSE_CONTEXT_ON_RESET_ARB = 0x8252
gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM :: GLenum
gl_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D
gl_1PASS_SGIS :: GLenum
gl_1PASS_SGIS = 0x80A1
gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH :: GLenum
gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC
gl_CON_7_ATI :: GLenum
gl_CON_7_ATI = 0x8948
gl_STENCIL_RENDERABLE :: GLenum
gl_STENCIL_RENDERABLE = 0x8288
gl_MATRIX5_NV :: GLenum
gl_MATRIX5_NV = 0x8635
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F
gl_SHADER_STORAGE_BUFFER_BINDING :: GLenum
gl_SHADER_STORAGE_BUFFER_BINDING = 0x90D3
gl_UNPACK_CONSTANT_DATA_SUNX :: GLenum
gl_UNPACK_CONSTANT_DATA_SUNX = 0x81D5
gl_DEBUG_TYPE_POP_GROUP_KHR :: GLenum
gl_DEBUG_TYPE_POP_GROUP_KHR = 0x826A
gl_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV :: GLenum
gl_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4
gl_UNSIGNED_INT_10_10_10_2_OES :: GLenum
gl_UNSIGNED_INT_10_10_10_2_OES = 0x8DF6
gl_ASYNC_DRAW_PIXELS_SGIX :: GLenum
gl_ASYNC_DRAW_PIXELS_SGIX = 0x835D
gl_FRAMEBUFFER_SRGB_CAPABLE_EXT :: GLenum
gl_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA
gl_BACK_NORMALS_HINT_PGI :: GLenum
gl_BACK_NORMALS_HINT_PGI = 0x1A223
gl_COMBINER_COMPONENT_USAGE_NV :: GLenum
gl_COMBINER_COMPONENT_USAGE_NV = 0x8544
gl_RG16I :: GLenum
gl_RG16I = 0x8239
gl_ALPHA32I_EXT :: GLenum
gl_ALPHA32I_EXT = 0x8D84
gl_MAX_TEXTURE_BUFFER_SIZE :: GLenum
gl_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS :: GLenum
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4
gl_SHADER_TYPE :: GLenum
gl_SHADER_TYPE = 0x8B4F
gl_BUFFER_OBJECT_APPLE :: GLenum
gl_BUFFER_OBJECT_APPLE = 0x85B3
gl_QUERY_RESULT_AVAILABLE_EXT :: GLenum
gl_QUERY_RESULT_AVAILABLE_EXT = 0x8867
gl_RGB4_EXT :: GLenum
gl_RGB4_EXT = 0x804F
gl_NUM_FILL_STREAMS_NV :: GLenum
gl_NUM_FILL_STREAMS_NV = 0x8E29
gl_ALL_SHADER_BITS :: GLenum
gl_ALL_SHADER_BITS = 0xFFFFFFFF
gl_MAX_NAME_STACK_DEPTH :: GLenum
gl_MAX_NAME_STACK_DEPTH = 0x0D37
gl_ATTRIB_STACK_DEPTH :: GLenum
gl_ATTRIB_STACK_DEPTH = 0x0BB0
gl_COMBINE_RGB_EXT :: GLenum
gl_COMBINE_RGB_EXT = 0x8571
gl_POINT_SIZE :: GLenum
gl_POINT_SIZE = 0x0B11
gl_LUMINANCE_ALPHA16I_EXT :: GLenum
gl_LUMINANCE_ALPHA16I_EXT = 0x8D8D
gl_MAX_COLOR_MATRIX_STACK_DEPTH :: GLenum
gl_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3
gl_INTENSITY16_SNORM :: GLenum
gl_INTENSITY16_SNORM = 0x901B
gl_COLOR_ATTACHMENT_EXT :: GLenum
gl_COLOR_ATTACHMENT_EXT = 0x90F0
gl_MAX_VIEWPORTS :: GLenum
gl_MAX_VIEWPORTS = 0x825B
gl_BOOL_VEC3 :: GLenum
gl_BOOL_VEC3 = 0x8B58
gl_WRITE_ONLY :: GLenum
gl_WRITE_ONLY = 0x88B9
gl_TEXTURE25 :: GLenum
gl_TEXTURE25 = 0x84D9
gl_UNKNOWN_CONTEXT_RESET_ARB :: GLenum
gl_UNKNOWN_CONTEXT_RESET_ARB = 0x8255
gl_SIGNED_RGB8_NV :: GLenum
gl_SIGNED_RGB8_NV = 0x86FF
gl_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV :: GLenum
gl_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856
gl_SLUMINANCE8_EXT :: GLenum
gl_SLUMINANCE8_EXT = 0x8C47
gl_SCALE_BY_ONE_HALF_NV :: GLenum
gl_SCALE_BY_ONE_HALF_NV = 0x8540
gl_MAP2_VERTEX_ATTRIB2_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672
gl_FIXED_ONLY_ARB :: GLenum
gl_FIXED_ONLY_ARB = 0x891D
gl_NEAREST_CLIPMAP_LINEAR_SGIX :: GLenum
gl_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E
gl_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV :: GLenum
gl_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533
gl_DUAL_INTENSITY12_SGIS :: GLenum
gl_DUAL_INTENSITY12_SGIS = 0x811A
gl_IMAGE_CLASS_4_X_8 :: GLenum
gl_IMAGE_CLASS_4_X_8 = 0x82BF
gl_MAP2_VERTEX_4 :: GLenum
gl_MAP2_VERTEX_4 = 0x0DB8
gl_FRAMEBUFFER_INCOMPLETE_FORMATS_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = 0x8CDA
gl_MATRIX4_NV :: GLenum
gl_MATRIX4_NV = 0x8634
gl_POLYGON_BIT :: GLenum
gl_POLYGON_BIT = 0x00000008
gl_UNPACK_COMPRESSED_SIZE_SGIX :: GLenum
gl_UNPACK_COMPRESSED_SIZE_SGIX = 0x831A
gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = 0x886D
gl_OPERAND1_ALPHA :: GLenum
gl_OPERAND1_ALPHA = 0x8599
gl_WEIGHT_ARRAY_TYPE_ARB :: GLenum
gl_WEIGHT_ARRAY_TYPE_ARB = 0x86A9
gl_SEPARABLE_2D :: GLenum
gl_SEPARABLE_2D = 0x8012
gl_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV :: GLenum
gl_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11
gl_VERTEX_STREAM6_ATI :: GLenum
gl_VERTEX_STREAM6_ATI = 0x8772
gl_PROXY_TEXTURE_2D_STACK_MESAX :: GLenum
gl_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C
gl_TEXTURE_2D_STACK_BINDING_MESAX :: GLenum
gl_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E
gl_DISCRETE_AMD :: GLenum
gl_DISCRETE_AMD = 0x9006
gl_SAMPLE_MASK :: GLenum
gl_SAMPLE_MASK = 0x8E51
gl_UNSIGNED_INT8_NV :: GLenum
gl_UNSIGNED_INT8_NV = 0x8FEC
gl_UNDEFINED_VERTEX :: GLenum
gl_UNDEFINED_VERTEX = 0x8260
gl_DEBUG_SEVERITY_NOTIFICATION_KHR :: GLenum
gl_DEBUG_SEVERITY_NOTIFICATION_KHR = 0x826B
gl_PROGRAM_TEX_INDIRECTIONS_ARB :: GLenum
gl_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807
gl_TEXTURE_2D_ARRAY :: GLenum
gl_TEXTURE_2D_ARRAY = 0x8C1A
gl_ALPHA_BITS :: GLenum
gl_ALPHA_BITS = 0x0D55
gl_SRC0_ALPHA :: GLenum
gl_SRC0_ALPHA = 0x8588
gl_TEXTURE_BUFFER_ARB :: GLenum
gl_TEXTURE_BUFFER_ARB = 0x8C2A
gl_PN_TRIANGLES_TESSELATION_LEVEL_ATI :: GLenum
gl_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4
gl_POINT_SIZE_MIN_SGIS :: GLenum
gl_POINT_SIZE_MIN_SGIS = 0x8126
gl_LARGE_CCW_ARC_TO_NV :: GLenum
gl_LARGE_CCW_ARC_TO_NV = 0x16
gl_QUERY_COUNTER_BITS :: GLenum
gl_QUERY_COUNTER_BITS = 0x8864
gl_HSL_COLOR_NV :: GLenum
gl_HSL_COLOR_NV = 0x92AF
gl_RGBA_FLOAT32_ATI :: GLenum
gl_RGBA_FLOAT32_ATI = 0x8814
gl_VIEW_CLASS_48_BITS :: GLenum
gl_VIEW_CLASS_48_BITS = 0x82C7
gl_MODELVIEW1_EXT :: GLenum
gl_MODELVIEW1_EXT = 0x850A
gl_SAMPLER_2D :: GLenum
gl_SAMPLER_2D = 0x8B5E
gl_CLIP_PLANE0 :: GLenum
gl_CLIP_PLANE0 = 0x3000
gl_FOG_COORDINATE :: GLenum
gl_FOG_COORDINATE = 0x8451
gl_DRAW_BUFFER4_ARB :: GLenum
gl_DRAW_BUFFER4_ARB = 0x8829
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 0x8CD6
gl_UNSIGNED_INT_IMAGE_1D :: GLenum
gl_UNSIGNED_INT_IMAGE_1D = 0x9062
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC
gl_TEXTURE26 :: GLenum
gl_TEXTURE26 = 0x84DA
gl_ALPHA32F_EXT :: GLenum
gl_ALPHA32F_EXT = 0x8816
gl_HISTOGRAM_GREEN_SIZE :: GLenum
gl_HISTOGRAM_GREEN_SIZE = 0x8029
gl_PIXEL_SUBSAMPLE_4242_SGIX :: GLenum
gl_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA
gl_TRACE_ALL_BITS_MESA :: GLenum
gl_TRACE_ALL_BITS_MESA = 0xFFFF
gl_POST_COLOR_MATRIX_ALPHA_SCALE :: GLenum
gl_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7
gl_TEXTURE_COORD_ARRAY_SIZE :: GLenum
gl_TEXTURE_COORD_ARRAY_SIZE = 0x8088
gl_INT_IMAGE_BUFFER_EXT :: GLenum
gl_INT_IMAGE_BUFFER_EXT = 0x905C
gl_POST_CONVOLUTION_RED_BIAS :: GLenum
gl_POST_CONVOLUTION_RED_BIAS = 0x8020
gl_COMPRESSED_RGBA_ASTC_4x3x3_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_4x3x3_OES = 0x93C1
gl_UNSIGNED_SHORT_8_8_APPLE :: GLenum
gl_UNSIGNED_SHORT_8_8_APPLE = 0x85BA
gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS :: GLenum
gl_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB
gl_UNSIGNED_INVERT_NV :: GLenum
gl_UNSIGNED_INVERT_NV = 0x8537
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7
gl_MAX_VERTEX_SHADER_INVARIANTS_EXT :: GLenum
gl_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7
gl_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT :: GLenum
gl_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = 0x92D5
gl_TEXTURE_BINDING_CUBE_MAP :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP = 0x8514
gl_DRAW_BUFFER1_EXT :: GLenum
gl_DRAW_BUFFER1_EXT = 0x8826
gl_LUMINANCE16I_EXT :: GLenum
gl_LUMINANCE16I_EXT = 0x8D8C
gl_DOUBLE_MAT3x4 :: GLenum
gl_DOUBLE_MAT3x4 = 0x8F4C
gl_422_REV_AVERAGE_EXT :: GLenum
gl_422_REV_AVERAGE_EXT = 0x80CF
gl_TEXTURE_MAX_LOD :: GLenum
gl_TEXTURE_MAX_LOD = 0x813B
gl_SOURCE1_ALPHA_EXT :: GLenum
gl_SOURCE1_ALPHA_EXT = 0x8589
gl_FRAGMENT_NORMAL_EXT :: GLenum
gl_FRAGMENT_NORMAL_EXT = 0x834A
gl_N3F_V3F :: GLenum
gl_N3F_V3F = 0x2A25
gl_CONDITION_SATISFIED_APPLE :: GLenum
gl_CONDITION_SATISFIED_APPLE = 0x911C
gl_COMBINE_RGB :: GLenum
gl_COMBINE_RGB = 0x8571
gl_UNIFORM_SIZE :: GLenum
gl_UNIFORM_SIZE = 0x8A38
gl_REG_30_ATI :: GLenum
gl_REG_30_ATI = 0x893F
gl_V3F :: GLenum
gl_V3F = 0x2A21
gl_QUERY_RESULT_EXT :: GLenum
gl_QUERY_RESULT_EXT = 0x8866
gl_SIGNED_RGB_UNSIGNED_ALPHA_NV :: GLenum
gl_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C
gl_ATOMIC_COUNTER_BUFFER :: GLenum
gl_ATOMIC_COUNTER_BUFFER = 0x92C0
gl_EMISSION :: GLenum
gl_EMISSION = 0x1600
gl_FLOAT_RG16_NV :: GLenum
gl_FLOAT_RG16_NV = 0x8886
gl_SKIP_COMPONENTS2_NV :: GLenum
gl_SKIP_COMPONENTS2_NV = -5
gl_DEPTH_CLAMP_NEAR_AMD :: GLenum
gl_DEPTH_CLAMP_NEAR_AMD = 0x901E
gl_SET_AMD :: GLenum
gl_SET_AMD = 0x874A
gl_SMOOTH_LINE_WIDTH_GRANULARITY :: GLenum
gl_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23
gl_STRICT_LIGHTING_HINT_PGI :: GLenum
gl_STRICT_LIGHTING_HINT_PGI = 0x1A217
gl_TEXCOORD1_BIT_PGI :: GLenum
gl_TEXCOORD1_BIT_PGI = 0x10000000
gl_MATRIX2_NV :: GLenum
gl_MATRIX2_NV = 0x8632
gl_VERTEX_ARRAY_RANGE_POINTER_NV :: GLenum
gl_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521
gl_MIN_SPARSE_LEVEL_AMD :: GLenum
gl_MIN_SPARSE_LEVEL_AMD = 0x919B
gl_TEXTURE_HEIGHT :: GLenum
gl_TEXTURE_HEIGHT = 0x1001
gl_DRAW_BUFFER6_ATI :: GLenum
gl_DRAW_BUFFER6_ATI = 0x882B
gl_SUBTRACT :: GLenum
gl_SUBTRACT = 0x84E7
gl_COLOR_MATRIX_SGI :: GLenum
gl_COLOR_MATRIX_SGI = 0x80B1
gl_TEXTURE_1D_STACK_BINDING_MESAX :: GLenum
gl_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D
gl_COMPRESSED_RGBA_ASTC_10x6_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9
gl_COVERAGE_EDGE_FRAGMENTS_NV :: GLenum
gl_COVERAGE_EDGE_FRAGMENTS_NV = 0x8ED6
gl_BUFFER_ACCESS_ARB :: GLenum
gl_BUFFER_ACCESS_ARB = 0x88BB
gl_MAX_MULTIVIEW_BUFFERS_EXT :: GLenum
gl_MAX_MULTIVIEW_BUFFERS_EXT = 0x90F2
gl_DEBUG_SOURCE_THIRD_PARTY :: GLenum
gl_DEBUG_SOURCE_THIRD_PARTY = 0x8249
gl_INT_SAMPLER_CUBE :: GLenum
gl_INT_SAMPLER_CUBE = 0x8DCC
gl_FONT_HAS_KERNING_BIT_NV :: GLenum
gl_FONT_HAS_KERNING_BIT_NV = 0x10000000
gl_MAX_DEBUG_LOGGED_MESSAGES :: GLenum
gl_MAX_DEBUG_LOGGED_MESSAGES = 0x9144
gl_SEPARATE_SPECULAR_COLOR_EXT :: GLenum
gl_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA
gl_SYNC_CL_EVENT_COMPLETE_ARB :: GLenum
gl_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241
gl_COMPRESSED_RGBA_ASTC_6x5_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3
gl_DRAW_BUFFER1 :: GLenum
gl_DRAW_BUFFER1 = 0x8826
gl_QUERY_RESULT_AVAILABLE :: GLenum
gl_QUERY_RESULT_AVAILABLE = 0x8867
gl_COMPRESSED_INTENSITY :: GLenum
gl_COMPRESSED_INTENSITY = 0x84EC
gl_TEXTURE11 :: GLenum
gl_TEXTURE11 = 0x84CB
gl_MAX_PALETTE_MATRICES_ARB :: GLenum
gl_MAX_PALETTE_MATRICES_ARB = 0x8842
gl_BACK_SECONDARY_COLOR_NV :: GLenum
gl_BACK_SECONDARY_COLOR_NV = 0x8C78
gl_MAX_COMBINED_DIMENSIONS :: GLenum
gl_MAX_COMBINED_DIMENSIONS = 0x8282
gl_COMPRESSED_RGBA_ASTC_5x5_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2
gl_CONTEXT_FLAGS :: GLenum
gl_CONTEXT_FLAGS = 0x821E
gl_COLOR_ARRAY_LENGTH_NV :: GLenum
gl_COLOR_ARRAY_LENGTH_NV = 0x8F2D
gl_OP_EXP_BASE_2_EXT :: GLenum
gl_OP_EXP_BASE_2_EXT = 0x8791
gl_R16 :: GLenum
gl_R16 = 0x822A
gl_STENCIL_BUFFER_BIT2_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT2_QCOM = 0x00040000
gl_UNSIGNED_INT_SAMPLER_1D :: GLenum
gl_UNSIGNED_INT_SAMPLER_1D = 0x8DD1
gl_CLIP_DEPTH_MODE :: GLenum
gl_CLIP_DEPTH_MODE = 0x935D
gl_MATRIX26_ARB :: GLenum
gl_MATRIX26_ARB = 0x88DA
gl_MAX_TRACK_MATRIX_STACK_DEPTH_NV :: GLenum
gl_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E
gl_STENCIL_REF :: GLenum
gl_STENCIL_REF = 0x0B97
gl_MAX_RECTANGLE_TEXTURE_SIZE_ARB :: GLenum
gl_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8
gl_MAX_PROGRAM_ENV_PARAMETERS_ARB :: GLenum
gl_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5
gl_BLUE_MIN_CLAMP_INGR :: GLenum
gl_BLUE_MIN_CLAMP_INGR = 0x8562
gl_MODELVIEW2_ARB :: GLenum
gl_MODELVIEW2_ARB = 0x8722
gl_OBJECT_ATTACHED_OBJECTS_ARB :: GLenum
gl_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85
gl_WIDE_LINE_HINT_PGI :: GLenum
gl_WIDE_LINE_HINT_PGI = 0x1A222
gl_ADD_SIGNED_EXT :: GLenum
gl_ADD_SIGNED_EXT = 0x8574
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC
gl_BINORMAL_ARRAY_POINTER_EXT :: GLenum
gl_BINORMAL_ARRAY_POINTER_EXT = 0x8443
gl_COMBINER_INPUT_NV :: GLenum
gl_COMBINER_INPUT_NV = 0x8542
gl_UNSIGNED_INT_SAMPLER_2D_RECT :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5
gl_REPLICATE_BORDER_HP :: GLenum
gl_REPLICATE_BORDER_HP = 0x8153
gl_INT_IMAGE_2D_MULTISAMPLE :: GLenum
gl_INT_IMAGE_2D_MULTISAMPLE = 0x9060
gl_TESS_CONTROL_SHADER_EXT :: GLenum
gl_TESS_CONTROL_SHADER_EXT = 0x8E88
gl_COMPRESSED_RGBA_ASTC_3x3x3_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_3x3x3_OES = 0x93C0
gl_PROGRAM_SEPARABLE :: GLenum
gl_PROGRAM_SEPARABLE = 0x8258
gl_COMPRESSED_LUMINANCE :: GLenum
gl_COMPRESSED_LUMINANCE = 0x84EA
gl_MAX_TEXTURE_IMAGE_UNITS_ARB :: GLenum
gl_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872
gl_RENDERBUFFER_SAMPLES_APPLE :: GLenum
gl_RENDERBUFFER_SAMPLES_APPLE = 0x8CAB
gl_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT :: GLenum
gl_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x8E5A
gl_UNSIGNED_INT_S8_S8_8_8_NV :: GLenum
gl_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA
gl_LOCATION :: GLenum
gl_LOCATION = 0x930E
gl_EFFECTIVE_RASTER_SAMPLES_EXT :: GLenum
gl_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C
gl_POINT_DISTANCE_ATTENUATION_ARB :: GLenum
gl_POINT_DISTANCE_ATTENUATION_ARB = 0x8129
gl_COVERAGE_COMPONENT4_NV :: GLenum
gl_COVERAGE_COMPONENT4_NV = 0x8ED1
gl_DRAW_BUFFER0_NV :: GLenum
gl_DRAW_BUFFER0_NV = 0x8825
gl_DOUBLE_VEC2_EXT :: GLenum
gl_DOUBLE_VEC2_EXT = 0x8FFC
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7
gl_NORMAL_ARRAY_POINTER_EXT :: GLenum
gl_NORMAL_ARRAY_POINTER_EXT = 0x808F
gl_SMAPHS_PROGRAM_BINARY_DMP :: GLenum
gl_SMAPHS_PROGRAM_BINARY_DMP = 0x9252
gl_POINT_SIZE_MAX_EXT :: GLenum
gl_POINT_SIZE_MAX_EXT = 0x8127
gl_SHADER_BINARY_VIV :: GLenum
gl_SHADER_BINARY_VIV = 0x8FC4
gl_FLOAT_RGB_NV :: GLenum
gl_FLOAT_RGB_NV = 0x8882
gl_PROXY_TEXTURE_1D_ARRAY_EXT :: GLenum
gl_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19
gl_DEBUG_TYPE_PORTABILITY_ARB :: GLenum
gl_DEBUG_TYPE_PORTABILITY_ARB = 0x824F
gl_ITALIC_BIT_NV :: GLenum
gl_ITALIC_BIT_NV = 0x02
gl_PATH_MODELVIEW_STACK_DEPTH_NV :: GLenum
gl_PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3
gl_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F
gl_STENCIL_BACK_PASS_DEPTH_PASS_ATI :: GLenum
gl_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803
gl_OP_MAX_EXT :: GLenum
gl_OP_MAX_EXT = 0x878A
gl_MAX_4D_TEXTURE_SIZE_SGIS :: GLenum
gl_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138
gl_PIXEL_TEX_GEN_ALPHA_MS_SGIX :: GLenum
gl_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A
gl_4PASS_3_SGIS :: GLenum
gl_4PASS_3_SGIS = 0x80A7
gl_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG :: GLenum
gl_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02
gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8E85
gl_HSL_LUMINOSITY_KHR :: GLenum
gl_HSL_LUMINOSITY_KHR = 0x92B0
gl_COMPARE_R_TO_TEXTURE_ARB :: GLenum
gl_COMPARE_R_TO_TEXTURE_ARB = 0x884E
gl_REG_13_ATI :: GLenum
gl_REG_13_ATI = 0x892E
gl_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL :: GLenum
gl_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5
gl_DEPTH24_STENCIL8 :: GLenum
gl_DEPTH24_STENCIL8 = 0x88F0
gl_STENCIL_TAG_BITS_EXT :: GLenum
gl_STENCIL_TAG_BITS_EXT = 0x88F2
gl_SIGNED_LUMINANCE8_ALPHA8_NV :: GLenum
gl_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704
gl_TEXTURE_PRE_SPECULAR_HP :: GLenum
gl_TEXTURE_PRE_SPECULAR_HP = 0x8169
gl_VERTEX_STATE_PROGRAM_NV :: GLenum
gl_VERTEX_STATE_PROGRAM_NV = 0x8621
gl_TEXTURE_MAX_LEVEL :: GLenum
gl_TEXTURE_MAX_LEVEL = 0x813D
gl_RENDERBUFFER_BINDING_EXT :: GLenum
gl_RENDERBUFFER_BINDING_EXT = 0x8CA7
gl_UNIFORM_BLOCK_NAME_LENGTH :: GLenum
gl_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41
gl_MODELVIEW0_EXT :: GLenum
gl_MODELVIEW0_EXT = 0x1700
gl_VENDOR :: GLenum
gl_VENDOR = 0x1F00
gl_TRIANGLE_MESH_SUN :: GLenum
gl_TRIANGLE_MESH_SUN = 0x8615
gl_PIXEL_MAP_S_TO_S_SIZE :: GLenum
gl_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1
gl_REPLACEMENT_CODE_SUN :: GLenum
gl_REPLACEMENT_CODE_SUN = 0x81D8
gl_COLOR_ATTACHMENT1_EXT :: GLenum
gl_COLOR_ATTACHMENT1_EXT = 0x8CE1
gl_DEPTH_BUFFER_BIT7_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT7_QCOM = 0x00008000
gl_SCALAR_EXT :: GLenum
gl_SCALAR_EXT = 0x87BE
gl_TEXTURE_RED_TYPE :: GLenum
gl_TEXTURE_RED_TYPE = 0x8C10
gl_FLOAT_RGBA_MODE_NV :: GLenum
gl_FLOAT_RGBA_MODE_NV = 0x888E
gl_COMPRESSED_RGB :: GLenum
gl_COMPRESSED_RGB = 0x84ED
gl_COMPRESSED_RGBA_ASTC_12x10_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC
gl_RGBA16I :: GLenum
gl_RGBA16I = 0x8D88
gl_NATIVE_GRAPHICS_BEGIN_HINT_PGI :: GLenum
gl_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203
gl_UNSIGNED_INT_8_8_8_8 :: GLenum
gl_UNSIGNED_INT_8_8_8_8 = 0x8035
gl_SECONDARY_COLOR_ARRAY_STRIDE :: GLenum
gl_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C
gl_NUM_GENERAL_COMBINERS_NV :: GLenum
gl_NUM_GENERAL_COMBINERS_NV = 0x854E
gl_DOUBLE_MAT3x4_EXT :: GLenum
gl_DOUBLE_MAT3x4_EXT = 0x8F4C
gl_IMAGE_CUBE_MAP_ARRAY_EXT :: GLenum
gl_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054
gl_IMAGE_BINDING_FORMAT_EXT :: GLenum
gl_IMAGE_BINDING_FORMAT_EXT = 0x906E
gl_ELEMENT_ARRAY_TYPE_APPLE :: GLenum
gl_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D
gl_VERTEX_PROGRAM_BINDING_NV :: GLenum
gl_VERTEX_PROGRAM_BINDING_NV = 0x864A
gl_RELATIVE_QUADRATIC_CURVE_TO_NV :: GLenum
gl_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B
gl_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV :: GLenum
gl_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80
gl_VERTEX_ATTRIB_MAP1_ORDER_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04
gl_UNSIGNED_INT_5_9_9_9_REV :: GLenum
gl_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E
gl_DEPTH_STENCIL_MESA :: GLenum
gl_DEPTH_STENCIL_MESA = 0x8750
gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0
gl_TEXTURE_2D_MULTISAMPLE_ARRAY_OES :: GLenum
gl_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = 0x9102
gl_COLOR_ALPHA_PAIRING_ATI :: GLenum
gl_COLOR_ALPHA_PAIRING_ATI = 0x8975
gl_BUFFER_ACCESS_OES :: GLenum
gl_BUFFER_ACCESS_OES = 0x88BB
gl_DRAW_BUFFER13_ATI :: GLenum
gl_DRAW_BUFFER13_ATI = 0x8832
gl_MAP1_BINORMAL_EXT :: GLenum
gl_MAP1_BINORMAL_EXT = 0x8446
gl_DSDT_MAG_INTENSITY_NV :: GLenum
gl_DSDT_MAG_INTENSITY_NV = 0x86DC
gl_HILO8_NV :: GLenum
gl_HILO8_NV = 0x885E
gl_LUMINANCE4_ALPHA4_OES :: GLenum
gl_LUMINANCE4_ALPHA4_OES = 0x8043
gl_FLOAT_VEC3 :: GLenum
gl_FLOAT_VEC3 = 0x8B51
gl_NUM_EXTENSIONS :: GLenum
gl_NUM_EXTENSIONS = 0x821D
gl_TEXTURE_COORD_ARRAY_COUNT_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B
gl_ALWAYS :: GLenum
gl_ALWAYS = 0x0207
gl_UNIFORM_BUFFER_OFFSET_ALIGNMENT :: GLenum
gl_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34
gl_LIGHT_MODEL_TWO_SIDE :: GLenum
gl_LIGHT_MODEL_TWO_SIDE = 0x0B52
gl_SET :: GLenum
gl_SET = 0x150F
gl_SUPERSAMPLE_SCALE_Y_NV :: GLenum
gl_SUPERSAMPLE_SCALE_Y_NV = 0x9373
gl_PATCH_DEFAULT_INNER_LEVEL_EXT :: GLenum
gl_PATCH_DEFAULT_INNER_LEVEL_EXT = 0x8E73
gl_MAX_BINDABLE_UNIFORM_SIZE_EXT :: GLenum
gl_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED
gl_MIRRORED_REPEAT_IBM :: GLenum
gl_MIRRORED_REPEAT_IBM = 0x8370
gl_POINT_FADE_THRESHOLD_SIZE_EXT :: GLenum
gl_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128
gl_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217
gl_SHADER_IMAGE_ATOMIC :: GLenum
gl_SHADER_IMAGE_ATOMIC = 0x82A6
gl_DOUBLE_MAT3_EXT :: GLenum
gl_DOUBLE_MAT3_EXT = 0x8F47
gl_MAX_PALETTE_MATRICES_OES :: GLenum
gl_MAX_PALETTE_MATRICES_OES = 0x8842
gl_MINMAX_SINK_EXT :: GLenum
gl_MINMAX_SINK_EXT = 0x8030
gl_VARIABLE_A_NV :: GLenum
gl_VARIABLE_A_NV = 0x8523
gl_INCR_WRAP_OES :: GLenum
gl_INCR_WRAP_OES = 0x8507
gl_STREAM_READ :: GLenum
gl_STREAM_READ = 0x88E1
gl_NEGATE_BIT_ATI :: GLenum
gl_NEGATE_BIT_ATI = 0x00000004
gl_MAP_READ_BIT :: GLenum
gl_MAP_READ_BIT = 0x0001
gl_FRACTIONAL_ODD :: GLenum
gl_FRACTIONAL_ODD = 0x8E7B
gl_CON_2_ATI :: GLenum
gl_CON_2_ATI = 0x8943
gl_CLIENT_STORAGE_BIT :: GLenum
gl_CLIENT_STORAGE_BIT = 0x0200
gl_COMPRESSED_RGBA_ASTC_8x8_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7
gl_MAX_TESS_CONTROL_INPUT_COMPONENTS :: GLenum
gl_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C
gl_PROXY_TEXTURE_1D_EXT :: GLenum
gl_PROXY_TEXTURE_1D_EXT = 0x8063
gl_UNPACK_SKIP_IMAGES_EXT :: GLenum
gl_UNPACK_SKIP_IMAGES_EXT = 0x806D
gl_IMAGE_CLASS_4_X_16 :: GLenum
gl_IMAGE_CLASS_4_X_16 = 0x82BC
gl_PROXY_TEXTURE_CUBE_MAP :: GLenum
gl_PROXY_TEXTURE_CUBE_MAP = 0x851B
gl_SAMPLE_SHADING :: GLenum
gl_SAMPLE_SHADING = 0x8C36
gl_BUFFER_USAGE :: GLenum
gl_BUFFER_USAGE = 0x8765
gl_MODELVIEW_STACK_DEPTH :: GLenum
gl_MODELVIEW_STACK_DEPTH = 0x0BA3
gl_DRAW_BUFFER9_ARB :: GLenum
gl_DRAW_BUFFER9_ARB = 0x882E
gl_SYNC_CONDITION_APPLE :: GLenum
gl_SYNC_CONDITION_APPLE = 0x9113
gl_DEBUG_TYPE_PORTABILITY_KHR :: GLenum
gl_DEBUG_TYPE_PORTABILITY_KHR = 0x824F
gl_DEPTH_STENCIL_NV :: GLenum
gl_DEPTH_STENCIL_NV = 0x84F9
gl_FONT_GLYPHS_AVAILABLE_NV :: GLenum
gl_FONT_GLYPHS_AVAILABLE_NV = 0x9368
gl_RG :: GLenum
gl_RG = 0x8227
gl_INT :: GLenum
gl_INT = 0x1404
gl_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV :: GLenum
gl_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A
gl_ALPHA_INTEGER :: GLenum
gl_ALPHA_INTEGER = 0x8D97
gl_POST_CONVOLUTION_BLUE_BIAS :: GLenum
gl_POST_CONVOLUTION_BLUE_BIAS = 0x8022
gl_STEREO :: GLenum
gl_STEREO = 0x0C33
gl_OUTPUT_TEXTURE_COORD17_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE
gl_HARDMIX_NV :: GLenum
gl_HARDMIX_NV = 0x92A9
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = 0x93E1
gl_SHADER_KHR :: GLenum
gl_SHADER_KHR = 0x82E1
gl_CLIP_PLANE3_IMG :: GLenum
gl_CLIP_PLANE3_IMG = 0x3003
gl_ONE_MINUS_CONSTANT_COLOR_EXT :: GLenum
gl_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002
gl_CONTEXT_COMPATIBILITY_PROFILE_BIT :: GLenum
gl_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002
gl_INTERNALFORMAT_GREEN_SIZE :: GLenum
gl_INTERNALFORMAT_GREEN_SIZE = 0x8272
gl_COLOR :: GLenum
gl_COLOR = 0x1800
gl_ELEMENT_ARRAY_ATI :: GLenum
gl_ELEMENT_ARRAY_ATI = 0x8768
gl_TEXTURE_COORD_ARRAY_TYPE :: GLenum
gl_TEXTURE_COORD_ARRAY_TYPE = 0x8089
gl_INT_IMAGE_2D_RECT :: GLenum
gl_INT_IMAGE_2D_RECT = 0x905A
gl_DEBUG_CALLBACK_USER_PARAM :: GLenum
gl_DEBUG_CALLBACK_USER_PARAM = 0x8245
gl_TRIANGLES :: GLenum
gl_TRIANGLES = 0x0004
gl_POINT_SIZE_GRANULARITY :: GLenum
gl_POINT_SIZE_GRANULARITY = 0x0B13
gl_SQUARE_NV :: GLenum
gl_SQUARE_NV = 0x90A3
gl_BLEND_DST_ALPHA :: GLenum
gl_BLEND_DST_ALPHA = 0x80CA
gl_CLEAR :: GLenum
gl_CLEAR = 0x1500
gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT :: GLenum
gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004
gl_C4F_N3F_V3F :: GLenum
gl_C4F_N3F_V3F = 0x2A26
gl_RELATIVE_CONIC_CURVE_TO_NV :: GLenum
gl_RELATIVE_CONIC_CURVE_TO_NV = 0x1B
gl_AND :: GLenum
gl_AND = 0x1501
gl_SCALEBIAS_HINT_SGIX :: GLenum
gl_SCALEBIAS_HINT_SGIX = 0x8322
gl_ZERO_TO_ONE :: GLenum
gl_ZERO_TO_ONE = 0x935F
gl_DEPTH_BOUNDS_TEST_EXT :: GLenum
gl_DEPTH_BOUNDS_TEST_EXT = 0x8890
gl_NUM_COMPRESSED_TEXTURE_FORMATS :: GLenum
gl_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2
gl_COPY_WRITE_BUFFER_NV :: GLenum
gl_COPY_WRITE_BUFFER_NV = 0x8F37
gl_DUAL_LUMINANCE12_SGIS :: GLenum
gl_DUAL_LUMINANCE12_SGIS = 0x8116
gl_SHADER_OBJECT_ARB :: GLenum
gl_SHADER_OBJECT_ARB = 0x8B48
gl_INT_SAMPLER_1D_EXT :: GLenum
gl_INT_SAMPLER_1D_EXT = 0x8DC9
gl_LINE_RESET_TOKEN :: GLenum
gl_LINE_RESET_TOKEN = 0x0707
gl_LINK_STATUS :: GLenum
gl_LINK_STATUS = 0x8B82
gl_IMAGE_CUBIC_WEIGHT_HP :: GLenum
gl_IMAGE_CUBIC_WEIGHT_HP = 0x815E
gl_MAX_COMPUTE_WORK_GROUP_SIZE :: GLenum
gl_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF
gl_IMAGE_TRANSLATE_X_HP :: GLenum
gl_IMAGE_TRANSLATE_X_HP = 0x8157
gl_MINMAX_FORMAT :: GLenum
gl_MINMAX_FORMAT = 0x802F
gl_MIRROR_CLAMP_ATI :: GLenum
gl_MIRROR_CLAMP_ATI = 0x8742
gl_FOG_COORD_ARRAY :: GLenum
gl_FOG_COORD_ARRAY = 0x8457
gl_TEXTURE_SWIZZLE_R_EXT :: GLenum
gl_TEXTURE_SWIZZLE_R_EXT = 0x8E42
gl_MAX_NUM_COMPATIBLE_SUBROUTINES :: GLenum
gl_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8
gl_MAX_LAYERS :: GLenum
gl_MAX_LAYERS = 0x8281
gl_RGB5_A1 :: GLenum
gl_RGB5_A1 = 0x8057
gl_COMPILE :: GLenum
gl_COMPILE = 0x1300
gl_SECONDARY_COLOR_ARRAY_LENGTH_NV :: GLenum
gl_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31
gl_SHADING_LANGUAGE_VERSION_ARB :: GLenum
gl_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C
gl_PATH_FILL_BOUNDING_BOX_NV :: GLenum
gl_PATH_FILL_BOUNDING_BOX_NV = 0x90A1
gl_DOUBLE_VEC4_EXT :: GLenum
gl_DOUBLE_VEC4_EXT = 0x8FFE
gl_COUNT_UP_NV :: GLenum
gl_COUNT_UP_NV = 0x9088
gl_COMPRESSED_SLUMINANCE :: GLenum
gl_COMPRESSED_SLUMINANCE = 0x8C4A
gl_MAX_PROGRAM_ADDRESS_REGISTERS_ARB :: GLenum
gl_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1
gl_EMBOSS_CONSTANT_NV :: GLenum
gl_EMBOSS_CONSTANT_NV = 0x855E
gl_4PASS_1_EXT :: GLenum
gl_4PASS_1_EXT = 0x80A5
gl_RETAINED_APPLE :: GLenum
gl_RETAINED_APPLE = 0x8A1B
gl_PROXY_TEXTURE_2D_ARRAY_EXT :: GLenum
gl_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B
gl_READ_ONLY :: GLenum
gl_READ_ONLY = 0x88B8
gl_UNSIGNED_INT_8_8_8_8_EXT :: GLenum
gl_UNSIGNED_INT_8_8_8_8_EXT = 0x8035
gl_POST_CONVOLUTION_ALPHA_SCALE_EXT :: GLenum
gl_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F
gl_RG8_EXT :: GLenum
gl_RG8_EXT = 0x822B
gl_MULTISAMPLE_BUFFER_BIT4_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT4_QCOM = 0x10000000
gl_TRANSPOSE_NV :: GLenum
gl_TRANSPOSE_NV = 0x862C
gl_IDENTITY_NV :: GLenum
gl_IDENTITY_NV = 0x862A
gl_ONE_MINUS_DST_COLOR :: GLenum
gl_ONE_MINUS_DST_COLOR = 0x0307
gl_MAX_FRAMEBUFFER_LAYERS :: GLenum
gl_MAX_FRAMEBUFFER_LAYERS = 0x9317
gl_DOT_PRODUCT_REFLECT_CUBE_MAP_NV :: GLenum
gl_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2
gl_COEFF :: GLenum
gl_COEFF = 0x0A00
gl_CONVOLUTION_BORDER_COLOR :: GLenum
gl_CONVOLUTION_BORDER_COLOR = 0x8154
gl_CURRENT_WEIGHT_ARB :: GLenum
gl_CURRENT_WEIGHT_ARB = 0x86A8
gl_RESET_NOTIFICATION_STRATEGY_KHR :: GLenum
gl_RESET_NOTIFICATION_STRATEGY_KHR = 0x8256
gl_IMAGE_BINDING_FORMAT :: GLenum
gl_IMAGE_BINDING_FORMAT = 0x906E
gl_POINT_SIZE_ARRAY_TYPE_OES :: GLenum
gl_POINT_SIZE_ARRAY_TYPE_OES = 0x898A
gl_NORMAL_ARRAY_EXT :: GLenum
gl_NORMAL_ARRAY_EXT = 0x8075
gl_QUADS :: GLenum
gl_QUADS = 0x0007
gl_INDEX_ARRAY_STRIDE_EXT :: GLenum
gl_INDEX_ARRAY_STRIDE_EXT = 0x8086
gl_PATH_GEN_MODE_NV :: GLenum
gl_PATH_GEN_MODE_NV = 0x90B0
gl_ISOLINES_EXT :: GLenum
gl_ISOLINES_EXT = 0x8E7A
gl_POST_COLOR_MATRIX_COLOR_TABLE :: GLenum
gl_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2
gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E1F
gl_TEXTURE_COMPRESSION_HINT :: GLenum
gl_TEXTURE_COMPRESSION_HINT = 0x84EF
gl_STENCIL_TEST :: GLenum
gl_STENCIL_TEST = 0x0B90
gl_ACCUM_GREEN_BITS :: GLenum
gl_ACCUM_GREEN_BITS = 0x0D59
gl_TEXTURE_LIGHT_EXT :: GLenum
gl_TEXTURE_LIGHT_EXT = 0x8350
gl_TEXTURE_WRAP_R :: GLenum
gl_TEXTURE_WRAP_R = 0x8072
gl_COMPRESSED_SIGNED_RG11_EAC_OES :: GLenum
gl_COMPRESSED_SIGNED_RG11_EAC_OES = 0x9273
gl_PROGRAM_OBJECT_EXT :: GLenum
gl_PROGRAM_OBJECT_EXT = 0x8B40
gl_DEPTH_COMPONENT32_ARB :: GLenum
gl_DEPTH_COMPONENT32_ARB = 0x81A7
gl_CONSTANT_NV :: GLenum
gl_CONSTANT_NV = 0x8576
gl_COLOR_ATTACHMENT9_NV :: GLenum
gl_COLOR_ATTACHMENT9_NV = 0x8CE9
gl_INT_SAMPLER_CUBE_EXT :: GLenum
gl_INT_SAMPLER_CUBE_EXT = 0x8DCC
gl_VERTEX_ATTRIB_ARRAY3_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY3_NV = 0x8653
gl_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09
gl_DRAW_FRAMEBUFFER_EXT :: GLenum
gl_DRAW_FRAMEBUFFER_EXT = 0x8CA9
gl_VERTEX_ATTRIB_ARRAY5_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY5_NV = 0x8655
gl_SIGNED_NEGATE_NV :: GLenum
gl_SIGNED_NEGATE_NV = 0x853D
gl_VIEW_CLASS_S3TC_DXT1_RGB :: GLenum
gl_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC
gl_TEXTURE_MATRIX :: GLenum
gl_TEXTURE_MATRIX = 0x0BA8
gl_FRAMEBUFFER_DEFAULT_LAYERS :: GLenum
gl_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312
gl_LUMINANCE_FLOAT32_APPLE :: GLenum
gl_LUMINANCE_FLOAT32_APPLE = 0x8818
gl_PROGRAM_ALU_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805
gl_POINT_SIZE_MAX_SGIS :: GLenum
gl_POINT_SIZE_MAX_SGIS = 0x8127
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4
gl_LIGHT_MODEL_AMBIENT :: GLenum
gl_LIGHT_MODEL_AMBIENT = 0x0B53
gl_TRANSFORM_FEEDBACK_BUFFER_START :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84
gl_DRAW_BUFFER2 :: GLenum
gl_DRAW_BUFFER2 = 0x8827
gl_INT_VEC4 :: GLenum
gl_INT_VEC4 = 0x8B55
gl_TEXTURE29 :: GLenum
gl_TEXTURE29 = 0x84DD
gl_DRAW_FRAMEBUFFER_NV :: GLenum
gl_DRAW_FRAMEBUFFER_NV = 0x8CA9
gl_BACK :: GLenum
gl_BACK = 0x0405
gl_PROGRAM_RESIDENT_NV :: GLenum
gl_PROGRAM_RESIDENT_NV = 0x8647
gl_DRAW_BUFFER7_ARB :: GLenum
gl_DRAW_BUFFER7_ARB = 0x882C
gl_TEXTURE_LUMINANCE_TYPE_ARB :: GLenum
gl_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14
gl_ALWAYS_SOFT_HINT_PGI :: GLenum
gl_ALWAYS_SOFT_HINT_PGI = 0x1A20D
gl_CON_8_ATI :: GLenum
gl_CON_8_ATI = 0x8949
gl_DRAW_BUFFER6_NV :: GLenum
gl_DRAW_BUFFER6_NV = 0x882B
gl_STENCIL_INDEX4_EXT :: GLenum
gl_STENCIL_INDEX4_EXT = 0x8D47
gl_FRAMEBUFFER_RENDERABLE_LAYERED :: GLenum
gl_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A
gl_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46
gl_TEXTURE_CUBE_MAP_SEAMLESS :: GLenum
gl_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F
gl_FOG_COORDINATE_ARRAY_TYPE_EXT :: GLenum
gl_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454
gl_CLIP_PLANE1 :: GLenum
gl_CLIP_PLANE1 = 0x3001
gl_MAT_AMBIENT_BIT_PGI :: GLenum
gl_MAT_AMBIENT_BIT_PGI = 0x00100000
gl_MAP_WRITE_BIT :: GLenum
gl_MAP_WRITE_BIT = 0x0002
gl_FLOAT_MAT4x3_NV :: GLenum
gl_FLOAT_MAT4x3_NV = 0x8B6A
gl_SEPARATE_ATTRIBS :: GLenum
gl_SEPARATE_ATTRIBS = 0x8C8D
gl_SAMPLE_MASK_VALUE_SGIS :: GLenum
gl_SAMPLE_MASK_VALUE_SGIS = 0x80AA
gl_T4F_C4F_N3F_V4F :: GLenum
gl_T4F_C4F_N3F_V4F = 0x2A2D
gl_DRAW_BUFFER_EXT :: GLenum
gl_DRAW_BUFFER_EXT = 0x0C01
gl_R1UI_C3F_V3F_SUN :: GLenum
gl_R1UI_C3F_V3F_SUN = 0x85C6
gl_RGBA_FLOAT16_APPLE :: GLenum
gl_RGBA_FLOAT16_APPLE = 0x881A
gl_BUMP_ROT_MATRIX_ATI :: GLenum
gl_BUMP_ROT_MATRIX_ATI = 0x8775
gl_MAP_STENCIL :: GLenum
gl_MAP_STENCIL = 0x0D11
gl_LEFT :: GLenum
gl_LEFT = 0x0406
gl_SIGNED_HILO_NV :: GLenum
gl_SIGNED_HILO_NV = 0x86F9
gl_FONT_Y_MIN_BOUNDS_BIT_NV :: GLenum
gl_FONT_Y_MIN_BOUNDS_BIT_NV = 0x00020000
gl_TEXTURE28 :: GLenum
gl_TEXTURE28 = 0x84DC
gl_POLYGON_TOKEN :: GLenum
gl_POLYGON_TOKEN = 0x0703
gl_VIVIDLIGHT_NV :: GLenum
gl_VIVIDLIGHT_NV = 0x92A6
gl_ALIASED_LINE_WIDTH_RANGE :: GLenum
gl_ALIASED_LINE_WIDTH_RANGE = 0x846E
gl_VIDEO_COLOR_CONVERSION_MATRIX_NV :: GLenum
gl_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029
gl_OUTPUT_TEXTURE_COORD18_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF
gl_TRANSFORM_FEEDBACK_BUFFER_MODE_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F
gl_UNIFORM_BUFFER_EXT :: GLenum
gl_UNIFORM_BUFFER_EXT = 0x8DEE
gl_MAP2_VERTEX_ATTRIB3_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673
gl_PACK_IMAGE_HEIGHT :: GLenum
gl_PACK_IMAGE_HEIGHT = 0x806C
gl_RGB16UI_EXT :: GLenum
gl_RGB16UI_EXT = 0x8D77
gl_OUTPUT_TEXTURE_COORD13_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA
gl_BLEND_EQUATION_EXT :: GLenum
gl_BLEND_EQUATION_EXT = 0x8009
gl_HISTOGRAM_SINK :: GLenum
gl_HISTOGRAM_SINK = 0x802D
gl_MAX_COMBINED_CLIP_AND_CULL_DISTANCES :: GLenum
gl_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA
gl_STENCIL_BUFFER_BIT0_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT0_QCOM = 0x00010000
gl_REG_7_ATI :: GLenum
gl_REG_7_ATI = 0x8928
gl_ALL_STATIC_DATA_IBM :: GLenum
gl_ALL_STATIC_DATA_IBM = 103060
gl_CON_19_ATI :: GLenum
gl_CON_19_ATI = 0x8954
gl_LUMINANCE8_ALPHA8_SNORM :: GLenum
gl_LUMINANCE8_ALPHA8_SNORM = 0x9016
gl_RENDERBUFFER_WIDTH_EXT :: GLenum
gl_RENDERBUFFER_WIDTH_EXT = 0x8D42
gl_COMPRESSED_RGBA_S3TC_DXT1_EXT :: GLenum
gl_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1
gl_RGB10_EXT :: GLenum
gl_RGB10_EXT = 0x8052
gl_DOUBLE_MAT4_EXT :: GLenum
gl_DOUBLE_MAT4_EXT = 0x8F48
gl_TEXTURE14 :: GLenum
gl_TEXTURE14 = 0x84CE
gl_PROGRAM_ERROR_POSITION_ARB :: GLenum
gl_PROGRAM_ERROR_POSITION_ARB = 0x864B
gl_BLEND_SRC_RGB :: GLenum
gl_BLEND_SRC_RGB = 0x80C9
gl_R1UI_T2F_N3F_V3F_SUN :: GLenum
gl_R1UI_T2F_N3F_V3F_SUN = 0x85CA
gl_VERTEX_SHADER_BINDING_EXT :: GLenum
gl_VERTEX_SHADER_BINDING_EXT = 0x8781
gl_TEXTURE_MIN_LOD_SGIS :: GLenum
gl_TEXTURE_MIN_LOD_SGIS = 0x813A
gl_RG16F :: GLenum
gl_RG16F = 0x822F
gl_TEXTURE_BORDER_COLOR_NV :: GLenum
gl_TEXTURE_BORDER_COLOR_NV = 0x1004
gl_OP_POWER_EXT :: GLenum
gl_OP_POWER_EXT = 0x8793
gl_TRIANGLE_STRIP :: GLenum
gl_TRIANGLE_STRIP = 0x0005
gl_REG_15_ATI :: GLenum
gl_REG_15_ATI = 0x8930
gl_UNPACK_SKIP_PIXELS_EXT :: GLenum
gl_UNPACK_SKIP_PIXELS_EXT = 0x0CF4
gl_OUTPUT_TEXTURE_COORD11_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 0x8CD3
gl_QUERY_TARGET :: GLenum
gl_QUERY_TARGET = 0x82EA
gl_HORIZONTAL_LINE_TO_NV :: GLenum
gl_HORIZONTAL_LINE_TO_NV = 0x06
gl_ATOMIC_COUNTER_BARRIER_BIT :: GLenum
gl_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000
gl_TEXTURE_COMPRESSED_IMAGE_SIZE :: GLenum
gl_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0
gl_MAX_PROGRAM_OUTPUT_VERTICES_NV :: GLenum
gl_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27
gl_SHADER_STORAGE_BLOCK :: GLenum
gl_SHADER_STORAGE_BLOCK = 0x92E6
gl_T2F_IUI_V3F_EXT :: GLenum
gl_T2F_IUI_V3F_EXT = 0x81B2
gl_QUERY_ALL_EVENT_BITS_AMD :: GLenum
gl_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF
gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI :: GLenum
gl_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5
gl_BINORMAL_ARRAY_TYPE_EXT :: GLenum
gl_BINORMAL_ARRAY_TYPE_EXT = 0x8440
gl_DRAW_INDIRECT_LENGTH_NV :: GLenum
gl_DRAW_INDIRECT_LENGTH_NV = 0x8F42
gl_PIXEL_MAP_I_TO_A_SIZE :: GLenum
gl_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5
gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23
gl_DRAW_BUFFER10_ATI :: GLenum
gl_DRAW_BUFFER10_ATI = 0x882F
gl_COMPRESSED_RGB_S3TC_DXT1_EXT :: GLenum
gl_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0
gl_INT8_NV :: GLenum
gl_INT8_NV = 0x8FE0
gl_ELEMENT_ARRAY_APPLE :: GLenum
gl_ELEMENT_ARRAY_APPLE = 0x8A0C
gl_READ_WRITE :: GLenum
gl_READ_WRITE = 0x88BA
gl_COMPRESSED_RGB_ARB :: GLenum
gl_COMPRESSED_RGB_ARB = 0x84ED
gl_TEXTURE_BUFFER_FORMAT_EXT :: GLenum
gl_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E
gl_RGB8I :: GLenum
gl_RGB8I = 0x8D8F
gl_FRAMEBUFFER_UNSUPPORTED :: GLenum
gl_FRAMEBUFFER_UNSUPPORTED = 0x8CDD
gl_UNSIGNED_INT_IMAGE_3D_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064
gl_RGBA32F_ARB :: GLenum
gl_RGBA32F_ARB = 0x8814
gl_DUAL_INTENSITY16_SGIS :: GLenum
gl_DUAL_INTENSITY16_SGIS = 0x811B
gl_DOT_PRODUCT_TEXTURE_1D_NV :: GLenum
gl_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C
gl_UNSIGNED_SHORT_1_5_5_5_REV :: GLenum
gl_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366
gl_QUERY_BY_REGION_WAIT :: GLenum
gl_QUERY_BY_REGION_WAIT = 0x8E15
gl_PRIMITIVE_RESTART_NV :: GLenum
gl_PRIMITIVE_RESTART_NV = 0x8558
gl_POST_COLOR_MATRIX_RED_BIAS_SGI :: GLenum
gl_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8
gl_SECONDARY_COLOR_ARRAY_POINTER_EXT :: GLenum
gl_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D
gl_OFFSET_TEXTURE_2D_MATRIX_NV :: GLenum
gl_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1
gl_HSL_COLOR_KHR :: GLenum
gl_HSL_COLOR_KHR = 0x92AF
gl_REFLECTION_MAP_EXT :: GLenum
gl_REFLECTION_MAP_EXT = 0x8512
gl_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT :: GLenum
gl_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = 0x9124
gl_IMAGE_TEXEL_SIZE :: GLenum
gl_IMAGE_TEXEL_SIZE = 0x82A7
gl_RG16F_EXT :: GLenum
gl_RG16F_EXT = 0x822F
gl_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3
gl_LUMINANCE_ALPHA8I_EXT :: GLenum
gl_LUMINANCE_ALPHA8I_EXT = 0x8D93
gl_COMPUTE_SUBROUTINE :: GLenum
gl_COMPUTE_SUBROUTINE = 0x92ED
gl_LUMINANCE32UI_EXT :: GLenum
gl_LUMINANCE32UI_EXT = 0x8D74
gl_VERTEX_CONSISTENT_HINT_PGI :: GLenum
gl_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B
gl_SRGB8 :: GLenum
gl_SRGB8 = 0x8C41
gl_STREAM_COPY :: GLenum
gl_STREAM_COPY = 0x88E2
gl_MAX_CLIP_DISTANCES :: GLenum
gl_MAX_CLIP_DISTANCES = 0x0D32
gl_CONSTANT_COLOR1_NV :: GLenum
gl_CONSTANT_COLOR1_NV = 0x852B
gl_MAX_FRAMEBUFFER_SAMPLES :: GLenum
gl_MAX_FRAMEBUFFER_SAMPLES = 0x9318
gl_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT :: GLenum
gl_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4
gl_PIXEL_UNPACK_BUFFER :: GLenum
gl_PIXEL_UNPACK_BUFFER = 0x88EC
gl_MATRIX15_ARB :: GLenum
gl_MATRIX15_ARB = 0x88CF
gl_SIGNED_LUMINANCE_ALPHA_NV :: GLenum
gl_SIGNED_LUMINANCE_ALPHA_NV = 0x8703
gl_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH :: GLenum
gl_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35
gl_TEXTURE_COORD_ARRAY_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_EXT = 0x8078
gl_FRAMEBUFFER_ATTACHMENT_RED_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212
gl_COLOR_ATTACHMENT0_OES :: GLenum
gl_COLOR_ATTACHMENT0_OES = 0x8CE0
gl_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX :: GLenum
gl_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B
gl_READ_BUFFER_EXT :: GLenum
gl_READ_BUFFER_EXT = 0x0C02
gl_PN_TRIANGLES_POINT_MODE_LINEAR_ATI :: GLenum
gl_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5
gl_TEXTURE_VIEW_MIN_LEVEL_EXT :: GLenum
gl_TEXTURE_VIEW_MIN_LEVEL_EXT = 0x82DB
gl_MODELVIEW3_ARB :: GLenum
gl_MODELVIEW3_ARB = 0x8723
gl_GLOBAL_ALPHA_FACTOR_SUN :: GLenum
gl_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA
gl_UNSIGNED_INT_VEC4_EXT :: GLenum
gl_UNSIGNED_INT_VEC4_EXT = 0x8DC8
gl_MOV_ATI :: GLenum
gl_MOV_ATI = 0x8961
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB :: GLenum
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F
gl_VERTEX_ARRAY_RANGE_LENGTH_APPLE :: GLenum
gl_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E
gl_PATH_INITIAL_END_CAP_NV :: GLenum
gl_PATH_INITIAL_END_CAP_NV = 0x9077
gl_COMPRESSED_RGBA_ASTC_5x4x4_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_5x4x4_OES = 0x93C4
gl_RGBA_SNORM :: GLenum
gl_RGBA_SNORM = 0x8F93
gl_NUM_COMPRESSED_TEXTURE_FORMATS_ARB :: GLenum
gl_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2
gl_INTENSITY16 :: GLenum
gl_INTENSITY16 = 0x804D
gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211
gl_LAST_VERTEX_CONVENTION :: GLenum
gl_LAST_VERTEX_CONVENTION = 0x8E4E
gl_MAX_DEBUG_LOGGED_MESSAGES_ARB :: GLenum
gl_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144
gl_REG_2_ATI :: GLenum
gl_REG_2_ATI = 0x8923
gl_ARC_TO_NV :: GLenum
gl_ARC_TO_NV = 0xFE
gl_PALETTE8_R5_G6_B5_OES :: GLenum
gl_PALETTE8_R5_G6_B5_OES = 0x8B97
gl_PATH_DASH_OFFSET_RESET_NV :: GLenum
gl_PATH_DASH_OFFSET_RESET_NV = 0x90B4
gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES :: GLenum
gl_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = 0x9105
gl_MAP1_VERTEX_ATTRIB1_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661
gl_MAX_TEXTURE_COORDS :: GLenum
gl_MAX_TEXTURE_COORDS = 0x8871
gl_TEXTURE30_ARB :: GLenum
gl_TEXTURE30_ARB = 0x84DE
gl_REDUCE :: GLenum
gl_REDUCE = 0x8016
gl_LUMINANCE16_ALPHA16_SNORM :: GLenum
gl_LUMINANCE16_ALPHA16_SNORM = 0x901A
gl_SCREEN_KHR :: GLenum
gl_SCREEN_KHR = 0x9295
gl_FIXED_ONLY :: GLenum
gl_FIXED_ONLY = 0x891D
gl_DEPTH_BUFFER_BIT4_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT4_QCOM = 0x00001000
gl_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD :: GLenum
gl_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008
gl_VERTEX_PROGRAM_ARB :: GLenum
gl_VERTEX_PROGRAM_ARB = 0x8620
gl_STENCIL_BUFFER_BIT :: GLenum
gl_STENCIL_BUFFER_BIT = 0x00000400
gl_UNSIGNED_SHORT_8_8_MESA :: GLenum
gl_UNSIGNED_SHORT_8_8_MESA = 0x85BA
gl_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068
gl_MAX_PROGRAM_LOOP_COUNT_NV :: GLenum
gl_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8
gl_SPARSE_BUFFER_PAGE_SIZE_ARB :: GLenum
gl_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8
gl_CW :: GLenum
gl_CW = 0x0900
gl_SOURCE0_RGB :: GLenum
gl_SOURCE0_RGB = 0x8580
gl_INDEX_ARRAY_TYPE_EXT :: GLenum
gl_INDEX_ARRAY_TYPE_EXT = 0x8085
gl_REPLACEMENT_CODE_ARRAY_SUN :: GLenum
gl_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0
gl_MAX_SPARSE_TEXTURE_SIZE_AMD :: GLenum
gl_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198
gl_COLOR_TABLE_ALPHA_SIZE :: GLenum
gl_COLOR_TABLE_ALPHA_SIZE = 0x80DD
gl_COLOR_TABLE_GREEN_SIZE :: GLenum
gl_COLOR_TABLE_GREEN_SIZE = 0x80DB
gl_INDEX_BIT_PGI :: GLenum
gl_INDEX_BIT_PGI = 0x00080000
gl_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7
gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT :: GLenum
gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CD
gl_TEXTURE_LOD_BIAS_S_SGIX :: GLenum
gl_TEXTURE_LOD_BIAS_S_SGIX = 0x818E
gl_COLORBURN_NV :: GLenum
gl_COLORBURN_NV = 0x929A
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A
gl_FRAMEZOOM_FACTOR_SGIX :: GLenum
gl_FRAMEZOOM_FACTOR_SGIX = 0x818C
gl_DEPTH_BUFFER_BIT6_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT6_QCOM = 0x00004000
gl_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV :: GLenum
gl_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0
gl_TEXTURE_ENV :: GLenum
gl_TEXTURE_ENV = 0x2300
gl_TEXTURE_MAX_LEVEL_SGIS :: GLenum
gl_TEXTURE_MAX_LEVEL_SGIS = 0x813D
gl_TEXTURE13 :: GLenum
gl_TEXTURE13 = 0x84CD
gl_ONE_EXT :: GLenum
gl_ONE_EXT = 0x87DE
gl_MAP1_TEXTURE_COORD_1 :: GLenum
gl_MAP1_TEXTURE_COORD_1 = 0x0D93
gl_RENDERBUFFER_WIDTH :: GLenum
gl_RENDERBUFFER_WIDTH = 0x8D42
gl_MAP1_VERTEX_ATTRIB13_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D
gl_NUM_PROGRAM_BINARY_FORMATS_OES :: GLenum
gl_NUM_PROGRAM_BINARY_FORMATS_OES = 0x87FE
gl_MODELVIEW12_ARB :: GLenum
gl_MODELVIEW12_ARB = 0x872C
gl_MATRIX5_ARB :: GLenum
gl_MATRIX5_ARB = 0x88C5
gl_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F
gl_CURRENT_QUERY_EXT :: GLenum
gl_CURRENT_QUERY_EXT = 0x8865
gl_MAX_GEOMETRY_INPUT_COMPONENTS :: GLenum
gl_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123
gl_TRANSPOSE_CURRENT_MATRIX_ARB :: GLenum
gl_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7
gl_OFFSET_TEXTURE_2D_BIAS_NV :: GLenum
gl_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3
gl_PROGRAM_NATIVE_PARAMETERS_ARB :: GLenum
gl_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA
gl_ALPHA_TEST_FUNC :: GLenum
gl_ALPHA_TEST_FUNC = 0x0BC1
gl_EVAL_VERTEX_ATTRIB4_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB4_NV = 0x86CA
gl_CONVOLUTION_2D_EXT :: GLenum
gl_CONVOLUTION_2D_EXT = 0x8011
gl_SECONDARY_COLOR_ARRAY_SIZE_EXT :: GLenum
gl_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A
gl_BUFFER_SIZE :: GLenum
gl_BUFFER_SIZE = 0x8764
gl_DRAW_BUFFER14_EXT :: GLenum
gl_DRAW_BUFFER14_EXT = 0x8833
gl_OUTPUT_TEXTURE_COORD28_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9
gl_TEXTURE5_ARB :: GLenum
gl_TEXTURE5_ARB = 0x84C5
gl_TEXTURE6 :: GLenum
gl_TEXTURE6 = 0x84C6
gl_FRAMEBUFFER_BLEND :: GLenum
gl_FRAMEBUFFER_BLEND = 0x828B
gl_MAP2_VERTEX_ATTRIB4_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674
gl_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B
gl_COMPRESSED_RGB8_ETC2 :: GLenum
gl_COMPRESSED_RGB8_ETC2 = 0x9274
gl_POLYGON_OFFSET_FACTOR :: GLenum
gl_POLYGON_OFFSET_FACTOR = 0x8038
gl_PACK_IMAGE_HEIGHT_EXT :: GLenum
gl_PACK_IMAGE_HEIGHT_EXT = 0x806C
gl_TEXTURE_BLUE_SIZE :: GLenum
gl_TEXTURE_BLUE_SIZE = 0x805E
gl_CCW :: GLenum
gl_CCW = 0x0901
gl_ONE_MINUS_SRC1_COLOR :: GLenum
gl_ONE_MINUS_SRC1_COLOR = 0x88FA
gl_MAX_VERTEX_UNIFORM_COMPONENTS_ARB :: GLenum
gl_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A
gl_SUCCESS_NV :: GLenum
gl_SUCCESS_NV = 0x902F
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR :: GLenum
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = 0x8243
gl_RGBA8I_EXT :: GLenum
gl_RGBA8I_EXT = 0x8D8E
gl_TEXTURE_CUBE_MAP_POSITIVE_X :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515
gl_UPPER_LEFT :: GLenum
gl_UPPER_LEFT = 0x8CA2
gl_STENCIL_INDEX8_EXT :: GLenum
gl_STENCIL_INDEX8_EXT = 0x8D48
gl_4_BYTES_NV :: GLenum
gl_4_BYTES_NV = 0x1409
gl_SWIZZLE_STR_DR_ATI :: GLenum
gl_SWIZZLE_STR_DR_ATI = 0x8978
gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT :: GLenum
gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CF
gl_VIEWPORT_SUBPIXEL_BITS :: GLenum
gl_VIEWPORT_SUBPIXEL_BITS = 0x825C
gl_BLEND_DST_RGB :: GLenum
gl_BLEND_DST_RGB = 0x80C8
gl_SRC0_RGB :: GLenum
gl_SRC0_RGB = 0x8580
gl_FILTER4_SGIS :: GLenum
gl_FILTER4_SGIS = 0x8146
gl_ARRAY_BUFFER_ARB :: GLenum
gl_ARRAY_BUFFER_ARB = 0x8892
gl_ADD_BLEND_IMG :: GLenum
gl_ADD_BLEND_IMG = 0x8C09
gl_EVAL_VERTEX_ATTRIB15_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB15_NV = 0x86D5
gl_CUBIC_HP :: GLenum
gl_CUBIC_HP = 0x815F
gl_SOURCE1_RGB_ARB :: GLenum
gl_SOURCE1_RGB_ARB = 0x8581
gl_TEXTURE_CLIPMAP_CENTER_SGIX :: GLenum
gl_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171
gl_FOG_DENSITY :: GLenum
gl_FOG_DENSITY = 0x0B62
gl_DECODE_EXT :: GLenum
gl_DECODE_EXT = 0x8A49
gl_PROXY_TEXTURE_RECTANGLE_NV :: GLenum
gl_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7
gl_DRAW_FRAMEBUFFER_BINDING_EXT :: GLenum
gl_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6
gl_COLOR_BUFFER_BIT4_QCOM :: GLenum
gl_COLOR_BUFFER_BIT4_QCOM = 0x00000010
gl_MAT_EMISSION_BIT_PGI :: GLenum
gl_MAT_EMISSION_BIT_PGI = 0x00800000
gl_DRAW_BUFFER2_ARB :: GLenum
gl_DRAW_BUFFER2_ARB = 0x8827
gl_CULL_VERTEX_EXT :: GLenum
gl_CULL_VERTEX_EXT = 0x81AA
gl_READ_PIXELS_TYPE :: GLenum
gl_READ_PIXELS_TYPE = 0x828E
gl_MAX_ARRAY_TEXTURE_LAYERS :: GLenum
gl_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF
gl_INTERPOLATE :: GLenum
gl_INTERPOLATE = 0x8575
gl_IMPLEMENTATION_COLOR_READ_TYPE :: GLenum
gl_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A
gl_CONVOLUTION_WIDTH_EXT :: GLenum
gl_CONVOLUTION_WIDTH_EXT = 0x8018
gl_PATH_ERROR_POSITION_NV :: GLenum
gl_PATH_ERROR_POSITION_NV = 0x90AB
gl_SRGB_DECODE_ARB :: GLenum
gl_SRGB_DECODE_ARB = 0x8299
gl_DMP_PROGRAM_BINARY_DMP :: GLenum
gl_DMP_PROGRAM_BINARY_DMP = 0x9253
gl_TEXTURE11_ARB :: GLenum
gl_TEXTURE11_ARB = 0x84CB
gl_PIXEL_TEX_GEN_SGIX :: GLenum
gl_PIXEL_TEX_GEN_SGIX = 0x8139
gl_VERTEX_SOURCE_ATI :: GLenum
gl_VERTEX_SOURCE_ATI = 0x8774
gl_MAX_COMPUTE_SHARED_MEMORY_SIZE :: GLenum
gl_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262
gl_RG32F :: GLenum
gl_RG32F = 0x8230
gl_STANDARD_FONT_FORMAT_NV :: GLenum
gl_STANDARD_FONT_FORMAT_NV = 0x936C
gl_VIEWPORT_INDEX_PROVOKING_VERTEX :: GLenum
gl_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F
gl_YCRCB_422_SGIX :: GLenum
gl_YCRCB_422_SGIX = 0x81BB
gl_MAX_EXT :: GLenum
gl_MAX_EXT = 0x8008
gl_DEBUG_TYPE_ERROR_KHR :: GLenum
gl_DEBUG_TYPE_ERROR_KHR = 0x824C
gl_SAMPLER_OBJECT_AMD :: GLenum
gl_SAMPLER_OBJECT_AMD = 0x9155
gl_INTENSITY12_EXT :: GLenum
gl_INTENSITY12_EXT = 0x804C
gl_PATCH_VERTICES_EXT :: GLenum
gl_PATCH_VERTICES_EXT = 0x8E72
gl_VERTEX_ARRAY_BINDING :: GLenum
gl_VERTEX_ARRAY_BINDING = 0x85B5
gl_VARIABLE_C_NV :: GLenum
gl_VARIABLE_C_NV = 0x8525
gl_FRAGMENT_COLOR_EXT :: GLenum
gl_FRAGMENT_COLOR_EXT = 0x834C
gl_FUNC_REVERSE_SUBTRACT_EXT :: GLenum
gl_FUNC_REVERSE_SUBTRACT_EXT = 0x800B
gl_MODULATE_SUBTRACT_ATI :: GLenum
gl_MODULATE_SUBTRACT_ATI = 0x8746
gl_LOSE_CONTEXT_ON_RESET_KHR :: GLenum
gl_LOSE_CONTEXT_ON_RESET_KHR = 0x8252
gl_RENDERBUFFER_INTERNAL_FORMAT_OES :: GLenum
gl_RENDERBUFFER_INTERNAL_FORMAT_OES = 0x8D44
gl_AFFINE_3D_NV :: GLenum
gl_AFFINE_3D_NV = 0x9094
gl_RENDERBUFFER_HEIGHT_OES :: GLenum
gl_RENDERBUFFER_HEIGHT_OES = 0x8D43
gl_MATRIX10_ARB :: GLenum
gl_MATRIX10_ARB = 0x88CA
gl_TEXTURE_VIEW_MIN_LAYER :: GLenum
gl_TEXTURE_VIEW_MIN_LAYER = 0x82DD
gl_FLOAT_CLEAR_COLOR_VALUE_NV :: GLenum
gl_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET :: GLenum
gl_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E
gl_MATRIX1_ARB :: GLenum
gl_MATRIX1_ARB = 0x88C1
gl_DEPTH_COMPONENT16_OES :: GLenum
gl_DEPTH_COMPONENT16_OES = 0x81A5
gl_PIXEL_FRAGMENT_RGB_SOURCE_SGIS :: GLenum
gl_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354
gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT :: GLenum
gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C
gl_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = 0x886C
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES :: GLenum
gl_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5C
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD
gl_PATH_FILL_MASK_NV :: GLenum
gl_PATH_FILL_MASK_NV = 0x9081
gl_CLIP_PLANE4_IMG :: GLenum
gl_CLIP_PLANE4_IMG = 0x3004
gl_R8_SNORM :: GLenum
gl_R8_SNORM = 0x8F94
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = 0x88FE
gl_SAMPLER_1D_ARRAY :: GLenum
gl_SAMPLER_1D_ARRAY = 0x8DC0
gl_PERFQUERY_COUNTER_DURATION_RAW_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2
gl_STACK_UNDERFLOW :: GLenum
gl_STACK_UNDERFLOW = 0x0504
gl_CLIP_PLANE2 :: GLenum
gl_CLIP_PLANE2 = 0x3002
gl_PATH_INITIAL_DASH_CAP_NV :: GLenum
gl_PATH_INITIAL_DASH_CAP_NV = 0x907C
gl_LINE_TO_NV :: GLenum
gl_LINE_TO_NV = 0x04
gl_BLEND_EQUATION_RGB_EXT :: GLenum
gl_BLEND_EQUATION_RGB_EXT = 0x8009
gl_INT_IMAGE_1D_ARRAY_EXT :: GLenum
gl_INT_IMAGE_1D_ARRAY_EXT = 0x905D
gl_MATRIX31_ARB :: GLenum
gl_MATRIX31_ARB = 0x88DF
gl_SHADER_SOURCE_LENGTH :: GLenum
gl_SHADER_SOURCE_LENGTH = 0x8B88
gl_INDEX_OFFSET :: GLenum
gl_INDEX_OFFSET = 0x0D13
gl_UNSIGNED_NORMALIZED_ARB :: GLenum
gl_UNSIGNED_NORMALIZED_ARB = 0x8C17
gl_VERTEX_ATTRIB_MAP2_SIZE_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06
gl_REG_16_ATI :: GLenum
gl_REG_16_ATI = 0x8931
gl_UNIFORM_ARRAY_STRIDE :: GLenum
gl_UNIFORM_ARRAY_STRIDE = 0x8A3C
gl_DEBUG_SEVERITY_MEDIUM_ARB :: GLenum
gl_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147
gl_STENCIL_BUFFER_BIT5_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT5_QCOM = 0x00200000
gl_MINMAX_EXT :: GLenum
gl_MINMAX_EXT = 0x802E
gl_FACTOR_MAX_AMD :: GLenum
gl_FACTOR_MAX_AMD = 0x901D
gl_TEXTURE_COMPONENTS :: GLenum
gl_TEXTURE_COMPONENTS = 0x1003
gl_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE :: GLenum
gl_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8
gl_REG_14_ATI :: GLenum
gl_REG_14_ATI = 0x892F
gl_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL :: GLenum
gl_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6
gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS :: GLenum
gl_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314
gl_COLOR_ATTACHMENT0_EXT :: GLenum
gl_COLOR_ATTACHMENT0_EXT = 0x8CE0
gl_TEXCOORD4_BIT_PGI :: GLenum
gl_TEXCOORD4_BIT_PGI = 0x80000000
gl_POST_CONVOLUTION_RED_SCALE_EXT :: GLenum
gl_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C
gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D
gl_TEXTURE_BORDER :: GLenum
gl_TEXTURE_BORDER = 0x1005
gl_SHADOW_AMBIENT_SGIX :: GLenum
gl_SHADOW_AMBIENT_SGIX = 0x80BF
gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF
gl_IUI_V2F_EXT :: GLenum
gl_IUI_V2F_EXT = 0x81AD
gl_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT :: GLenum
gl_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73
gl_CLAMP :: GLenum
gl_CLAMP = 0x2900
gl_DRAW_BUFFER3_ARB :: GLenum
gl_DRAW_BUFFER3_ARB = 0x8828
gl_VERTEX_PROGRAM_TWO_SIDE_NV :: GLenum
gl_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643
gl_VERTEX_ARRAY_STORAGE_HINT_APPLE :: GLenum
gl_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F
gl_GLYPH_HORIZONTAL_BEARING_X_BIT_NV :: GLenum
gl_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04
gl_ACTIVE_SUBROUTINES :: GLenum
gl_ACTIVE_SUBROUTINES = 0x8DE5
gl_RGBA8_SNORM :: GLenum
gl_RGBA8_SNORM = 0x8F97
gl_LIGHTEN_KHR :: GLenum
gl_LIGHTEN_KHR = 0x9298
gl_LUMINANCE4_ALPHA4 :: GLenum
gl_LUMINANCE4_ALPHA4 = 0x8043
gl_DOT_PRODUCT_PASS_THROUGH_NV :: GLenum
gl_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B
gl_LUMINANCE12_ALPHA4_EXT :: GLenum
gl_LUMINANCE12_ALPHA4_EXT = 0x8046
gl_REG_1_ATI :: GLenum
gl_REG_1_ATI = 0x8922
gl_YCBCR_MESA :: GLenum
gl_YCBCR_MESA = 0x8757
gl_TEXTURE_VIEW_NUM_LEVELS :: GLenum
gl_TEXTURE_VIEW_NUM_LEVELS = 0x82DC
gl_INT_SAMPLER_CUBE_MAP_ARRAY_EXT :: GLenum
gl_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900E
gl_SPRITE_SGIX :: GLenum
gl_SPRITE_SGIX = 0x8148
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB
gl_LUMINANCE8_SNORM :: GLenum
gl_LUMINANCE8_SNORM = 0x9015
gl_VIEW_CLASS_96_BITS :: GLenum
gl_VIEW_CLASS_96_BITS = 0x82C5
gl_AUX_DEPTH_STENCIL_APPLE :: GLenum
gl_AUX_DEPTH_STENCIL_APPLE = 0x8A14
gl_TEXTURE_IMAGE_FORMAT :: GLenum
gl_TEXTURE_IMAGE_FORMAT = 0x828F
gl_R16_SNORM :: GLenum
gl_R16_SNORM = 0x8F98
gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211
gl_UNSIGNED_BYTE_2_3_3_REV_EXT :: GLenum
gl_UNSIGNED_BYTE_2_3_3_REV_EXT = 0x8362
gl_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX :: GLenum
gl_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = 0x8188
gl_QUERY_BY_REGION_WAIT_NV :: GLenum
gl_QUERY_BY_REGION_WAIT_NV = 0x8E15
gl_LIGHT6 :: GLenum
gl_LIGHT6 = 0x4006
gl_RGBA_INTEGER_EXT :: GLenum
gl_RGBA_INTEGER_EXT = 0x8D99
gl_TRANSFORM_FEEDBACK_BUFFER_INDEX :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B
gl_EYE_POINT_SGIS :: GLenum
gl_EYE_POINT_SGIS = 0x81F4
gl_FLOAT_MAT4x3 :: GLenum
gl_FLOAT_MAT4x3 = 0x8B6A
gl_INDEX_MATERIAL_PARAMETER_EXT :: GLenum
gl_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9
gl_OUTPUT_TEXTURE_COORD30_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB
gl_LUMINANCE8_ALPHA8_OES :: GLenum
gl_LUMINANCE8_ALPHA8_OES = 0x8045
gl_COLOR_ATTACHMENT2 :: GLenum
gl_COLOR_ATTACHMENT2 = 0x8CE2
gl_MAX_DEBUG_MESSAGE_LENGTH_KHR :: GLenum
gl_MAX_DEBUG_MESSAGE_LENGTH_KHR = 0x9143
gl_NORMAL_ARRAY_STRIDE :: GLenum
gl_NORMAL_ARRAY_STRIDE = 0x807F
gl_ALPHA_TEST_QCOM :: GLenum
gl_ALPHA_TEST_QCOM = 0x0BC0
gl_TRIANGLE_STRIP_ADJACENCY_ARB :: GLenum
gl_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D
gl_PIXEL_MAP_R_TO_R :: GLenum
gl_PIXEL_MAP_R_TO_R = 0x0C76
gl_TEXTURE_WIDTH :: GLenum
gl_TEXTURE_WIDTH = 0x1000
gl_ALPHA_TEST_FUNC_QCOM :: GLenum
gl_ALPHA_TEST_FUNC_QCOM = 0x0BC1
gl_FORMAT_SUBSAMPLE_244_244_OML :: GLenum
gl_FORMAT_SUBSAMPLE_244_244_OML = 0x8983
gl_Q :: GLenum
gl_Q = 0x2003
gl_SAMPLE_MASK_VALUE_NV :: GLenum
gl_SAMPLE_MASK_VALUE_NV = 0x8E52
gl_MATRIX18_ARB :: GLenum
gl_MATRIX18_ARB = 0x88D2
gl_CONSTANT_BORDER_HP :: GLenum
gl_CONSTANT_BORDER_HP = 0x8151
gl_DRAW_BUFFER1_NV :: GLenum
gl_DRAW_BUFFER1_NV = 0x8826
gl_PERFQUERY_COUNTER_TIMESTAMP_INTEL :: GLenum
gl_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5
gl_FRAGMENT_LIGHT7_SGIX :: GLenum
gl_FRAGMENT_LIGHT7_SGIX = 0x8413
gl_CLAMP_TO_BORDER_ARB :: GLenum
gl_CLAMP_TO_BORDER_ARB = 0x812D
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3
gl_MAX_ELEMENTS_INDICES_EXT :: GLenum
gl_MAX_ELEMENTS_INDICES_EXT = 0x80E9
gl_FEEDBACK_BUFFER_TYPE :: GLenum
gl_FEEDBACK_BUFFER_TYPE = 0x0DF2
gl_PIXEL_MIN_FILTER_EXT :: GLenum
gl_PIXEL_MIN_FILTER_EXT = 0x8332
gl_TEXTURE3 :: GLenum
gl_TEXTURE3 = 0x84C3
gl_MAP1_VERTEX_ATTRIB3_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663
gl_PIXEL_MAP_I_TO_B_SIZE :: GLenum
gl_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4
gl_SRGB8_ALPHA8 :: GLenum
gl_SRGB8_ALPHA8 = 0x8C43
gl_INTENSITY32I_EXT :: GLenum
gl_INTENSITY32I_EXT = 0x8D85
gl_UNPACK_SKIP_PIXELS :: GLenum
gl_UNPACK_SKIP_PIXELS = 0x0CF4
gl_GLYPH_VERTICAL_BEARING_Y_BIT_NV :: GLenum
gl_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40
gl_UNSIGNED_INT_ATOMIC_COUNTER :: GLenum
gl_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB
gl_LUMINANCE_ALPHA16F_ARB :: GLenum
gl_LUMINANCE_ALPHA16F_ARB = 0x881F
gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT :: GLenum
gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE
gl_PROGRAM_BINARY_ANGLE :: GLenum
gl_PROGRAM_BINARY_ANGLE = 0x93A6
gl_RGB8UI_EXT :: GLenum
gl_RGB8UI_EXT = 0x8D7D
gl_VARIANT_ARRAY_TYPE_EXT :: GLenum
gl_VARIANT_ARRAY_TYPE_EXT = 0x87E7
gl_Z400_BINARY_AMD :: GLenum
gl_Z400_BINARY_AMD = 0x8740
gl_OFFSET_TEXTURE_BIAS_NV :: GLenum
gl_OFFSET_TEXTURE_BIAS_NV = 0x86E3
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C
gl_DOT3_RGB_EXT :: GLenum
gl_DOT3_RGB_EXT = 0x8740
gl_OUTPUT_TEXTURE_COORD23_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4
gl_PERFQUERY_COUNTER_RAW_INTEL :: GLenum
gl_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4
gl_COMPUTE_SHADER :: GLenum
gl_COMPUTE_SHADER = 0x91B9
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER :: GLenum
gl_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED
gl_DUAL_LUMINANCE_ALPHA8_SGIS :: GLenum
gl_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D
gl_CLIENT_ATTRIB_STACK_DEPTH :: GLenum
gl_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1
gl_TEXTURE_BINDING_BUFFER :: GLenum
gl_TEXTURE_BINDING_BUFFER = 0x8C2C
gl_QUERY_BY_REGION_NO_WAIT_INVERTED :: GLenum
gl_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A
gl_DRAW_BUFFER7_NV :: GLenum
gl_DRAW_BUFFER7_NV = 0x882C
gl_MAX_MULTISAMPLE_COVERAGE_MODES_NV :: GLenum
gl_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11
gl_RENDERBUFFER_BLUE_SIZE_OES :: GLenum
gl_RENDERBUFFER_BLUE_SIZE_OES = 0x8D52
gl_UNSIGNED_INT_2_10_10_10_REV :: GLenum
gl_UNSIGNED_INT_2_10_10_10_REV = 0x8368
gl_UNSIGNED_INT_IMAGE_2D_RECT_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065
gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR :: GLenum
gl_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = 0x82FC
gl_MAX_VERTEX_ATTRIB_STRIDE :: GLenum
gl_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5
gl_MODELVIEW1_MATRIX_EXT :: GLenum
gl_MODELVIEW1_MATRIX_EXT = 0x8506
gl_PRIMARY_COLOR_EXT :: GLenum
gl_PRIMARY_COLOR_EXT = 0x8577
gl_LINEAR_MIPMAP_LINEAR :: GLenum
gl_LINEAR_MIPMAP_LINEAR = 0x2703
gl_ABGR_EXT :: GLenum
gl_ABGR_EXT = 0x8000
gl_MAP1_VERTEX_ATTRIB8_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668
gl_VERTEX_ATTRIB_BINDING :: GLenum
gl_VERTEX_ATTRIB_BINDING = 0x82D4
gl_MAX_PROGRAM_RESULT_COMPONENTS_NV :: GLenum
gl_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909
gl_MIN_SAMPLE_SHADING_VALUE_OES :: GLenum
gl_MIN_SAMPLE_SHADING_VALUE_OES = 0x8C37
gl_DRAW_INDIRECT_UNIFIED_NV :: GLenum
gl_DRAW_INDIRECT_UNIFIED_NV = 0x8F40
gl_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD :: GLenum
gl_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A
gl_SAMPLE_POSITION :: GLenum
gl_SAMPLE_POSITION = 0x8E50
gl_MODULATE_SIGNED_ADD_ATI :: GLenum
gl_MODULATE_SIGNED_ADD_ATI = 0x8745
gl_RENDERBUFFER_GREEN_SIZE_EXT :: GLenum
gl_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8
gl_MATRIX7_ARB :: GLenum
gl_MATRIX7_ARB = 0x88C7
gl_PROGRAM_BINARY_FORMATS :: GLenum
gl_PROGRAM_BINARY_FORMATS = 0x87FF
gl_DUAL_LUMINANCE4_SGIS :: GLenum
gl_DUAL_LUMINANCE4_SGIS = 0x8114
gl_TRANSFORM_FEEDBACK_BUFFER :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E
gl_COLOR_ATTACHMENT13 :: GLenum
gl_COLOR_ATTACHMENT13 = 0x8CED
gl_VERTEX_ATTRIB_ARRAY0_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY0_NV = 0x8650
gl_IMAGE_BINDING_LEVEL :: GLenum
gl_IMAGE_BINDING_LEVEL = 0x8F3B
gl_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM :: GLenum
gl_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = 0x8FB3
gl_SPRITE_AXIS_SGIX :: GLenum
gl_SPRITE_AXIS_SGIX = 0x814A
gl_MAP_ATTRIB_V_ORDER_NV :: GLenum
gl_MAP_ATTRIB_V_ORDER_NV = 0x86C4
gl_UNSIGNED_INT_24_8_MESA :: GLenum
gl_UNSIGNED_INT_24_8_MESA = 0x8751
gl_DST_ALPHA :: GLenum
gl_DST_ALPHA = 0x0304
gl_SAMPLER_CUBE_MAP_ARRAY_EXT :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900C
gl_DUAL_ALPHA12_SGIS :: GLenum
gl_DUAL_ALPHA12_SGIS = 0x8112
gl_INTENSITY4_EXT :: GLenum
gl_INTENSITY4_EXT = 0x804A
gl_DRAW_PIXEL_TOKEN :: GLenum
gl_DRAW_PIXEL_TOKEN = 0x0705
gl_TESS_EVALUATION_SHADER_BIT_EXT :: GLenum
gl_TESS_EVALUATION_SHADER_BIT_EXT = 0x00000010
gl_DRAW_BUFFER6 :: GLenum
gl_DRAW_BUFFER6 = 0x882B
gl_COLOR_TABLE_INTENSITY_SIZE_SGI :: GLenum
gl_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF
gl_FOG_COLOR :: GLenum
gl_FOG_COLOR = 0x0B66
gl_IMAGE_CLASS_2_X_32 :: GLenum
gl_IMAGE_CLASS_2_X_32 = 0x82BA
gl_BUFFER_SERIALIZED_MODIFY_APPLE :: GLenum
gl_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12
gl_POLYGON_OFFSET_LINE :: GLenum
gl_POLYGON_OFFSET_LINE = 0x2A02
gl_UNSIGNED_INT_SAMPLER_3D_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3
gl_CONSTANT_BORDER :: GLenum
gl_CONSTANT_BORDER = 0x8151
gl_PATH_STENCIL_REF_NV :: GLenum
gl_PATH_STENCIL_REF_NV = 0x90B8
gl_TEXTURE29_ARB :: GLenum
gl_TEXTURE29_ARB = 0x84DD
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN :: GLenum
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88
gl_FLOAT_MAT2x3 :: GLenum
gl_FLOAT_MAT2x3 = 0x8B65
gl_OPERAND2_ALPHA_ARB :: GLenum
gl_OPERAND2_ALPHA_ARB = 0x859A
gl_VIEW_CLASS_8_BITS :: GLenum
gl_VIEW_CLASS_8_BITS = 0x82CB
gl_TEXTURE_COORD_ARRAY_STRIDE_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A
gl_TEXTURE_LO_SIZE_NV :: GLenum
gl_TEXTURE_LO_SIZE_NV = 0x871C
gl_MULTISAMPLE_COVERAGE_MODES_NV :: GLenum
gl_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12
gl_NAMED_STRING_LENGTH_ARB :: GLenum
gl_NAMED_STRING_LENGTH_ARB = 0x8DE9
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = 0x93E9
gl_UNSIGNED_INT_SAMPLER_BUFFER :: GLenum
gl_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8
gl_FOG_COORD_ARRAY_POINTER :: GLenum
gl_FOG_COORD_ARRAY_POINTER = 0x8456
gl_RESCALE_NORMAL :: GLenum
gl_RESCALE_NORMAL = 0x803A
gl_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV :: GLenum
gl_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035
gl_ALPHA_TEST_REF_QCOM :: GLenum
gl_ALPHA_TEST_REF_QCOM = 0x0BC2
gl_OP_SET_LT_EXT :: GLenum
gl_OP_SET_LT_EXT = 0x878D
gl_COLOR_BUFFER_BIT6_QCOM :: GLenum
gl_COLOR_BUFFER_BIT6_QCOM = 0x00000040
gl_CONVOLUTION_FILTER_SCALE_EXT :: GLenum
gl_CONVOLUTION_FILTER_SCALE_EXT = 0x8014
gl_PIXEL_PACK_BUFFER_BINDING_EXT :: GLenum
gl_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED
gl_RGBA2 :: GLenum
gl_RGBA2 = 0x8055
gl_RESAMPLE_ZERO_FILL_SGIX :: GLenum
gl_RESAMPLE_ZERO_FILL_SGIX = 0x842F
gl_INVALID_VALUE :: GLenum
gl_INVALID_VALUE = 0x0501
gl_VIEW_CLASS_S3TC_DXT5_RGBA :: GLenum
gl_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF
gl_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: GLenum
gl_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8
gl_INDEX_ARRAY_TYPE :: GLenum
gl_INDEX_ARRAY_TYPE = 0x8085
gl_PROGRAM_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_INSTRUCTIONS_ARB = 0x88A0
gl_ACCUM_ADJACENT_PAIRS_NV :: GLenum
gl_ACCUM_ADJACENT_PAIRS_NV = 0x90AD
gl_RGBA2_EXT :: GLenum
gl_RGBA2_EXT = 0x8055
gl_SKIP_DECODE_EXT :: GLenum
gl_SKIP_DECODE_EXT = 0x8A4A
gl_COLOR_BUFFER_BIT7_QCOM :: GLenum
gl_COLOR_BUFFER_BIT7_QCOM = 0x00000080
gl_RG8I :: GLenum
gl_RG8I = 0x8237
gl_RENDERBUFFER_OES :: GLenum
gl_RENDERBUFFER_OES = 0x8D41
gl_LINES_ADJACENCY :: GLenum
gl_LINES_ADJACENCY = 0x000A
gl_PROXY_TEXTURE_CUBE_MAP_ARB :: GLenum
gl_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B
gl_FRAMEBUFFER_BINDING :: GLenum
gl_FRAMEBUFFER_BINDING = 0x8CA6
gl_MIRRORED_REPEAT_OES :: GLenum
gl_MIRRORED_REPEAT_OES = 0x8370
gl_DEPTH_FUNC :: GLenum
gl_DEPTH_FUNC = 0x0B74
gl_COORD_REPLACE_NV :: GLenum
gl_COORD_REPLACE_NV = 0x8862
gl_LINEAR_SHARPEN_SGIS :: GLenum
gl_LINEAR_SHARPEN_SGIS = 0x80AD
gl_POLYGON :: GLenum
gl_POLYGON = 0x0009
gl_VERSION :: GLenum
gl_VERSION = 0x1F02
gl_ELEMENT_ARRAY_POINTER_APPLE :: GLenum
gl_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E
gl_UNPACK_LSB_FIRST :: GLenum
gl_UNPACK_LSB_FIRST = 0x0CF1
gl_DOUBLE_MAT2 :: GLenum
gl_DOUBLE_MAT2 = 0x8F46
gl_HARDLIGHT_KHR :: GLenum
gl_HARDLIGHT_KHR = 0x929B
gl_BUFFER_MAPPED_ARB :: GLenum
gl_BUFFER_MAPPED_ARB = 0x88BC
gl_INT_SAMPLER_CUBE_MAP_ARRAY_ARB :: GLenum
gl_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85
gl_PRIMITIVE_ID_NV :: GLenum
gl_PRIMITIVE_ID_NV = 0x8C7C
gl_DITHER :: GLenum
gl_DITHER = 0x0BD0
gl_STENCIL_INDEX4_OES :: GLenum
gl_STENCIL_INDEX4_OES = 0x8D47
gl_RESTART_PATH_NV :: GLenum
gl_RESTART_PATH_NV = 0xF0
gl_QUERY_BUFFER_AMD :: GLenum
gl_QUERY_BUFFER_AMD = 0x9192
gl_RG8 :: GLenum
gl_RG8 = 0x822B
gl_EVAL_VERTEX_ATTRIB2_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB2_NV = 0x86C8
gl_UNSIGNED_INT_SAMPLER_1D_ARRAY :: GLenum
gl_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6
gl_TRANSFORM_FEEDBACK_BUFFER_START_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84
gl_DOUBLE_VEC3_EXT :: GLenum
gl_DOUBLE_VEC3_EXT = 0x8FFD
gl_CURRENT_PALETTE_MATRIX_OES :: GLenum
gl_CURRENT_PALETTE_MATRIX_OES = 0x8843
gl_FRAMEBUFFER_BARRIER_BIT :: GLenum
gl_FRAMEBUFFER_BARRIER_BIT = 0x00000400
gl_FRAMEBUFFER_SRGB :: GLenum
gl_FRAMEBUFFER_SRGB = 0x8DB9
gl_GEQUAL :: GLenum
gl_GEQUAL = 0x0206
gl_RGBA32I :: GLenum
gl_RGBA32I = 0x8D82
gl_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1
gl_MATRIX_INDEX_ARRAY_TYPE_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_TYPE_OES = 0x8847
gl_PATH_COVER_DEPTH_FUNC_NV :: GLenum
gl_PATH_COVER_DEPTH_FUNC_NV = 0x90BF
gl_COLOR_ATTACHMENT8 :: GLenum
gl_COLOR_ATTACHMENT8 = 0x8CE8
gl_SAMPLE_COVERAGE_ARB :: GLenum
gl_SAMPLE_COVERAGE_ARB = 0x80A0
gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB :: GLenum
gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A
gl_CLIP_ORIGIN :: GLenum
gl_CLIP_ORIGIN = 0x935C
gl_TEXTURE_COORD_ARRAY_STRIDE :: GLenum
gl_TEXTURE_COORD_ARRAY_STRIDE = 0x808A
gl_READ_PIXEL_DATA_RANGE_LENGTH_NV :: GLenum
gl_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B
gl_SHADER_PIXEL_LOCAL_STORAGE_EXT :: GLenum
gl_SHADER_PIXEL_LOCAL_STORAGE_EXT = 0x8F64
gl_VIRTUAL_PAGE_SIZE_Z_ARB :: GLenum
gl_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197
gl_R11F_G11F_B10F_EXT :: GLenum
gl_R11F_G11F_B10F_EXT = 0x8C3A
gl_TEXTURE_3D_EXT :: GLenum
gl_TEXTURE_3D_EXT = 0x806F
gl_TRANSFORM_FEEDBACK_BUFFER_START_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84
gl_PIXEL_COUNT_NV :: GLenum
gl_PIXEL_COUNT_NV = 0x8866
gl_RG_EXT :: GLenum
gl_RG_EXT = 0x8227
gl_IMAGE_CUBE_MAP_ARRAY :: GLenum
gl_IMAGE_CUBE_MAP_ARRAY = 0x9054
gl_SPRITE_EYE_ALIGNED_SGIX :: GLenum
gl_SPRITE_EYE_ALIGNED_SGIX = 0x814E
gl_POST_CONVOLUTION_GREEN_SCALE :: GLenum
gl_POST_CONVOLUTION_GREEN_SCALE = 0x801D
gl_COMPRESSED_INTENSITY_ARB :: GLenum
gl_COMPRESSED_INTENSITY_ARB = 0x84EC
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_OES :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = 0x8519
gl_EYE_PLANE :: GLenum
gl_EYE_PLANE = 0x2502
gl_WAIT_FAILED_APPLE :: GLenum
gl_WAIT_FAILED_APPLE = 0x911D
gl_INT_SAMPLER_3D_EXT :: GLenum
gl_INT_SAMPLER_3D_EXT = 0x8DCB
gl_COLOR_ARRAY_TYPE_EXT :: GLenum
gl_COLOR_ARRAY_TYPE_EXT = 0x8082
gl_MAP2_VERTEX_ATTRIB12_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C
gl_RGBA8I :: GLenum
gl_RGBA8I = 0x8D8E
gl_VERTEX_ARRAY_SIZE_EXT :: GLenum
gl_VERTEX_ARRAY_SIZE_EXT = 0x807A
gl_RGB32F :: GLenum
gl_RGB32F = 0x8815
gl_2X_BIT_ATI :: GLenum
gl_2X_BIT_ATI = 0x00000001
gl_TRANSPOSE_TEXTURE_MATRIX :: GLenum
gl_TRANSPOSE_TEXTURE_MATRIX = 0x84E5
gl_422_AVERAGE_EXT :: GLenum
gl_422_AVERAGE_EXT = 0x80CE
gl_COMBINER0_NV :: GLenum
gl_COMBINER0_NV = 0x8550
gl_LUMINANCE_ALPHA32F_EXT :: GLenum
gl_LUMINANCE_ALPHA32F_EXT = 0x8819
gl_RGBA_FLOAT_MODE_ARB :: GLenum
gl_RGBA_FLOAT_MODE_ARB = 0x8820
gl_ARRAY_OBJECT_BUFFER_ATI :: GLenum
gl_ARRAY_OBJECT_BUFFER_ATI = 0x8766
gl_T2F_C3F_V3F :: GLenum
gl_T2F_C3F_V3F = 0x2A2A
gl_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV :: GLenum
gl_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = 0x9343
gl_COMPRESSED_RGBA_ASTC_5x4_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1
gl_CONTRAST_NV :: GLenum
gl_CONTRAST_NV = 0x92A1
gl_422_EXT :: GLenum
gl_422_EXT = 0x80CC
gl_PERFMON_RESULT_AMD :: GLenum
gl_PERFMON_RESULT_AMD = 0x8BC6
gl_IMAGE_1D_ARRAY_EXT :: GLenum
gl_IMAGE_1D_ARRAY_EXT = 0x9052
gl_POLYGON_OFFSET_UNITS :: GLenum
gl_POLYGON_OFFSET_UNITS = 0x2A00
gl_PALETTE8_RGBA8_OES :: GLenum
gl_PALETTE8_RGBA8_OES = 0x8B96
gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT :: GLenum
gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E
gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = 0x90CC
gl_DRAW_BUFFER3 :: GLenum
gl_DRAW_BUFFER3 = 0x8828
gl_OUTPUT_TEXTURE_COORD1_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD1_EXT = 0x879E
gl_STATIC_DRAW :: GLenum
gl_STATIC_DRAW = 0x88E4
gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV :: GLenum
gl_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852
gl_CON_31_ATI :: GLenum
gl_CON_31_ATI = 0x8960
gl_R :: GLenum
gl_R = 0x2002
gl_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT :: GLenum
gl_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = 0x8A54
gl_FLOAT_R16_NV :: GLenum
gl_FLOAT_R16_NV = 0x8884
gl_ACCUM_CLEAR_VALUE :: GLenum
gl_ACCUM_CLEAR_VALUE = 0x0B80
gl_COLOR_ATTACHMENT6_NV :: GLenum
gl_COLOR_ATTACHMENT6_NV = 0x8CE6
gl_CLIP_DISTANCE6_APPLE :: GLenum
gl_CLIP_DISTANCE6_APPLE = 0x3006
gl_INT8_VEC4_NV :: GLenum
gl_INT8_VEC4_NV = 0x8FE3
gl_COUNT_DOWN_NV :: GLenum
gl_COUNT_DOWN_NV = 0x9089
gl_PRIMITIVES_SUBMITTED_ARB :: GLenum
gl_PRIMITIVES_SUBMITTED_ARB = 0x82EF
gl_TEXTURE20 :: GLenum
gl_TEXTURE20 = 0x84D4
gl_ZOOM_Y :: GLenum
gl_ZOOM_Y = 0x0D17
gl_COLOR_INDEX :: GLenum
gl_COLOR_INDEX = 0x1900
gl_UNSIGNED_INT_SAMPLER_BUFFER_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8
gl_DEBUG_SOURCE_WINDOW_SYSTEM :: GLenum
gl_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247
gl_MINMAX :: GLenum
gl_MINMAX = 0x802E
gl_LUMINANCE16_ALPHA16 :: GLenum
gl_LUMINANCE16_ALPHA16 = 0x8048
gl_POST_COLOR_MATRIX_ALPHA_BIAS :: GLenum
gl_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB
gl_DEPTH_ATTACHMENT_OES :: GLenum
gl_DEPTH_ATTACHMENT_OES = 0x8D00
gl_TYPE :: GLenum
gl_TYPE = 0x92FA
gl_TOP_LEVEL_ARRAY_SIZE :: GLenum
gl_TOP_LEVEL_ARRAY_SIZE = 0x930C
gl_TEXTURE_GREEN_TYPE :: GLenum
gl_TEXTURE_GREEN_TYPE = 0x8C11
gl_MODELVIEW23_ARB :: GLenum
gl_MODELVIEW23_ARB = 0x8737
gl_PRESENT_DURATION_NV :: GLenum
gl_PRESENT_DURATION_NV = 0x8E2B
gl_TEXCOORD3_BIT_PGI :: GLenum
gl_TEXCOORD3_BIT_PGI = 0x40000000
gl_RGBA8UI :: GLenum
gl_RGBA8UI = 0x8D7C
gl_MATRIX_PALETTE_OES :: GLenum
gl_MATRIX_PALETTE_OES = 0x8840
gl_WEIGHT_ARRAY_BUFFER_BINDING :: GLenum
gl_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E
gl_COMPUTE_TEXTURE :: GLenum
gl_COMPUTE_TEXTURE = 0x82A0
gl_MODULATE :: GLenum
gl_MODULATE = 0x2100
gl_NORMAL_MAP_NV :: GLenum
gl_NORMAL_MAP_NV = 0x8511
gl_STENCIL_BACK_REF :: GLenum
gl_STENCIL_BACK_REF = 0x8CA3
gl_SCISSOR_TEST :: GLenum
gl_SCISSOR_TEST = 0x0C11
gl_TEXTURE10 :: GLenum
gl_TEXTURE10 = 0x84CA
gl_OUTPUT_TEXTURE_COORD14_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB
gl_PRESENT_TIME_NV :: GLenum
gl_PRESENT_TIME_NV = 0x8E2A
gl_COMPRESSED_RG11_EAC_OES :: GLenum
gl_COMPRESSED_RG11_EAC_OES = 0x9272
gl_RENDERBUFFER_STENCIL_SIZE :: GLenum
gl_RENDERBUFFER_STENCIL_SIZE = 0x8D55
gl_POST_CONVOLUTION_ALPHA_BIAS_EXT :: GLenum
gl_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023
gl_QUERY_BUFFER_BINDING :: GLenum
gl_QUERY_BUFFER_BINDING = 0x9193
gl_EVAL_FRACTIONAL_TESSELLATION_NV :: GLenum
gl_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5
gl_PIXEL_TILE_HEIGHT_SGIX :: GLenum
gl_PIXEL_TILE_HEIGHT_SGIX = 0x8141
gl_NUM_SAMPLE_COUNTS :: GLenum
gl_NUM_SAMPLE_COUNTS = 0x9380
gl_LUMINANCE4_EXT :: GLenum
gl_LUMINANCE4_EXT = 0x803F
gl_ASYNC_HISTOGRAM_SGIX :: GLenum
gl_ASYNC_HISTOGRAM_SGIX = 0x832C
gl_MODELVIEW8_ARB :: GLenum
gl_MODELVIEW8_ARB = 0x8728
gl_COMPUTE_SHADER_BIT :: GLenum
gl_COMPUTE_SHADER_BIT = 0x00000020
gl_CLAMP_FRAGMENT_COLOR_ARB :: GLenum
gl_CLAMP_FRAGMENT_COLOR_ARB = 0x891B
gl_CURRENT_BINORMAL_EXT :: GLenum
gl_CURRENT_BINORMAL_EXT = 0x843C
gl_SLICE_ACCUM_SUN :: GLenum
gl_SLICE_ACCUM_SUN = 0x85CC
gl_OUTPUT_TEXTURE_COORD6_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3
gl_VARIANT_ARRAY_STRIDE_EXT :: GLenum
gl_VARIANT_ARRAY_STRIDE_EXT = 0x87E6
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4
gl_SAMPLER_CUBE_MAP_ARRAY_ARB :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C
gl_VERTEX_ATTRIB_RELATIVE_OFFSET :: GLenum
gl_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5
gl_STENCIL_BACK_PASS_DEPTH_PASS :: GLenum
gl_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803
gl_TEXTURE0_ARB :: GLenum
gl_TEXTURE0_ARB = 0x84C0
gl_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL :: GLenum
gl_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8
gl_INT_IMAGE_BUFFER :: GLenum
gl_INT_IMAGE_BUFFER = 0x905C
gl_PROXY_POST_CONVOLUTION_COLOR_TABLE :: GLenum
gl_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4
gl_SAMPLER_2D_RECT_ARB :: GLenum
gl_SAMPLER_2D_RECT_ARB = 0x8B63
gl_PALETTE8_RGB5_A1_OES :: GLenum
gl_PALETTE8_RGB5_A1_OES = 0x8B99
gl_LUMINANCE_ALPHA_FLOAT32_ATI :: GLenum
gl_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819
gl_RGB4 :: GLenum
gl_RGB4 = 0x804F
gl_SHADER :: GLenum
gl_SHADER = 0x82E1
gl_TEXTURE22_ARB :: GLenum
gl_TEXTURE22_ARB = 0x84D6
gl_LINES_ADJACENCY_ARB :: GLenum
gl_LINES_ADJACENCY_ARB = 0x000A
gl_PATH_FILL_MODE_NV :: GLenum
gl_PATH_FILL_MODE_NV = 0x9080
gl_STENCIL_INDEX1_OES :: GLenum
gl_STENCIL_INDEX1_OES = 0x8D46
gl_VERTEX_PROGRAM_TWO_SIDE_ARB :: GLenum
gl_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643
gl_IMAGE_ROTATE_ORIGIN_X_HP :: GLenum
gl_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A
gl_VERSION_ES_CM_1_1 :: GLenum
gl_VERSION_ES_CM_1_1 = 1
gl_TEXTURE_IMMUTABLE_LEVELS :: GLenum
gl_TEXTURE_IMMUTABLE_LEVELS = 0x82DF
gl_TEXTURE_FETCH_BARRIER_BIT :: GLenum
gl_TEXTURE_FETCH_BARRIER_BIT = 0x00000008
gl_FRAGMENT_SUBROUTINE_UNIFORM :: GLenum
gl_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2
gl_VERTEX4_BIT_PGI :: GLenum
gl_VERTEX4_BIT_PGI = 0x00000008
gl_DEBUG_CALLBACK_FUNCTION_KHR :: GLenum
gl_DEBUG_CALLBACK_FUNCTION_KHR = 0x8244
gl_TEXTURE_TARGET :: GLenum
gl_TEXTURE_TARGET = 0x1006
gl_MAP2_VERTEX_3 :: GLenum
gl_MAP2_VERTEX_3 = 0x0DB7
gl_MODELVIEW4_ARB :: GLenum
gl_MODELVIEW4_ARB = 0x8724
gl_BUFFER_ACCESS_FLAGS :: GLenum
gl_BUFFER_ACCESS_FLAGS = 0x911F
gl_MATRIX_INDEX_ARRAY_TYPE_ARB :: GLenum
gl_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847
gl_LINE_SMOOTH :: GLenum
gl_LINE_SMOOTH = 0x0B20
gl_INTENSITY32F_ARB :: GLenum
gl_INTENSITY32F_ARB = 0x8817
gl_OUTPUT_TEXTURE_COORD31_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC
gl_PROGRAM_BINARY_LENGTH :: GLenum
gl_PROGRAM_BINARY_LENGTH = 0x8741
gl_DRAW_BUFFER2_NV :: GLenum
gl_DRAW_BUFFER2_NV = 0x8827
gl_DOUBLE_EXT :: GLenum
gl_DOUBLE_EXT = 0x140A
gl_CLIP_NEAR_HINT_PGI :: GLenum
gl_CLIP_NEAR_HINT_PGI = 0x1A220
gl_TEXTURE_DS_SIZE_NV :: GLenum
gl_TEXTURE_DS_SIZE_NV = 0x871D
gl_MAX_VERTEX_UNIFORM_BLOCKS :: GLenum
gl_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B
gl_COLOR_TABLE_BLUE_SIZE :: GLenum
gl_COLOR_TABLE_BLUE_SIZE = 0x80DC
gl_CURRENT_VERTEX_EXT :: GLenum
gl_CURRENT_VERTEX_EXT = 0x87E2
gl_SWIZZLE_STRQ_ATI :: GLenum
gl_SWIZZLE_STRQ_ATI = 0x897A
gl_MAX_CUBE_MAP_TEXTURE_SIZE :: GLenum
gl_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C
gl_QUADS_EXT :: GLenum
gl_QUADS_EXT = 0x0007
gl_DRAW_BUFFER11_NV :: GLenum
gl_DRAW_BUFFER11_NV = 0x8830
gl_PIXEL_PACK_BUFFER_BINDING :: GLenum
gl_PIXEL_PACK_BUFFER_BINDING = 0x88ED
gl_LOCATION_COMPONENT :: GLenum
gl_LOCATION_COMPONENT = 0x934A
gl_CIRCULAR_CCW_ARC_TO_NV :: GLenum
gl_CIRCULAR_CCW_ARC_TO_NV = 0xF8
gl_COMBINER_AB_OUTPUT_NV :: GLenum
gl_COMBINER_AB_OUTPUT_NV = 0x854A
gl_AUX1 :: GLenum
gl_AUX1 = 0x040A
gl_TEXTURE_NORMAL_EXT :: GLenum
gl_TEXTURE_NORMAL_EXT = 0x85AF
gl_TEXTURE_ENV_MODE :: GLenum
gl_TEXTURE_ENV_MODE = 0x2200
gl_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3
gl_OBJECT_TYPE_ARB :: GLenum
gl_OBJECT_TYPE_ARB = 0x8B4E
gl_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX :: GLenum
gl_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B
gl_LINE_QUALITY_HINT_SGIX :: GLenum
gl_LINE_QUALITY_HINT_SGIX = 0x835B
gl_TESS_GEN_MODE_EXT :: GLenum
gl_TESS_GEN_MODE_EXT = 0x8E76
gl_WEIGHT_ARRAY_TYPE_OES :: GLenum
gl_WEIGHT_ARRAY_TYPE_OES = 0x86A9
gl_VERTEX_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080
gl_COLOR_ATTACHMENT3_NV :: GLenum
gl_COLOR_ATTACHMENT3_NV = 0x8CE3
gl_IMAGE_COMPATIBILITY_CLASS :: GLenum
gl_IMAGE_COMPATIBILITY_CLASS = 0x82A8
gl_COMPRESSED_RGBA8_ETC2_EAC :: GLenum
gl_COMPRESSED_RGBA8_ETC2_EAC = 0x9278
gl_MEDIUM_INT :: GLenum
gl_MEDIUM_INT = 0x8DF4
gl_INTERNALFORMAT_SUPPORTED :: GLenum
gl_INTERNALFORMAT_SUPPORTED = 0x826F
gl_GEOMETRY_SHADER_BIT :: GLenum
gl_GEOMETRY_SHADER_BIT = 0x00000004
gl_SPARSE_STORAGE_BIT_ARB :: GLenum
gl_SPARSE_STORAGE_BIT_ARB = 0x0400
gl_PROXY_HISTOGRAM_EXT :: GLenum
gl_PROXY_HISTOGRAM_EXT = 0x8025
gl_YCRCBA_SGIX :: GLenum
gl_YCRCBA_SGIX = 0x8319
gl_PN_TRIANGLES_POINT_MODE_CUBIC_ATI :: GLenum
gl_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6
gl_MAT_DIFFUSE_BIT_PGI :: GLenum
gl_MAT_DIFFUSE_BIT_PGI = 0x00400000
gl_IMAGE_1D_EXT :: GLenum
gl_IMAGE_1D_EXT = 0x904C
gl_MAX_SPOT_EXPONENT_NV :: GLenum
gl_MAX_SPOT_EXPONENT_NV = 0x8505
gl_TIMEOUT_EXPIRED :: GLenum
gl_TIMEOUT_EXPIRED = 0x911B
gl_LINEAR :: GLenum
gl_LINEAR = 0x2601
gl_MAX_SAMPLES_NV :: GLenum
gl_MAX_SAMPLES_NV = 0x8D57
gl_DEBUG_SOURCE_APPLICATION :: GLenum
gl_DEBUG_SOURCE_APPLICATION = 0x824A
gl_INT_IMAGE_CUBE_EXT :: GLenum
gl_INT_IMAGE_CUBE_EXT = 0x905B
gl_DEBUG_TYPE_OTHER :: GLenum
gl_DEBUG_TYPE_OTHER = 0x8251
gl_SPOT_CUTOFF :: GLenum
gl_SPOT_CUTOFF = 0x1206
gl_DRAW_FRAMEBUFFER_BINDING_ANGLE :: GLenum
gl_DRAW_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6
gl_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214
gl_PATCHES_EXT :: GLenum
gl_PATCHES_EXT = 0x000E
gl_REG_21_ATI :: GLenum
gl_REG_21_ATI = 0x8936
gl_MATRIX12_ARB :: GLenum
gl_MATRIX12_ARB = 0x88CC
gl_FRONT_FACE :: GLenum
gl_FRONT_FACE = 0x0B46
gl_FRAGMENT_DEPTH_EXT :: GLenum
gl_FRAGMENT_DEPTH_EXT = 0x8452
gl_TEXTURE_2D_BINDING_EXT :: GLenum
gl_TEXTURE_2D_BINDING_EXT = 0x8069
gl_COVERAGE_AUTOMATIC_NV :: GLenum
gl_COVERAGE_AUTOMATIC_NV = 0x8ED7
gl_DEBUG_CATEGORY_DEPRECATION_AMD :: GLenum
gl_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B
gl_CONTEXT_LOST_WEBGL :: GLenum
gl_CONTEXT_LOST_WEBGL = 0x9242
gl_FLOAT_MAT3x4 :: GLenum
gl_FLOAT_MAT3x4 = 0x8B68
gl_TEXTURE_BUFFER_OFFSET :: GLenum
gl_TEXTURE_BUFFER_OFFSET = 0x919D
gl_TRANSFORM_FEEDBACK_BINDING_NV :: GLenum
gl_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25
gl_NORMAL_ARRAY :: GLenum
gl_NORMAL_ARRAY = 0x8075
gl_REG_31_ATI :: GLenum
gl_REG_31_ATI = 0x8940
gl_PIXEL_MAP_R_TO_R_SIZE :: GLenum
gl_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6
gl_RENDERBUFFER_BLUE_SIZE_EXT :: GLenum
gl_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52
gl_LIST_BIT :: GLenum
gl_LIST_BIT = 0x00020000
gl_MAX_COMBINED_UNIFORM_BLOCKS :: GLenum
gl_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E
gl_UNPACK_SKIP_VOLUMES_SGIS :: GLenum
gl_UNPACK_SKIP_VOLUMES_SGIS = 0x8132
gl_COPY :: GLenum
gl_COPY = 0x1503
gl_MIRROR_CLAMP_TO_BORDER_EXT :: GLenum
gl_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912
gl_INT_SAMPLER_2D_RECT_EXT :: GLenum
gl_INT_SAMPLER_2D_RECT_EXT = 0x8DCD
gl_POINT_SMOOTH :: GLenum
gl_POINT_SMOOTH = 0x0B10
gl_TEXTURE19 :: GLenum
gl_TEXTURE19 = 0x84D3
gl_POST_CONVOLUTION_ALPHA_SCALE :: GLenum
gl_POST_CONVOLUTION_ALPHA_SCALE = 0x801F
gl_MAX_TEXTURE_LOD_BIAS_EXT :: GLenum
gl_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD
gl_RGBA32F_EXT :: GLenum
gl_RGBA32F_EXT = 0x8814
gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG :: GLenum
gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = 0x93F1
gl_MAX_FRAGMENT_INPUT_COMPONENTS :: GLenum
gl_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125
gl_COLOR_TABLE_RED_SIZE :: GLenum
gl_COLOR_TABLE_RED_SIZE = 0x80DA
gl_NORMAL_ARRAY_COUNT_EXT :: GLenum
gl_NORMAL_ARRAY_COUNT_EXT = 0x8080
gl_OUTPUT_TEXTURE_COORD7_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4
gl_MAX_SHININESS_NV :: GLenum
gl_MAX_SHININESS_NV = 0x8504
gl_BLUE_NV :: GLenum
gl_BLUE_NV = 0x1905
gl_DEBUG_OUTPUT :: GLenum
gl_DEBUG_OUTPUT = 0x92E0
gl_COLOR_ATTACHMENT14_NV :: GLenum
gl_COLOR_ATTACHMENT14_NV = 0x8CEE
gl_UNIFORM_IS_ROW_MAJOR :: GLenum
gl_UNIFORM_IS_ROW_MAJOR = 0x8A3E
gl_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT :: GLenum
gl_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337
gl_DRAW_BUFFER9_EXT :: GLenum
gl_DRAW_BUFFER9_EXT = 0x882E
gl_RGB_INTEGER_EXT :: GLenum
gl_RGB_INTEGER_EXT = 0x8D98
gl_VARIANT_VALUE_EXT :: GLenum
gl_VARIANT_VALUE_EXT = 0x87E4
gl_MAX_ATOMIC_COUNTER_BUFFER_SIZE :: GLenum
gl_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8
gl_DUAL_LUMINANCE_ALPHA4_SGIS :: GLenum
gl_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C
gl_SYNC_CONDITION :: GLenum
gl_SYNC_CONDITION = 0x9113
gl_REG_18_ATI :: GLenum
gl_REG_18_ATI = 0x8933
gl_FRAGMENT_LIGHT1_SGIX :: GLenum
gl_FRAGMENT_LIGHT1_SGIX = 0x840D
gl_SAMPLER_2D_ARRAY_SHADOW_EXT :: GLenum
gl_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4
gl_DOT_PRODUCT_DEPTH_REPLACE_NV :: GLenum
gl_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB :: GLenum
gl_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1
gl_MAP2_VERTEX_ATTRIB6_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676
gl_COLOR_WRITEMASK :: GLenum
gl_COLOR_WRITEMASK = 0x0C23
gl_DISPLAY_LIST :: GLenum
gl_DISPLAY_LIST = 0x82E7
gl_4X_BIT_ATI :: GLenum
gl_4X_BIT_ATI = 0x00000002
gl_DUDV_ATI :: GLenum
gl_DUDV_ATI = 0x8779
gl_SMALL_CW_ARC_TO_NV :: GLenum
gl_SMALL_CW_ARC_TO_NV = 0x14
gl_GUILTY_CONTEXT_RESET_EXT :: GLenum
gl_GUILTY_CONTEXT_RESET_EXT = 0x8253
gl_VIDEO_CAPTURE_FRAME_WIDTH_NV :: GLenum
gl_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038
gl_FRAGMENT_SUBROUTINE :: GLenum
gl_FRAGMENT_SUBROUTINE = 0x92EC
gl_TEXTURE_IMAGE_VALID_QCOM :: GLenum
gl_TEXTURE_IMAGE_VALID_QCOM = 0x8BD8
gl_TEXTURE_ALPHA_SIZE_EXT :: GLenum
gl_TEXTURE_ALPHA_SIZE_EXT = 0x805F
gl_UNSIGNED_SHORT_4_4_4_4_EXT :: GLenum
gl_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033
gl_STENCIL_CLEAR_VALUE :: GLenum
gl_STENCIL_CLEAR_VALUE = 0x0B91
gl_COMPRESSED_SLUMINANCE_ALPHA_EXT :: GLenum
gl_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B
gl_ATOMIC_COUNTER_BUFFER_START :: GLenum
gl_ATOMIC_COUNTER_BUFFER_START = 0x92C2
gl_RGB16F_ARB :: GLenum
gl_RGB16F_ARB = 0x881B
gl_UNSIGNED_INT_IMAGE_BUFFER_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067
gl_FOG_COORD :: GLenum
gl_FOG_COORD = 0x8451
gl_UNKNOWN_CONTEXT_RESET_EXT :: GLenum
gl_UNKNOWN_CONTEXT_RESET_EXT = 0x8255
gl_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB :: GLenum
gl_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF
gl_UNIFORM_BARRIER_BIT :: GLenum
gl_UNIFORM_BARRIER_BIT = 0x00000004
gl_OVERLAY_KHR :: GLenum
gl_OVERLAY_KHR = 0x9296
gl_OUTPUT_TEXTURE_COORD16_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD
gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT :: GLenum
gl_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39
gl_VERTEX_STREAM3_ATI :: GLenum
gl_VERTEX_STREAM3_ATI = 0x876F
gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH :: GLenum
gl_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76
gl_MAX_COMPUTE_ATOMIC_COUNTERS :: GLenum
gl_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265
gl_RENDERBUFFER_FREE_MEMORY_ATI :: GLenum
gl_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD
gl_TEXTURE_COORD_ARRAY_POINTER :: GLenum
gl_TEXTURE_COORD_ARRAY_POINTER = 0x8092
gl_SLUMINANCE_ALPHA :: GLenum
gl_SLUMINANCE_ALPHA = 0x8C44
gl_MAX_UNIFORM_BLOCK_SIZE :: GLenum
gl_MAX_UNIFORM_BLOCK_SIZE = 0x8A30
gl_COMPRESSED_SIGNED_RED_RGTC1 :: GLenum
gl_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC
gl_READ_ONLY_ARB :: GLenum
gl_READ_ONLY_ARB = 0x88B8
gl_ALPHA8_SNORM :: GLenum
gl_ALPHA8_SNORM = 0x9014
gl_DEPTH_CLAMP_FAR_AMD :: GLenum
gl_DEPTH_CLAMP_FAR_AMD = 0x901F
gl_SPARE0_PLUS_SECONDARY_COLOR_NV :: GLenum
gl_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532
gl_MATRIX_INDEX_ARRAY_POINTER_ARB :: GLenum
gl_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849
gl_DEPTH_ATTACHMENT_EXT :: GLenum
gl_DEPTH_ATTACHMENT_EXT = 0x8D00
gl_DEBUG_SOURCE_WINDOW_SYSTEM_ARB :: GLenum
gl_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247
gl_BACK_LEFT :: GLenum
gl_BACK_LEFT = 0x0402
gl_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV :: GLenum
gl_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3
gl_BROWSER_DEFAULT_WEBGL :: GLenum
gl_BROWSER_DEFAULT_WEBGL = 0x9244
gl_PIXEL_TEX_GEN_MODE_SGIX :: GLenum
gl_PIXEL_TEX_GEN_MODE_SGIX = 0x832B
gl_CON_13_ATI :: GLenum
gl_CON_13_ATI = 0x894E
gl_REFERENCED_BY_VERTEX_SHADER :: GLenum
gl_REFERENCED_BY_VERTEX_SHADER = 0x9306
gl_PIXEL_SUBSAMPLE_4444_SGIX :: GLenum
gl_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2
gl_MAX_CLIP_PLANES_IMG :: GLenum
gl_MAX_CLIP_PLANES_IMG = 0x0D32
gl_POLYGON_MODE :: GLenum
gl_POLYGON_MODE = 0x0B40
gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION :: GLenum
gl_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C
gl_COMPARE_REF_TO_TEXTURE_EXT :: GLenum
gl_COMPARE_REF_TO_TEXTURE_EXT = 0x884E
gl_MODELVIEW21_ARB :: GLenum
gl_MODELVIEW21_ARB = 0x8735
gl_STATE_RESTORE :: GLenum
gl_STATE_RESTORE = 0x8BDC
gl_SECONDARY_COLOR_ARRAY_STRIDE_EXT :: GLenum
gl_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C
gl_LIST_PRIORITY_SGIX :: GLenum
gl_LIST_PRIORITY_SGIX = 0x8182
gl_ATTRIB_ARRAY_POINTER_NV :: GLenum
gl_ATTRIB_ARRAY_POINTER_NV = 0x8645
gl_PERFQUERY_GLOBAL_CONTEXT_INTEL :: GLenum
gl_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001
gl_TRACE_TEXTURES_BIT_MESA :: GLenum
gl_TRACE_TEXTURES_BIT_MESA = 0x0008
gl_CONVOLUTION_BORDER_COLOR_HP :: GLenum
gl_CONVOLUTION_BORDER_COLOR_HP = 0x8154
gl_BOOL_VEC4_ARB :: GLenum
gl_BOOL_VEC4_ARB = 0x8B59
gl_STENCIL_BACK_WRITEMASK :: GLenum
gl_STENCIL_BACK_WRITEMASK = 0x8CA5
gl_SURFACE_MAPPED_NV :: GLenum
gl_SURFACE_MAPPED_NV = 0x8700
gl_DSDT_MAG_VIB_NV :: GLenum
gl_DSDT_MAG_VIB_NV = 0x86F7
gl_PIXEL_MODE_BIT :: GLenum
gl_PIXEL_MODE_BIT = 0x00000020
gl_POINT_FADE_THRESHOLD_SIZE_SGIS :: GLenum
gl_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128
gl_VERTEX_ATTRIB_ARRAY10_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY10_NV = 0x865A
gl_UNSIGNED_INT_IMAGE_1D_ARRAY :: GLenum
gl_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068
gl_MULTISAMPLE_BIT_ARB :: GLenum
gl_MULTISAMPLE_BIT_ARB = 0x20000000
gl_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX :: GLenum
gl_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A
gl_MAX_3D_TEXTURE_SIZE_EXT :: GLenum
gl_MAX_3D_TEXTURE_SIZE_EXT = 0x8073
gl_2_BYTES :: GLenum
gl_2_BYTES = 0x1407
gl_RGBA_DXT5_S3TC :: GLenum
gl_RGBA_DXT5_S3TC = 0x83A4
gl_SAMPLE_COVERAGE_VALUE_ARB :: GLenum
gl_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA
gl_EDGE_FLAG_ARRAY_LIST_IBM :: GLenum
gl_EDGE_FLAG_ARRAY_LIST_IBM = 103075
gl_MATRIX27_ARB :: GLenum
gl_MATRIX27_ARB = 0x88DB
gl_FRAGMENT_PROGRAM_NV :: GLenum
gl_FRAGMENT_PROGRAM_NV = 0x8870
gl_SAMPLE_PATTERN_EXT :: GLenum
gl_SAMPLE_PATTERN_EXT = 0x80AC
gl_MULTISAMPLE_BIT :: GLenum
gl_MULTISAMPLE_BIT = 0x20000000
gl_DRAW_BUFFER3_ATI :: GLenum
gl_DRAW_BUFFER3_ATI = 0x8828
gl_STACK_OVERFLOW :: GLenum
gl_STACK_OVERFLOW = 0x0503
gl_INT64_NV :: GLenum
gl_INT64_NV = 0x140E
gl_SECONDARY_COLOR_ARRAY_TYPE_EXT :: GLenum
gl_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B
gl_REFERENCED_BY_TESS_CONTROL_SHADER_EXT :: GLenum
gl_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = 0x9307
gl_MAX_FRAMEBUFFER_WIDTH :: GLenum
gl_MAX_FRAMEBUFFER_WIDTH = 0x9315
gl_CLAMP_VERTEX_COLOR :: GLenum
gl_CLAMP_VERTEX_COLOR = 0x891A
gl_READ_FRAMEBUFFER_BINDING :: GLenum
gl_READ_FRAMEBUFFER_BINDING = 0x8CAA
gl_PIXEL_MAP_B_TO_B_SIZE :: GLenum
gl_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8
gl_STREAM_RASTERIZATION_AMD :: GLenum
gl_STREAM_RASTERIZATION_AMD = 0x91A0
gl_CON_16_ATI :: GLenum
gl_CON_16_ATI = 0x8951
gl_FULL_SUPPORT :: GLenum
gl_FULL_SUPPORT = 0x82B7
gl_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05
gl_MAX_DEBUG_GROUP_STACK_DEPTH_KHR :: GLenum
gl_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826C
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8
gl_COLOR_BUFFER_BIT0_QCOM :: GLenum
gl_COLOR_BUFFER_BIT0_QCOM = 0x00000001
gl_PN_TRIANGLES_ATI :: GLenum
gl_PN_TRIANGLES_ATI = 0x87F0
gl_VERTEX_ATTRIB_ARRAY15_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY15_NV = 0x865F
gl_MITER_REVERT_NV :: GLenum
gl_MITER_REVERT_NV = 0x90A7
gl_PROVOKING_VERTEX_EXT :: GLenum
gl_PROVOKING_VERTEX_EXT = 0x8E4F
gl_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI :: GLenum
gl_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7
gl_DEPTH :: GLenum
gl_DEPTH = 0x1801
gl_RGB12_EXT :: GLenum
gl_RGB12_EXT = 0x8053
gl_TRACE_PRIMITIVES_BIT_MESA :: GLenum
gl_TRACE_PRIMITIVES_BIT_MESA = 0x0002
gl_RGB_RAW_422_APPLE :: GLenum
gl_RGB_RAW_422_APPLE = 0x8A51
gl_FUNC_REVERSE_SUBTRACT :: GLenum
gl_FUNC_REVERSE_SUBTRACT = 0x800B
gl_SECONDARY_COLOR_ARRAY_EXT :: GLenum
gl_SECONDARY_COLOR_ARRAY_EXT = 0x845E
gl_PACK_SUBSAMPLE_RATE_SGIX :: GLenum
gl_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0
gl_MULTISAMPLE_BUFFER_BIT7_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT7_QCOM = 0x80000000
gl_UNPACK_RESAMPLE_SGIX :: GLenum
gl_UNPACK_RESAMPLE_SGIX = 0x842D
gl_FLOAT_MAT2 :: GLenum
gl_FLOAT_MAT2 = 0x8B5A
gl_UNIFORM_BUFFER :: GLenum
gl_UNIFORM_BUFFER = 0x8A11
gl_CON_25_ATI :: GLenum
gl_CON_25_ATI = 0x895A
gl_MAX_VARYING_COMPONENTS :: GLenum
gl_MAX_VARYING_COMPONENTS = 0x8B4B
gl_C4UB_V3F :: GLenum
gl_C4UB_V3F = 0x2A23
gl_VIDEO_CAPTURE_TO_422_SUPPORTED_NV :: GLenum
gl_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026
gl_COMP_BIT_ATI :: GLenum
gl_COMP_BIT_ATI = 0x00000002
gl_MATRIX7_NV :: GLenum
gl_MATRIX7_NV = 0x8637
gl_COMPRESSED_SRGB8_ETC2_OES :: GLenum
gl_COMPRESSED_SRGB8_ETC2_OES = 0x9275
gl_DRAW_BUFFER8 :: GLenum
gl_DRAW_BUFFER8 = 0x882D
gl_TEXTURE_BINDING_BUFFER_ARB :: GLenum
gl_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C
gl_VERTICAL_LINE_TO_NV :: GLenum
gl_VERTICAL_LINE_TO_NV = 0x08
gl_GENERATE_MIPMAP_HINT_SGIS :: GLenum
gl_GENERATE_MIPMAP_HINT_SGIS = 0x8192
gl_POST_COLOR_MATRIX_RED_BIAS :: GLenum
gl_POST_COLOR_MATRIX_RED_BIAS = 0x80B8
gl_LUMINANCE16_EXT :: GLenum
gl_LUMINANCE16_EXT = 0x8042
gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING :: GLenum
gl_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D
gl_PATCH_DEFAULT_INNER_LEVEL :: GLenum
gl_PATCH_DEFAULT_INNER_LEVEL = 0x8E73
gl_COLOR_INDEX12_EXT :: GLenum
gl_COLOR_INDEX12_EXT = 0x80E6
gl_CONIC_CURVE_TO_NV :: GLenum
gl_CONIC_CURVE_TO_NV = 0x1A
gl_NAME_STACK_DEPTH :: GLenum
gl_NAME_STACK_DEPTH = 0x0D70
gl_CLIP_DISTANCE3 :: GLenum
gl_CLIP_DISTANCE3 = 0x3003
gl_FOG_COORDINATE_ARRAY_LIST_IBM :: GLenum
gl_FOG_COORDINATE_ARRAY_LIST_IBM = 103076
gl_TEXTURE_GEN_MODE_OES :: GLenum
gl_TEXTURE_GEN_MODE_OES = 0x2500
gl_R16F_EXT :: GLenum
gl_R16F_EXT = 0x822D
gl_COMPRESSED_SRGB_ALPHA_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49
gl_DEBUG_SEVERITY_NOTIFICATION :: GLenum
gl_DEBUG_SEVERITY_NOTIFICATION = 0x826B
gl_TESS_GEN_VERTEX_ORDER_EXT :: GLenum
gl_TESS_GEN_VERTEX_ORDER_EXT = 0x8E78
gl_MAX_TEXTURE_SIZE :: GLenum
gl_MAX_TEXTURE_SIZE = 0x0D33
gl_UNDEFINED_APPLE :: GLenum
gl_UNDEFINED_APPLE = 0x8A1C
gl_SGX_BINARY_IMG :: GLenum
gl_SGX_BINARY_IMG = 0x8C0A
gl_PIXEL_MAP_S_TO_S :: GLenum
gl_PIXEL_MAP_S_TO_S = 0x0C71
gl_IMAGE_BINDING_ACCESS :: GLenum
gl_IMAGE_BINDING_ACCESS = 0x8F3E
gl_RED_BIT_ATI :: GLenum
gl_RED_BIT_ATI = 0x00000001
gl_HSL_LUMINOSITY_NV :: GLenum
gl_HSL_LUMINOSITY_NV = 0x92B0
gl_POST_COLOR_MATRIX_ALPHA_SCALE_SGI :: GLenum
gl_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7
gl_LOW_INT :: GLenum
gl_LOW_INT = 0x8DF3
gl_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV :: GLenum
gl_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = 0x933E
gl_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS :: GLenum
gl_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC
gl_RENDERBUFFER_INTERNAL_FORMAT_EXT :: GLenum
gl_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44
gl_OUTPUT_TEXTURE_COORD12_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9
gl_RELATIVE_CUBIC_CURVE_TO_NV :: GLenum
gl_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D
gl_SRC_ALPHA_SATURATE :: GLenum
gl_SRC_ALPHA_SATURATE = 0x0308
gl_DRAW_BUFFER15_EXT :: GLenum
gl_DRAW_BUFFER15_EXT = 0x8834
gl_TRIANGLE_STRIP_ADJACENCY :: GLenum
gl_TRIANGLE_STRIP_ADJACENCY = 0x000D
gl_TEXTURE_COORD_ARRAY_LENGTH_NV :: GLenum
gl_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F
gl_UNSIGNED_SHORT_4_4_4_4_REV_IMG :: GLenum
gl_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 0x8365
gl_PROGRAM_BINARY_LENGTH_OES :: GLenum
gl_PROGRAM_BINARY_LENGTH_OES = 0x8741
gl_LINE_STIPPLE_PATTERN :: GLenum
gl_LINE_STIPPLE_PATTERN = 0x0B25
gl_PERFQUERY_FLUSH_INTEL :: GLenum
gl_PERFQUERY_FLUSH_INTEL = 0x83FA
gl_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV :: GLenum
gl_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08
gl_RGBA4_OES :: GLenum
gl_RGBA4_OES = 0x8056
gl_DATA_BUFFER_AMD :: GLenum
gl_DATA_BUFFER_AMD = 0x9151
gl_IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: GLenum
gl_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056
gl_NORMAL_BIT_PGI :: GLenum
gl_NORMAL_BIT_PGI = 0x08000000
gl_SOURCE1_RGB_EXT :: GLenum
gl_SOURCE1_RGB_EXT = 0x8581
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B
gl_MAX_VERTEX_IMAGE_UNIFORMS :: GLenum
gl_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA
gl_PIXEL_MAP_I_TO_B :: GLenum
gl_PIXEL_MAP_I_TO_B = 0x0C74
gl_IMAGE_MAG_FILTER_HP :: GLenum
gl_IMAGE_MAG_FILTER_HP = 0x815C
gl_FLOAT_MAT3x2_NV :: GLenum
gl_FLOAT_MAT3x2_NV = 0x8B67
gl_DRAW_BUFFER0_ARB :: GLenum
gl_DRAW_BUFFER0_ARB = 0x8825
gl_DEPTH_RANGE :: GLenum
gl_DEPTH_RANGE = 0x0B70
gl_INDEX_MODE :: GLenum
gl_INDEX_MODE = 0x0C30
gl_DEBUG_LOGGED_MESSAGES :: GLenum
gl_DEBUG_LOGGED_MESSAGES = 0x9145
gl_COMPRESSED_RGBA_ASTC_6x5x5_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_6x5x5_OES = 0x93C7
gl_DEBUG_SEVERITY_MEDIUM_AMD :: GLenum
gl_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147
gl_UNPACK_PREMULTIPLY_ALPHA_WEBGL :: GLenum
gl_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241
gl_FRAMEBUFFER_UNDEFINED_OES :: GLenum
gl_FRAMEBUFFER_UNDEFINED_OES = 0x8219
gl_LINE_STRIP_ADJACENCY :: GLenum
gl_LINE_STRIP_ADJACENCY = 0x000B
gl_BLEND_SRC_ALPHA_EXT :: GLenum
gl_BLEND_SRC_ALPHA_EXT = 0x80CB
gl_DRAW_BUFFER11_ATI :: GLenum
gl_DRAW_BUFFER11_ATI = 0x8830
gl_FOG_COORD_ARRAY_BUFFER_BINDING :: GLenum
gl_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D
gl_MINUS_NV :: GLenum
gl_MINUS_NV = 0x929F
gl_TEXTURE_GEN_MODE :: GLenum
gl_TEXTURE_GEN_MODE = 0x2500
gl_UNIFORM_BUFFER_BINDING_EXT :: GLenum
gl_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF
gl_CLIP_DISTANCE0 :: GLenum
gl_CLIP_DISTANCE0 = 0x3000
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88
gl_OUT_OF_MEMORY :: GLenum
gl_OUT_OF_MEMORY = 0x0505
gl_CURRENT_SECONDARY_COLOR :: GLenum
gl_CURRENT_SECONDARY_COLOR = 0x8459
gl_DONT_CARE :: GLenum
gl_DONT_CARE = 0x1100
gl_VERTEX_ATTRIB_MAP2_ORDER_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08
gl_CND_ATI :: GLenum
gl_CND_ATI = 0x896A
gl_MAP_INVALIDATE_BUFFER_BIT_EXT :: GLenum
gl_MAP_INVALIDATE_BUFFER_BIT_EXT = 0x0008
gl_NUM_PROGRAM_BINARY_FORMATS :: GLenum
gl_NUM_PROGRAM_BINARY_FORMATS = 0x87FE
gl_ANY_SAMPLES_PASSED :: GLenum
gl_ANY_SAMPLES_PASSED = 0x8C2F
gl_SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: GLenum
gl_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910B
gl_TEXTURE_1D_STACK_MESAX :: GLenum
gl_TEXTURE_1D_STACK_MESAX = 0x8759
gl_VERTEX_ARRAY_TYPE :: GLenum
gl_VERTEX_ARRAY_TYPE = 0x807B
gl_TRACK_MATRIX_TRANSFORM_NV :: GLenum
gl_TRACK_MATRIX_TRANSFORM_NV = 0x8649
gl_TEXTURE0 :: GLenum
gl_TEXTURE0 = 0x84C0
gl_DEBUG_SEVERITY_HIGH_AMD :: GLenum
gl_DEBUG_SEVERITY_HIGH_AMD = 0x9146
gl_PER_STAGE_CONSTANTS_NV :: GLenum
gl_PER_STAGE_CONSTANTS_NV = 0x8535
gl_UNSIGNED_SHORT_1_5_5_5_REV_EXT :: GLenum
gl_UNSIGNED_SHORT_1_5_5_5_REV_EXT = 0x8366
gl_DEBUG_SOURCE_SHADER_COMPILER_KHR :: GLenum
gl_DEBUG_SOURCE_SHADER_COMPILER_KHR = 0x8248
gl_PATH_PROJECTION_STACK_DEPTH_NV :: GLenum
gl_PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4
gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210
gl_WEIGHT_ARRAY_POINTER_ARB :: GLenum
gl_WEIGHT_ARRAY_POINTER_ARB = 0x86AC
gl_DEPTH_TEXTURE_MODE :: GLenum
gl_DEPTH_TEXTURE_MODE = 0x884B
gl_FLOAT_RGB32_NV :: GLenum
gl_FLOAT_RGB32_NV = 0x8889
gl_COMPRESSED_RG :: GLenum
gl_COMPRESSED_RG = 0x8226
gl_RENDERBUFFER_RED_SIZE :: GLenum
gl_RENDERBUFFER_RED_SIZE = 0x8D50
gl_OUTPUT_TEXTURE_COORD0_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD0_EXT = 0x879D
gl_VERTEX_ELEMENT_SWIZZLE_AMD :: GLenum
gl_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4
gl_UTF8_NV :: GLenum
gl_UTF8_NV = 0x909A
gl_SRC_ALPHA :: GLenum
gl_SRC_ALPHA = 0x0302
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6
gl_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT :: GLenum
gl_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3
gl_CONSTANT_ATTENUATION :: GLenum
gl_CONSTANT_ATTENUATION = 0x1207
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910D
gl_RENDERBUFFER_INTERNAL_FORMAT :: GLenum
gl_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44
gl_DOUBLE_MAT2x3 :: GLenum
gl_DOUBLE_MAT2x3 = 0x8F49
gl_CON_12_ATI :: GLenum
gl_CON_12_ATI = 0x894D
gl_R32UI :: GLenum
gl_R32UI = 0x8236
gl_VERTEX_PROGRAM_POINT_SIZE_NV :: GLenum
gl_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642
gl_RELATIVE_VERTICAL_LINE_TO_NV :: GLenum
gl_RELATIVE_VERTICAL_LINE_TO_NV = 0x09
gl_TEXTURE_COMPRESSION_HINT_ARB :: GLenum
gl_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF
gl_MATRIX14_ARB :: GLenum
gl_MATRIX14_ARB = 0x88CE
gl_STATIC_READ_ARB :: GLenum
gl_STATIC_READ_ARB = 0x88E5
gl_HISTOGRAM_FORMAT :: GLenum
gl_HISTOGRAM_FORMAT = 0x8027
gl_DEBUG_CATEGORY_SHADER_COMPILER_AMD :: GLenum
gl_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E
gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8A32
gl_PRIMITIVE_RESTART_INDEX :: GLenum
gl_PRIMITIVE_RESTART_INDEX = 0x8F9E
gl_MATRIX23_ARB :: GLenum
gl_MATRIX23_ARB = 0x88D7
gl_DRAW_INDIRECT_BUFFER :: GLenum
gl_DRAW_INDIRECT_BUFFER = 0x8F3F
gl_MIN_PROGRAM_TEXEL_OFFSET :: GLenum
gl_MIN_PROGRAM_TEXEL_OFFSET = 0x8904
gl_SIGNED_INTENSITY_NV :: GLenum
gl_SIGNED_INTENSITY_NV = 0x8707
gl_PATH_MAX_PROJECTION_STACK_DEPTH_NV :: GLenum
gl_PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR :: GLenum
gl_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E
gl_MAX_SPARSE_3D_TEXTURE_SIZE_AMD :: GLenum
gl_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199
gl_PACK_ROW_BYTES_APPLE :: GLenum
gl_PACK_ROW_BYTES_APPLE = 0x8A15
gl_SHADER_BINARY_FORMATS :: GLenum
gl_SHADER_BINARY_FORMATS = 0x8DF8
gl_VIEW_CLASS_RGTC2_RG :: GLenum
gl_VIEW_CLASS_RGTC2_RG = 0x82D1
gl_UNSIGNED_SHORT_4_4_4_4_REV_EXT :: GLenum
gl_UNSIGNED_SHORT_4_4_4_4_REV_EXT = 0x8365
gl_ALPHA_MAX_CLAMP_INGR :: GLenum
gl_ALPHA_MAX_CLAMP_INGR = 0x8567
gl_SAMPLER_3D_OES :: GLenum
gl_SAMPLER_3D_OES = 0x8B5F
gl_MAX_CONVOLUTION_HEIGHT :: GLenum
gl_MAX_CONVOLUTION_HEIGHT = 0x801B
gl_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT :: GLenum
gl_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = 0x8A55
gl_FRAGMENT_ALPHA_MODULATE_IMG :: GLenum
gl_FRAGMENT_ALPHA_MODULATE_IMG = 0x8C08
gl_OUTPUT_VERTEX_EXT :: GLenum
gl_OUTPUT_VERTEX_EXT = 0x879A
gl_MULTISAMPLE :: GLenum
gl_MULTISAMPLE = 0x809D
gl_COLOR_MATERIAL_FACE :: GLenum
gl_COLOR_MATERIAL_FACE = 0x0B55
gl_COVERAGE_MODULATION_TABLE_SIZE_NV :: GLenum
gl_COVERAGE_MODULATION_TABLE_SIZE_NV = 0x9333
gl_REG_3_ATI :: GLenum
gl_REG_3_ATI = 0x8924
gl_VERTEX_ARRAY_RANGE_LENGTH_NV :: GLenum
gl_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E
gl_MODELVIEW15_ARB :: GLenum
gl_MODELVIEW15_ARB = 0x872F
gl_PARALLEL_ARRAYS_INTEL :: GLenum
gl_PARALLEL_ARRAYS_INTEL = 0x83F4
gl_OFFSET_TEXTURE_SCALE_NV :: GLenum
gl_OFFSET_TEXTURE_SCALE_NV = 0x86E2
gl_RENDERBUFFER_ALPHA_SIZE_EXT :: GLenum
gl_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53
gl_MAX_VERTEX_UNIFORM_VECTORS :: GLenum
gl_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB
gl_SRC_IN_NV :: GLenum
gl_SRC_IN_NV = 0x928A
gl_LUMINANCE_SNORM :: GLenum
gl_LUMINANCE_SNORM = 0x9011
gl_TESS_GEN_SPACING_EXT :: GLenum
gl_TESS_GEN_SPACING_EXT = 0x8E77
gl_SUBTRACT_ARB :: GLenum
gl_SUBTRACT_ARB = 0x84E7
gl_OUTPUT_TEXTURE_COORD25_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6
gl_TEXTURE_UPDATE_BARRIER_BIT_EXT :: GLenum
gl_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100
gl_IMAGE_ROTATE_ORIGIN_Y_HP :: GLenum
gl_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B
gl_CLIPPING_OUTPUT_PRIMITIVES_ARB :: GLenum
gl_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7
gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB :: GLenum
gl_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E
gl_TEXTURE_OBJECT_VALID_QCOM :: GLenum
gl_TEXTURE_OBJECT_VALID_QCOM = 0x8BDB
gl_MATRIX0_ARB :: GLenum
gl_MATRIX0_ARB = 0x88C0
gl_PATH_MODELVIEW_NV :: GLenum
gl_PATH_MODELVIEW_NV = 0x1700
gl_HISTOGRAM_WIDTH :: GLenum
gl_HISTOGRAM_WIDTH = 0x8026
gl_COORD_REPLACE :: GLenum
gl_COORD_REPLACE = 0x8862
gl_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT :: GLenum
gl_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800
gl_RESAMPLE_REPLICATE_OML :: GLenum
gl_RESAMPLE_REPLICATE_OML = 0x8986
gl_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH :: GLenum
gl_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8
gl_MATRIX_STRIDE :: GLenum
gl_MATRIX_STRIDE = 0x92FF
gl_DEBUG_CATEGORY_PERFORMANCE_AMD :: GLenum
gl_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D
gl_CLIP_DISTANCE3_APPLE :: GLenum
gl_CLIP_DISTANCE3_APPLE = 0x3003
gl_RGB5 :: GLenum
gl_RGB5 = 0x8050
gl_OUTPUT_TEXTURE_COORD26_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7
gl_POST_COLOR_MATRIX_ALPHA_BIAS_SGI :: GLenum
gl_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB
gl_NORMAL_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081
gl_COLOR_SUM_CLAMP_NV :: GLenum
gl_COLOR_SUM_CLAMP_NV = 0x854F
gl_MAP_INVALIDATE_BUFFER_BIT :: GLenum
gl_MAP_INVALIDATE_BUFFER_BIT = 0x0008
gl_RESCALE_NORMAL_EXT :: GLenum
gl_RESCALE_NORMAL_EXT = 0x803A
gl_VIEW_COMPATIBILITY_CLASS :: GLenum
gl_VIEW_COMPATIBILITY_CLASS = 0x82B6
gl_OFFSET_HILO_TEXTURE_2D_NV :: GLenum
gl_OFFSET_HILO_TEXTURE_2D_NV = 0x8854
gl_TEXTURE_BORDER_COLOR_EXT :: GLenum
gl_TEXTURE_BORDER_COLOR_EXT = 0x1004
gl_UNSIGNED_INT_5_9_9_9_REV_APPLE :: GLenum
gl_UNSIGNED_INT_5_9_9_9_REV_APPLE = 0x8C3E
gl_NUM_VIRTUAL_PAGE_SIZES_ARB :: GLenum
gl_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8
gl_OP_CROSS_PRODUCT_EXT :: GLenum
gl_OP_CROSS_PRODUCT_EXT = 0x8797
gl_VERTEX_WEIGHT_ARRAY_POINTER_EXT :: GLenum
gl_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510
gl_SINGLE_COLOR :: GLenum
gl_SINGLE_COLOR = 0x81F9
gl_VERTEX_ARRAY_KHR :: GLenum
gl_VERTEX_ARRAY_KHR = 0x8074
gl_MATRIX13_ARB :: GLenum
gl_MATRIX13_ARB = 0x88CD
gl_FOG_OFFSET_SGIX :: GLenum
gl_FOG_OFFSET_SGIX = 0x8198
gl_FOG_COORDINATE_SOURCE_EXT :: GLenum
gl_FOG_COORDINATE_SOURCE_EXT = 0x8450
gl_UNIFORM_BUFFER_ADDRESS_NV :: GLenum
gl_UNIFORM_BUFFER_ADDRESS_NV = 0x936F
gl_OBJECT_PLANE :: GLenum
gl_OBJECT_PLANE = 0x2501
gl_ACTIVE_ATTRIBUTES :: GLenum
gl_ACTIVE_ATTRIBUTES = 0x8B89
gl_BGR_EXT :: GLenum
gl_BGR_EXT = 0x80E0
gl_BUMP_NUM_TEX_UNITS_ATI :: GLenum
gl_BUMP_NUM_TEX_UNITS_ATI = 0x8777
gl_TEXTURE_1D_ARRAY_EXT :: GLenum
gl_TEXTURE_1D_ARRAY_EXT = 0x8C18
gl_FONT_UNINTELLIGIBLE_NV :: GLenum
gl_FONT_UNINTELLIGIBLE_NV = 0x936B
gl_OCCLUSION_TEST_RESULT_HP :: GLenum
gl_OCCLUSION_TEST_RESULT_HP = 0x8166
gl_ATTACHED_SHADERS :: GLenum
gl_ATTACHED_SHADERS = 0x8B85
gl_STENCIL_INDEX1 :: GLenum
gl_STENCIL_INDEX1 = 0x8D46
gl_REFERENCED_BY_FRAGMENT_SHADER :: GLenum
gl_REFERENCED_BY_FRAGMENT_SHADER = 0x930A
gl_SAMPLER_1D_SHADOW_ARB :: GLenum
gl_SAMPLER_1D_SHADOW_ARB = 0x8B61
gl_FRAGMENTS_INSTRUMENT_SGIX :: GLenum
gl_FRAGMENTS_INSTRUMENT_SGIX = 0x8313
gl_TRIANGLES_ADJACENCY :: GLenum
gl_TRIANGLES_ADJACENCY = 0x000C
gl_COLOR_FLOAT_APPLE :: GLenum
gl_COLOR_FLOAT_APPLE = 0x8A0F
gl_INTENSITY16I_EXT :: GLenum
gl_INTENSITY16I_EXT = 0x8D8B
gl_DOUBLE_MAT4x2 :: GLenum
gl_DOUBLE_MAT4x2 = 0x8F4D
gl_CURRENT_COLOR :: GLenum
gl_CURRENT_COLOR = 0x0B00
gl_ROUNDED_RECT_NV :: GLenum
gl_ROUNDED_RECT_NV = 0xE8
gl_NO_ERROR :: GLenum
gl_NO_ERROR = 0
gl_DRAW_BUFFER14_ARB :: GLenum
gl_DRAW_BUFFER14_ARB = 0x8833
gl_OUTPUT_TEXTURE_COORD10_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7
gl_MODELVIEW_PROJECTION_NV :: GLenum
gl_MODELVIEW_PROJECTION_NV = 0x8629
gl_DYNAMIC_READ :: GLenum
gl_DYNAMIC_READ = 0x88E9
gl_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809
gl_POLYGON_STIPPLE_BIT :: GLenum
gl_POLYGON_STIPPLE_BIT = 0x00000010
gl_COLOR_ARRAY :: GLenum
gl_COLOR_ARRAY = 0x8076
gl_COLOR_ATTACHMENT7_NV :: GLenum
gl_COLOR_ATTACHMENT7_NV = 0x8CE7
gl_REG_17_ATI :: GLenum
gl_REG_17_ATI = 0x8932
gl_TEXTURE_1D :: GLenum
gl_TEXTURE_1D = 0x0DE0
gl_LINEARLIGHT_NV :: GLenum
gl_LINEARLIGHT_NV = 0x92A7
gl_QUERY_NO_WAIT_NV :: GLenum
gl_QUERY_NO_WAIT_NV = 0x8E14
gl_BUFFER_MAP_POINTER_OES :: GLenum
gl_BUFFER_MAP_POINTER_OES = 0x88BD
gl_STENCIL_ATTACHMENT_EXT :: GLenum
gl_STENCIL_ATTACHMENT_EXT = 0x8D20
gl_BGRA8_EXT :: GLenum
gl_BGRA8_EXT = 0x93A1
gl_COLOR_ARRAY_ADDRESS_NV :: GLenum
gl_COLOR_ARRAY_ADDRESS_NV = 0x8F23
gl_TANGENT_ARRAY_POINTER_EXT :: GLenum
gl_TANGENT_ARRAY_POINTER_EXT = 0x8442
gl_POLYGON_OFFSET_POINT :: GLenum
gl_POLYGON_OFFSET_POINT = 0x2A01
gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS :: GLenum
gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5
gl_GEOMETRY_VERTICES_OUT_ARB :: GLenum
gl_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA
gl_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI :: GLenum
gl_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8
gl_PROGRAM_POINT_SIZE_ARB :: GLenum
gl_PROGRAM_POINT_SIZE_ARB = 0x8642
gl_GUILTY_CONTEXT_RESET_KHR :: GLenum
gl_GUILTY_CONTEXT_RESET_KHR = 0x8253
gl_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV :: GLenum
gl_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342
gl_LIGHT_ENV_MODE_SGIX :: GLenum
gl_LIGHT_ENV_MODE_SGIX = 0x8407
gl_DEBUG_OUTPUT_KHR :: GLenum
gl_DEBUG_OUTPUT_KHR = 0x92E0
gl_SAMPLER_1D :: GLenum
gl_SAMPLER_1D = 0x8B5D
gl_CLAMP_TO_BORDER_EXT :: GLenum
gl_CLAMP_TO_BORDER_EXT = 0x812D
gl_IMAGE_2D_MULTISAMPLE_EXT :: GLenum
gl_IMAGE_2D_MULTISAMPLE_EXT = 0x9055
gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS :: GLenum
gl_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A
gl_RECIP_ADD_SIGNED_ALPHA_IMG :: GLenum
gl_RECIP_ADD_SIGNED_ALPHA_IMG = 0x8C05
gl_COLOR_ATTACHMENT8_NV :: GLenum
gl_COLOR_ATTACHMENT8_NV = 0x8CE8
gl_LINE_STIPPLE_REPEAT :: GLenum
gl_LINE_STIPPLE_REPEAT = 0x0B26
gl_FRAGMENT_MATERIAL_EXT :: GLenum
gl_FRAGMENT_MATERIAL_EXT = 0x8349
gl_HISTOGRAM_EXT :: GLenum
gl_HISTOGRAM_EXT = 0x8024
gl_TEXTURE_MAX_LEVEL_APPLE :: GLenum
gl_TEXTURE_MAX_LEVEL_APPLE = 0x813D
gl_CAVEAT_SUPPORT :: GLenum
gl_CAVEAT_SUPPORT = 0x82B8
gl_MAX_TESS_GEN_LEVEL_EXT :: GLenum
gl_MAX_TESS_GEN_LEVEL_EXT = 0x8E7E
gl_STACK_UNDERFLOW_KHR :: GLenum
gl_STACK_UNDERFLOW_KHR = 0x0504
gl_RASTER_SAMPLES_EXT :: GLenum
gl_RASTER_SAMPLES_EXT = 0x9328
gl_COPY_WRITE_BUFFER_BINDING :: GLenum
gl_COPY_WRITE_BUFFER_BINDING = 0x8F37
gl_UNSIGNED_INT_8_8_8_8_REV :: GLenum
gl_UNSIGNED_INT_8_8_8_8_REV = 0x8367
gl_PALETTE8_RGB8_OES :: GLenum
gl_PALETTE8_RGB8_OES = 0x8B95
gl_RELATIVE_LINE_TO_NV :: GLenum
gl_RELATIVE_LINE_TO_NV = 0x05
gl_ZOOM_X :: GLenum
gl_ZOOM_X = 0x0D16
gl_MAX_PROJECTION_STACK_DEPTH :: GLenum
gl_MAX_PROJECTION_STACK_DEPTH = 0x0D38
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY :: GLenum
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F
gl_OP_SUB_EXT :: GLenum
gl_OP_SUB_EXT = 0x8796
gl_RENDERBUFFER_SAMPLES_ANGLE :: GLenum
gl_RENDERBUFFER_SAMPLES_ANGLE = 0x8CAB
gl_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG :: GLenum
gl_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03
gl_COLOR_ARRAY_COUNT_EXT :: GLenum
gl_COLOR_ARRAY_COUNT_EXT = 0x8084
gl_PATCH_DEFAULT_OUTER_LEVEL_EXT :: GLenum
gl_PATCH_DEFAULT_OUTER_LEVEL_EXT = 0x8E74
gl_COUNTER_RANGE_AMD :: GLenum
gl_COUNTER_RANGE_AMD = 0x8BC1
gl_TEXTURE_WIDTH_QCOM :: GLenum
gl_TEXTURE_WIDTH_QCOM = 0x8BD2
gl_COMPRESSED_SIGNED_RG_RGTC2 :: GLenum
gl_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE
gl_READ_FRAMEBUFFER :: GLenum
gl_READ_FRAMEBUFFER = 0x8CA8
gl_POLYGON_SMOOTH_HINT :: GLenum
gl_POLYGON_SMOOTH_HINT = 0x0C53
gl_ELEMENT_ARRAY_UNIFIED_NV :: GLenum
gl_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F
gl_REFLECTION_MAP_OES :: GLenum
gl_REFLECTION_MAP_OES = 0x8512
gl_FIRST_VERTEX_CONVENTION_EXT :: GLenum
gl_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D
gl_MODELVIEW17_ARB :: GLenum
gl_MODELVIEW17_ARB = 0x8731
gl_FUNC_ADD :: GLenum
gl_FUNC_ADD = 0x8006
gl_ALPHA_TEST :: GLenum
gl_ALPHA_TEST = 0x0BC0
gl_TEXTURE_SHARED_SIZE_EXT :: GLenum
gl_TEXTURE_SHARED_SIZE_EXT = 0x8C3F
gl_FRACTIONAL_ODD_EXT :: GLenum
gl_FRACTIONAL_ODD_EXT = 0x8E7B
gl_TEXTURE_3D :: GLenum
gl_TEXTURE_3D = 0x806F
gl_MATRIX_INDEX_ARRAY_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_OES = 0x8844
gl_MAX_DEBUG_LOGGED_MESSAGES_KHR :: GLenum
gl_MAX_DEBUG_LOGGED_MESSAGES_KHR = 0x9144
gl_DSDT8_NV :: GLenum
gl_DSDT8_NV = 0x8709
gl_FRAMEBUFFER_UNSUPPORTED_OES :: GLenum
gl_FRAMEBUFFER_UNSUPPORTED_OES = 0x8CDD
gl_HARDLIGHT_NV :: GLenum
gl_HARDLIGHT_NV = 0x929B
gl_INDEX_TEST_REF_EXT :: GLenum
gl_INDEX_TEST_REF_EXT = 0x81B7
gl_DEBUG_CALLBACK_USER_PARAM_ARB :: GLenum
gl_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245
gl_RGBA16F_EXT :: GLenum
gl_RGBA16F_EXT = 0x881A
gl_POLYGON_OFFSET_FACTOR_EXT :: GLenum
gl_POLYGON_OFFSET_FACTOR_EXT = 0x8038
gl_STENCIL_FAIL :: GLenum
gl_STENCIL_FAIL = 0x0B94
gl_COLOR_TABLE_LUMINANCE_SIZE :: GLenum
gl_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE
gl_TEXTURE_BINDING :: GLenum
gl_TEXTURE_BINDING = 0x82EB
gl_INT_VEC3 :: GLenum
gl_INT_VEC3 = 0x8B54
gl_RENDERBUFFER_SAMPLES :: GLenum
gl_RENDERBUFFER_SAMPLES = 0x8CAB
gl_SHADER_INCLUDE_ARB :: GLenum
gl_SHADER_INCLUDE_ARB = 0x8DAE
gl_TRANSFORM_FEEDBACK_NV :: GLenum
gl_TRANSFORM_FEEDBACK_NV = 0x8E22
gl_STRICT_DEPTHFUNC_HINT_PGI :: GLenum
gl_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216
gl_DRAW_PIXELS_APPLE :: GLenum
gl_DRAW_PIXELS_APPLE = 0x8A0A
gl_MAX_FOG_FUNC_POINTS_SGIS :: GLenum
gl_MAX_FOG_FUNC_POINTS_SGIS = 0x812C
gl_NEVER :: GLenum
gl_NEVER = 0x0200
gl_RGBA12_EXT :: GLenum
gl_RGBA12_EXT = 0x805A
gl_PATH_DASH_ARRAY_COUNT_NV :: GLenum
gl_PATH_DASH_ARRAY_COUNT_NV = 0x909F
gl_DEPENDENT_GB_TEXTURE_2D_NV :: GLenum
gl_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA
gl_TEXTURE_BUFFER_EXT :: GLenum
gl_TEXTURE_BUFFER_EXT = 0x8C2A
gl_PALETTE4_RGB8_OES :: GLenum
gl_PALETTE4_RGB8_OES = 0x8B90
gl_VIRTUAL_PAGE_SIZE_Z_AMD :: GLenum
gl_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197
gl_COUNTER_TYPE_AMD :: GLenum
gl_COUNTER_TYPE_AMD = 0x8BC0
gl_SAMPLER_EXTERNAL_OES :: GLenum
gl_SAMPLER_EXTERNAL_OES = 0x8D66
gl_POINT_FADE_THRESHOLD_SIZE :: GLenum
gl_POINT_FADE_THRESHOLD_SIZE = 0x8128
gl_RGB10_A2 :: GLenum
gl_RGB10_A2 = 0x8059
gl_MATRIX25_ARB :: GLenum
gl_MATRIX25_ARB = 0x88D9
gl_8X_BIT_ATI :: GLenum
gl_8X_BIT_ATI = 0x00000004
gl_UNSIGNED_INT_SAMPLER_2D_RECT_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5
gl_QUERY_NO_WAIT_INVERTED :: GLenum
gl_QUERY_NO_WAIT_INVERTED = 0x8E18
gl_MODELVIEW19_ARB :: GLenum
gl_MODELVIEW19_ARB = 0x8733
gl_Z4Y12Z4CB12Z4CR12_444_NV :: GLenum
gl_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037
gl_NEGATIVE_W_EXT :: GLenum
gl_NEGATIVE_W_EXT = 0x87DC
gl_OUTPUT_TEXTURE_COORD20_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1
gl_TEXTURE_HI_SIZE_NV :: GLenum
gl_TEXTURE_HI_SIZE_NV = 0x871B
gl_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C
gl_SAMPLES_PASSED_ARB :: GLenum
gl_SAMPLES_PASSED_ARB = 0x8914
gl_UNSIGNED_SHORT_5_6_5_EXT :: GLenum
gl_UNSIGNED_SHORT_5_6_5_EXT = 0x8363
gl_RGBA :: GLenum
gl_RGBA = 0x1908
gl_BUFFER_MAP_POINTER_ARB :: GLenum
gl_BUFFER_MAP_POINTER_ARB = 0x88BD
gl_HINT_BIT :: GLenum
gl_HINT_BIT = 0x00008000
gl_MAX_PATCH_VERTICES :: GLenum
gl_MAX_PATCH_VERTICES = 0x8E7D
gl_FOG_COORDINATE_ARRAY_STRIDE :: GLenum
gl_FOG_COORDINATE_ARRAY_STRIDE = 0x8455
gl_MAX_FRAGMENT_UNIFORM_COMPONENTS :: GLenum
gl_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49
gl_SOURCE0_RGB_EXT :: GLenum
gl_SOURCE0_RGB_EXT = 0x8580
gl_SRC_NV :: GLenum
gl_SRC_NV = 0x9286
gl_RASTERIZER_DISCARD :: GLenum
gl_RASTERIZER_DISCARD = 0x8C89
gl_BLEND_ADVANCED_COHERENT_KHR :: GLenum
gl_BLEND_ADVANCED_COHERENT_KHR = 0x9285
gl_COMBINE_ARB :: GLenum
gl_COMBINE_ARB = 0x8570
gl_MOVE_TO_RESETS_NV :: GLenum
gl_MOVE_TO_RESETS_NV = 0x90B5
gl_BUMP_ROT_MATRIX_SIZE_ATI :: GLenum
gl_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776
gl_TEXTURE_DEPTH_TYPE_ARB :: GLenum
gl_TEXTURE_DEPTH_TYPE_ARB = 0x8C16
gl_LINEARDODGE_NV :: GLenum
gl_LINEARDODGE_NV = 0x92A4
gl_IMAGE_CLASS_1_X_16 :: GLenum
gl_IMAGE_CLASS_1_X_16 = 0x82BE
gl_TEXTURE_WRAP_R_OES :: GLenum
gl_TEXTURE_WRAP_R_OES = 0x8072
gl_SHADING_LANGUAGE_VERSION :: GLenum
gl_SHADING_LANGUAGE_VERSION = 0x8B8C
gl_TEXTURE_DEFORMATION_BIT_SGIX :: GLenum
gl_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001
gl_VERTEX_ARRAY_COUNT_EXT :: GLenum
gl_VERTEX_ARRAY_COUNT_EXT = 0x807D
gl_LUMINANCE_ALPHA8UI_EXT :: GLenum
gl_LUMINANCE_ALPHA8UI_EXT = 0x8D81
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = 0x93E6
gl_DRAW_BUFFER8_ATI :: GLenum
gl_DRAW_BUFFER8_ATI = 0x882D
gl_SAMPLER_2D_SHADOW_ARB :: GLenum
gl_SAMPLER_2D_SHADOW_ARB = 0x8B62
gl_ALPHA12 :: GLenum
gl_ALPHA12 = 0x803D
gl_TEXTURE_BUFFER :: GLenum
gl_TEXTURE_BUFFER = 0x8C2A
gl_PROXY_TEXTURE_COLOR_TABLE_SGI :: GLenum
gl_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD
gl_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB :: GLenum
gl_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344
gl_TEXTURE_WRAP_Q_SGIS :: GLenum
gl_TEXTURE_WRAP_Q_SGIS = 0x8137
gl_SAMPLE_SHADING_OES :: GLenum
gl_SAMPLE_SHADING_OES = 0x8C36
gl_REGISTER_COMBINERS_NV :: GLenum
gl_REGISTER_COMBINERS_NV = 0x8522
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE :: GLenum
gl_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE
gl_OUTPUT_TEXTURE_COORD2_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD2_EXT = 0x879F
gl_MAT_COLOR_INDEXES_BIT_PGI :: GLenum
gl_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000
gl_TRANSFORM_FEEDBACK_BUFFER_STRIDE :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C
gl_COLOR_INDEX2_EXT :: GLenum
gl_COLOR_INDEX2_EXT = 0x80E3
gl_TEXTURE_BUFFER_OFFSET_EXT :: GLenum
gl_TEXTURE_BUFFER_OFFSET_EXT = 0x919D
gl_WRITEONLY_RENDERING_QCOM :: GLenum
gl_WRITEONLY_RENDERING_QCOM = 0x8823
gl_INDEX_ARRAY_LIST_IBM :: GLenum
gl_INDEX_ARRAY_LIST_IBM = 103073
gl_TRIANGLES_ADJACENCY_EXT :: GLenum
gl_TRIANGLES_ADJACENCY_EXT = 0x000C
gl_LIGHT0 :: GLenum
gl_LIGHT0 = 0x4000
gl_QUARTER_BIT_ATI :: GLenum
gl_QUARTER_BIT_ATI = 0x00000010
gl_POINT :: GLenum
gl_POINT = 0x1B00
gl_RGB_FLOAT32_ATI :: GLenum
gl_RGB_FLOAT32_ATI = 0x8815
gl_REFERENCE_PLANE_EQUATION_SGIX :: GLenum
gl_REFERENCE_PLANE_EQUATION_SGIX = 0x817E
gl_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM :: GLenum
gl_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085
gl_SOFTLIGHT_KHR :: GLenum
gl_SOFTLIGHT_KHR = 0x929C
gl_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB :: GLenum
gl_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87
gl_TEXTURE_SHADOW :: GLenum
gl_TEXTURE_SHADOW = 0x82A1
gl_MAX_INTEGER_SAMPLES :: GLenum
gl_MAX_INTEGER_SAMPLES = 0x9110
gl_RGB16_SNORM :: GLenum
gl_RGB16_SNORM = 0x8F9A
gl_MAP2_INDEX :: GLenum
gl_MAP2_INDEX = 0x0DB1
gl_ALPHA_MAX_SGIX :: GLenum
gl_ALPHA_MAX_SGIX = 0x8321
gl_MIN_SAMPLE_SHADING_VALUE :: GLenum
gl_MIN_SAMPLE_SHADING_VALUE = 0x8C37
gl_PIXEL_TILE_BEST_ALIGNMENT_SGIX :: GLenum
gl_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E
gl_SAMPLE_BUFFERS :: GLenum
gl_SAMPLE_BUFFERS = 0x80A8
gl_TEXTURE4 :: GLenum
gl_TEXTURE4 = 0x84C4
gl_OPERAND0_RGB_ARB :: GLenum
gl_OPERAND0_RGB_ARB = 0x8590
gl_TEXTURE_MIN_LOD :: GLenum
gl_TEXTURE_MIN_LOD = 0x813A
gl_CONTEXT_CORE_PROFILE_BIT :: GLenum
gl_CONTEXT_CORE_PROFILE_BIT = 0x00000001
gl_RGBA4_EXT :: GLenum
gl_RGBA4_EXT = 0x8056
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0
gl_DEBUG_SOURCE_APPLICATION_ARB :: GLenum
gl_DEBUG_SOURCE_APPLICATION_ARB = 0x824A
gl_COMPRESSED_SRGB :: GLenum
gl_COMPRESSED_SRGB = 0x8C48
gl_DEBUG_TYPE_MARKER_KHR :: GLenum
gl_DEBUG_TYPE_MARKER_KHR = 0x8268
gl_RGBA_FLOAT32_APPLE :: GLenum
gl_RGBA_FLOAT32_APPLE = 0x8814
gl_POST_CONVOLUTION_RED_BIAS_EXT :: GLenum
gl_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020
gl_CONSTANT_ARB :: GLenum
gl_CONSTANT_ARB = 0x8576
gl_MAX_WIDTH :: GLenum
gl_MAX_WIDTH = 0x827E
gl_FRAMEZOOM_SGIX :: GLenum
gl_FRAMEZOOM_SGIX = 0x818B
gl_ACTIVE_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9
gl_HI_SCALE_NV :: GLenum
gl_HI_SCALE_NV = 0x870E
gl_PATH_COMMAND_COUNT_NV :: GLenum
gl_PATH_COMMAND_COUNT_NV = 0x909D
gl_GENERATE_MIPMAP_HINT :: GLenum
gl_GENERATE_MIPMAP_HINT = 0x8192
gl_PROGRAM_ADDRESS_REGISTERS_ARB :: GLenum
gl_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0
gl_COLOR_ATTACHMENT15_EXT :: GLenum
gl_COLOR_ATTACHMENT15_EXT = 0x8CEF
gl_CONVOLUTION_WIDTH :: GLenum
gl_CONVOLUTION_WIDTH = 0x8018
gl_LINEAR_SHARPEN_ALPHA_SGIS :: GLenum
gl_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE
gl_BUFFER_FLUSHING_UNMAP_APPLE :: GLenum
gl_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13
gl_GPU_ADDRESS_NV :: GLenum
gl_GPU_ADDRESS_NV = 0x8F34
gl_DEPTH_COMPONENTS :: GLenum
gl_DEPTH_COMPONENTS = 0x8284
gl_UNPACK_SKIP_ROWS :: GLenum
gl_UNPACK_SKIP_ROWS = 0x0CF3
gl_TEXTURE16 :: GLenum
gl_TEXTURE16 = 0x84D0
gl_MODELVIEW1_ARB :: GLenum
gl_MODELVIEW1_ARB = 0x850A
gl_IMAGE_2D_ARRAY_EXT :: GLenum
gl_IMAGE_2D_ARRAY_EXT = 0x9053
gl_RGB :: GLenum
gl_RGB = 0x1907
gl_MAX_PROGRAM_TEXEL_OFFSET_NV :: GLenum
gl_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905
gl_SHADER_IMAGE_LOAD :: GLenum
gl_SHADER_IMAGE_LOAD = 0x82A4
gl_VOLATILE_APPLE :: GLenum
gl_VOLATILE_APPLE = 0x8A1A
gl_POST_CONVOLUTION_GREEN_BIAS_EXT :: GLenum
gl_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021
gl_MAX_TRANSFORM_FEEDBACK_BUFFERS :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70
gl_BUFFER_KHR :: GLenum
gl_BUFFER_KHR = 0x82E0
gl_INTENSITY8_EXT :: GLenum
gl_INTENSITY8_EXT = 0x804B
gl_PROGRAM_NATIVE_ATTRIBS_ARB :: GLenum
gl_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE
gl_VERTEX_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2
gl_TEXTURE_SWIZZLE_B :: GLenum
gl_TEXTURE_SWIZZLE_B = 0x8E44
gl_BLEND_COLOR_EXT :: GLenum
gl_BLEND_COLOR_EXT = 0x8005
gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24
gl_SAMPLER_2D_MULTISAMPLE_ARRAY :: GLenum
gl_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B
gl_MAX_ELEMENTS_INDICES :: GLenum
gl_MAX_ELEMENTS_INDICES = 0x80E9
gl_SAMPLE_MASK_NV :: GLenum
gl_SAMPLE_MASK_NV = 0x8E51
gl_TEXTURE_BUFFER_FORMAT_ARB :: GLenum
gl_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E
gl_UNSIGNED_INT64_VEC3_NV :: GLenum
gl_UNSIGNED_INT64_VEC3_NV = 0x8FF6
gl_MODELVIEW13_ARB :: GLenum
gl_MODELVIEW13_ARB = 0x872D
gl_MAX_CUBE_MAP_TEXTURE_SIZE_OES :: GLenum
gl_MAX_CUBE_MAP_TEXTURE_SIZE_OES = 0x851C
gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C
gl_STENCIL_INDEX8_OES :: GLenum
gl_STENCIL_INDEX8_OES = 0x8D48
gl_DEPTH_WRITEMASK :: GLenum
gl_DEPTH_WRITEMASK = 0x0B72
gl_FLOAT_MAT3_ARB :: GLenum
gl_FLOAT_MAT3_ARB = 0x8B5B
gl_SPOT_EXPONENT :: GLenum
gl_SPOT_EXPONENT = 0x1205
gl_ASYNC_READ_PIXELS_SGIX :: GLenum
gl_ASYNC_READ_PIXELS_SGIX = 0x835E
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5
gl_COLOR_SUM_EXT :: GLenum
gl_COLOR_SUM_EXT = 0x8458
gl_LINE_WIDTH_RANGE :: GLenum
gl_LINE_WIDTH_RANGE = 0x0B22
gl_QUERY_OBJECT_EXT :: GLenum
gl_QUERY_OBJECT_EXT = 0x9153
gl_HALF_FLOAT_OES :: GLenum
gl_HALF_FLOAT_OES = 0x8D61
gl_TEXTURE_LEQUAL_R_SGIX :: GLenum
gl_TEXTURE_LEQUAL_R_SGIX = 0x819C
gl_DRAW_BUFFER6_ARB :: GLenum
gl_DRAW_BUFFER6_ARB = 0x882B
gl_NUM_VIDEO_CAPTURE_STREAMS_NV :: GLenum
gl_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = 0x9134
gl_RG_SNORM :: GLenum
gl_RG_SNORM = 0x8F91
gl_RECLAIM_MEMORY_HINT_PGI :: GLenum
gl_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE
gl_IMAGE_2D_EXT :: GLenum
gl_IMAGE_2D_EXT = 0x904D
gl_POINT_SIZE_ARRAY_OES :: GLenum
gl_POINT_SIZE_ARRAY_OES = 0x8B9C
gl_GEOMETRY_DEFORMATION_SGIX :: GLenum
gl_GEOMETRY_DEFORMATION_SGIX = 0x8194
gl_UNSIGNED_SHORT_5_5_5_1_EXT :: GLenum
gl_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034
gl_MATRIX8_ARB :: GLenum
gl_MATRIX8_ARB = 0x88C8
gl_RESET_NOTIFICATION_STRATEGY_ARB :: GLenum
gl_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256
gl_CONTEXT_FLAG_DEBUG_BIT :: GLenum
gl_CONTEXT_FLAG_DEBUG_BIT = 0x00000002
gl_DEBUG_TYPE_PUSH_GROUP :: GLenum
gl_DEBUG_TYPE_PUSH_GROUP = 0x8269
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = 0x93E3
gl_TEXTURE_COORD_NV :: GLenum
gl_TEXTURE_COORD_NV = 0x8C79
gl_UNDEFINED_VERTEX_EXT :: GLenum
gl_UNDEFINED_VERTEX_EXT = 0x8260
gl_DRAW_BUFFER12_EXT :: GLenum
gl_DRAW_BUFFER12_EXT = 0x8831
gl_STENCIL_OP_VALUE_AMD :: GLenum
gl_STENCIL_OP_VALUE_AMD = 0x874C
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1
gl_MAX_CLIENT_ATTRIB_STACK_DEPTH :: GLenum
gl_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B
gl_FRAMEBUFFER_UNDEFINED :: GLenum
gl_FRAMEBUFFER_UNDEFINED = 0x8219
gl_UNSIGNED_INT_VEC3 :: GLenum
gl_UNSIGNED_INT_VEC3 = 0x8DC7
gl_ATOMIC_COUNTER_BUFFER_BINDING :: GLenum
gl_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1
gl_TEXTURE_MATERIAL_FACE_EXT :: GLenum
gl_TEXTURE_MATERIAL_FACE_EXT = 0x8351
gl_TEXTURE_SHADER_NV :: GLenum
gl_TEXTURE_SHADER_NV = 0x86DE
gl_BUFFER_IMMUTABLE_STORAGE :: GLenum
gl_BUFFER_IMMUTABLE_STORAGE = 0x821F
gl_COLOR_TABLE_FORMAT_SGI :: GLenum
gl_COLOR_TABLE_FORMAT_SGI = 0x80D8
gl_4_BYTES :: GLenum
gl_4_BYTES = 0x1409
gl_PATH_FILL_COVER_MODE_NV :: GLenum
gl_PATH_FILL_COVER_MODE_NV = 0x9082
gl_INTENSITY8UI_EXT :: GLenum
gl_INTENSITY8UI_EXT = 0x8D7F
gl_GLYPH_WIDTH_BIT_NV :: GLenum
gl_GLYPH_WIDTH_BIT_NV = 0x01
gl_TRANSPOSE_AFFINE_2D_NV :: GLenum
gl_TRANSPOSE_AFFINE_2D_NV = 0x9096
gl_DSDT_MAG_NV :: GLenum
gl_DSDT_MAG_NV = 0x86F6
gl_ELEMENT_ARRAY_BUFFER :: GLenum
gl_ELEMENT_ARRAY_BUFFER = 0x8893
gl_RGBA12 :: GLenum
gl_RGBA12 = 0x805A
gl_INT_2_10_10_10_REV :: GLenum
gl_INT_2_10_10_10_REV = 0x8D9F
gl_EVAL_VERTEX_ATTRIB12_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB12_NV = 0x86D2
gl_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB :: GLenum
gl_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808
gl_OPERAND3_ALPHA_NV :: GLenum
gl_OPERAND3_ALPHA_NV = 0x859B
gl_RASTERIZER_DISCARD_EXT :: GLenum
gl_RASTERIZER_DISCARD_EXT = 0x8C89
gl_INT_SAMPLER_1D_ARRAY_EXT :: GLenum
gl_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE
gl_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_ARRAY_BUFFER_BINDING_ARB = 0x8894
gl_FLOAT_MAT3 :: GLenum
gl_FLOAT_MAT3 = 0x8B5B
gl_CONVOLUTION_FORMAT_EXT :: GLenum
gl_CONVOLUTION_FORMAT_EXT = 0x8017
gl_STREAM_COPY_ARB :: GLenum
gl_STREAM_COPY_ARB = 0x88E2
gl_CURRENT_PROGRAM :: GLenum
gl_CURRENT_PROGRAM = 0x8B8D
gl_OP_RECIP_SQRT_EXT :: GLenum
gl_OP_RECIP_SQRT_EXT = 0x8795
gl_VERTEX_SUBROUTINE :: GLenum
gl_VERTEX_SUBROUTINE = 0x92E8
gl_CONSTANT_COLOR0_NV :: GLenum
gl_CONSTANT_COLOR0_NV = 0x852A
gl_TEXTURE10_ARB :: GLenum
gl_TEXTURE10_ARB = 0x84CA
gl_DETAIL_TEXTURE_2D_SGIS :: GLenum
gl_DETAIL_TEXTURE_2D_SGIS = 0x8095
gl_FRAGMENT_TEXTURE :: GLenum
gl_FRAGMENT_TEXTURE = 0x829F
gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = 0x8A56
gl_FRAGMENT_DEPTH :: GLenum
gl_FRAGMENT_DEPTH = 0x8452
gl_CALLIGRAPHIC_FRAGMENT_SGIX :: GLenum
gl_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183
gl_COLOR_ARRAY_EXT :: GLenum
gl_COLOR_ARRAY_EXT = 0x8076
gl_INNOCENT_CONTEXT_RESET_KHR :: GLenum
gl_INNOCENT_CONTEXT_RESET_KHR = 0x8254
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = 0x8518
gl_COLOR_ATTACHMENT10_EXT :: GLenum
gl_COLOR_ATTACHMENT10_EXT = 0x8CEA
gl_FOG_COORD_ARRAY_ADDRESS_NV :: GLenum
gl_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28
gl_UNIFORM_OFFSET :: GLenum
gl_UNIFORM_OFFSET = 0x8A3B
gl_ONE :: GLenum
gl_ONE = 1
gl_TEXTURE_IMMUTABLE_FORMAT_EXT :: GLenum
gl_TEXTURE_IMMUTABLE_FORMAT_EXT = 0x912F
gl_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB :: GLenum
gl_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841
gl_SEPARATE_ATTRIBS_NV :: GLenum
gl_SEPARATE_ATTRIBS_NV = 0x8C8D
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV :: GLenum
gl_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B
gl_PROGRAM_ERROR_POSITION_NV :: GLenum
gl_PROGRAM_ERROR_POSITION_NV = 0x864B
gl_PACK_REVERSE_ROW_ORDER_ANGLE :: GLenum
gl_PACK_REVERSE_ROW_ORDER_ANGLE = 0x93A4
gl_SRGB_WRITE :: GLenum
gl_SRGB_WRITE = 0x8298
gl_ATC_RGBA_EXPLICIT_ALPHA_AMD :: GLenum
gl_ATC_RGBA_EXPLICIT_ALPHA_AMD = 0x8C93
gl_UNSIGNED_INT_VEC2 :: GLenum
gl_UNSIGNED_INT_VEC2 = 0x8DC6
gl_UNSIGNED_INT_IMAGE_BUFFER :: GLenum
gl_UNSIGNED_INT_IMAGE_BUFFER = 0x9067
gl_DEPTH_COMPONENT :: GLenum
gl_DEPTH_COMPONENT = 0x1902
gl_READ_FRAMEBUFFER_APPLE :: GLenum
gl_READ_FRAMEBUFFER_APPLE = 0x8CA8
gl_TEXTURE_CUBE_MAP_NEGATIVE_X :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516
gl_PACK_COMPRESSED_BLOCK_DEPTH :: GLenum
gl_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D
gl_VERTEX_WEIGHT_ARRAY_STRIDE_EXT :: GLenum
gl_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F
gl_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX :: GLenum
gl_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047
gl_SLUMINANCE_EXT :: GLenum
gl_SLUMINANCE_EXT = 0x8C46
gl_MAX_SHADER_STORAGE_BLOCK_SIZE :: GLenum
gl_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE
gl_ALREADY_SIGNALED_APPLE :: GLenum
gl_ALREADY_SIGNALED_APPLE = 0x911A
gl_BGRA_INTEGER :: GLenum
gl_BGRA_INTEGER = 0x8D9B
gl_SAMPLE_BUFFERS_SGIS :: GLenum
gl_SAMPLE_BUFFERS_SGIS = 0x80A8
gl_MAX_SUBROUTINE_UNIFORM_LOCATIONS :: GLenum
gl_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3
gl_OPERAND0_ALPHA_EXT :: GLenum
gl_OPERAND0_ALPHA_EXT = 0x8598
gl_CLAMP_TO_BORDER_SGIS :: GLenum
gl_CLAMP_TO_BORDER_SGIS = 0x812D
gl_BUFFER_OBJECT_EXT :: GLenum
gl_BUFFER_OBJECT_EXT = 0x9151
gl_PHONG_WIN :: GLenum
gl_PHONG_WIN = 0x80EA
gl_MAP2_COLOR_4 :: GLenum
gl_MAP2_COLOR_4 = 0x0DB0
gl_COMPRESSED_RGBA_S3TC_DXT3_EXT :: GLenum
gl_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2
gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT :: GLenum
gl_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = 0x8A57
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A
gl_COLOR_TABLE_WIDTH :: GLenum
gl_COLOR_TABLE_WIDTH = 0x80D9
gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT :: GLenum
gl_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001
gl_COMPRESSED_RGBA_ASTC_10x10_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB
gl_FONT_Y_MAX_BOUNDS_BIT_NV :: GLenum
gl_FONT_Y_MAX_BOUNDS_BIT_NV = 0x00080000
gl_IMAGE_BUFFER :: GLenum
gl_IMAGE_BUFFER = 0x9051
gl_EVAL_VERTEX_ATTRIB13_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB13_NV = 0x86D3
gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT :: GLenum
gl_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF
gl_RASTER_MULTISAMPLE_EXT :: GLenum
gl_RASTER_MULTISAMPLE_EXT = 0x9327
gl_EYE_DISTANCE_TO_LINE_SGIS :: GLenum
gl_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2
gl_RENDERBUFFER_BLUE_SIZE :: GLenum
gl_RENDERBUFFER_BLUE_SIZE = 0x8D52
gl_SOURCE3_ALPHA_NV :: GLenum
gl_SOURCE3_ALPHA_NV = 0x858B
gl_VERTEX_ATTRIB_ARRAY14_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY14_NV = 0x865E
gl_READ_FRAMEBUFFER_NV :: GLenum
gl_READ_FRAMEBUFFER_NV = 0x8CA8
gl_MULTIPLY_KHR :: GLenum
gl_MULTIPLY_KHR = 0x9294
gl_INVARIANT_VALUE_EXT :: GLenum
gl_INVARIANT_VALUE_EXT = 0x87EA
gl_FONT_TARGET_UNAVAILABLE_NV :: GLenum
gl_FONT_TARGET_UNAVAILABLE_NV = 0x9369
gl_4D_COLOR_TEXTURE :: GLenum
gl_4D_COLOR_TEXTURE = 0x0604
gl_RGB9_E5_EXT :: GLenum
gl_RGB9_E5_EXT = 0x8C3D
gl_PATH_PROJECTION_NV :: GLenum
gl_PATH_PROJECTION_NV = 0x1701
gl_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC
gl_COLOR_COMPONENTS :: GLenum
gl_COLOR_COMPONENTS = 0x8283
gl_CONTEXT_ROBUST_ACCESS_EXT :: GLenum
gl_CONTEXT_ROBUST_ACCESS_EXT = 0x90F3
gl_LUMINANCE8 :: GLenum
gl_LUMINANCE8 = 0x8040
gl_UNPACK_CMYK_HINT_EXT :: GLenum
gl_UNPACK_CMYK_HINT_EXT = 0x800F
gl_SHARPEN_TEXTURE_FUNC_POINTS_SGIS :: GLenum
gl_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0
gl_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB :: GLenum
gl_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0
gl_TEXTURE_BIT :: GLenum
gl_TEXTURE_BIT = 0x00040000
gl_LUMINANCE_FLOAT32_ATI :: GLenum
gl_LUMINANCE_FLOAT32_ATI = 0x8818
gl_BLEND_EQUATION_ALPHA_OES :: GLenum
gl_BLEND_EQUATION_ALPHA_OES = 0x883D
gl_YCBYCR8_422_NV :: GLenum
gl_YCBYCR8_422_NV = 0x9031
gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB :: GLenum
gl_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004
gl_PERFQUERY_COUNTER_DATA_UINT32_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8
gl_TRIANGLE_LIST_SUN :: GLenum
gl_TRIANGLE_LIST_SUN = 0x81D7
gl_FONT_UNDERLINE_POSITION_BIT_NV :: GLenum
gl_FONT_UNDERLINE_POSITION_BIT_NV = 0x04000000
gl_QUERY_RESULT_NO_WAIT_AMD :: GLenum
gl_QUERY_RESULT_NO_WAIT_AMD = 0x9194
gl_WARP_SIZE_NV :: GLenum
gl_WARP_SIZE_NV = 0x9339
gl_SCISSOR_BOX :: GLenum
gl_SCISSOR_BOX = 0x0C10
gl_PROGRAMMABLE_SAMPLE_LOCATION_NV :: GLenum
gl_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9341
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = 0x8C4D
gl_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV :: GLenum
gl_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349
gl_DRAW_INDIRECT_BUFFER_BINDING :: GLenum
gl_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43
gl_NORMAL_MAP :: GLenum
gl_NORMAL_MAP = 0x8511
gl_CON_26_ATI :: GLenum
gl_CON_26_ATI = 0x895B
gl_NO_RESET_NOTIFICATION_KHR :: GLenum
gl_NO_RESET_NOTIFICATION_KHR = 0x8261
gl_CLIENT_VERTEX_ARRAY_BIT :: GLenum
gl_CLIENT_VERTEX_ARRAY_BIT = 0x00000002
gl_FLOAT_RG_NV :: GLenum
gl_FLOAT_RG_NV = 0x8881
gl_QUERY_COUNTER_BITS_EXT :: GLenum
gl_QUERY_COUNTER_BITS_EXT = 0x8864
gl_PRIMITIVE_RESTART :: GLenum
gl_PRIMITIVE_RESTART = 0x8F9D
gl_TEXTURE_ALPHA_TYPE :: GLenum
gl_TEXTURE_ALPHA_TYPE = 0x8C13
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85
gl_DRAW_BUFFER3_EXT :: GLenum
gl_DRAW_BUFFER3_EXT = 0x8828
gl_FOG_HINT :: GLenum
gl_FOG_HINT = 0x0C54
gl_SAMPLER_CUBE_SHADOW_EXT :: GLenum
gl_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5
gl_Y_EXT :: GLenum
gl_Y_EXT = 0x87D6
gl_RGB_SCALE_EXT :: GLenum
gl_RGB_SCALE_EXT = 0x8573
gl_REFERENCE_PLANE_SGIX :: GLenum
gl_REFERENCE_PLANE_SGIX = 0x817D
gl_POST_COLOR_MATRIX_GREEN_BIAS :: GLenum
gl_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9
gl_ALPHA8I_EXT :: GLenum
gl_ALPHA8I_EXT = 0x8D90
gl_TEXTURE_COMPARE_MODE_ARB :: GLenum
gl_TEXTURE_COMPARE_MODE_ARB = 0x884C
gl_COMMAND_BARRIER_BIT_EXT :: GLenum
gl_COMMAND_BARRIER_BIT_EXT = 0x00000040
gl_FIXED_OES :: GLenum
gl_FIXED_OES = 0x140C
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517
gl_MAP2_NORMAL :: GLenum
gl_MAP2_NORMAL = 0x0DB2
gl_MODELVIEW24_ARB :: GLenum
gl_MODELVIEW24_ARB = 0x8738
gl_SPRITE_OBJECT_ALIGNED_SGIX :: GLenum
gl_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D
gl_RG8UI :: GLenum
gl_RG8UI = 0x8238
gl_LIGHTEN_NV :: GLenum
gl_LIGHTEN_NV = 0x9298
gl_POST_TEXTURE_FILTER_SCALE_SGIX :: GLenum
gl_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A
gl_LIST_BASE :: GLenum
gl_LIST_BASE = 0x0B32
gl_FRAGMENT_PROGRAM_CALLBACK_MESA :: GLenum
gl_FRAGMENT_PROGRAM_CALLBACK_MESA = 0x8BB1
gl_TEXTURE_CUBE_MAP_ARRAY_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009
gl_QUERY_BUFFER_BARRIER_BIT :: GLenum
gl_QUERY_BUFFER_BARRIER_BIT = 0x00008000
gl_OP_ROUND_EXT :: GLenum
gl_OP_ROUND_EXT = 0x8790
gl_WEIGHT_ARRAY_STRIDE_ARB :: GLenum
gl_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA
gl_DRAW_BUFFER15_ATI :: GLenum
gl_DRAW_BUFFER15_ATI = 0x8834
gl_HISTOGRAM_ALPHA_SIZE_EXT :: GLenum
gl_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B
gl_MEDIUM_FLOAT :: GLenum
gl_MEDIUM_FLOAT = 0x8DF1
gl_TEXTURE_BUFFER_SIZE :: GLenum
gl_TEXTURE_BUFFER_SIZE = 0x919E
gl_TEXTURE_RESIDENT_EXT :: GLenum
gl_TEXTURE_RESIDENT_EXT = 0x8067
gl_PLUS_NV :: GLenum
gl_PLUS_NV = 0x9291
gl_R8_EXT :: GLenum
gl_R8_EXT = 0x8229
gl_RED_BIAS :: GLenum
gl_RED_BIAS = 0x0D15
gl_BIAS_BY_NEGATIVE_ONE_HALF_NV :: GLenum
gl_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541
gl_SRC1_ALPHA :: GLenum
gl_SRC1_ALPHA = 0x8589
gl_RGB12 :: GLenum
gl_RGB12 = 0x8053
gl_RECT_NV :: GLenum
gl_RECT_NV = 0xF6
gl_VERTEX_ATTRIB_ARRAY_POINTER_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645
gl_POLYGON_OFFSET_EXT :: GLenum
gl_POLYGON_OFFSET_EXT = 0x8037
gl_DEBUG_SEVERITY_LOW :: GLenum
gl_DEBUG_SEVERITY_LOW = 0x9148
gl_TEXTURE2 :: GLenum
gl_TEXTURE2 = 0x84C2
gl_CONTINUOUS_AMD :: GLenum
gl_CONTINUOUS_AMD = 0x9007
gl_TEXTURE_SAMPLES :: GLenum
gl_TEXTURE_SAMPLES = 0x9106
gl_NEGATIVE_X_EXT :: GLenum
gl_NEGATIVE_X_EXT = 0x87D9
gl_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE :: GLenum
gl_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = 0x93A0
gl_CLIP_VOLUME_CLIPPING_HINT_EXT :: GLenum
gl_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0
gl_SM_COUNT_NV :: GLenum
gl_SM_COUNT_NV = 0x933B
gl_TEXTURE_COORD_ARRAY_SIZE_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088
gl_MODELVIEW11_ARB :: GLenum
gl_MODELVIEW11_ARB = 0x872B
gl_SRC_ATOP_NV :: GLenum
gl_SRC_ATOP_NV = 0x928E
gl_PATH_FORMAT_PS_NV :: GLenum
gl_PATH_FORMAT_PS_NV = 0x9071
gl_COMPRESSED_RGBA_ARB :: GLenum
gl_COMPRESSED_RGBA_ARB = 0x84EE
gl_VERTEX_ATTRIB_ARRAY8_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY8_NV = 0x8658
gl_DEPTH_COMPONENT16_SGIX :: GLenum
gl_DEPTH_COMPONENT16_SGIX = 0x81A5
gl_TESS_CONTROL_SUBROUTINE_UNIFORM :: GLenum
gl_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF
gl_COLOR_ATTACHMENT10 :: GLenum
gl_COLOR_ATTACHMENT10 = 0x8CEA
gl_TEXTURE_DT_SIZE_NV :: GLenum
gl_TEXTURE_DT_SIZE_NV = 0x871E
gl_LUMINANCE12_ALPHA12 :: GLenum
gl_LUMINANCE12_ALPHA12 = 0x8047
gl_PIXEL_TRANSFORM_2D_MATRIX_EXT :: GLenum
gl_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338
gl_COORD_REPLACE_ARB :: GLenum
gl_COORD_REPLACE_ARB = 0x8862
gl_MAP2_GRID_DOMAIN :: GLenum
gl_MAP2_GRID_DOMAIN = 0x0DD2
gl_MULTISAMPLE_FILTER_HINT_NV :: GLenum
gl_MULTISAMPLE_FILTER_HINT_NV = 0x8534
gl_TEXTURE_DEPTH_QCOM :: GLenum
gl_TEXTURE_DEPTH_QCOM = 0x8BD4
gl_FLOAT_VEC2_ARB :: GLenum
gl_FLOAT_VEC2_ARB = 0x8B50
gl_SIGNED_RGB8_UNSIGNED_ALPHA8_NV :: GLenum
gl_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D
gl_MAX_DEBUG_MESSAGE_LENGTH :: GLenum
gl_MAX_DEBUG_MESSAGE_LENGTH = 0x9143
gl_DISCARD_NV :: GLenum
gl_DISCARD_NV = 0x8530
gl_DEBUG_TYPE_PERFORMANCE_KHR :: GLenum
gl_DEBUG_TYPE_PERFORMANCE_KHR = 0x8250
gl_UNSIGNED_INT8_VEC4_NV :: GLenum
gl_UNSIGNED_INT8_VEC4_NV = 0x8FEF
gl_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV :: GLenum
gl_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851
gl_FOG_COORDINATE_ARRAY_POINTER_EXT :: GLenum
gl_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456
gl_DEPTH_COMPONENT32F_NV :: GLenum
gl_DEPTH_COMPONENT32F_NV = 0x8DAB
gl_MAX_GEOMETRY_INPUT_COMPONENTS_EXT :: GLenum
gl_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = 0x9123
gl_SAMPLE_MASK_EXT :: GLenum
gl_SAMPLE_MASK_EXT = 0x80A0
gl_ALL_COMPLETED_NV :: GLenum
gl_ALL_COMPLETED_NV = 0x84F2
gl_GPU_MEMORY_INFO_EVICTION_COUNT_NVX :: GLenum
gl_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A
gl_MAX_VERTEX_ATTRIBS_ARB :: GLenum
gl_MAX_VERTEX_ATTRIBS_ARB = 0x8869
gl_TEXTURE_INTERNAL_FORMAT :: GLenum
gl_TEXTURE_INTERNAL_FORMAT = 0x1003
gl_INVERSE_TRANSPOSE_NV :: GLenum
gl_INVERSE_TRANSPOSE_NV = 0x862D
gl_REG_27_ATI :: GLenum
gl_REG_27_ATI = 0x893C
gl_POST_CONVOLUTION_BLUE_BIAS_EXT :: GLenum
gl_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022
gl_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB :: GLenum
gl_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E
gl_MAX_UNIFORM_LOCATIONS :: GLenum
gl_MAX_UNIFORM_LOCATIONS = 0x826E
gl_DEPTH_BUFFER_BIT3_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT3_QCOM = 0x00000800
gl_MAP_COLOR :: GLenum
gl_MAP_COLOR = 0x0D10
gl_PROGRAM_STRING_NV :: GLenum
gl_PROGRAM_STRING_NV = 0x8628
gl_POST_CONVOLUTION_BLUE_SCALE_EXT :: GLenum
gl_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E
gl_COMPRESSED_RGBA_ASTC_10x8_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA
gl_PACK_COMPRESSED_BLOCK_SIZE :: GLenum
gl_PACK_COMPRESSED_BLOCK_SIZE = 0x912E
gl_FOG_DISTANCE_MODE_NV :: GLenum
gl_FOG_DISTANCE_MODE_NV = 0x855A
gl_MAX_CLIP_PLANES :: GLenum
gl_MAX_CLIP_PLANES = 0x0D32
gl_PROGRAM_PIPELINE_BINDING :: GLenum
gl_PROGRAM_PIPELINE_BINDING = 0x825A
gl_SURFACE_STATE_NV :: GLenum
gl_SURFACE_STATE_NV = 0x86EB
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900F
gl_SAMPLE_MASK_INVERT_SGIS :: GLenum
gl_SAMPLE_MASK_INVERT_SGIS = 0x80AB
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516
gl_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI :: GLenum
gl_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1
gl_DEBUG_CATEGORY_OTHER_AMD :: GLenum
gl_DEBUG_CATEGORY_OTHER_AMD = 0x9150
gl_CONVOLUTION_HEIGHT_EXT :: GLenum
gl_CONVOLUTION_HEIGHT_EXT = 0x8019
gl_WAIT_FAILED :: GLenum
gl_WAIT_FAILED = 0x911D
gl_TEXT_FRAGMENT_SHADER_ATI :: GLenum
gl_TEXT_FRAGMENT_SHADER_ATI = 0x8200
gl_DEBUG_SEVERITY_LOW_KHR :: GLenum
gl_DEBUG_SEVERITY_LOW_KHR = 0x9148
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A
gl_LIGHT2 :: GLenum
gl_LIGHT2 = 0x4002
gl_MODULATE_COLOR_IMG :: GLenum
gl_MODULATE_COLOR_IMG = 0x8C04
gl_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA :: GLenum
gl_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB2
gl_CLAMP_READ_COLOR :: GLenum
gl_CLAMP_READ_COLOR = 0x891C
gl_UNIFORM_BLOCK_DATA_SIZE :: GLenum
gl_UNIFORM_BLOCK_DATA_SIZE = 0x8A40
gl_LINE_TOKEN :: GLenum
gl_LINE_TOKEN = 0x0702
gl_DEPTH_COMPONENT24 :: GLenum
gl_DEPTH_COMPONENT24 = 0x81A6
gl_EXP2 :: GLenum
gl_EXP2 = 0x0801
gl_DRAW_BUFFER3_NV :: GLenum
gl_DRAW_BUFFER3_NV = 0x8828
gl_ELEMENT_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895
gl_MATRIX20_ARB :: GLenum
gl_MATRIX20_ARB = 0x88D4
gl_COMPRESSED_RGBA_ASTC_4x4x4_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_4x4x4_OES = 0x93C3
gl_SOURCE0_ALPHA_EXT :: GLenum
gl_SOURCE0_ALPHA_EXT = 0x8588
gl_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD :: GLenum
gl_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C
gl_ALPHA16UI_EXT :: GLenum
gl_ALPHA16UI_EXT = 0x8D78
gl_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV :: GLenum
gl_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036
gl_INDEX_ARRAY_LENGTH_NV :: GLenum
gl_INDEX_ARRAY_LENGTH_NV = 0x8F2E
gl_VIEW_CLASS_S3TC_DXT1_RGBA :: GLenum
gl_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD
gl_MAX_VERTEX_UNITS_ARB :: GLenum
gl_MAX_VERTEX_UNITS_ARB = 0x86A4
gl_DEBUG_SOURCE_OTHER_KHR :: GLenum
gl_DEBUG_SOURCE_OTHER_KHR = 0x824B
gl_MAX_DEBUG_MESSAGE_LENGTH_ARB :: GLenum
gl_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143
gl_NORMAL_ARRAY_TYPE :: GLenum
gl_NORMAL_ARRAY_TYPE = 0x807E
gl_LINEAR_DETAIL_COLOR_SGIS :: GLenum
gl_LINEAR_DETAIL_COLOR_SGIS = 0x8099
gl_SOURCE3_RGB_NV :: GLenum
gl_SOURCE3_RGB_NV = 0x8583
gl_LUMINANCE32F_EXT :: GLenum
gl_LUMINANCE32F_EXT = 0x8818
gl_PROGRAM_ERROR_STRING_ARB :: GLenum
gl_PROGRAM_ERROR_STRING_ARB = 0x8874
gl_OP_DOT4_EXT :: GLenum
gl_OP_DOT4_EXT = 0x8785
gl_DRAW_BUFFER7_EXT :: GLenum
gl_DRAW_BUFFER7_EXT = 0x882C
gl_MAJOR_VERSION :: GLenum
gl_MAJOR_VERSION = 0x821B
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = 0x8CDB
gl_DOT3_RGBA_ARB :: GLenum
gl_DOT3_RGBA_ARB = 0x86AF
gl_INT_IMAGE_1D_ARRAY :: GLenum
gl_INT_IMAGE_1D_ARRAY = 0x905D
gl_CLIP_PLANE3 :: GLenum
gl_CLIP_PLANE3 = 0x3003
gl_FLOAT16_VEC2_NV :: GLenum
gl_FLOAT16_VEC2_NV = 0x8FF9
gl_FOG_COORDINATE_ARRAY_POINTER :: GLenum
gl_FOG_COORDINATE_ARRAY_POINTER = 0x8456
gl_MATRIX24_ARB :: GLenum
gl_MATRIX24_ARB = 0x88D8
gl_SAMPLER_2D_ARRAY_SHADOW_NV :: GLenum
gl_SAMPLER_2D_ARRAY_SHADOW_NV = 0x8DC4
gl_EVAL_VERTEX_ATTRIB1_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB1_NV = 0x86C7
gl_GEOMETRY_SHADER_INVOCATIONS_EXT :: GLenum
gl_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x887F
gl_COMPILE_STATUS :: GLenum
gl_COMPILE_STATUS = 0x8B81
gl_UNSIGNED_INT_SAMPLER_CUBE_EXT :: GLenum
gl_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4
gl_HISTOGRAM_WIDTH_EXT :: GLenum
gl_HISTOGRAM_WIDTH_EXT = 0x8026
gl_HILO_NV :: GLenum
gl_HILO_NV = 0x86F4
gl_LUMINANCE8UI_EXT :: GLenum
gl_LUMINANCE8UI_EXT = 0x8D80
gl_UNSIGNED_SHORT_4_4_4_4_REV :: GLenum
gl_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365
gl_QUERY_RESULT_NO_WAIT :: GLenum
gl_QUERY_RESULT_NO_WAIT = 0x9194
gl_DEBUG_TYPE_PERFORMANCE_ARB :: GLenum
gl_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250
gl_QUERY_OBJECT_AMD :: GLenum
gl_QUERY_OBJECT_AMD = 0x9153
gl_SLIM10U_SGIX :: GLenum
gl_SLIM10U_SGIX = 0x831E
gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC
gl_COMPRESSED_SIGNED_R11_EAC :: GLenum
gl_COMPRESSED_SIGNED_R11_EAC = 0x9271
gl_COMPRESSED_RGBA_ASTC_10x5_KHR :: GLenum
gl_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8
gl_READ_FRAMEBUFFER_EXT :: GLenum
gl_READ_FRAMEBUFFER_EXT = 0x8CA8
gl_SECONDARY_COLOR_ARRAY :: GLenum
gl_SECONDARY_COLOR_ARRAY = 0x845E
gl_INT64_VEC2_NV :: GLenum
gl_INT64_VEC2_NV = 0x8FE9
gl_PREVIOUS_ARB :: GLenum
gl_PREVIOUS_ARB = 0x8578
gl_UNSIGNED_INT_IMAGE_CUBE_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066
gl_TEXTURE25_ARB :: GLenum
gl_TEXTURE25_ARB = 0x84D9
gl_MAX_GEOMETRY_OUTPUT_VERTICES_ARB :: GLenum
gl_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0
gl_HISTOGRAM_SINK_EXT :: GLenum
gl_HISTOGRAM_SINK_EXT = 0x802D
gl_COLOR_ATTACHMENT10_NV :: GLenum
gl_COLOR_ATTACHMENT10_NV = 0x8CEA
gl_COLOR4_BIT_PGI :: GLenum
gl_COLOR4_BIT_PGI = 0x00020000
gl_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS :: GLenum
gl_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9
gl_RENDERBUFFER_GREEN_SIZE_OES :: GLenum
gl_RENDERBUFFER_GREEN_SIZE_OES = 0x8D51
gl_INTERNALFORMAT_SHARED_SIZE :: GLenum
gl_INTERNALFORMAT_SHARED_SIZE = 0x8277
gl_TEXTURE_CUBE_MAP_POSITIVE_Y :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517
gl_PATH_JOIN_STYLE_NV :: GLenum
gl_PATH_JOIN_STYLE_NV = 0x9079
gl_IMAGE_BINDING_ACCESS_EXT :: GLenum
gl_IMAGE_BINDING_ACCESS_EXT = 0x8F3E
gl_ARRAY_SIZE :: GLenum
gl_ARRAY_SIZE = 0x92FB
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0
gl_OBJECT_DISTANCE_TO_LINE_SGIS :: GLenum
gl_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3
gl_SRC2_ALPHA :: GLenum
gl_SRC2_ALPHA = 0x858A
gl_SAMPLER_1D_ARB :: GLenum
gl_SAMPLER_1D_ARB = 0x8B5D
gl_HSL_SATURATION_KHR :: GLenum
gl_HSL_SATURATION_KHR = 0x92AE
gl_COLOR_ATTACHMENT14_EXT :: GLenum
gl_COLOR_ATTACHMENT14_EXT = 0x8CEE
gl_SECONDARY_INTERPOLATOR_ATI :: GLenum
gl_SECONDARY_INTERPOLATOR_ATI = 0x896D
gl_TEXTURE_BINDING_BUFFER_EXT :: GLenum
gl_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C
gl_FONT_X_MIN_BOUNDS_BIT_NV :: GLenum
gl_FONT_X_MIN_BOUNDS_BIT_NV = 0x00010000
gl_CONSTANT :: GLenum
gl_CONSTANT = 0x8576
gl_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG :: GLenum
gl_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = 0x9137
gl_DEBUG_SOURCE_THIRD_PARTY_ARB :: GLenum
gl_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249
gl_CLIP_DISTANCE0_APPLE :: GLenum
gl_CLIP_DISTANCE0_APPLE = 0x3000
gl_RGBA32F :: GLenum
gl_RGBA32F = 0x8814
gl_EVAL_VERTEX_ATTRIB10_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB10_NV = 0x86D0
gl_COMPRESSED_RGBA_ASTC_6x6x5_OES :: GLenum
gl_COMPRESSED_RGBA_ASTC_6x6x5_OES = 0x93C8
gl_CULL_VERTEX_IBM :: GLenum
gl_CULL_VERTEX_IBM = 103050
gl_INTENSITY16F_ARB :: GLenum
gl_INTENSITY16F_ARB = 0x881D
gl_COVERAGE_COMPONENT_NV :: GLenum
gl_COVERAGE_COMPONENT_NV = 0x8ED0
gl_DRAW_BUFFER5_EXT :: GLenum
gl_DRAW_BUFFER5_EXT = 0x882A
gl_SYNC_GPU_COMMANDS_COMPLETE_APPLE :: GLenum
gl_SYNC_GPU_COMMANDS_COMPLETE_APPLE = 0x9117
gl_SUBSAMPLE_DISTANCE_AMD :: GLenum
gl_SUBSAMPLE_DISTANCE_AMD = 0x883F
gl_DRAW_BUFFER13_EXT :: GLenum
gl_DRAW_BUFFER13_EXT = 0x8832
gl_NORMAL_ARRAY_ADDRESS_NV :: GLenum
gl_NORMAL_ARRAY_ADDRESS_NV = 0x8F22
gl_COMPRESSED_RGBA_S3TC_DXT5_ANGLE :: GLenum
gl_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = 0x83F3
gl_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV :: GLenum
gl_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025
gl_STENCIL_BUFFER_BIT4_QCOM :: GLenum
gl_STENCIL_BUFFER_BIT4_QCOM = 0x00100000
gl_HALF_BIT_ATI :: GLenum
gl_HALF_BIT_ATI = 0x00000008
gl_AUX_BUFFERS :: GLenum
gl_AUX_BUFFERS = 0x0C00
gl_VERTEX_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896
gl_CONVOLUTION_FILTER_BIAS :: GLenum
gl_CONVOLUTION_FILTER_BIAS = 0x8015
gl_OUTPUT_TEXTURE_COORD15_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC
gl_MAP1_VERTEX_ATTRIB10_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A
gl_FLOAT_VEC4_ARB :: GLenum
gl_FLOAT_VEC4_ARB = 0x8B52
gl_DRAW_BUFFER11_EXT :: GLenum
gl_DRAW_BUFFER11_EXT = 0x8830
gl_MIN_MAP_BUFFER_ALIGNMENT :: GLenum
gl_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC
gl_BACK_PRIMARY_COLOR_NV :: GLenum
gl_BACK_PRIMARY_COLOR_NV = 0x8C77
gl_VERTEX_SHADER_EXT :: GLenum
gl_VERTEX_SHADER_EXT = 0x8780
gl_BLUE_INTEGER :: GLenum
gl_BLUE_INTEGER = 0x8D96
gl_MAX_PROGRAM_MATRICES_ARB :: GLenum
gl_MAX_PROGRAM_MATRICES_ARB = 0x862F
gl_INT16_VEC2_NV :: GLenum
gl_INT16_VEC2_NV = 0x8FE5
gl_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV :: GLenum
gl_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54
gl_UNIFORM_TYPE :: GLenum
gl_UNIFORM_TYPE = 0x8A37
gl_MALI_SHADER_BINARY_ARM :: GLenum
gl_MALI_SHADER_BINARY_ARM = 0x8F60
gl_DEBUG_SEVERITY_LOW_AMD :: GLenum
gl_DEBUG_SEVERITY_LOW_AMD = 0x9148
gl_BLEND_SRC :: GLenum
gl_BLEND_SRC = 0x0BE1
gl_TEXTURE_SHARED_SIZE :: GLenum
gl_TEXTURE_SHARED_SIZE = 0x8C3F
gl_PROGRAM_TARGET_NV :: GLenum
gl_PROGRAM_TARGET_NV = 0x8646
gl_MAX_VERTEX_HINT_PGI :: GLenum
gl_MAX_VERTEX_HINT_PGI = 0x1A22D
gl_NEAREST :: GLenum
gl_NEAREST = 0x2600
gl_INNOCENT_CONTEXT_RESET_EXT :: GLenum
gl_INNOCENT_CONTEXT_RESET_EXT = 0x8254
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517
gl_OP_MIN_EXT :: GLenum
gl_OP_MIN_EXT = 0x878B
gl_NORMAL_ARRAY_BUFFER_BINDING :: GLenum
gl_NORMAL_ARRAY_BUFFER_BINDING = 0x8897
gl_SOURCE0_ALPHA_ARB :: GLenum
gl_SOURCE0_ALPHA_ARB = 0x8588
gl_GUILTY_CONTEXT_RESET :: GLenum
gl_GUILTY_CONTEXT_RESET = 0x8253
gl_MATRIX_MODE :: GLenum
gl_MATRIX_MODE = 0x0BA0
gl_SYNC_GPU_COMMANDS_COMPLETE :: GLenum
gl_SYNC_GPU_COMMANDS_COMPLETE = 0x9117
gl_SHADER_BINARY_DMP :: GLenum
gl_SHADER_BINARY_DMP = 0x9250
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = 0x92D4
gl_CON_10_ATI :: GLenum
gl_CON_10_ATI = 0x894B
gl_TEXTURE_COMPRESSED_ARB :: GLenum
gl_TEXTURE_COMPRESSED_ARB = 0x86A1
gl_PIXEL_BUFFER_BARRIER_BIT_EXT :: GLenum
gl_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080
gl_VERTEX_ATTRIB_ARRAY4_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY4_NV = 0x8654
gl_FRAGMENT_LIGHT3_SGIX :: GLenum
gl_FRAGMENT_LIGHT3_SGIX = 0x840F
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_OES :: GLenum
gl_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = 0x8516
gl_TEXTURE_BUFFER_SIZE_EXT :: GLenum
gl_TEXTURE_BUFFER_SIZE_EXT = 0x919E
gl_DEPTH_BUFFER_BIT1_QCOM :: GLenum
gl_DEPTH_BUFFER_BIT1_QCOM = 0x00000200
gl_INTENSITY_FLOAT32_ATI :: GLenum
gl_INTENSITY_FLOAT32_ATI = 0x8817
gl_TEXTURE_BINDING_2D_ARRAY :: GLenum
gl_TEXTURE_BINDING_2D_ARRAY = 0x8C1D
gl_TEXTURE_SPARSE_ARB :: GLenum
gl_TEXTURE_SPARSE_ARB = 0x91A6
gl_SAMPLER :: GLenum
gl_SAMPLER = 0x82E6
gl_DRAW_BUFFER6_EXT :: GLenum
gl_DRAW_BUFFER6_EXT = 0x882B
gl_READ_PIXELS_FORMAT :: GLenum
gl_READ_PIXELS_FORMAT = 0x828D
gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E80
gl_R3_G3_B2 :: GLenum
gl_R3_G3_B2 = 0x2A10
gl_ALPHA4_EXT :: GLenum
gl_ALPHA4_EXT = 0x803B
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = 0x93E5
gl_CLIP_DISTANCE1 :: GLenum
gl_CLIP_DISTANCE1 = 0x3001
gl_PATH_FORMAT_SVG_NV :: GLenum
gl_PATH_FORMAT_SVG_NV = 0x9070
gl_SMAPHS30_PROGRAM_BINARY_DMP :: GLenum
gl_SMAPHS30_PROGRAM_BINARY_DMP = 0x9251
gl_PROGRAM_PARAMETER_NV :: GLenum
gl_PROGRAM_PARAMETER_NV = 0x8644
gl_RELATIVE_ROUNDED_RECT4_NV :: GLenum
gl_RELATIVE_ROUNDED_RECT4_NV = 0xED
gl_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB :: GLenum
gl_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB
gl_BLUE_BITS :: GLenum
gl_BLUE_BITS = 0x0D54
gl_C3F_V3F :: GLenum
gl_C3F_V3F = 0x2A24
gl_UNSIGNED_INT_8_8_8_8_REV_EXT :: GLenum
gl_UNSIGNED_INT_8_8_8_8_REV_EXT = 0x8367
gl_INT_SAMPLER_2D_EXT :: GLenum
gl_INT_SAMPLER_2D_EXT = 0x8DCA
gl_SAMPLER_3D_ARB :: GLenum
gl_SAMPLER_3D_ARB = 0x8B5F
gl_VERTEX_DATA_HINT_PGI :: GLenum
gl_VERTEX_DATA_HINT_PGI = 0x1A22A
gl_BUFFER_UPDATE_BARRIER_BIT :: GLenum
gl_BUFFER_UPDATE_BARRIER_BIT = 0x00000200
gl_DST_COLOR :: GLenum
gl_DST_COLOR = 0x0306
gl_RED_MIN_CLAMP_INGR :: GLenum
gl_RED_MIN_CLAMP_INGR = 0x8560
gl_INTENSITY8I_EXT :: GLenum
gl_INTENSITY8I_EXT = 0x8D91
gl_TEXTURE_NUM_LEVELS_QCOM :: GLenum
gl_TEXTURE_NUM_LEVELS_QCOM = 0x8BD9
gl_CULL_VERTEX_OBJECT_POSITION_EXT :: GLenum
gl_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC
gl_FLOAT_RGBA32_NV :: GLenum
gl_FLOAT_RGBA32_NV = 0x888B
gl_SAMPLE_COVERAGE :: GLenum
gl_SAMPLE_COVERAGE = 0x80A0
gl_POST_COLOR_MATRIX_GREEN_BIAS_SGI :: GLenum
gl_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9
gl_PRIMITIVES_GENERATED_NV :: GLenum
gl_PRIMITIVES_GENERATED_NV = 0x8C87
gl_MAP_UNSYNCHRONIZED_BIT_EXT :: GLenum
gl_MAP_UNSYNCHRONIZED_BIT_EXT = 0x0020
gl_WEIGHT_ARRAY_OES :: GLenum
gl_WEIGHT_ARRAY_OES = 0x86AD
gl_CURRENT_RASTER_COLOR :: GLenum
gl_CURRENT_RASTER_COLOR = 0x0B04
gl_FRAGMENT_LIGHT2_SGIX :: GLenum
gl_FRAGMENT_LIGHT2_SGIX = 0x840E
gl_LIGHT_MODEL_SPECULAR_VECTOR_APPLE :: GLenum
gl_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0
gl_INT_IMAGE_2D :: GLenum
gl_INT_IMAGE_2D = 0x9058
gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD
gl_POINT_SPRITE_NV :: GLenum
gl_POINT_SPRITE_NV = 0x8861
gl_CONVOLUTION_HEIGHT :: GLenum
gl_CONVOLUTION_HEIGHT = 0x8019
gl_TESS_GEN_POINT_MODE :: GLenum
gl_TESS_GEN_POINT_MODE = 0x8E79
gl_RENDER_MODE :: GLenum
gl_RENDER_MODE = 0x0C40
gl_DOT3_RGBA_EXT :: GLenum
gl_DOT3_RGBA_EXT = 0x8741
gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: GLenum
gl_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061
gl_TEXTURE_MAX_CLAMP_T_SGIX :: GLenum
gl_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A
gl_CURRENT_FOG_COORD :: GLenum
gl_CURRENT_FOG_COORD = 0x8453
gl_ELEMENT_ARRAY_BUFFER_ARB :: GLenum
gl_ELEMENT_ARRAY_BUFFER_ARB = 0x8893
gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST :: GLenum
gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD
gl_COLOR_MATERIAL :: GLenum
gl_COLOR_MATERIAL = 0x0B57
gl_MOVE_TO_CONTINUES_NV :: GLenum
gl_MOVE_TO_CONTINUES_NV = 0x90B6
gl_ACCUM :: GLenum
gl_ACCUM = 0x0100
gl_PROGRAM_POINT_SIZE :: GLenum
gl_PROGRAM_POINT_SIZE = 0x8642
gl_V2F :: GLenum
gl_V2F = 0x2A20
gl_TEXTURE_COMPARE_SGIX :: GLenum
gl_TEXTURE_COMPARE_SGIX = 0x819A
gl_TEXTURE_ALPHA_TYPE_ARB :: GLenum
gl_TEXTURE_ALPHA_TYPE_ARB = 0x8C13
gl_SAMPLE_ALPHA_TO_MASK_EXT :: GLenum
gl_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E
gl_FLOAT_RGBA16_NV :: GLenum
gl_FLOAT_RGBA16_NV = 0x888A
gl_DOUBLE_MAT2_EXT :: GLenum
gl_DOUBLE_MAT2_EXT = 0x8F46
gl_MAP_COHERENT_BIT :: GLenum
gl_MAP_COHERENT_BIT = 0x0080
gl_CON_17_ATI :: GLenum
gl_CON_17_ATI = 0x8952
gl_CLIENT_ACTIVE_TEXTURE_ARB :: GLenum
gl_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1
gl_SYNC_X11_FENCE_EXT :: GLenum
gl_SYNC_X11_FENCE_EXT = 0x90E1
gl_VERTEX_SHADER_OPTIMIZED_EXT :: GLenum
gl_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4
gl_MODELVIEW22_ARB :: GLenum
gl_MODELVIEW22_ARB = 0x8736
gl_TEXTURE21 :: GLenum
gl_TEXTURE21 = 0x84D5
gl_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES :: GLenum
gl_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898F
gl_R1UI_T2F_C4F_N3F_V3F_SUN :: GLenum
gl_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB
gl_SLUMINANCE_ALPHA_EXT :: GLenum
gl_SLUMINANCE_ALPHA_EXT = 0x8C44
gl_EXPAND_NEGATE_NV :: GLenum
gl_EXPAND_NEGATE_NV = 0x8539
gl_OCCLUSION_TEST_HP :: GLenum
gl_OCCLUSION_TEST_HP = 0x8165
gl_PATH_FOG_GEN_MODE_NV :: GLenum
gl_PATH_FOG_GEN_MODE_NV = 0x90AC
gl_VERTEX23_BIT_PGI :: GLenum
gl_VERTEX23_BIT_PGI = 0x00000004
gl_RGB8_SNORM :: GLenum
gl_RGB8_SNORM = 0x8F96
gl_DUAL_ALPHA8_SGIS :: GLenum
gl_DUAL_ALPHA8_SGIS = 0x8111
gl_PERFMON_GLOBAL_MODE_QCOM :: GLenum
gl_PERFMON_GLOBAL_MODE_QCOM = 0x8FA0
gl_MAP1_VERTEX_ATTRIB4_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664
gl_TEXTURE31_ARB :: GLenum
gl_TEXTURE31_ARB = 0x84DF
gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT :: GLenum
gl_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = 0x8E83
gl_XOR_NV :: GLenum
gl_XOR_NV = 0x1506
gl_EMBOSS_MAP_NV :: GLenum
gl_EMBOSS_MAP_NV = 0x855F
gl_MAX_NUM_ACTIVE_VARIABLES :: GLenum
gl_MAX_NUM_ACTIVE_VARIABLES = 0x92F7
gl_INT_IMAGE_CUBE_MAP_ARRAY :: GLenum
gl_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F
gl_OR_REVERSE :: GLenum
gl_OR_REVERSE = 0x150B
gl_DEBUG_LOGGED_MESSAGES_AMD :: GLenum
gl_DEBUG_LOGGED_MESSAGES_AMD = 0x9145
gl_EVAL_VERTEX_ATTRIB8_NV :: GLenum
gl_EVAL_VERTEX_ATTRIB8_NV = 0x86CE
gl_IMAGE_CLASS_1_X_32 :: GLenum
gl_IMAGE_CLASS_1_X_32 = 0x82BB
gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: GLenum
gl_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC
gl_TEXTURE_3D_BINDING_OES :: GLenum
gl_TEXTURE_3D_BINDING_OES = 0x806A
gl_LUMINANCE16F_ARB :: GLenum
gl_LUMINANCE16F_ARB = 0x881E
gl_FIRST_VERTEX_CONVENTION :: GLenum
gl_FIRST_VERTEX_CONVENTION = 0x8E4D
gl_4PASS_1_SGIS :: GLenum
gl_4PASS_1_SGIS = 0x80A5
gl_SAMPLER_KHR :: GLenum
gl_SAMPLER_KHR = 0x82E6
gl_MAP_INVALIDATE_RANGE_BIT_EXT :: GLenum
gl_MAP_INVALIDATE_RANGE_BIT_EXT = 0x0004
gl_INTERPOLATE_ARB :: GLenum
gl_INTERPOLATE_ARB = 0x8575
gl_STENCIL_BACK_FUNC_ATI :: GLenum
gl_STENCIL_BACK_FUNC_ATI = 0x8800
gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE :: GLenum
gl_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF
gl_CONFORMANT_NV :: GLenum
gl_CONFORMANT_NV = 0x9374
gl_COLOR_ATTACHMENT11_EXT :: GLenum
gl_COLOR_ATTACHMENT11_EXT = 0x8CEB
gl_VARIANT_DATATYPE_EXT :: GLenum
gl_VARIANT_DATATYPE_EXT = 0x87E5
gl_ANY_SAMPLES_PASSED_EXT :: GLenum
gl_ANY_SAMPLES_PASSED_EXT = 0x8C2F
gl_PATH_TERMINAL_DASH_CAP_NV :: GLenum
gl_PATH_TERMINAL_DASH_CAP_NV = 0x907D
gl_MODELVIEW_MATRIX :: GLenum
gl_MODELVIEW_MATRIX = 0x0BA6
gl_VERTEX_SUBROUTINE_UNIFORM :: GLenum
gl_VERTEX_SUBROUTINE_UNIFORM = 0x92EE
gl_IMPLEMENTATION_COLOR_READ_TYPE_OES :: GLenum
gl_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A
gl_FOG_END :: GLenum
gl_FOG_END = 0x0B64
gl_MAX_3D_TEXTURE_SIZE_OES :: GLenum
gl_MAX_3D_TEXTURE_SIZE_OES = 0x8073
gl_PIXEL_UNPACK_BUFFER_BINDING :: GLenum
gl_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF
gl_MAX_RENDERBUFFER_SIZE :: GLenum
gl_MAX_RENDERBUFFER_SIZE = 0x84E8
gl_RELATIVE_ROUNDED_RECT_NV :: GLenum
gl_RELATIVE_ROUNDED_RECT_NV = 0xE9
gl_MAX_SPARSE_3D_TEXTURE_SIZE_ARB :: GLenum
gl_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199
gl_TEXTURE_VIEW_NUM_LEVELS_EXT :: GLenum
gl_TEXTURE_VIEW_NUM_LEVELS_EXT = 0x82DC
gl_PIXEL_MAP_A_TO_A_SIZE :: GLenum
gl_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9
gl_VERTEX_ATTRIB_MAP1_COEFF_APPLE :: GLenum
gl_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6
gl_TRANSLATE_Y_NV :: GLenum
gl_TRANSLATE_Y_NV = 0x908F
gl_ALPHA4 :: GLenum
gl_ALPHA4 = 0x803B
gl_MAX_GEOMETRY_OUTPUT_VERTICES_EXT :: GLenum
gl_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0
gl_OPERAND1_ALPHA_ARB :: GLenum
gl_OPERAND1_ALPHA_ARB = 0x8599
gl_OUTPUT_TEXTURE_COORD4_EXT :: GLenum
gl_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1
gl_C4UB_V2F :: GLenum
gl_C4UB_V2F = 0x2A22
gl_LIST_MODE :: GLenum
gl_LIST_MODE = 0x0B30
gl_TESS_EVALUATION_SHADER_INVOCATIONS_ARB :: GLenum
gl_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2
gl_NOTEQUAL :: GLenum
gl_NOTEQUAL = 0x0205
gl_LINES_ADJACENCY_EXT :: GLenum
gl_LINES_ADJACENCY_EXT = 0x000A
gl_TEXTURE24 :: GLenum
gl_TEXTURE24 = 0x84D8
gl_SAMPLE_BUFFERS_ARB :: GLenum
gl_SAMPLE_BUFFERS_ARB = 0x80A8
gl_COLOR_TABLE_RED_SIZE_SGI :: GLenum
gl_COLOR_TABLE_RED_SIZE_SGI = 0x80DA
gl_TEXTURE28_ARB :: GLenum
gl_TEXTURE28_ARB = 0x84DC
gl_MAX_PROGRAM_TEXEL_OFFSET_EXT :: GLenum
gl_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905
gl_STENCIL_PASS_DEPTH_PASS :: GLenum
gl_STENCIL_PASS_DEPTH_PASS = 0x0B96
gl_BUFFER_MAP_OFFSET :: GLenum
gl_BUFFER_MAP_OFFSET = 0x9121
gl_TEXTURE_CUBE_MAP_POSITIVE_X_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515
gl_MAX_GEOMETRY_UNIFORM_BLOCKS :: GLenum
gl_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C
gl_MATRIX17_ARB :: GLenum
gl_MATRIX17_ARB = 0x88D1
gl_INTERNALFORMAT_DEPTH_TYPE :: GLenum
gl_INTERNALFORMAT_DEPTH_TYPE = 0x827C
gl_SAMPLER_CUBE_MAP_ARRAY :: GLenum
gl_SAMPLER_CUBE_MAP_ARRAY = 0x900C
gl_RED_NV :: GLenum
gl_RED_NV = 0x1903
gl_RGB5_A1_OES :: GLenum
gl_RGB5_A1_OES = 0x8057
gl_EDGE_FLAG_ARRAY_EXT :: GLenum
gl_EDGE_FLAG_ARRAY_EXT = 0x8079
gl_DRAW_FRAMEBUFFER_BINDING_NV :: GLenum
gl_DRAW_FRAMEBUFFER_BINDING_NV = 0x8CA6
gl_SLUMINANCE_ALPHA_NV :: GLenum
gl_SLUMINANCE_ALPHA_NV = 0x8C44
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE
gl_COLOR_BUFFER_BIT3_QCOM :: GLenum
gl_COLOR_BUFFER_BIT3_QCOM = 0x00000008
gl_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT :: GLenum
gl_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = 0x8A2C
gl_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7
gl_VIDEO_COLOR_CONVERSION_OFFSET_NV :: GLenum
gl_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C
gl_SLUMINANCE :: GLenum
gl_SLUMINANCE = 0x8C46
gl_TEXTURE_2D_ARRAY_EXT :: GLenum
gl_TEXTURE_2D_ARRAY_EXT = 0x8C1A
gl_INT_SAMPLER_2D_RECT :: GLenum
gl_INT_SAMPLER_2D_RECT = 0x8DCD
gl_DEBUG_SOURCE_APPLICATION_KHR :: GLenum
gl_DEBUG_SOURCE_APPLICATION_KHR = 0x824A
gl_MAX_RATIONAL_EVAL_ORDER_NV :: GLenum
gl_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7
gl_GEOMETRY_SUBROUTINE :: GLenum
gl_GEOMETRY_SUBROUTINE = 0x92EB
gl_LOAD :: GLenum
gl_LOAD = 0x0101
gl_DOT_PRODUCT_NV :: GLenum
gl_DOT_PRODUCT_NV = 0x86EC
gl_DEPTH24_STENCIL8_OES :: GLenum
gl_DEPTH24_STENCIL8_OES = 0x88F0
gl_MAX_VERTEX_UNITS_OES :: GLenum
gl_MAX_VERTEX_UNITS_OES = 0x86A4
gl_ATOMIC_COUNTER_BUFFER_INDEX :: GLenum
gl_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301
gl_MAX_PATCH_VERTICES_EXT :: GLenum
gl_MAX_PATCH_VERTICES_EXT = 0x8E7D
gl_MINOR_VERSION :: GLenum
gl_MINOR_VERSION = 0x821C
gl_FOG_OFFSET_VALUE_SGIX :: GLenum
gl_FOG_OFFSET_VALUE_SGIX = 0x8199
gl_UNPACK_COMPRESSED_BLOCK_WIDTH :: GLenum
gl_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127
gl_VERTEX_ATTRIB_ARRAY_UNIFIED_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E
gl_ALPHA32UI_EXT :: GLenum
gl_ALPHA32UI_EXT = 0x8D72
gl_EVAL_TRIANGULAR_2D_NV :: GLenum
gl_EVAL_TRIANGULAR_2D_NV = 0x86C1
gl_FOG_COORD_ARRAY_STRIDE :: GLenum
gl_FOG_COORD_ARRAY_STRIDE = 0x8455
gl_TRANSFORM_FEEDBACK :: GLenum
gl_TRANSFORM_FEEDBACK = 0x8E22
gl_RGBA4_S3TC :: GLenum
gl_RGBA4_S3TC = 0x83A3
gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS :: GLenum
gl_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD
gl_TOP_LEVEL_ARRAY_STRIDE :: GLenum
gl_TOP_LEVEL_ARRAY_STRIDE = 0x930D
gl_CON_1_ATI :: GLenum
gl_CON_1_ATI = 0x8942
gl_FLOAT_MAT4_ARB :: GLenum
gl_FLOAT_MAT4_ARB = 0x8B5C
gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210
gl_ALPHA :: GLenum
gl_ALPHA = 0x1906
gl_VERTEX_SHADER_INVOCATIONS_ARB :: GLenum
gl_VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0
gl_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT :: GLenum
gl_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB
gl_IMAGE_SCALE_Y_HP :: GLenum
gl_IMAGE_SCALE_Y_HP = 0x8156
gl_MAX_PROGRAM_CALL_DEPTH_NV :: GLenum
gl_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5
gl_LINEARBURN_NV :: GLenum
gl_LINEARBURN_NV = 0x92A5
gl_STENCIL_BACK_FUNC :: GLenum
gl_STENCIL_BACK_FUNC = 0x8800
gl_COLOR_BUFFER_BIT5_QCOM :: GLenum
gl_COLOR_BUFFER_BIT5_QCOM = 0x00000020
gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS :: GLenum
gl_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264
gl_SAMPLE_ALPHA_TO_ONE_SGIS :: GLenum
gl_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F
gl_TRANSLATE_X_NV :: GLenum
gl_TRANSLATE_X_NV = 0x908E
gl_SYNC_FLUSH_COMMANDS_BIT :: GLenum
gl_SYNC_FLUSH_COMMANDS_BIT = 0x00000001
gl_DUAL_ALPHA16_SGIS :: GLenum
gl_DUAL_ALPHA16_SGIS = 0x8113
gl_TANGENT_ARRAY_TYPE_EXT :: GLenum
gl_TANGENT_ARRAY_TYPE_EXT = 0x843E
gl_CLIENT_ALL_ATTRIB_BITS :: GLenum
gl_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF
gl_DRAW_BUFFER15_NV :: GLenum
gl_DRAW_BUFFER15_NV = 0x8834
gl_MAX_GEOMETRY_SHADER_INVOCATIONS :: GLenum
gl_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A
gl_FONT_UNDERLINE_THICKNESS_BIT_NV :: GLenum
gl_FONT_UNDERLINE_THICKNESS_BIT_NV = 0x08000000
gl_UNSIGNED_INT_10_10_10_2 :: GLenum
gl_UNSIGNED_INT_10_10_10_2 = 0x8036
gl_UNPACK_SKIP_IMAGES :: GLenum
gl_UNPACK_SKIP_IMAGES = 0x806D
gl_TEXTURE_GREEN_SIZE_EXT :: GLenum
gl_TEXTURE_GREEN_SIZE_EXT = 0x805D
gl_UNSIGNED_INT_SAMPLER_2D :: GLenum
gl_UNSIGNED_INT_SAMPLER_2D = 0x8DD2
gl_SOURCE2_ALPHA :: GLenum
gl_SOURCE2_ALPHA = 0x858A
gl_LIGHT5 :: GLenum
gl_LIGHT5 = 0x4005
gl_DRAW_BUFFER10_NV :: GLenum
gl_DRAW_BUFFER10_NV = 0x882F
gl_SAMPLER_2D_RECT :: GLenum
gl_SAMPLER_2D_RECT = 0x8B63
gl_SECONDARY_COLOR_ARRAY_POINTER :: GLenum
gl_SECONDARY_COLOR_ARRAY_POINTER = 0x845D
gl_PROGRAM_POINT_SIZE_EXT :: GLenum
gl_PROGRAM_POINT_SIZE_EXT = 0x8642
gl_TEXTURE_MAG_FILTER :: GLenum
gl_TEXTURE_MAG_FILTER = 0x2800
gl_POST_CONVOLUTION_BLUE_SCALE :: GLenum
gl_POST_CONVOLUTION_BLUE_SCALE = 0x801E
gl_VIRTUAL_PAGE_SIZE_X_AMD :: GLenum
gl_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195
gl_RG16_SNORM :: GLenum
gl_RG16_SNORM = 0x8F99
gl_FRAGMENT_LIGHT6_SGIX :: GLenum
gl_FRAGMENT_LIGHT6_SGIX = 0x8412
gl_RESAMPLE_REPLICATE_SGIX :: GLenum
gl_RESAMPLE_REPLICATE_SGIX = 0x842E
gl_EDGE_FLAG_ARRAY_ADDRESS_NV :: GLenum
gl_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26
gl_TEXTURE13_ARB :: GLenum
gl_TEXTURE13_ARB = 0x84CD
gl_FOG_COORDINATE_SOURCE :: GLenum
gl_FOG_COORDINATE_SOURCE = 0x8450
gl_DRAW_BUFFER1_ATI :: GLenum
gl_DRAW_BUFFER1_ATI = 0x8826
gl_SAMPLER_2D_SHADOW :: GLenum
gl_SAMPLER_2D_SHADOW = 0x8B62
gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG :: GLenum
gl_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = 0x93F0
gl_AMBIENT_AND_DIFFUSE :: GLenum
gl_AMBIENT_AND_DIFFUSE = 0x1602
gl_VBO_FREE_MEMORY_ATI :: GLenum
gl_VBO_FREE_MEMORY_ATI = 0x87FB
gl_COLORDODGE_NV :: GLenum
gl_COLORDODGE_NV = 0x9299
gl_DRAW_BUFFER12_ATI :: GLenum
gl_DRAW_BUFFER12_ATI = 0x8831
gl_UNPACK_IMAGE_DEPTH_SGIS :: GLenum
gl_UNPACK_IMAGE_DEPTH_SGIS = 0x8133
gl_SRC1_COLOR :: GLenum
gl_SRC1_COLOR = 0x88F9
gl_DEPTH_COMPONENT16_ARB :: GLenum
gl_DEPTH_COMPONENT16_ARB = 0x81A5
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 0x8CD1
gl_RASTER_POSITION_UNCLIPPED_IBM :: GLenum
gl_RASTER_POSITION_UNCLIPPED_IBM = 0x19262
gl_MIRRORED_REPEAT_ARB :: GLenum
gl_MIRRORED_REPEAT_ARB = 0x8370
gl_AUX2 :: GLenum
gl_AUX2 = 0x040B
gl_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB :: GLenum
gl_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2
gl_EDGE_FLAG_ARRAY_POINTER_EXT :: GLenum
gl_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093
gl_TEXTURE_COMPARE_MODE_EXT :: GLenum
gl_TEXTURE_COMPARE_MODE_EXT = 0x884C
gl_TEXTURE27_ARB :: GLenum
gl_TEXTURE27_ARB = 0x84DB
gl_PROGRAM_KHR :: GLenum
gl_PROGRAM_KHR = 0x82E2
gl_RENDERBUFFER_GREEN_SIZE :: GLenum
gl_RENDERBUFFER_GREEN_SIZE = 0x8D51
gl_MAX_VERTEX_STREAMS :: GLenum
gl_MAX_VERTEX_STREAMS = 0x8E71
gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1
gl_UNSIGNED_INT64_ARB :: GLenum
gl_UNSIGNED_INT64_ARB = 0x140F
gl_VIRTUAL_PAGE_SIZE_Y_AMD :: GLenum
gl_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196
gl_RELATIVE_SMALL_CW_ARC_TO_NV :: GLenum
gl_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15
gl_MAX_TEXTURE_COORDS_ARB :: GLenum
gl_MAX_TEXTURE_COORDS_ARB = 0x8871
gl_COVERAGE_ATTACHMENT_NV :: GLenum
gl_COVERAGE_ATTACHMENT_NV = 0x8ED2
gl_LOWER_LEFT :: GLenum
gl_LOWER_LEFT = 0x8CA1
gl_VIEW_CLASS_S3TC_DXT3_RGBA :: GLenum
gl_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE
gl_INTERNALFORMAT_GREEN_TYPE :: GLenum
gl_INTERNALFORMAT_GREEN_TYPE = 0x8279
gl_BLEND_DST_RGB_EXT :: GLenum
gl_BLEND_DST_RGB_EXT = 0x80C8
gl_FRAGMENT_PROGRAM_BINDING_NV :: GLenum
gl_FRAGMENT_PROGRAM_BINDING_NV = 0x8873
gl_TEXTURE_SWIZZLE_B_EXT :: GLenum
gl_TEXTURE_SWIZZLE_B_EXT = 0x8E44
gl_INTENSITY16_EXT :: GLenum
gl_INTENSITY16_EXT = 0x804D
gl_TEXTURE_BINDING_CUBE_MAP_OES :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_OES = 0x8514
gl_COLOR_ARRAY_SIZE_EXT :: GLenum
gl_COLOR_ARRAY_SIZE_EXT = 0x8081
gl_TEXTURE_COVERAGE_SAMPLES_NV :: GLenum
gl_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045
gl_QUERY_BUFFER :: GLenum
gl_QUERY_BUFFER = 0x9192
gl_MATRIX4_ARB :: GLenum
gl_MATRIX4_ARB = 0x88C4
gl_MAP1_VERTEX_ATTRIB11_4_NV :: GLenum
gl_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B
gl_DOT3_RGB_ARB :: GLenum
gl_DOT3_RGB_ARB = 0x86AE
gl_DOT_PRODUCT_TEXTURE_3D_NV :: GLenum
gl_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF
gl_ATTENUATION_EXT :: GLenum
gl_ATTENUATION_EXT = 0x834D
gl_UNIFORM_BUFFER_LENGTH_NV :: GLenum
gl_UNIFORM_BUFFER_LENGTH_NV = 0x9370
gl_PATH_STROKE_MASK_NV :: GLenum
gl_PATH_STROKE_MASK_NV = 0x9084
gl_LUMINANCE12_EXT :: GLenum
gl_LUMINANCE12_EXT = 0x8041
gl_RELATIVE_HORIZONTAL_LINE_TO_NV :: GLenum
gl_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07
gl_POST_CONVOLUTION_GREEN_SCALE_EXT :: GLenum
gl_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D
gl_GLYPH_VERTICAL_BEARING_X_BIT_NV :: GLenum
gl_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20
gl_FOG_COORD_ARRAY_TYPE :: GLenum
gl_FOG_COORD_ARRAY_TYPE = 0x8454
gl_VIDEO_BUFFER_INTERNAL_FORMAT_NV :: GLenum
gl_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D
gl_QUERY_WAIT_NV :: GLenum
gl_QUERY_WAIT_NV = 0x8E13
gl_CURRENT_FOG_COORDINATE :: GLenum
gl_CURRENT_FOG_COORDINATE = 0x8453
gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS :: GLenum
gl_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E
gl_LAST_VERTEX_CONVENTION_EXT :: GLenum
gl_LAST_VERTEX_CONVENTION_EXT = 0x8E4E
gl_SELECTION_BUFFER_POINTER :: GLenum
gl_SELECTION_BUFFER_POINTER = 0x0DF3
gl_FLOAT :: GLenum
gl_FLOAT = 0x1406
gl_TEXTURE_STENCIL_SIZE :: GLenum
gl_TEXTURE_STENCIL_SIZE = 0x88F1
gl_FRAGMENT_SHADER_DERIVATIVE_HINT :: GLenum
gl_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
gl_FEEDBACK_BUFFER_SIZE :: GLenum
gl_FEEDBACK_BUFFER_SIZE = 0x0DF1
gl_DEPTH_COMPONENT32F :: GLenum
gl_DEPTH_COMPONENT32F = 0x8CAC
gl_MAX_PROGRAM_ATTRIB_COMPONENTS_NV :: GLenum
gl_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908
gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6
gl_DEBUG_OUTPUT_SYNCHRONOUS_KHR :: GLenum
gl_DEBUG_OUTPUT_SYNCHRONOUS_KHR = 0x8242
gl_MAX_ASYNC_TEX_IMAGE_SGIX :: GLenum
gl_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F
gl_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB
gl_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB :: GLenum
gl_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49
gl_POINT_SIZE_MIN :: GLenum
gl_POINT_SIZE_MIN = 0x8126
gl_UNSIGNED_INT8_VEC2_NV :: GLenum
gl_UNSIGNED_INT8_VEC2_NV = 0x8FED
gl_COLOR_ATTACHMENT0_NV :: GLenum
gl_COLOR_ATTACHMENT0_NV = 0x8CE0
gl_PROGRAM_FORMAT_ARB :: GLenum
gl_PROGRAM_FORMAT_ARB = 0x8876
gl_QUAD_INTENSITY4_SGIS :: GLenum
gl_QUAD_INTENSITY4_SGIS = 0x8122
gl_UNSIGNED_INT_24_8_OES :: GLenum
gl_UNSIGNED_INT_24_8_OES = 0x84FA
gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A
gl_LUMINANCE8I_EXT :: GLenum
gl_LUMINANCE8I_EXT = 0x8D92
gl_EYE_LINE_SGIS :: GLenum
gl_EYE_LINE_SGIS = 0x81F6
gl_MULTISAMPLE_3DFX :: GLenum
gl_MULTISAMPLE_3DFX = 0x86B2
gl_RGBA_FLOAT16_ATI :: GLenum
gl_RGBA_FLOAT16_ATI = 0x881A
gl_COMPRESSED_RGBA_S3TC_DXT5_EXT :: GLenum
gl_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3
gl_RGB5_A1_EXT :: GLenum
gl_RGB5_A1_EXT = 0x8057
gl_MIPMAP :: GLenum
gl_MIPMAP = 0x8293
gl_COMBINER_BIAS_NV :: GLenum
gl_COMBINER_BIAS_NV = 0x8549
gl_SAMPLE_COVERAGE_VALUE :: GLenum
gl_SAMPLE_COVERAGE_VALUE = 0x80AA
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2
gl_LUMINANCE16 :: GLenum
gl_LUMINANCE16 = 0x8042
gl_REG_11_ATI :: GLenum
gl_REG_11_ATI = 0x892C
gl_UNSIGNED_INT_IMAGE_2D :: GLenum
gl_UNSIGNED_INT_IMAGE_2D = 0x9063
gl_LINEAR_SHARPEN_COLOR_SGIS :: GLenum
gl_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB
gl_INTENSITY4 :: GLenum
gl_INTENSITY4 = 0x804A
gl_LINE_STRIP_ADJACENCY_ARB :: GLenum
gl_LINE_STRIP_ADJACENCY_ARB = 0x000B
gl_PIXEL_CUBIC_WEIGHT_EXT :: GLenum
gl_PIXEL_CUBIC_WEIGHT_EXT = 0x8333
gl_TEXTURE_COORD_ARRAY :: GLenum
gl_TEXTURE_COORD_ARRAY = 0x8078
gl_STENCIL_BACK_PASS_DEPTH_FAIL_ATI :: GLenum
gl_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802
gl_TEXTURE30 :: GLenum
gl_TEXTURE30 = 0x84DE
gl_CLAMP_TO_EDGE_SGIS :: GLenum
gl_CLAMP_TO_EDGE_SGIS = 0x812F
gl_READ_FRAMEBUFFER_BINDING_ANGLE :: GLenum
gl_READ_FRAMEBUFFER_BINDING_ANGLE = 0x8CAA
gl_RENDERBUFFER_BINDING :: GLenum
gl_RENDERBUFFER_BINDING = 0x8CA7
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB :: GLenum
gl_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243
gl_NO_RESET_NOTIFICATION :: GLenum
gl_NO_RESET_NOTIFICATION = 0x8261
gl_PATH_STROKE_WIDTH_NV :: GLenum
gl_PATH_STROKE_WIDTH_NV = 0x9075
gl_DEPTH_COMPONENT32_SGIX :: GLenum
gl_DEPTH_COMPONENT32_SGIX = 0x81A7
gl_OP_MULTIPLY_MATRIX_EXT :: GLenum
gl_OP_MULTIPLY_MATRIX_EXT = 0x8798
gl_R1UI_N3F_V3F_SUN :: GLenum
gl_R1UI_N3F_V3F_SUN = 0x85C7
gl_MATRIX_INDEX_ARRAY_STRIDE_OES :: GLenum
gl_MATRIX_INDEX_ARRAY_STRIDE_OES = 0x8848
gl_LUMINANCE_FLOAT16_APPLE :: GLenum
gl_LUMINANCE_FLOAT16_APPLE = 0x881E
gl_HISTOGRAM_BLUE_SIZE_EXT :: GLenum
gl_HISTOGRAM_BLUE_SIZE_EXT = 0x802A
gl_VERTEX_ATTRIB_ARRAY_SIZE_ARB :: GLenum
gl_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623
gl_SGX_PROGRAM_BINARY_IMG :: GLenum
gl_SGX_PROGRAM_BINARY_IMG = 0x9130
gl_DRAW_BUFFER11_ARB :: GLenum
gl_DRAW_BUFFER11_ARB = 0x8830
gl_FOG_COORDINATE_ARRAY_STRIDE_EXT :: GLenum
gl_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455
gl_REFERENCED_BY_COMPUTE_SHADER :: GLenum
gl_REFERENCED_BY_COMPUTE_SHADER = 0x930B
gl_COLOR_CLEAR_VALUE :: GLenum
gl_COLOR_CLEAR_VALUE = 0x0C22
gl_UNSIGNED_SHORT_5_5_5_1 :: GLenum
gl_UNSIGNED_SHORT_5_5_5_1 = 0x8034
gl_CLIP_DISTANCE7 :: GLenum
gl_CLIP_DISTANCE7 = 0x3007
gl_ATOMIC_COUNTER_BARRIER_BIT_EXT :: GLenum
gl_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000
gl_INTERLEAVED_ATTRIBS :: GLenum
gl_INTERLEAVED_ATTRIBS = 0x8C8C
gl_BUFFER :: GLenum
gl_BUFFER = 0x82E0
gl_EMBOSS_LIGHT_NV :: GLenum
gl_EMBOSS_LIGHT_NV = 0x855D
gl_SAMPLER_2D_RECT_SHADOW_ARB :: GLenum
gl_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64
gl_DOUBLE :: GLenum
gl_DOUBLE = 0x140A
gl_IMAGE_BINDING_LEVEL_EXT :: GLenum
gl_IMAGE_BINDING_LEVEL_EXT = 0x8F3B
gl_SAMPLE_ALPHA_TO_ONE_ARB :: GLenum
gl_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F
gl_TEXTURE_SWIZZLE_RGBA_EXT :: GLenum
gl_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46
gl_MAGNITUDE_BIAS_NV :: GLenum
gl_MAGNITUDE_BIAS_NV = 0x8718
gl_RENDERBUFFER_ALPHA_SIZE :: GLenum
gl_RENDERBUFFER_ALPHA_SIZE = 0x8D53
gl_COLOR_SAMPLES_NV :: GLenum
gl_COLOR_SAMPLES_NV = 0x8E20
gl_TEXTURE_RECTANGLE :: GLenum
gl_TEXTURE_RECTANGLE = 0x84F5
gl_RGB16F :: GLenum
gl_RGB16F = 0x881B
gl_PROXY_COLOR_TABLE :: GLenum
gl_PROXY_COLOR_TABLE = 0x80D3
gl_PROXY_TEXTURE_3D :: GLenum
gl_PROXY_TEXTURE_3D = 0x8070
gl_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX :: GLenum
gl_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311
gl_VERTEX_SHADER_BIT :: GLenum
gl_VERTEX_SHADER_BIT = 0x00000001
gl_MAX_COMPUTE_WORK_GROUP_COUNT :: GLenum
gl_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE
gl_RG_INTEGER :: GLenum
gl_RG_INTEGER = 0x8228
gl_TRANSFORM_FEEDBACK_PAUSED :: GLenum
gl_TRANSFORM_FEEDBACK_PAUSED = 0x8E23
gl_RENDER :: GLenum
gl_RENDER = 0x1C00
gl_MATRIX16_ARB :: GLenum
gl_MATRIX16_ARB = 0x88D0
gl_SWIZZLE_STQ_ATI :: GLenum
gl_SWIZZLE_STQ_ATI = 0x8977
gl_VERTEX_ARRAY_RANGE_POINTER_APPLE :: GLenum
gl_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521
gl_MODELVIEW6_ARB :: GLenum
gl_MODELVIEW6_ARB = 0x8726
gl_PROXY_TEXTURE_2D_EXT :: GLenum
gl_PROXY_TEXTURE_2D_EXT = 0x8064
gl_MATRIX_EXT :: GLenum
gl_MATRIX_EXT = 0x87C0
gl_CURRENT_MATRIX_STACK_DEPTH_NV :: GLenum
gl_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640
gl_PATH_STENCIL_FUNC_NV :: GLenum
gl_PATH_STENCIL_FUNC_NV = 0x90B7
gl_AUTO_GENERATE_MIPMAP :: GLenum
gl_AUTO_GENERATE_MIPMAP = 0x8295
gl_TESS_EVALUATION_SHADER_EXT :: GLenum
gl_TESS_EVALUATION_SHADER_EXT = 0x8E87
gl_FRAMEBUFFER_EXT :: GLenum
gl_FRAMEBUFFER_EXT = 0x8D40
gl_FRONT_AND_BACK :: GLenum
gl_FRONT_AND_BACK = 0x0408
gl_PIXEL_TILE_CACHE_SIZE_SGIX :: GLenum
gl_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145
gl_MITER_TRUNCATE_NV :: GLenum
gl_MITER_TRUNCATE_NV = 0x90A8
gl_FLOAT_VEC2 :: GLenum
gl_FLOAT_VEC2 = 0x8B50
gl_FRAGMENT_SHADER_BIT :: GLenum
gl_FRAGMENT_SHADER_BIT = 0x00000002
gl_TEXTURE_UNSIGNED_REMAP_MODE_NV :: GLenum
gl_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F
gl_VARIANT_ARRAY_POINTER_EXT :: GLenum
gl_VARIANT_ARRAY_POINTER_EXT = 0x87E9
gl_TRACE_MASK_MESA :: GLenum
gl_TRACE_MASK_MESA = 0x8755
gl_COMPUTE_SHADER_INVOCATIONS_ARB :: GLenum
gl_COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5
gl_UNSIGNED_SHORT_15_1_MESA :: GLenum
gl_UNSIGNED_SHORT_15_1_MESA = 0x8753
gl_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB :: GLenum
gl_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E
gl_INDEX_MATERIAL_FACE_EXT :: GLenum
gl_INDEX_MATERIAL_FACE_EXT = 0x81BA
gl_IUI_N3F_V2F_EXT :: GLenum
gl_IUI_N3F_V2F_EXT = 0x81AF
gl_TRANSPOSE_COLOR_MATRIX_ARB :: GLenum
gl_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6
gl_PROGRAM_ATTRIB_COMPONENTS_NV :: GLenum
gl_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906
gl_RGB_SCALE_ARB :: GLenum
gl_RGB_SCALE_ARB = 0x8573
gl_INTERNALFORMAT_ALPHA_SIZE :: GLenum
gl_INTERNALFORMAT_ALPHA_SIZE = 0x8274
gl_INT16_VEC4_NV :: GLenum
gl_INT16_VEC4_NV = 0x8FE7
gl_PIXEL_MAP_B_TO_B :: GLenum
gl_PIXEL_MAP_B_TO_B = 0x0C78
gl_INT_SAMPLER_BUFFER :: GLenum
gl_INT_SAMPLER_BUFFER = 0x8DD0
gl_LUMINANCE12 :: GLenum
gl_LUMINANCE12 = 0x8041
gl_CLIP_FAR_HINT_PGI :: GLenum
gl_CLIP_FAR_HINT_PGI = 0x1A221
gl_BUMP_TARGET_ATI :: GLenum
gl_BUMP_TARGET_ATI = 0x877C
gl_4PASS_3_EXT :: GLenum
gl_4PASS_3_EXT = 0x80A7
gl_LOCAL_CONSTANT_DATATYPE_EXT :: GLenum
gl_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED
gl_COLORDODGE_KHR :: GLenum
gl_COLORDODGE_KHR = 0x9299
gl_RASTER_FIXED_SAMPLE_LOCATIONS_EXT :: GLenum
gl_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A
gl_SECONDARY_COLOR_NV :: GLenum
gl_SECONDARY_COLOR_NV = 0x852D
gl_SKIP_MISSING_GLYPH_NV :: GLenum
gl_SKIP_MISSING_GLYPH_NV = 0x90A9
gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS :: GLenum
gl_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB
gl_MAX_SERVER_WAIT_TIMEOUT :: GLenum
gl_MAX_SERVER_WAIT_TIMEOUT = 0x9111
gl_RENDERBUFFER_STENCIL_SIZE_EXT :: GLenum
gl_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55
gl_LIST_INDEX :: GLenum
gl_LIST_INDEX = 0x0B33
gl_COVERAGE_BUFFERS_NV :: GLenum
gl_COVERAGE_BUFFERS_NV = 0x8ED3
gl_ACTIVE_STENCIL_FACE_EXT :: GLenum
gl_ACTIVE_STENCIL_FACE_EXT = 0x8911
gl_T2F_C4F_N3F_V3F :: GLenum
gl_T2F_C4F_N3F_V3F = 0x2A2C
gl_COPY_PIXEL_TOKEN :: GLenum
gl_COPY_PIXEL_TOKEN = 0x0706
gl_ADD :: GLenum
gl_ADD = 0x0104
gl_DEPTH_CLAMP :: GLenum
gl_DEPTH_CLAMP = 0x864F
gl_ALL_BARRIER_BITS_EXT :: GLenum
gl_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF
gl_TRANSPOSE_TEXTURE_MATRIX_ARB :: GLenum
gl_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5
gl_PIXEL_PACK_BUFFER_BINDING_ARB :: GLenum
gl_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED
gl_CMYKA_EXT :: GLenum
gl_CMYKA_EXT = 0x800D
gl_OR_INVERTED :: GLenum
gl_OR_INVERTED = 0x150D
gl_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER :: GLenum
gl_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44
gl_TEXTURE8 :: GLenum
gl_TEXTURE8 = 0x84C8
gl_SYNC_FENCE_APPLE :: GLenum
gl_SYNC_FENCE_APPLE = 0x9116
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB :: GLenum
gl_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29
gl_DIFFUSE :: GLenum
gl_DIFFUSE = 0x1201
gl_REG_26_ATI :: GLenum
gl_REG_26_ATI = 0x893B
gl_UNPACK_SWAP_BYTES :: GLenum
gl_UNPACK_SWAP_BYTES = 0x0CF0
gl_EDGE_FLAG_ARRAY :: GLenum
gl_EDGE_FLAG_ARRAY = 0x8079
gl_HISTOGRAM_RED_SIZE :: GLenum
gl_HISTOGRAM_RED_SIZE = 0x8028
gl_SRGB8_ALPHA8_EXT :: GLenum
gl_SRGB8_ALPHA8_EXT = 0x8C43
gl_RELATIVE_MOVE_TO_NV :: GLenum
gl_RELATIVE_MOVE_TO_NV = 0x03
gl_PERFQUERY_COUNTER_DATA_FLOAT_INTEL :: GLenum
gl_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA
gl_GEOMETRY_LINKED_INPUT_TYPE_EXT :: GLenum
gl_GEOMETRY_LINKED_INPUT_TYPE_EXT = 0x8917
gl_PATH_COMPUTED_LENGTH_NV :: GLenum
gl_PATH_COMPUTED_LENGTH_NV = 0x90A0
gl_VERTEX_ID_NV :: GLenum
gl_VERTEX_ID_NV = 0x8C7B
gl_COLOR_ATTACHMENT12_NV :: GLenum
gl_COLOR_ATTACHMENT12_NV = 0x8CEC
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = 0x93E7
gl_INT8_VEC3_NV :: GLenum
gl_INT8_VEC3_NV = 0x8FE2
gl_LUMINANCE32F_ARB :: GLenum
gl_LUMINANCE32F_ARB = 0x8818
gl_PROXY_TEXTURE_RECTANGLE_ARB :: GLenum
gl_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET :: GLenum
gl_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F
gl_INVARIANT_EXT :: GLenum
gl_INVARIANT_EXT = 0x87C2
gl_EDGE_FLAG_ARRAY_BUFFER_BINDING :: GLenum
gl_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B
gl_CULL_MODES_NV :: GLenum
gl_CULL_MODES_NV = 0x86E0
gl_GEOMETRY_INPUT_TYPE_ARB :: GLenum
gl_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB
gl_LIGHT7 :: GLenum
gl_LIGHT7 = 0x4007
gl_GENERATE_MIPMAP_SGIS :: GLenum
gl_GENERATE_MIPMAP_SGIS = 0x8191
gl_FRAMEBUFFER_COMPLETE_EXT :: GLenum
gl_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5
gl_FORCE_BLUE_TO_ONE_NV :: GLenum
gl_FORCE_BLUE_TO_ONE_NV = 0x8860
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8
gl_EDGE_FLAG_ARRAY_COUNT_EXT :: GLenum
gl_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D
gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT :: GLenum
gl_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = 0x90D9
gl_RGB_422_APPLE :: GLenum
gl_RGB_422_APPLE = 0x8A1F
gl_COLOR_INDEX1_EXT :: GLenum
gl_COLOR_INDEX1_EXT = 0x80E2
gl_COMPRESSED_TEXTURE_FORMATS :: GLenum
gl_COMPRESSED_TEXTURE_FORMATS = 0x86A3
gl_RGBA4_DXT5_S3TC :: GLenum
gl_RGBA4_DXT5_S3TC = 0x83A5
gl_COMPRESSED_SIGNED_R11_EAC_OES :: GLenum
gl_COMPRESSED_SIGNED_R11_EAC_OES = 0x9271
gl_ALPHA_FLOAT16_ATI :: GLenum
gl_ALPHA_FLOAT16_ATI = 0x881C
gl_MULTISAMPLE_BUFFER_BIT3_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT3_QCOM = 0x08000000
gl_TEXTURE_CUBE_MAP_ARRAY_EXT :: GLenum
gl_TEXTURE_CUBE_MAP_ARRAY_EXT = 0x9009
gl_PREVIOUS :: GLenum
gl_PREVIOUS = 0x8578
gl_SAMPLER_2D_RECT_SHADOW :: GLenum
gl_SAMPLER_2D_RECT_SHADOW = 0x8B64
gl_FEEDBACK_BUFFER_POINTER :: GLenum
gl_FEEDBACK_BUFFER_POINTER = 0x0DF0
gl_PALETTE4_RGBA8_OES :: GLenum
gl_PALETTE4_RGBA8_OES = 0x8B91
gl_RED_INTEGER_EXT :: GLenum
gl_RED_INTEGER_EXT = 0x8D94
gl_WEIGHT_ARRAY_POINTER_OES :: GLenum
gl_WEIGHT_ARRAY_POINTER_OES = 0x86AC
gl_INT_SAMPLER_RENDERBUFFER_NV :: GLenum
gl_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57
gl_SMOOTH_LINE_WIDTH_RANGE :: GLenum
gl_SMOOTH_LINE_WIDTH_RANGE = 0x0B22
gl_PROGRAM_ERROR_STRING_NV :: GLenum
gl_PROGRAM_ERROR_STRING_NV = 0x8874
gl_INDEX_BITS :: GLenum
gl_INDEX_BITS = 0x0D51
gl_TIME_ELAPSED :: GLenum
gl_TIME_ELAPSED = 0x88BF
gl_CONSTANT_ALPHA_EXT :: GLenum
gl_CONSTANT_ALPHA_EXT = 0x8003
gl_PATCHES :: GLenum
gl_PATCHES = 0x000E
gl_PATH_GEN_COMPONENTS_NV :: GLenum
gl_PATH_GEN_COMPONENTS_NV = 0x90B3
gl_MODELVIEW0_ARB :: GLenum
gl_MODELVIEW0_ARB = 0x1700
gl_DRAW_BUFFER8_EXT :: GLenum
gl_DRAW_BUFFER8_EXT = 0x882D
gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS :: GLenum
gl_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86
gl_PATH_PROJECTION_MATRIX_NV :: GLenum
gl_PATH_PROJECTION_MATRIX_NV = 0x0BA7
gl_STORAGE_CACHED_APPLE :: GLenum
gl_STORAGE_CACHED_APPLE = 0x85BE
gl_GEOMETRY_LINKED_VERTICES_OUT_EXT :: GLenum
gl_GEOMETRY_LINKED_VERTICES_OUT_EXT = 0x8916
gl_MAP2_VERTEX_ATTRIB1_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671
gl_TRIANGLE_FAN :: GLenum
gl_TRIANGLE_FAN = 0x0006
gl_DEPTH_BUFFER_FLOAT_MODE_NV :: GLenum
gl_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF
gl_REG_4_ATI :: GLenum
gl_REG_4_ATI = 0x8925
gl_PROGRAM_BINARY_FORMATS_OES :: GLenum
gl_PROGRAM_BINARY_FORMATS_OES = 0x87FF
gl_NORMAL_MAP_EXT :: GLenum
gl_NORMAL_MAP_EXT = 0x8511
gl_SHADER_OBJECT_EXT :: GLenum
gl_SHADER_OBJECT_EXT = 0x8B48
gl_COPY_READ_BUFFER_BINDING :: GLenum
gl_COPY_READ_BUFFER_BINDING = 0x8F36
gl_MAX_FRAGMENT_ATOMIC_COUNTERS :: GLenum
gl_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6
gl_OP_MUL_EXT :: GLenum
gl_OP_MUL_EXT = 0x8786
gl_MAX_LABEL_LENGTH_KHR :: GLenum
gl_MAX_LABEL_LENGTH_KHR = 0x82E8
gl_OBJECT_TYPE_APPLE :: GLenum
gl_OBJECT_TYPE_APPLE = 0x9112
gl_TEXTURE6_ARB :: GLenum
gl_TEXTURE6_ARB = 0x84C6
gl_TEXTURE_FLOAT_COMPONENTS_NV :: GLenum
gl_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C
gl_COPY_WRITE_BUFFER :: GLenum
gl_COPY_WRITE_BUFFER = 0x8F37
gl_COMPRESSED_TEXTURE_FORMATS_ARB :: GLenum
gl_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3
gl_HIGH_FLOAT :: GLenum
gl_HIGH_FLOAT = 0x8DF2
gl_INDEX_ARRAY_BUFFER_BINDING_ARB :: GLenum
gl_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899
gl_GLYPH_HEIGHT_BIT_NV :: GLenum
gl_GLYPH_HEIGHT_BIT_NV = 0x02
gl_CULL_VERTEX_EYE_POSITION_EXT :: GLenum
gl_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB
gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS :: GLenum
gl_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85
gl_DRAW_BUFFER :: GLenum
gl_DRAW_BUFFER = 0x0C01
gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST :: GLenum
gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC
gl_GPU_DISJOINT_EXT :: GLenum
gl_GPU_DISJOINT_EXT = 0x8FBB
gl_ASYNC_MARKER_SGIX :: GLenum
gl_ASYNC_MARKER_SGIX = 0x8329
gl_GREEN_BIT_ATI :: GLenum
gl_GREEN_BIT_ATI = 0x00000002
gl_LIGHT_MODEL_COLOR_CONTROL :: GLenum
gl_LIGHT_MODEL_COLOR_CONTROL = 0x81F8
gl_TEXTURE_GEN_R :: GLenum
gl_TEXTURE_GEN_R = 0x0C62
gl_GEOMETRY_LINKED_OUTPUT_TYPE_EXT :: GLenum
gl_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = 0x8918
gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: GLenum
gl_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276
gl_PIXEL_TRANSFORM_2D_EXT :: GLenum
gl_PIXEL_TRANSFORM_2D_EXT = 0x8330
gl_EXTENSIONS :: GLenum
gl_EXTENSIONS = 0x1F03
gl_PATH_COORD_COUNT_NV :: GLenum
gl_PATH_COORD_COUNT_NV = 0x909E
gl_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT :: GLenum
gl_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336
gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB :: GLenum
gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D
gl_UNSIGNED_SHORT_8_8_REV_MESA :: GLenum
gl_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB
gl_GREATER :: GLenum
gl_GREATER = 0x0204
gl_DEBUG_SOURCE_THIRD_PARTY_KHR :: GLenum
gl_DEBUG_SOURCE_THIRD_PARTY_KHR = 0x8249
gl_UNPACK_COMPRESSED_BLOCK_HEIGHT :: GLenum
gl_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128
gl_MIRROR_CLAMP_TO_EDGE_ATI :: GLenum
gl_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743
gl_COLOR_ARRAY_STRIDE_EXT :: GLenum
gl_COLOR_ARRAY_STRIDE_EXT = 0x8083
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT :: GLenum
gl_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4
gl_CON_4_ATI :: GLenum
gl_CON_4_ATI = 0x8945
gl_MAX_DEBUG_LOGGED_MESSAGES_AMD :: GLenum
gl_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144
gl_DEBUG_TYPE_PERFORMANCE :: GLenum
gl_DEBUG_TYPE_PERFORMANCE = 0x8250
gl_MAP2_VERTEX_ATTRIB11_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B
gl_INTENSITY_FLOAT16_ATI :: GLenum
gl_INTENSITY_FLOAT16_ATI = 0x881D
gl_PATH_MITER_LIMIT_NV :: GLenum
gl_PATH_MITER_LIMIT_NV = 0x907A
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 0x8CD7
gl_UNPACK_IMAGE_HEIGHT :: GLenum
gl_UNPACK_IMAGE_HEIGHT = 0x806E
gl_MAGNITUDE_SCALE_NV :: GLenum
gl_MAGNITUDE_SCALE_NV = 0x8712
gl_TEXTURE_IMAGE_TYPE :: GLenum
gl_TEXTURE_IMAGE_TYPE = 0x8290
gl_MAX_TEXTURE_IMAGE_UNITS_NV :: GLenum
gl_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872
gl_REPLACE_EXT :: GLenum
gl_REPLACE_EXT = 0x8062
gl_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS :: GLenum
gl_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47
gl_DEBUG_SOURCE_OTHER_ARB :: GLenum
gl_DEBUG_SOURCE_OTHER_ARB = 0x824B
gl_CON_18_ATI :: GLenum
gl_CON_18_ATI = 0x8953
gl_COMBINER_MAPPING_NV :: GLenum
gl_COMBINER_MAPPING_NV = 0x8543
gl_PRIMARY_COLOR_NV :: GLenum
gl_PRIMARY_COLOR_NV = 0x852C
gl_INT_IMAGE_1D_EXT :: GLenum
gl_INT_IMAGE_1D_EXT = 0x9057
gl_REG_23_ATI :: GLenum
gl_REG_23_ATI = 0x8938
gl_MIRROR_CLAMP_TO_EDGE_EXT :: GLenum
gl_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB :: GLenum
gl_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F
gl_R32F :: GLenum
gl_R32F = 0x822E
gl_TEXTURE_LOD_BIAS_R_SGIX :: GLenum
gl_TEXTURE_LOD_BIAS_R_SGIX = 0x8190
gl_MAP_TESSELLATION_NV :: GLenum
gl_MAP_TESSELLATION_NV = 0x86C2
gl_VERTEX_ATTRIB_ARRAY_TYPE :: GLenum
gl_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625
gl_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG :: GLenum
gl_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = 0x9138
gl_IMAGE_TRANSFORM_2D_HP :: GLenum
gl_IMAGE_TRANSFORM_2D_HP = 0x8161
gl_DRAW_BUFFER1_ARB :: GLenum
gl_DRAW_BUFFER1_ARB = 0x8826
gl_PIXEL_PACK_BUFFER :: GLenum
gl_PIXEL_PACK_BUFFER = 0x88EB
gl_STATIC_COPY_ARB :: GLenum
gl_STATIC_COPY_ARB = 0x88E6
gl_QUERY_DEPTH_FAIL_EVENT_BIT_AMD :: GLenum
gl_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002
gl_TRANSPOSE_AFFINE_3D_NV :: GLenum
gl_TRANSPOSE_AFFINE_3D_NV = 0x9098
gl_VERTEX_ATTRIB_ARRAY_SIZE :: GLenum
gl_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623
gl_UTF16_NV :: GLenum
gl_UTF16_NV = 0x909B
gl_SIGNED_INTENSITY8_NV :: GLenum
gl_SIGNED_INTENSITY8_NV = 0x8708
gl_SRGB_ALPHA_EXT :: GLenum
gl_SRGB_ALPHA_EXT = 0x8C42
gl_VIEWPORT_BIT :: GLenum
gl_VIEWPORT_BIT = 0x00000800
gl_LOCATION_INDEX :: GLenum
gl_LOCATION_INDEX = 0x930F
gl_SEPARATE_SPECULAR_COLOR :: GLenum
gl_SEPARATE_SPECULAR_COLOR = 0x81FA
gl_UNSIGNED_NORMALIZED :: GLenum
gl_UNSIGNED_NORMALIZED = 0x8C17
gl_BLEND_DST :: GLenum
gl_BLEND_DST = 0x0BE0
gl_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB :: GLenum
gl_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A
gl_FUNC_REVERSE_SUBTRACT_OES :: GLenum
gl_FUNC_REVERSE_SUBTRACT_OES = 0x800B
gl_DOUBLE_MAT3 :: GLenum
gl_DOUBLE_MAT3 = 0x8F47
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES :: GLenum
gl_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = 0x93E0
gl_BGRA_EXT :: GLenum
gl_BGRA_EXT = 0x80E1
gl_DOT3_RGB :: GLenum
gl_DOT3_RGB = 0x86AE
gl_MALI_PROGRAM_BINARY_ARM :: GLenum
gl_MALI_PROGRAM_BINARY_ARM = 0x8F61
gl_TEXTURE_ENV_COLOR :: GLenum
gl_TEXTURE_ENV_COLOR = 0x2201
gl_GEOMETRY_INPUT_TYPE_EXT :: GLenum
gl_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB
gl_TEXTURE_GATHER :: GLenum
gl_TEXTURE_GATHER = 0x82A2
gl_IMAGE_MIN_FILTER_HP :: GLenum
gl_IMAGE_MIN_FILTER_HP = 0x815D
gl_STENCIL_INDEX4 :: GLenum
gl_STENCIL_INDEX4 = 0x8D47
gl_DRAW_FRAMEBUFFER_BINDING :: GLenum
gl_DRAW_FRAMEBUFFER_BINDING = 0x8CA6
gl_IMAGE_BINDING_LAYERED :: GLenum
gl_IMAGE_BINDING_LAYERED = 0x8F3C
gl_DEPTH_EXT :: GLenum
gl_DEPTH_EXT = 0x1801
gl_PARAMETER_BUFFER_ARB :: GLenum
gl_PARAMETER_BUFFER_ARB = 0x80EE
gl_CONTEXT_PROFILE_MASK :: GLenum
gl_CONTEXT_PROFILE_MASK = 0x9126
gl_BGR :: GLenum
gl_BGR = 0x80E0
gl_LESS :: GLenum
gl_LESS = 0x0201
gl_FLOAT_MAT4x2 :: GLenum
gl_FLOAT_MAT4x2 = 0x8B69
gl_UNPACK_ROW_LENGTH_EXT :: GLenum
gl_UNPACK_ROW_LENGTH_EXT = 0x0CF2
gl_TEXTURE_LIGHTING_MODE_HP :: GLenum
gl_TEXTURE_LIGHTING_MODE_HP = 0x8167
gl_INT_VEC4_ARB :: GLenum
gl_INT_VEC4_ARB = 0x8B55
gl_RG32F_EXT :: GLenum
gl_RG32F_EXT = 0x8230
gl_MAX_VERTEX_VARYING_COMPONENTS_ARB :: GLenum
gl_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE
gl_MAX_LIST_NESTING :: GLenum
gl_MAX_LIST_NESTING = 0x0B31
gl_MAX_IMAGE_SAMPLES :: GLenum
gl_MAX_IMAGE_SAMPLES = 0x906D
gl_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX :: GLenum
gl_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C
gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES :: GLenum
gl_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6
gl_NUM_INSTRUCTIONS_PER_PASS_ATI :: GLenum
gl_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971
gl_PASS_THROUGH_TOKEN :: GLenum
gl_PASS_THROUGH_TOKEN = 0x0700
gl_TRANSFORM_FEEDBACK_BINDING :: GLenum
gl_TRANSFORM_FEEDBACK_BINDING = 0x8E25
gl_REPLACE_OLDEST_SUN :: GLenum
gl_REPLACE_OLDEST_SUN = 0x0003
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B
gl_MULTISAMPLE_BUFFER_BIT0_QCOM :: GLenum
gl_MULTISAMPLE_BUFFER_BIT0_QCOM = 0x01000000
gl_SECONDARY_COLOR_ARRAY_SIZE :: GLenum
gl_SECONDARY_COLOR_ARRAY_SIZE = 0x845A
gl_FLOAT16_NV :: GLenum
gl_FLOAT16_NV = 0x8FF8
gl_VERTEX_TEXTURE :: GLenum
gl_VERTEX_TEXTURE = 0x829B
gl_MAX_ELEMENTS_VERTICES_EXT :: GLenum
gl_MAX_ELEMENTS_VERTICES_EXT = 0x80E8
gl_READ_PIXEL_DATA_RANGE_NV :: GLenum
gl_READ_PIXEL_DATA_RANGE_NV = 0x8879
gl_PERFQUERY_COUNTER_THROUGHPUT_INTEL :: GLenum
gl_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3
gl_MAX_PROGRAM_ATTRIBS_ARB :: GLenum
gl_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD
gl_MAX_VERTEX_ATTRIBS :: GLenum
gl_MAX_VERTEX_ATTRIBS = 0x8869
gl_MATRIX_PALETTE_ARB :: GLenum
gl_MATRIX_PALETTE_ARB = 0x8840
gl_ALWAYS_FAST_HINT_PGI :: GLenum
gl_ALWAYS_FAST_HINT_PGI = 0x1A20C
gl_COLORBURN_KHR :: GLenum
gl_COLORBURN_KHR = 0x929A
gl_SAMPLER_CUBE_SHADOW :: GLenum
gl_SAMPLER_CUBE_SHADOW = 0x8DC5
gl_RED_EXT :: GLenum
gl_RED_EXT = 0x1903
gl_TEXTURE_BINDING_RECTANGLE_ARB :: GLenum
gl_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6
gl_TEXTURE_INTENSITY_SIZE :: GLenum
gl_TEXTURE_INTENSITY_SIZE = 0x8061
gl_BOUNDING_BOX_OF_BOUNDING_BOXES_NV :: GLenum
gl_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C
gl_MAX_PROGRAM_GENERIC_ATTRIBS_NV :: GLenum
gl_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5
gl_TEXTURE_COORD_ARRAY_POINTER_EXT :: GLenum
gl_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092
gl_MATRIX9_ARB :: GLenum
gl_MATRIX9_ARB = 0x88C9
gl_MAX_FRAMEBUFFER_HEIGHT :: GLenum
gl_MAX_FRAMEBUFFER_HEIGHT = 0x9316
gl_REG_5_ATI :: GLenum
gl_REG_5_ATI = 0x8926
gl_TEXTURE_EXTERNAL_OES :: GLenum
gl_TEXTURE_EXTERNAL_OES = 0x8D65
gl_VIEW_CLASS_BPTC_UNORM :: GLenum
gl_VIEW_CLASS_BPTC_UNORM = 0x82D2
gl_FRAGMENT_SHADER_BIT_EXT :: GLenum
gl_FRAGMENT_SHADER_BIT_EXT = 0x00000002
gl_WARPS_PER_SM_NV :: GLenum
gl_WARPS_PER_SM_NV = 0x933A
gl_GREEN_MAX_CLAMP_INGR :: GLenum
gl_GREEN_MAX_CLAMP_INGR = 0x8565
gl_MAP1_COLOR_4 :: GLenum
gl_MAP1_COLOR_4 = 0x0D90
gl_OP_MADD_EXT :: GLenum
gl_OP_MADD_EXT = 0x8788
gl_FLOAT_R32_NV :: GLenum
gl_FLOAT_R32_NV = 0x8885
gl_MATERIAL_SIDE_HINT_PGI :: GLenum
gl_MATERIAL_SIDE_HINT_PGI = 0x1A22C
gl_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL :: GLenum
gl_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD
gl_TEXTURE16_ARB :: GLenum
gl_TEXTURE16_ARB = 0x84D0
gl_FIELDS_NV :: GLenum
gl_FIELDS_NV = 0x8E27
gl_FRAGMENT_INPUT_NV :: GLenum
gl_FRAGMENT_INPUT_NV = 0x936D
gl_RELATIVE_ROUNDED_RECT2_NV :: GLenum
gl_RELATIVE_ROUNDED_RECT2_NV = 0xEB
gl_MATRIX28_ARB :: GLenum
gl_MATRIX28_ARB = 0x88DC
gl_IMAGE_BINDING_LAYER :: GLenum
gl_IMAGE_BINDING_LAYER = 0x8F3D
gl_VERTEX_ATTRIB_ARRAY_LONG :: GLenum
gl_VERTEX_ATTRIB_ARRAY_LONG = 0x874E
gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE :: GLenum
gl_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE
gl_LUMINANCE6_ALPHA2_EXT :: GLenum
gl_LUMINANCE6_ALPHA2_EXT = 0x8044
gl_REG_25_ATI :: GLenum
gl_REG_25_ATI = 0x893A
gl_INVALID_OPERATION :: GLenum
gl_INVALID_OPERATION = 0x0502
gl_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT :: GLenum
gl_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069
gl_4PASS_2_EXT :: GLenum
gl_4PASS_2_EXT = 0x80A6
gl_ACTIVE_ATTRIBUTE_MAX_LENGTH :: GLenum
gl_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A
gl_RGB8_EXT :: GLenum
gl_RGB8_EXT = 0x8051
gl_COMPRESSED_SLUMINANCE_ALPHA :: GLenum
gl_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B
gl_FRACTIONAL_EVEN_EXT :: GLenum
gl_FRACTIONAL_EVEN_EXT = 0x8E7C
gl_MATRIX_INDEX_ARRAY_SIZE_ARB :: GLenum
gl_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846
gl_MAP2_VERTEX_ATTRIB7_4_NV :: GLenum
gl_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677
gl_VERTEX_BLEND_ARB :: GLenum
gl_VERTEX_BLEND_ARB = 0x86A7
gl_CON_24_ATI :: GLenum
gl_CON_24_ATI = 0x8959
gl_ALPHA_FLOAT16_APPLE :: GLenum
gl_ALPHA_FLOAT16_APPLE = 0x881C
gl_ACTIVE_VARYING_MAX_LENGTH_NV :: GLenum
gl_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82
gl_STENCIL_INDEX8 :: GLenum
gl_STENCIL_INDEX8 = 0x8D48
gl_PIXEL_TEX_GEN_Q_FLOOR_SGIX :: GLenum
gl_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186
gl_FRAMEBUFFER_BINDING_EXT :: GLenum
gl_FRAMEBUFFER_BINDING_EXT = 0x8CA6
gl_TEXTURE_MAG_SIZE_NV :: GLenum
gl_TEXTURE_MAG_SIZE_NV = 0x871F
gl_DEPTH_PASS_INSTRUMENT_SGIX :: GLenum
gl_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310
gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D
gl_DUAL_TEXTURE_SELECT_SGIS :: GLenum
gl_DUAL_TEXTURE_SELECT_SGIS = 0x8124
gl_MAX_SAMPLES :: GLenum
gl_MAX_SAMPLES = 0x8D57
gl_DEPTH_COMPONENT24_SGIX :: GLenum
gl_DEPTH_COMPONENT24_SGIX = 0x81A6
gl_MAX_CONVOLUTION_HEIGHT_EXT :: GLenum
gl_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B
gl_2_BYTES_NV :: GLenum
gl_2_BYTES_NV = 0x1407
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE :: GLenum
gl_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56
gl_3DC_X_AMD :: GLenum
gl_3DC_X_AMD = 0x87F9
gl_PERSPECTIVE_CORRECTION_HINT :: GLenum
gl_PERSPECTIVE_CORRECTION_HINT = 0x0C50
gl_RGB32I :: GLenum
gl_RGB32I = 0x8D83
gl_COMBINER7_NV :: GLenum
gl_COMBINER7_NV = 0x8557
gl_MIN_PROGRAM_TEXEL_OFFSET_NV :: GLenum
gl_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904
gl_REG_10_ATI :: GLenum
gl_REG_10_ATI = 0x892B
gl_MAX_DEBUG_MESSAGE_LENGTH_AMD :: GLenum
gl_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143
gl_DEPENDENT_RGB_TEXTURE_3D_NV :: GLenum
gl_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859
gl_TEXTURE5 :: GLenum
gl_TEXTURE5 = 0x84C5
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV :: GLenum
gl_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = 0x8C4F
gl_TEXTURE_MEMORY_LAYOUT_INTEL :: GLenum
gl_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF
gl_DT_SCALE_NV :: GLenum
gl_DT_SCALE_NV = 0x8711
gl_SMOOTH_POINT_SIZE_GRANULARITY :: GLenum
gl_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13
gl_RED_SNORM :: GLenum
gl_RED_SNORM = 0x8F90
gl_COLOR_ARRAY_BUFFER_BINDING :: GLenum
gl_COLOR_ARRAY_BUFFER_BINDING = 0x8898
gl_MAX_SUBROUTINES :: GLenum
gl_MAX_SUBROUTINES = 0x8DE7
gl_MATRIX21_ARB :: GLenum
gl_MATRIX21_ARB = 0x88D5
gl_DRAW_BUFFER12 :: GLenum
gl_DRAW_BUFFER12 = 0x8831
gl_ONE_MINUS_SRC1_ALPHA :: GLenum
gl_ONE_MINUS_SRC1_ALPHA = 0x88FB
gl_MAX_ASYNC_HISTOGRAM_SGIX :: GLenum
gl_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D
gl_OPERAND2_RGB :: GLenum
gl_OPERAND2_RGB = 0x8592
gl_VERTEX_ATTRIB_ARRAY_INTEGER :: GLenum
gl_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD
gl_RED :: GLenum
gl_RED = 0x1903
gl_COLOR_ENCODING :: GLenum
gl_COLOR_ENCODING = 0x8296
gl_DST_NV :: GLenum
gl_DST_NV = 0x9287
gl_TEXTURE_BINDING_RECTANGLE :: GLenum
gl_TEXTURE_BINDING_RECTANGLE = 0x84F6
gl_TEXTURE_UPDATE_BARRIER_BIT :: GLenum
gl_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100
gl_INDEX_LOGIC_OP :: GLenum
gl_INDEX_LOGIC_OP = 0x0BF1
gl_COMPRESSED_RED_RGTC1_EXT :: GLenum
gl_COMPRESSED_RED_RGTC1_EXT = 0x8DBB
gl_LUMINANCE12_ALPHA4 :: GLenum
gl_LUMINANCE12_ALPHA4 = 0x8046
gl_VERTEX_ATTRIB_ARRAY1_NV :: GLenum
gl_VERTEX_ATTRIB_ARRAY1_NV = 0x8651
gl_POLYGON_OFFSET_CLAMP_EXT :: GLenum
gl_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B
gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23
gl_CIRCULAR_CW_ARC_TO_NV :: GLenum
gl_CIRCULAR_CW_ARC_TO_NV = 0xFA
gl_OFFSET_TEXTURE_2D_SCALE_NV :: GLenum
gl_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2
gl_SHININESS :: GLenum
gl_SHININESS = 0x1601
gl_RG16UI :: GLenum
gl_RG16UI = 0x823A
gl_TEXTURE_MAX_CLAMP_S_SGIX :: GLenum
gl_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369
gl_PRESERVE_ATI :: GLenum
gl_PRESERVE_ATI = 0x8762
gl_MAX_SAMPLE_MASK_WORDS :: GLenum
gl_MAX_SAMPLE_MASK_WORDS = 0x8E59
gl_VIDEO_COLOR_CONVERSION_MIN_NV :: GLenum
gl_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B
gl_MODULATE_ADD_ATI :: GLenum
gl_MODULATE_ADD_ATI = 0x8744
gl_SAMPLE_ALPHA_TO_COVERAGE_ARB :: GLenum
gl_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E
gl_DEPTH_COMPONENT32 :: GLenum
gl_DEPTH_COMPONENT32 = 0x81A7
gl_PREVIOUS_TEXTURE_INPUT_NV :: GLenum
gl_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4
gl_STENCIL_INDEX :: GLenum
gl_STENCIL_INDEX = 0x1901
gl_SIGNED_NORMALIZED :: GLenum
gl_SIGNED_NORMALIZED = 0x8F9C
gl_MULTISAMPLES_NV :: GLenum
gl_MULTISAMPLES_NV = 0x9371
gl_NUM_FRAGMENT_REGISTERS_ATI :: GLenum
gl_NUM_FRAGMENT_REGISTERS_ATI = 0x896E
gl_MATRIX1_NV :: GLenum
gl_MATRIX1_NV = 0x8631
gl_TEXTURE_SAMPLES_IMG :: GLenum
gl_TEXTURE_SAMPLES_IMG = 0x9136
gl_COLOR_BUFFER_BIT1_QCOM :: GLenum
gl_COLOR_BUFFER_BIT1_QCOM = 0x00000002
gl_COMPRESSED_RGBA_S3TC_DXT3_ANGLE :: GLenum
gl_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = 0x83F2
gl_DRAW_BUFFER7_ATI :: GLenum
gl_DRAW_BUFFER7_ATI = 0x882C
gl_TESS_GEN_POINT_MODE_EXT :: GLenum
gl_TESS_GEN_POINT_MODE_EXT = 0x8E79
gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS :: GLenum
gl_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB
gl_RENDERBUFFER_BINDING_OES :: GLenum
gl_RENDERBUFFER_BINDING_OES = 0x8CA7
gl_NUM_FRAGMENT_CONSTANTS_ATI :: GLenum
gl_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F
gl_MAX_SERVER_WAIT_TIMEOUT_APPLE :: GLenum
gl_MAX_SERVER_WAIT_TIMEOUT_APPLE = 0x9111
gl_TEXTURE_POST_SPECULAR_HP :: GLenum
gl_TEXTURE_POST_SPECULAR_HP = 0x8168
gl_OVERLAY_NV :: GLenum
gl_OVERLAY_NV = 0x9296
gl_NORMAL_ARRAY_POINTER :: GLenum
gl_NORMAL_ARRAY_POINTER = 0x808F
gl_DOUBLE_MAT2x4_EXT :: GLenum
gl_DOUBLE_MAT2x4_EXT = 0x8F4A
gl_NUM_SHADING_LANGUAGE_VERSIONS :: GLenum
gl_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9
gl_FOG_COORD_SRC :: GLenum
gl_FOG_COORD_SRC = 0x8450
gl_GET_TEXTURE_IMAGE_FORMAT :: GLenum
gl_GET_TEXTURE_IMAGE_FORMAT = 0x8291
gl_PROXY_TEXTURE_1D :: GLenum
gl_PROXY_TEXTURE_1D = 0x8063
gl_HSL_HUE_KHR :: GLenum
gl_HSL_HUE_KHR = 0x92AD
gl_STREAM_DRAW_ARB :: GLenum
gl_STREAM_DRAW_ARB = 0x88E0
gl_PACK_MAX_COMPRESSED_SIZE_SGIX :: GLenum
gl_PACK_MAX_COMPRESSED_SIZE_SGIX = 0x831B
gl_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB :: GLenum
gl_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9
gl_DRAW_BUFFER11 :: GLenum
gl_DRAW_BUFFER11 = 0x8830
gl_CURRENT_SECONDARY_COLOR_EXT :: GLenum
gl_CURRENT_SECONDARY_COLOR_EXT = 0x8459
gl_MATRIX3_ARB :: GLenum
gl_MATRIX3_ARB = 0x88C3
gl_PRIMARY_COLOR_ARB :: GLenum
gl_PRIMARY_COLOR_ARB = 0x8577
gl_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT :: GLenum
gl_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 0x8D6A
gl_RESAMPLE_ZERO_FILL_OML :: GLenum
gl_RESAMPLE_ZERO_FILL_OML = 0x8987
gl_VERTEX_PRECLIP_HINT_SGIX :: GLenum
gl_VERTEX_PRECLIP_HINT_SGIX = 0x83EF
gl_COMBINE_ALPHA_EXT :: GLenum
gl_COMBINE_ALPHA_EXT = 0x8572
gl_COLOR_ATTACHMENT13_EXT :: GLenum
gl_COLOR_ATTACHMENT13_EXT = 0x8CED
gl_VIBRANCE_BIAS_NV :: GLenum
gl_VIBRANCE_BIAS_NV = 0x8719
gl_AFFINE_2D_NV :: GLenum
gl_AFFINE_2D_NV = 0x9092
gl_UNSIGNED_INT_IMAGE_3D :: GLenum
gl_UNSIGNED_INT_IMAGE_3D = 0x9064
gl_MAX_CLIPMAP_DEPTH_SGIX :: GLenum
gl_MAX_CLIPMAP_DEPTH_SGIX = 0x8177
gl_DSDT8_MAG8_INTENSITY8_NV :: GLenum
gl_DSDT8_MAG8_INTENSITY8_NV = 0x870B
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR :: GLenum
gl_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = 0x824D
gl_NAND :: GLenum
gl_NAND = 0x150E
gl_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX :: GLenum
gl_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049
gl_TEXTURE_2D_MULTISAMPLE :: GLenum
gl_TEXTURE_2D_MULTISAMPLE = 0x9100
gl_FOG_MODE :: GLenum
gl_FOG_MODE = 0x0B65
gl_REG_20_ATI :: GLenum
gl_REG_20_ATI = 0x8935
gl_BIAS_BIT_ATI :: GLenum
gl_BIAS_BIT_ATI = 0x00000008
gl_VARIABLE_G_NV :: GLenum
gl_VARIABLE_G_NV = 0x8529
gl_INNOCENT_CONTEXT_RESET_ARB :: GLenum
gl_INNOCENT_CONTEXT_RESET_ARB = 0x8254
gl_MAX_VARYING_FLOATS :: GLenum
gl_MAX_VARYING_FLOATS = 0x8B4B
gl_PALETTE4_RGB5_A1_OES :: GLenum
gl_PALETTE4_RGB5_A1_OES = 0x8B94
gl_COLOR_TABLE_BIAS_SGI :: GLenum
gl_COLOR_TABLE_BIAS_SGI = 0x80D7
gl_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV :: GLenum
gl_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75
gl_UNSIGNED_SHORT_8_8_REV_APPLE :: GLenum
gl_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB
gl_COMPRESSED_ALPHA_ARB :: GLenum
gl_COMPRESSED_ALPHA_ARB = 0x84E9
gl_VERTEX_PROGRAM_CALLBACK_MESA :: GLenum
gl_VERTEX_PROGRAM_CALLBACK_MESA = 0x8BB5
gl_TEXTURE_BINDING_RENDERBUFFER_NV :: GLenum
gl_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53
gl_FUNC_SUBTRACT_EXT :: GLenum
gl_FUNC_SUBTRACT_EXT = 0x800A
gl_FRAGMENT_COVERAGE_COLOR_NV :: GLenum
gl_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE
gl_UNIFORM_MATRIX_STRIDE :: GLenum
gl_UNIFORM_MATRIX_STRIDE = 0x8A3D
gl_FOG :: GLenum
gl_FOG = 0x0B60
gl_HALF_FLOAT_ARB :: GLenum
gl_HALF_FLOAT_ARB = 0x140B
gl_COMPRESSED_RGBA8_ETC2_EAC_OES :: GLenum
gl_COMPRESSED_RGBA8_ETC2_EAC_OES = 0x9278
gl_LOCAL_EXT :: GLenum
gl_LOCAL_EXT = 0x87C4
gl_MAP1_INDEX :: GLenum
gl_MAP1_INDEX = 0x0D91
gl_POST_TEXTURE_FILTER_BIAS_SGIX :: GLenum
gl_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179
gl_OFFSET_TEXTURE_RECTANGLE_SCALE_NV :: GLenum
gl_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D
gl_VERTEX_ATTRIB_ARRAY_INTEGER_EXT :: GLenum
gl_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD
gl_TESS_CONTROL_PROGRAM_NV :: GLenum
gl_TESS_CONTROL_PROGRAM_NV = 0x891E
gl_TABLE_TOO_LARGE :: GLenum
gl_TABLE_TOO_LARGE = 0x8031
gl_PIXEL_PACK_BUFFER_ARB :: GLenum
gl_PIXEL_PACK_BUFFER_ARB = 0x88EB
gl_DUAL_ALPHA4_SGIS :: GLenum
gl_DUAL_ALPHA4_SGIS = 0x8110
gl_READ_BUFFER :: GLenum
gl_READ_BUFFER = 0x0C02
gl_POINT_SIZE_ARRAY_BUFFER_BINDING_OES :: GLenum
gl_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 0x8B9F
gl_TEXTURE_3D_OES :: GLenum
gl_TEXTURE_3D_OES = 0x806F
gl_ADJACENT_PAIRS_NV :: GLenum
gl_ADJACENT_PAIRS_NV = 0x90AE
gl_TEXTURE8_ARB :: GLenum
gl_TEXTURE8_ARB = 0x84C8
gl_EDGE_FLAG_ARRAY_POINTER :: GLenum
gl_EDGE_FLAG_ARRAY_POINTER = 0x8093
gl_WEIGHT_ARRAY_ARB :: GLenum
gl_WEIGHT_ARRAY_ARB = 0x86AD
gl_TEXTURE23 :: GLenum
gl_TEXTURE23 = 0x84D7
gl_UNIFORM_BUFFER_START :: GLenum
gl_UNIFORM_BUFFER_START = 0x8A29
gl_COMPRESSED_LUMINANCE_ALPHA :: GLenum
gl_COMPRESSED_LUMINANCE_ALPHA = 0x84EB
gl_GCCSO_SHADER_BINARY_FJ :: GLenum
gl_GCCSO_SHADER_BINARY_FJ = 0x9260
gl_ALPHA_FLOAT32_APPLE :: GLenum
gl_ALPHA_FLOAT32_APPLE = 0x8816
gl_MAX_TEXTURE_COORDS_NV :: GLenum
gl_MAX_TEXTURE_COORDS_NV = 0x8871
gl_MATRIX3_NV :: GLenum
gl_MATRIX3_NV = 0x8633
gl_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB :: GLenum
gl_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B
gl_STENCIL_BACK_FAIL :: GLenum
gl_STENCIL_BACK_FAIL = 0x8801
gl_REG_28_ATI :: GLenum
gl_REG_28_ATI = 0x893D
gl_R16UI :: GLenum
gl_R16UI = 0x8234
gl_IR_INSTRUMENT1_SGIX :: GLenum
gl_IR_INSTRUMENT1_SGIX = 0x817F
gl_SUBPIXEL_PRECISION_BIAS_X_BITS_NV :: GLenum
gl_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = 0x9347
gl_RGB_SCALE :: GLenum
gl_RGB_SCALE = 0x8573
gl_UNSIGNED_BYTE :: GLenum
gl_UNSIGNED_BYTE = 0x1401
gl_TRANSFORM_FEEDBACK_BUFFER_MODE :: GLenum
gl_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F
gl_INDEX_TEST_EXT :: GLenum
gl_INDEX_TEST_EXT = 0x81B5
gl_COMPARE_R_TO_TEXTURE :: GLenum
gl_COMPARE_R_TO_TEXTURE = 0x884E
gl_REG_6_ATI :: GLenum
gl_REG_6_ATI = 0x8927
gl_SAMPLER_2D_ARRAY :: GLenum
gl_SAMPLER_2D_ARRAY = 0x8DC1
gl_ELEMENT_ARRAY_LENGTH_NV :: GLenum
gl_ELEMENT_ARRAY_LENGTH_NV = 0x8F33
gl_TEXTURE15 :: GLenum
gl_TEXTURE15 = 0x84CF
gl_TEXTURE_BINDING_2D_ARRAY_EXT :: GLenum
gl_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D
gl_TEXTURE_LUMINANCE_SIZE :: GLenum
gl_TEXTURE_LUMINANCE_SIZE = 0x8060
gl_IMAGE_CLASS_2_X_16 :: GLenum
gl_IMAGE_CLASS_2_X_16 = 0x82BD
gl_INTENSITY8 :: GLenum
gl_INTENSITY8 = 0x804B
gl_INTERNALFORMAT_STENCIL_TYPE :: GLenum
gl_INTERNALFORMAT_STENCIL_TYPE = 0x827D
gl_ONE_MINUS_CONSTANT_COLOR :: GLenum
gl_ONE_MINUS_CONSTANT_COLOR = 0x8002
gl_USE_MISSING_GLYPH_NV :: GLenum
gl_USE_MISSING_GLYPH_NV = 0x90AA
gl_CMYK_EXT :: GLenum
gl_CMYK_EXT = 0x800C
gl_MAX_COLOR_ATTACHMENTS_EXT :: GLenum
gl_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF
gl_IMAGE_1D_ARRAY :: GLenum
gl_IMAGE_1D_ARRAY = 0x9052
gl_WRITE_PIXEL_DATA_RANGE_POINTER_NV :: GLenum
gl_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C
gl_VIDEO_BUFFER_BINDING_NV :: GLenum
gl_VIDEO_BUFFER_BINDING_NV = 0x9021
gl_MODELVIEW18_ARB :: GLenum
gl_MODELVIEW18_ARB = 0x8732
gl_DT_BIAS_NV :: GLenum
gl_DT_BIAS_NV = 0x8717
gl_VERTEX_PROGRAM_TWO_SIDE :: GLenum
gl_VERTEX_PROGRAM_TWO_SIDE = 0x8643
gl_ISOLINES :: GLenum
gl_ISOLINES = 0x8E7A
gl_OBJECT_ACTIVE_UNIFORMS_ARB :: GLenum
gl_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86
gl_DOMAIN :: GLenum
gl_DOMAIN = 0x0A02
gl_BGRA_IMG :: GLenum
gl_BGRA_IMG = 0x80E1
gl_GEOMETRY_OUTPUT_TYPE_ARB :: GLenum
gl_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC
gl_MAX_CULL_DISTANCES :: GLenum
gl_MAX_CULL_DISTANCES = 0x82F9
gl_SHADER_COMPILER :: GLenum
gl_SHADER_COMPILER = 0x8DFA
gl_DEPTH_BITS :: GLenum
gl_DEPTH_BITS = 0x0D56
gl_TEXTURE_SWIZZLE_RGBA :: GLenum
gl_TEXTURE_SWIZZLE_RGBA = 0x8E46
gl_IMAGE_1D :: GLenum
gl_IMAGE_1D = 0x904C
gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS :: GLenum
gl_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82
gl_LIGHT3 :: GLenum
gl_LIGHT3 = 0x4003
gl_DEFORMATIONS_MASK_SGIX :: GLenum
gl_DEFORMATIONS_MASK_SGIX = 0x8196
gl_DEPENDENT_HILO_TEXTURE_2D_NV :: GLenum
gl_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858
gl_CURRENT_NORMAL :: GLenum
gl_CURRENT_NORMAL = 0x0B02
gl_MAP1_GRID_DOMAIN :: GLenum
gl_MAP1_GRID_DOMAIN = 0x0DD0
gl_VIEW_CLASS_16_BITS :: GLenum
gl_VIEW_CLASS_16_BITS = 0x82CA
gl_TEXTURE_BINDING_CUBE_MAP_ARB :: GLenum
gl_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514
gl_RESET_NOTIFICATION_STRATEGY_EXT :: GLenum
gl_RESET_NOTIFICATION_STRATEGY_EXT = 0x8256
gl_ACCUM_ALPHA_BITS :: GLenum
gl_ACCUM_ALPHA_BITS = 0x0D5B
gl_POINT_SIZE_ARRAY_POINTER_OES :: GLenum
gl_POINT_SIZE_ARRAY_POINTER_OES = 0x898C
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV :: GLenum
gl_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80
gl_LUMINANCE_ALPHA_INTEGER_EXT :: GLenum
gl_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D
gl_INTERLACE_READ_OML :: GLenum
gl_INTERLACE_READ_OML = 0x8981
gl_CON_6_ATI :: GLenum
gl_CON_6_ATI = 0x8947
gl_4PASS_2_SGIS :: GLenum
gl_4PASS_2_SGIS = 0x80A6
gl_MAX_VIEWPORT_DIMS :: GLenum
gl_MAX_VIEWPORT_DIMS = 0x0D3A
gl_COMBINER_SUM_OUTPUT_NV :: GLenum
gl_COMBINER_SUM_OUTPUT_NV = 0x854C

data GLsyncob
type GLsync = Ptr GLsyncob

type GLhalf = Word16
type GLhalfARB = Word16
type GLintptrARB = CPtrdiff
type GLsizeiptrARB = CPtrdiff
type GLDEBUGPROC =
    FunPtr (GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> Ptr GLchar -> Ptr () -> IO ())
type GLDEBUGPROCARB = GLDEBUGPROC
type GLDEBUGPROCKHR = GLDEBUGPROC
type GLDEBUGPROCAMD =
    FunPtr (GLuint -> GLenum -> GLenum -> GLsizei -> Ptr GLchar -> Ptr () -> IO ())
type GLbyte = CChar
type GLubyte = CUChar
type GLfloat = CFloat
type GLclampf = CFloat
type GLfixed = Int32
type GLint64 = Int64
type GLuint64 = Word64
type GLint64EXT = Int64
type GLuint64EXT = Word64
type GLintptr = CIntPtr
type GLsizeiptr = CSize
type GLhalfNV = CUShort
type GLvdpauSurfaceNV = GLintptr
type GLenum = CUInt
type GLboolean = CUChar
type GLvoid = ()
type GLbitfield = CUInt
type GLshort = CShort
type GLint = CInt
type GLclampx = CInt
type GLushort = CUShort
type GLuint = CUInt
type GLsizei = CInt
type GLdouble = CDouble
type GLclampd = CDouble
data GLeglImageOESob
type GLeglImageOES = Ptr GLeglImageOESob
type GLchar = CChar
type GLcharARB = CChar
#ifdef __APPLE__
type GLhandleARB = Ptr ()
#else
type GLhandleARB = CUInt
#endif

